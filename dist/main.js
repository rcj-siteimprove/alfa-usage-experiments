/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/@siteimprove/alfa-act/node_modules/@siteimprove/alfa-sequence/src/cons.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-act/node_modules/@siteimprove/alfa-sequence/src/cons.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Cons = void 0;\nconst alfa_array_1 = __webpack_require__(/*! @siteimprove/alfa-array */ \"./node_modules/@siteimprove/alfa-array/src/index.js\");\nconst alfa_comparable_1 = __webpack_require__(/*! @siteimprove/alfa-comparable */ \"./node_modules/@siteimprove/alfa-comparable/src/index.js\");\nconst alfa_equatable_1 = __webpack_require__(/*! @siteimprove/alfa-equatable */ \"./node_modules/@siteimprove/alfa-equatable/src/index.js\");\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_json_1 = __webpack_require__(/*! @siteimprove/alfa-json */ \"./node_modules/@siteimprove/alfa-json/src/index.js\");\nconst alfa_lazy_1 = __webpack_require__(/*! @siteimprove/alfa-lazy */ \"./node_modules/@siteimprove/alfa-lazy/src/index.js\");\nconst alfa_map_1 = __webpack_require__(/*! @siteimprove/alfa-map */ \"./node_modules/@siteimprove/alfa-map/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_set_1 = __webpack_require__(/*! @siteimprove/alfa-set */ \"./node_modules/@siteimprove/alfa-set/src/index.js\");\nconst sequence_1 = __webpack_require__(/*! ./sequence */ \"./node_modules/@siteimprove/alfa-act/node_modules/@siteimprove/alfa-sequence/src/sequence.js\");\nconst nil_1 = __webpack_require__(/*! ./nil */ \"./node_modules/@siteimprove/alfa-act/node_modules/@siteimprove/alfa-sequence/src/nil.js\");\nconst { not, equals } = alfa_predicate_1.Predicate;\nconst { compareComparable } = alfa_comparable_1.Comparable;\n/**\n * @public\n */\nclass Cons {\n    static of(head, tail = alfa_lazy_1.Lazy.force(nil_1.Nil)) {\n        return new Cons(head, tail);\n    }\n    constructor(head, tail) {\n        this._head = head;\n        this._tail = tail;\n    }\n    get size() {\n        return alfa_iterable_1.Iterable.size(this);\n    }\n    isEmpty() {\n        return false;\n    }\n    forEach(callback) {\n        alfa_iterable_1.Iterable.forEach(this, callback);\n    }\n    map(mapper, index = 0) {\n        return new Cons(mapper(this._head, index), this._tail.map((tail) => Cons.isCons(tail) ? tail.map(mapper, index + 1) : nil_1.Nil));\n    }\n    apply(mapper) {\n        return mapper.flatMap((mapper) => this.map(mapper));\n    }\n    flatMap(mapper, index = 0) {\n        let next = this;\n        while (true) {\n            const head = mapper(next._head, index++);\n            if (Cons.isCons(head)) {\n                return new Cons(head._head, head._tail.map((left) => {\n                    const right = next._tail.force();\n                    return Cons.isCons(right)\n                        ? left.concat(right.flatMap(mapper, index))\n                        : left;\n                }));\n            }\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return nil_1.Nil;\n            }\n        }\n    }\n    flatten() {\n        return this.flatMap((sequence) => sequence);\n    }\n    reduce(reducer, accumulator) {\n        let next = this;\n        let index = 0;\n        while (true) {\n            accumulator = reducer(accumulator, next._head, index++);\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                break;\n            }\n        }\n        return accumulator;\n    }\n    reduceWhile(predicate, reducer, accumulator) {\n        let next = this;\n        let index = 0;\n        while (predicate(next._head, index)) {\n            accumulator = reducer(accumulator, next._head, index++);\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                break;\n            }\n        }\n        return accumulator;\n    }\n    reduceUntil(predicate, reducer, accumulator) {\n        return this.reduceWhile(not(predicate), reducer, accumulator);\n    }\n    filter(predicate, index = 0) {\n        let next = this;\n        while (true) {\n            if (predicate(next._head, index++)) {\n                return new Cons(next._head, next._tail.map((tail) => Cons.isCons(tail) ? tail.filter(predicate, index) : nil_1.Nil));\n            }\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return nil_1.Nil;\n            }\n        }\n    }\n    reject(predicate) {\n        return this.filter(not(predicate));\n    }\n    find(predicate) {\n        let next = this;\n        let index = 0;\n        while (true) {\n            const head = next._head;\n            if (predicate(head, index++)) {\n                return alfa_option_1.Option.of(head);\n            }\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return alfa_option_1.None;\n            }\n        }\n    }\n    includes(value) {\n        return this.some(equals(value));\n    }\n    collect(mapper, index = 0) {\n        let next = this;\n        while (true) {\n            const value = mapper(next._head, index++);\n            if (value.isSome()) {\n                return new Cons(value.get(), next._tail.map((tail) => Cons.isCons(tail) ? tail.collect(mapper, index) : nil_1.Nil));\n            }\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return nil_1.Nil;\n            }\n        }\n    }\n    collectFirst(mapper) {\n        let next = this;\n        let index = 0;\n        while (true) {\n            const value = mapper(next._head, index++);\n            if (value.isSome()) {\n                return value;\n            }\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return alfa_option_1.None;\n            }\n        }\n    }\n    some(predicate) {\n        let next = this;\n        let index = 0;\n        while (true) {\n            if (predicate(next._head, index++)) {\n                return true;\n            }\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return false;\n            }\n        }\n    }\n    none(predicate) {\n        return this.every(not(predicate));\n    }\n    every(predicate) {\n        let next = this;\n        let index = 0;\n        while (true) {\n            if (!predicate(next._head, index++)) {\n                return false;\n            }\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return true;\n            }\n        }\n    }\n    count(predicate) {\n        return this.reduce((count, value, index) => (predicate(value, index) ? count + 1 : count), 0);\n    }\n    distinct(seen = alfa_set_1.Set.empty()) {\n        let next = this;\n        while (true) {\n            if (seen.has(next._head)) {\n                const tail = next._tail.force();\n                if (Cons.isCons(tail)) {\n                    next = tail;\n                }\n                else {\n                    return nil_1.Nil;\n                }\n            }\n            else {\n                return Cons.of(next._head, next._tail.map((tail) => Cons.isCons(tail) ? tail.distinct(seen.add(next._head)) : nil_1.Nil));\n            }\n        }\n    }\n    get(index) {\n        return index < 0 ? alfa_option_1.None : this.skip(index).first();\n    }\n    has(index) {\n        return this.get(index).isSome();\n    }\n    set(index, value) {\n        if (index < 0) {\n            return this;\n        }\n        if (index === 0) {\n            if (alfa_equatable_1.Equatable.equals(value, this._head)) {\n                return this;\n            }\n            return new Cons(value, this._tail);\n        }\n        return new Cons(this._head, this._tail.map((tail) => tail.set(index - 1, value)));\n    }\n    insert(index, value) {\n        if (index < 0) {\n            return this;\n        }\n        if (index === 0) {\n            return new Cons(value, alfa_lazy_1.Lazy.force(this));\n        }\n        return new Cons(this._head, this._tail.map((tail) => tail.set(index - 1, value)));\n    }\n    append(value) {\n        return new Cons(this._head, this._tail.map((tail) => tail.append(value)));\n    }\n    prepend(value) {\n        return new Cons(value, alfa_lazy_1.Lazy.force(this));\n    }\n    concat(iterable) {\n        const sequence = sequence_1.Sequence.from(iterable);\n        if (Cons.isCons(sequence)) {\n            return new Cons(this._head, this._tail.map((tail) => tail.concat(sequence)));\n        }\n        return this;\n    }\n    subtract(iterable) {\n        return this.filter((value) => !alfa_iterable_1.Iterable.includes(iterable, value));\n    }\n    intersect(iterable) {\n        return this.filter((value) => alfa_iterable_1.Iterable.includes(iterable, value));\n    }\n    tee(callback, ...args) {\n        callback(this, ...args);\n        return this;\n    }\n    zip(iterable) {\n        const sequence = sequence_1.Sequence.from(iterable);\n        if (Cons.isCons(sequence)) {\n            return new Cons([this._head, sequence._head], this._tail.map((tail) => tail.zip(sequence.rest())));\n        }\n        return nil_1.Nil;\n    }\n    first() {\n        return alfa_option_1.Option.of(this._head);\n    }\n    last() {\n        let next = this;\n        while (true) {\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return alfa_option_1.Option.of(next._head);\n            }\n        }\n    }\n    take(count) {\n        if (count <= 0) {\n            return nil_1.Nil;\n        }\n        return new Cons(this._head, count === 1\n            ? alfa_lazy_1.Lazy.force(nil_1.Nil)\n            : this._tail.map((tail) => Cons.isCons(tail) ? tail.take(count - 1) : nil_1.Nil));\n    }\n    takeWhile(predicate) {\n        return this.takeUntil(not(predicate));\n    }\n    takeUntil(predicate, index = 0) {\n        if (predicate(this._head, index)) {\n            return nil_1.Nil;\n        }\n        return new Cons(this._head, this._tail.map((tail) => Cons.isCons(tail)\n            ? tail.takeUntil(predicate, index + 1)\n            : tail.takeUntil(predicate)));\n    }\n    takeLast(count) {\n        return this.skip(this.size - count);\n    }\n    takeLastWhile(predicate) {\n        return this.reverse().takeWhile(predicate).reverse();\n    }\n    takeLastUntil(predicate) {\n        return this.takeLastWhile(not(predicate));\n    }\n    skip(count) {\n        let next = this;\n        while (count-- > 0) {\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return nil_1.Nil;\n            }\n        }\n        return next;\n    }\n    skipWhile(predicate) {\n        let next = this;\n        let index = 0;\n        while (predicate(next._head, index++)) {\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return nil_1.Nil;\n            }\n        }\n        return next;\n    }\n    skipUntil(predicate) {\n        return this.skipWhile(not(predicate));\n    }\n    skipLast(count) {\n        return this.take(this.size - count);\n    }\n    skipLastWhile(predicate) {\n        return this.reverse().skipWhile(predicate).reverse();\n    }\n    skipLastUntil(predicate) {\n        return this.skipLastWhile(not(predicate));\n    }\n    trim(predicate) {\n        return this.trimLeading(predicate).trimTrailing(predicate);\n    }\n    trimLeading(predicate) {\n        return this.skipWhile(predicate);\n    }\n    trimTrailing(predicate) {\n        return this.skipLastWhile(predicate);\n    }\n    rest() {\n        return this._tail.force();\n    }\n    slice(start, end) {\n        let slice = this.skip(start);\n        if (end !== undefined) {\n            slice = slice.take(end - start);\n        }\n        return slice;\n    }\n    reverse() {\n        return this.reduce((reversed, value) => new Cons(value, alfa_lazy_1.Lazy.force(reversed)), nil_1.Nil);\n    }\n    join(separator) {\n        let result = `${this._head}`;\n        let next = this;\n        while (true) {\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                result += `${separator}${tail._head}`;\n                next = tail;\n            }\n            else {\n                return result;\n            }\n        }\n    }\n    sort() {\n        return this.sortWith(compareComparable);\n    }\n    sortWith(comparer) {\n        return sequence_1.Sequence.fromArray(alfa_array_1.Array.sortWith(this.toArray(), comparer));\n    }\n    compare(iterable) {\n        return this.compareWith(iterable, alfa_comparable_1.Comparable.compare);\n    }\n    compareWith(iterable, comparer) {\n        return alfa_iterable_1.Iterable.compareWith(this, iterable, comparer);\n    }\n    groupBy(grouper) {\n        return this.reduce((groups, value, index) => {\n            const group = grouper(value, index);\n            return groups.set(group, new Cons(value, alfa_lazy_1.Lazy.force(groups.get(group).getOrElse(() => nil_1.Nil))));\n        }, alfa_map_1.Map.empty()).map((group) => group.reverse());\n    }\n    equals(value) {\n        if (!Cons.isCons(value)) {\n            return false;\n        }\n        let a = this;\n        let b = value;\n        while (true) {\n            if (!alfa_equatable_1.Equatable.equals(a._head, b._head)) {\n                return false;\n            }\n            const ta = a._tail.force();\n            const tb = b._tail.force();\n            if (Cons.isCons(ta) && Cons.isCons(tb)) {\n                a = ta;\n                b = tb;\n            }\n            else {\n                return ta === nil_1.Nil && tb === nil_1.Nil;\n            }\n        }\n    }\n    hash(hash) {\n        let size = 0;\n        for (const value of this) {\n            hash.writeUnknown(value);\n            size++;\n        }\n        hash.writeUint32(size);\n    }\n    *iterator() {\n        let next = this;\n        while (true) {\n            yield next._head;\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                break;\n            }\n        }\n    }\n    [Symbol.iterator]() {\n        return this.iterator();\n    }\n    toArray() {\n        const array = [];\n        let next = this;\n        while (true) {\n            array.push(next._head);\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return array;\n            }\n        }\n    }\n    toJSON() {\n        const json = [];\n        let next = this;\n        while (true) {\n            json.push(alfa_json_1.Serializable.toJSON(next._head));\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return json;\n            }\n        }\n    }\n    toString() {\n        return `Sequence [ ${this.join(\", \")} ]`;\n    }\n}\nexports.Cons = Cons;\n/**\n * @public\n */\n(function (Cons) {\n    function isCons(value) {\n        return value instanceof Cons;\n    }\n    Cons.isCons = isCons;\n})(Cons || (exports.Cons = Cons = {}));\n//# sourceMappingURL=cons.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-act/node_modules/@siteimprove/alfa-sequence/src/cons.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-act/node_modules/@siteimprove/alfa-sequence/src/index.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-act/node_modules/@siteimprove/alfa-sequence/src/index.js ***!
  \*************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./cons */ \"./node_modules/@siteimprove/alfa-act/node_modules/@siteimprove/alfa-sequence/src/cons.js\"), exports);\n__exportStar(__webpack_require__(/*! ./nil */ \"./node_modules/@siteimprove/alfa-act/node_modules/@siteimprove/alfa-sequence/src/nil.js\"), exports);\n__exportStar(__webpack_require__(/*! ./sequence */ \"./node_modules/@siteimprove/alfa-act/node_modules/@siteimprove/alfa-sequence/src/sequence.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-act/node_modules/@siteimprove/alfa-sequence/src/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-act/node_modules/@siteimprove/alfa-sequence/src/nil.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-act/node_modules/@siteimprove/alfa-sequence/src/nil.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Nil = void 0;\nconst alfa_comparable_1 = __webpack_require__(/*! @siteimprove/alfa-comparable */ \"./node_modules/@siteimprove/alfa-comparable/src/index.js\");\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_map_1 = __webpack_require__(/*! @siteimprove/alfa-map */ \"./node_modules/@siteimprove/alfa-map/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst sequence_1 = __webpack_require__(/*! ./sequence */ \"./node_modules/@siteimprove/alfa-act/node_modules/@siteimprove/alfa-sequence/src/sequence.js\");\nconst cons_1 = __webpack_require__(/*! ./cons */ \"./node_modules/@siteimprove/alfa-act/node_modules/@siteimprove/alfa-sequence/src/cons.js\");\n/**\n * @public\n */\nexports.Nil = new (class Nil {\n    get size() {\n        return 0;\n    }\n    isEmpty() {\n        return true;\n    }\n    forEach() { }\n    map() {\n        return this;\n    }\n    apply() {\n        return this;\n    }\n    flatMap() {\n        return this;\n    }\n    flatten() {\n        return this;\n    }\n    reduce(reducer, accumulator) {\n        return accumulator;\n    }\n    reduceWhile(predicate, reducer, accumulator) {\n        return accumulator;\n    }\n    reduceUntil(predicate, reducer, accumulator) {\n        return accumulator;\n    }\n    filter() {\n        return this;\n    }\n    reject() {\n        return this;\n    }\n    find() {\n        return alfa_option_1.None;\n    }\n    includes() {\n        return false;\n    }\n    collect() {\n        return this;\n    }\n    collectFirst() {\n        return alfa_option_1.None;\n    }\n    some() {\n        return false;\n    }\n    none() {\n        return true;\n    }\n    every() {\n        return true;\n    }\n    count() {\n        return 0;\n    }\n    distinct() {\n        return this;\n    }\n    get() {\n        return alfa_option_1.None;\n    }\n    has() {\n        return false;\n    }\n    set() {\n        return this;\n    }\n    insert(index, value) {\n        return index === 0 ? cons_1.Cons.of(value) : this;\n    }\n    append(value) {\n        return cons_1.Cons.of(value);\n    }\n    prepend(value) {\n        return cons_1.Cons.of(value);\n    }\n    concat(iterable) {\n        if (iterable === this) {\n            return this;\n        }\n        return sequence_1.Sequence.from(iterable);\n    }\n    subtract() {\n        return this;\n    }\n    intersect() {\n        return this;\n    }\n    tee(callback, ...args) {\n        callback(this, ...args);\n        return this;\n    }\n    zip() {\n        return this;\n    }\n    first() {\n        return alfa_option_1.None;\n    }\n    last() {\n        return alfa_option_1.None;\n    }\n    take() {\n        return this;\n    }\n    takeWhile() {\n        return this;\n    }\n    takeUntil() {\n        return this;\n    }\n    takeLast() {\n        return this;\n    }\n    takeLastWhile() {\n        return this;\n    }\n    takeLastUntil() {\n        return this;\n    }\n    skip() {\n        return this;\n    }\n    skipWhile() {\n        return this;\n    }\n    skipUntil() {\n        return this;\n    }\n    skipLast() {\n        return this;\n    }\n    skipLastWhile() {\n        return this;\n    }\n    skipLastUntil() {\n        return this;\n    }\n    trim() {\n        return this;\n    }\n    trimLeading() {\n        return this;\n    }\n    trimTrailing() {\n        return this;\n    }\n    rest() {\n        return this;\n    }\n    slice() {\n        return this;\n    }\n    reverse() {\n        return this;\n    }\n    join() {\n        return \"\";\n    }\n    sort() {\n        return this;\n    }\n    sortWith() {\n        return this;\n    }\n    compare(iterable) {\n        return this.compareWith(iterable, alfa_comparable_1.Comparable.compare);\n    }\n    compareWith(iterable, comparer) {\n        return alfa_iterable_1.Iterable.compareWith(this, iterable, comparer);\n    }\n    groupBy() {\n        return alfa_map_1.Map.empty();\n    }\n    equals(value) {\n        return value instanceof Nil;\n    }\n    hash(hash) {\n        hash.writeUint32(0);\n    }\n    *iterator() { }\n    [Symbol.iterator]() {\n        return this.iterator();\n    }\n    toArray() {\n        return [];\n    }\n    toJSON() {\n        return [];\n    }\n    toString() {\n        return \"Sequence []\";\n    }\n})();\n//# sourceMappingURL=nil.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-act/node_modules/@siteimprove/alfa-sequence/src/nil.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-act/node_modules/@siteimprove/alfa-sequence/src/sequence.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-act/node_modules/@siteimprove/alfa-sequence/src/sequence.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Sequence = void 0;\nconst alfa_array_1 = __webpack_require__(/*! @siteimprove/alfa-array */ \"./node_modules/@siteimprove/alfa-array/src/index.js\");\nconst alfa_lazy_1 = __webpack_require__(/*! @siteimprove/alfa-lazy */ \"./node_modules/@siteimprove/alfa-lazy/src/index.js\");\nconst cons_1 = __webpack_require__(/*! ./cons */ \"./node_modules/@siteimprove/alfa-act/node_modules/@siteimprove/alfa-sequence/src/cons.js\");\nconst nil_1 = __webpack_require__(/*! ./nil */ \"./node_modules/@siteimprove/alfa-act/node_modules/@siteimprove/alfa-sequence/src/nil.js\");\n/**\n * @public\n */\nvar Sequence;\n(function (Sequence) {\n    function isSequence(value) {\n        return isCons(value) || isNil(value);\n    }\n    Sequence.isSequence = isSequence;\n    function isCons(value) {\n        return cons_1.Cons.isCons(value);\n    }\n    Sequence.isCons = isCons;\n    function isNil(value) {\n        return value === nil_1.Nil;\n    }\n    Sequence.isNil = isNil;\n    function of(head, tail) {\n        return cons_1.Cons.of(head, tail);\n    }\n    Sequence.of = of;\n    function empty() {\n        return nil_1.Nil;\n    }\n    Sequence.empty = empty;\n    function from(iterable) {\n        if (isSequence(iterable)) {\n            return iterable;\n        }\n        if (alfa_array_1.Array.isArray(iterable)) {\n            return fromArray(iterable);\n        }\n        return fromIterable(iterable);\n    }\n    Sequence.from = from;\n    function fromArray(array) {\n        let i = 0;\n        const tail = () => {\n            if (i >= array.length) {\n                return empty();\n            }\n            return of(array[i++], alfa_lazy_1.Lazy.of(tail));\n        };\n        return tail();\n    }\n    Sequence.fromArray = fromArray;\n    function fromIterable(iterable) {\n        return fromIterator(iterable[Symbol.iterator]());\n    }\n    Sequence.fromIterable = fromIterable;\n    function fromIterator(iterator) {\n        const tail = () => {\n            const head = iterator.next();\n            if (head.done === true) {\n                return empty();\n            }\n            return of(head.value, alfa_lazy_1.Lazy.of(tail));\n        };\n        return tail();\n    }\n    Sequence.fromIterator = fromIterator;\n})(Sequence || (exports.Sequence = Sequence = {}));\n//# sourceMappingURL=sequence.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-act/node_modules/@siteimprove/alfa-sequence/src/sequence.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-act/src/audit.js":
/*!*********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-act/src/audit.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Audit = void 0;\nconst alfa_future_1 = __webpack_require__(/*! @siteimprove/alfa-future */ \"./node_modules/@siteimprove/alfa-future/src/index.js\");\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_list_1 = __webpack_require__(/*! @siteimprove/alfa-list */ \"./node_modules/@siteimprove/alfa-list/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst cache_1 = __webpack_require__(/*! ./cache */ \"./node_modules/@siteimprove/alfa-act/src/cache.js\");\n/**\n * @public\n * * I: type of Input for rules\n * * T: possible types of test targets\n * * Q: questions' metadata type\n * * S: possible types of questions' subject.\n */\nclass Audit {\n    static of(input, rules, oracle = () => alfa_future_1.Future.now(alfa_option_1.None)) {\n        return new Audit(input, alfa_list_1.List.from(rules), oracle);\n    }\n    constructor(input, rules, oracle) {\n        this._input = input;\n        this._rules = rules;\n        this._oracle = oracle;\n    }\n    evaluate(performance) {\n        const outcomes = cache_1.Cache.empty();\n        return alfa_future_1.Future.traverse(this._rules, (rule) => rule.evaluate(this._input, this._oracle, outcomes, performance)).map(alfa_iterable_1.Iterable.flatten);\n    }\n}\nexports.Audit = Audit;\n//# sourceMappingURL=audit.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-act/src/audit.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-act/src/cache.js":
/*!*********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-act/src/cache.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Cache = void 0;\n/**\n * @public\n */\nclass Cache {\n    static empty() {\n        return new Cache();\n    }\n    constructor() {\n        this._storage = new WeakMap();\n    }\n    get(rule, ifMissing) {\n        let outcomes = this._storage.get(rule);\n        if (outcomes === undefined) {\n            outcomes = ifMissing();\n            this._storage.set(rule, outcomes);\n        }\n        return outcomes;\n    }\n}\nexports.Cache = Cache;\n//# sourceMappingURL=cache.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-act/src/cache.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-act/src/diagnostic.js":
/*!**************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-act/src/diagnostic.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Diagnostic = void 0;\n/**\n * @public\n */\nclass Diagnostic {\n    static of(message) {\n        return new Diagnostic(normalize(message));\n    }\n    constructor(message) {\n        this._message = message;\n    }\n    get message() {\n        return this._message;\n    }\n    equals(value) {\n        return value instanceof Diagnostic && value._message === this._message;\n    }\n    hash(hash) {\n        hash.writeString(this._message);\n    }\n    toJSON() {\n        return {\n            message: this._message,\n        };\n    }\n}\nexports.Diagnostic = Diagnostic;\n/**\n * @public\n */\n(function (Diagnostic) {\n    function isDiagnostic(value) {\n        return value instanceof Diagnostic;\n    }\n    Diagnostic.isDiagnostic = isDiagnostic;\n    Diagnostic.empty = Diagnostic.of(\"No extra information\");\n})(Diagnostic || (exports.Diagnostic = Diagnostic = {}));\nfunction normalize(input) {\n    return input.trim().replace(/\\s+/g, \" \");\n}\n//# sourceMappingURL=diagnostic.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-act/src/diagnostic.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-act/src/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-act/src/index.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * This package provides functionality for implementing rules specified in the\n * {@link https://www.w3.org/TR/act-rules-format/ | ACT Rules Format}.\n *\n * @packageDocumentation\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./audit */ \"./node_modules/@siteimprove/alfa-act/src/audit.js\"), exports);\n__exportStar(__webpack_require__(/*! ./cache */ \"./node_modules/@siteimprove/alfa-act/src/cache.js\"), exports);\n__exportStar(__webpack_require__(/*! ./diagnostic */ \"./node_modules/@siteimprove/alfa-act/src/diagnostic.js\"), exports);\n__exportStar(__webpack_require__(/*! ./interview */ \"./node_modules/@siteimprove/alfa-act/src/interview.js\"), exports);\n__exportStar(__webpack_require__(/*! ./oracle */ \"./node_modules/@siteimprove/alfa-act/src/oracle.js\"), exports);\n__exportStar(__webpack_require__(/*! ./outcome */ \"./node_modules/@siteimprove/alfa-act/src/outcome.js\"), exports);\n__exportStar(__webpack_require__(/*! ./question */ \"./node_modules/@siteimprove/alfa-act/src/question.js\"), exports);\n__exportStar(__webpack_require__(/*! ./requirement */ \"./node_modules/@siteimprove/alfa-act/src/requirement.js\"), exports);\n__exportStar(__webpack_require__(/*! ./rule */ \"./node_modules/@siteimprove/alfa-act/src/rule.js\"), exports);\n__exportStar(__webpack_require__(/*! ./tag */ \"./node_modules/@siteimprove/alfa-act/src/tag.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-act/src/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-act/src/interview.js":
/*!*************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-act/src/interview.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Interview = void 0;\nconst alfa_future_1 = __webpack_require__(/*! @siteimprove/alfa-future */ \"./node_modules/@siteimprove/alfa-future/src/index.js\");\nconst alfa_either_1 = __webpack_require__(/*! @siteimprove/alfa-either */ \"./node_modules/@siteimprove/alfa-either/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_tuple_1 = __webpack_require__(/*! @siteimprove/alfa-tuple */ \"./node_modules/@siteimprove/alfa-tuple/src/index.js\");\nconst question_1 = __webpack_require__(/*! ./question */ \"./node_modules/@siteimprove/alfa-act/src/question.js\");\n/**\n * @public\n */\nvar Interview;\n(function (Interview) {\n    /**\n     *  Conduct an interview:\n     *  * if it is an answer, just send it back;\n     *  * if it is a rhetorical question, fetch its answer and recursively conduct\n     *    an interview on it;\n     *  * if it is a true question, ask it to the oracle and recursively conduct an\n     *    interview on the result.\n     *\n     *  Oracles must return Options, to have the possibility to not answer a given\n     *  question (by returning None).\n     *  Oracles must return Futures, because the full interview process is essentially\n     *  async (e.g., asking through a CLI).\n     *\n     *  The final result of the interview is either a final answer (Left), or\n     *  a diagnostic (Right) explaining why a final answer couldn't be found.\n     *  Final answer will be turned into Passed/Failed outcomes, and diagnostic\n     *  into Can't tell; the diagnostic is provided by the last unanswered question.\n     *\n     *  In both cases, we also record whether the oracle was actually used;\n     *  this is useful to record the mode (auto/semi-auto) of the outcome.\n     */\n    function conduct(\n    // Questions' contexts are guaranteed to be (potential) test target of\n    // the rule.\n    interview, rule, oracle, oracleUsed = false) {\n        if (interview instanceof question_1.Question) {\n            let answer;\n            if (interview.isRhetorical()) {\n                answer = alfa_future_1.Future.now(alfa_option_1.Option.of(interview.answer()));\n            }\n            else {\n                answer = oracle(rule, interview).map((option) => option\n                    // Record that the oracle was successfully used\n                    .tee((_) => (oracleUsed = true))\n                    // If oracle has no answer, use fallback\n                    .or(interview.fallback)\n                    // Need to bind due to eta-contraction losing `this`.\n                    .map(interview.answer.bind(interview)));\n            }\n            return answer.flatMap((answer) => answer\n                // Recursively conduct an interview\n                .map((answer) => conduct(answer, rule, oracle, oracleUsed))\n                // If we still don't have a final answer, return the last diagnostic.\n                .getOrElse(() => alfa_future_1.Future.now(alfa_either_1.Either.right(alfa_tuple_1.Tuple.of(interview.diagnostic, oracleUsed)))));\n        }\n        // The interview is not a question, so it is a final answer.\n        return alfa_future_1.Future.now(alfa_either_1.Either.left(alfa_tuple_1.Tuple.of(interview, oracleUsed)));\n    }\n    Interview.conduct = conduct;\n})(Interview || (exports.Interview = Interview = {}));\n//# sourceMappingURL=interview.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-act/src/interview.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-act/src/oracle.js":
/*!**********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-act/src/oracle.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=oracle.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-act/src/oracle.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-act/src/outcome.js":
/*!***********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-act/src/outcome.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcome = void 0;\nconst alfa_equatable_1 = __webpack_require__(/*! @siteimprove/alfa-equatable */ \"./node_modules/@siteimprove/alfa-equatable/src/index.js\");\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_record_1 = __webpack_require__(/*! @siteimprove/alfa-record */ \"./node_modules/@siteimprove/alfa-record/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_trilean_1 = __webpack_require__(/*! @siteimprove/alfa-trilean */ \"./node_modules/@siteimprove/alfa-trilean/src/index.js\");\nconst earl = __webpack_require__(/*! @siteimprove/alfa-earl */ \"./node_modules/@siteimprove/alfa-earl/src/index.js\");\nconst json = __webpack_require__(/*! @siteimprove/alfa-json */ \"./node_modules/@siteimprove/alfa-json/src/index.js\");\nconst sarif = __webpack_require__(/*! @siteimprove/alfa-sarif */ \"./node_modules/@siteimprove/alfa-sarif/src/index.js\");\nconst diagnostic_1 = __webpack_require__(/*! ./diagnostic */ \"./node_modules/@siteimprove/alfa-act/src/diagnostic.js\");\n/**\n * @public\n * I: type of Input for the associated rule\n * T: type of the rule's test target\n * Q: questions' metadata type\n * S: possible types of questions' subject.\n */\nclass Outcome {\n    constructor(outcome, rule, mode) {\n        this._outcome = outcome;\n        this._rule = rule;\n        this._mode = mode;\n    }\n    /**\n     * {@link https://www.w3.org/TR/EARL10-Schema/#outcome}\n     */\n    get outcome() {\n        return this._outcome;\n    }\n    /**\n     * {@link https://www.w3.org/TR/EARL10-Schema/#test}\n     * While this is called a \"test\" in EARL, in Alfa this is always a \"rule\".\n     */\n    get rule() {\n        return this._rule;\n    }\n    /**\n     * {@link https://www.w3.org/TR/EARL10-Schema/#mode}\n     */\n    get mode() {\n        return this._mode;\n    }\n    get isSemiAuto() {\n        return this._mode === Outcome.Mode.SemiAuto;\n    }\n    get target() {\n        return undefined;\n    }\n    equals(value) {\n        return (value instanceof Outcome &&\n            value._rule.equals(this._rule) &&\n            value._outcome === this._outcome &&\n            value._mode === this._mode);\n    }\n    hash(hash) {\n        this._rule.hash(hash);\n        hash.writeString(this._outcome);\n        hash.writeString(this._mode);\n    }\n    toJSON() {\n        return {\n            outcome: this._outcome,\n            rule: this._rule.toJSON(),\n            mode: this._mode,\n        };\n    }\n    toEARL() {\n        return {\n            \"@context\": {\n                earl: \"http://www.w3.org/ns/earl#\",\n            },\n            \"@type\": \"earl:Assertion\",\n            \"earl:mode\": `earl:${this._mode}`,\n            \"earl:test\": {\n                \"@id\": this._rule.uri,\n            },\n        };\n    }\n}\nexports.Outcome = Outcome;\n/**\n * @public\n */\n(function (Outcome) {\n    /**\n     * {@link https://www.w3.org/TR/EARL10-Schema/#OutcomeValue}\n     *\n     * @internal\n     */\n    let Value;\n    (function (Value) {\n        Value[\"Inapplicable\"] = \"inapplicable\";\n        Value[\"Passed\"] = \"passed\";\n        Value[\"Failed\"] = \"failed\";\n        Value[\"CantTell\"] = \"cantTell\";\n    })(Value = Outcome.Value || (Outcome.Value = {}));\n    /**\n     * {@link https://www.w3.org/TR/EARL10-Schema/#TestMode}\n     */\n    let Mode;\n    (function (Mode) {\n        Mode[\"Automatic\"] = \"automatic\";\n        Mode[\"SemiAuto\"] = \"semiAuto\";\n    })(Mode = Outcome.Mode || (Outcome.Mode = {}));\n    class Passed extends Outcome {\n        static of(rule, target, expectations, mode) {\n            return new Passed(rule, target, expectations, mode);\n        }\n        constructor(rule, target, expectations, mode) {\n            super(Value.Passed, rule, mode);\n            this._target = target;\n            this._expectations = alfa_record_1.Record.from(expectations.toArray());\n        }\n        get target() {\n            return this._target;\n        }\n        get expectations() {\n            return this._expectations;\n        }\n        equals(value) {\n            return (super.equals(value) &&\n                value instanceof Passed &&\n                alfa_equatable_1.Equatable.equals(value._target, this._target) &&\n                value._expectations.equals(this._expectations));\n        }\n        hash(hash) {\n            super.hash(hash);\n            this._target.hash(hash);\n            for (const [id, result] of this._expectations) {\n                hash.writeString(id);\n                result.hash(hash);\n            }\n        }\n        toJSON() {\n            return {\n                ...super.toJSON(),\n                target: json.Serializable.toJSON(this._target),\n                expectations: this._expectations\n                    .toArray()\n                    .map(([id, expectation]) => [id, expectation.toJSON()]),\n            };\n        }\n        toEARL() {\n            const outcome = {\n                ...super.toEARL(),\n                \"earl:result\": {\n                    \"@type\": \"earl:TestResult\",\n                    \"earl:outcome\": {\n                        \"@id\": \"earl:passed\",\n                    },\n                    \"earl:info\": this._expectations\n                        .toArray()\n                        .reduce((message, [, expectation]) => \n                    // the outcome is passed, so all expectations should be Ok\n                    message + \"\\n\" + expectation.getUnsafe().message, \"\")\n                        .trim(),\n                },\n            };\n            for (const pointer of earl.Serializable.toEARL(this._target)) {\n                outcome[\"earl:result\"][\"earl:pointer\"] = pointer;\n            }\n            return outcome;\n        }\n        toSARIF() {\n            const message = \"The test target passes all requirements:\\n\\n\" +\n                this._expectations\n                    .toArray()\n                    // the outcome is passed, so all expectations should be Ok\n                    .map(([, expectation]) => `- ${expectation.getUnsafe().message}`)\n                    .join(\"\\n\");\n            const locations = [];\n            for (const location of sarif.Serializable.toSARIF(this._target)) {\n                locations.push(location);\n            }\n            return {\n                ruleId: this._rule.uri,\n                kind: \"pass\",\n                level: \"none\",\n                message: {\n                    text: message,\n                    markdown: message,\n                },\n                locations,\n            };\n        }\n    }\n    Outcome.Passed = Passed;\n    (function (Passed) {\n        function isPassed(value) {\n            return value instanceof Passed;\n        }\n        Passed.isPassed = isPassed;\n    })(Passed = Outcome.Passed || (Outcome.Passed = {}));\n    Outcome.passed = Passed.of, Outcome.isPassed = Passed.isPassed;\n    class Failed extends Outcome {\n        static of(rule, target, expectations, mode) {\n            return new Failed(rule, target, expectations, mode);\n        }\n        constructor(rule, target, expectations, mode) {\n            super(Value.Failed, rule, mode);\n            this._target = target;\n            this._expectations = alfa_record_1.Record.from(expectations.toArray());\n        }\n        get target() {\n            return this._target;\n        }\n        get expectations() {\n            return this._expectations;\n        }\n        equals(value) {\n            return (super.equals(value) &&\n                value instanceof Failed &&\n                alfa_equatable_1.Equatable.equals(value._target, this._target) &&\n                value._expectations.equals(this._expectations));\n        }\n        hash(hash) {\n            super.hash(hash);\n            this._target.hash(hash);\n            for (const [id, result] of this._expectations) {\n                hash.writeString(id);\n                result.hash(hash);\n            }\n        }\n        toJSON() {\n            return {\n                ...super.toJSON(),\n                target: json.Serializable.toJSON(this._target),\n                expectations: this._expectations\n                    .toArray()\n                    .map(([id, expectation]) => [id, expectation.toJSON()]),\n            };\n        }\n        toEARL() {\n            const outcome = {\n                ...super.toEARL(),\n                \"earl:result\": {\n                    \"@type\": \"earl:TestResult\",\n                    \"earl:outcome\": {\n                        \"@id\": \"earl:failed\",\n                    },\n                    \"earl:info\": this._expectations\n                        .toArray()\n                        .reduce((message, [, expectation]) => {\n                        if (expectation.isErr()) {\n                            message += \"\\n\" + expectation.getErr().message;\n                        }\n                        return message;\n                    }, \"\")\n                        .trim(),\n                },\n            };\n            for (const pointer of earl.Serializable.toEARL(this._target)) {\n                outcome[\"earl:result\"][\"earl:pointer\"] = pointer;\n            }\n            return outcome;\n        }\n        toSARIF() {\n            const message = \"The test target fails the following requirements:\\n\\n\" +\n                alfa_iterable_1.Iterable.join(alfa_iterable_1.Iterable.map(alfa_iterable_1.Iterable.filter(alfa_iterable_1.Iterable.map(this._expectations.entries(), ([, expectation]) => expectation), (alfa_result_1.Err.isErr)), (expectation) => `- ${expectation.getErr().message}`), \"\\n\");\n            const locations = [];\n            for (const location of sarif.Serializable.toSARIF(this._target)) {\n                locations.push(location);\n            }\n            return {\n                ruleId: this._rule.uri,\n                kind: \"fail\",\n                level: \"error\",\n                message: {\n                    text: message,\n                    markdown: message,\n                },\n                locations,\n            };\n        }\n    }\n    Outcome.Failed = Failed;\n    (function (Failed) {\n        function isFailed(value) {\n            return value instanceof Failed;\n        }\n        Failed.isFailed = isFailed;\n    })(Failed = Outcome.Failed || (Outcome.Failed = {}));\n    Outcome.failed = Failed.of, Outcome.isFailed = Failed.isFailed;\n    class CantTell extends Outcome {\n        static of(rule, target, diagnostic, mode) {\n            return new CantTell(rule, target, diagnostic, mode);\n        }\n        constructor(rule, target, diagnostic, mode) {\n            super(Value.CantTell, rule, mode);\n            this._target = target;\n            this._diagnostic = diagnostic;\n        }\n        get target() {\n            return this._target;\n        }\n        get diagnostic() {\n            return this._diagnostic;\n        }\n        equals(value) {\n            return (super.equals(value) &&\n                value instanceof CantTell &&\n                alfa_equatable_1.Equatable.equals(value._target, this._target) &&\n                value._diagnostic.equals(this._diagnostic));\n        }\n        hash(hash) {\n            super.hash(hash);\n            this._target.hash(hash);\n            this._diagnostic.hash(hash);\n        }\n        toJSON() {\n            return {\n                ...super.toJSON(),\n                target: json.Serializable.toJSON(this._target),\n                diagnostic: this._diagnostic.toJSON(),\n            };\n        }\n        toEARL() {\n            const outcome = {\n                ...super.toEARL(),\n                \"earl:result\": {\n                    \"@type\": \"earl:TestResult\",\n                    \"earl:outcome\": {\n                        \"@id\": \"earl:cantTell\",\n                    },\n                },\n            };\n            for (const pointer of earl.Serializable.toEARL(this._target)) {\n                outcome[\"earl:result\"][\"earl:pointer\"] = pointer;\n            }\n            return outcome;\n        }\n        toSARIF() {\n            const message = \"The rule has outstanding questions that must be answered for the test target\";\n            const locations = [];\n            for (const location of sarif.Serializable.toSARIF(this._target)) {\n                locations.push(location);\n            }\n            return {\n                ruleId: this._rule.uri,\n                kind: \"review\",\n                level: \"warning\",\n                message: {\n                    text: message,\n                    markdown: message,\n                },\n                locations,\n            };\n        }\n    }\n    Outcome.CantTell = CantTell;\n    (function (CantTell) {\n        function isCantTell(value) {\n            return value instanceof CantTell;\n        }\n        CantTell.isCantTell = isCantTell;\n    })(CantTell = Outcome.CantTell || (Outcome.CantTell = {}));\n    Outcome.cantTell = CantTell.of, Outcome.isCantTell = CantTell.isCantTell;\n    let Applicable;\n    (function (Applicable) {\n        function isApplicable(value) {\n            return Outcome.isPassed(value) || Outcome.isFailed(value) || Outcome.isCantTell(value);\n        }\n        Applicable.isApplicable = isApplicable;\n    })(Applicable = Outcome.Applicable || (Outcome.Applicable = {}));\n    Outcome.isApplicable = Applicable.isApplicable;\n    class Inapplicable extends Outcome {\n        static of(rule, mode) {\n            return new Inapplicable(rule, mode);\n        }\n        constructor(rule, mode) {\n            super(Value.Inapplicable, rule, mode);\n        }\n        equals(value) {\n            return super.equals(value) && value instanceof Inapplicable;\n        }\n        toJSON() {\n            return super.toJSON();\n        }\n        toEARL() {\n            return {\n                ...super.toEARL(),\n                \"earl:result\": {\n                    \"@type\": \"earl:TestResult\",\n                    \"earl:outcome\": {\n                        \"@id\": \"earl:inapplicable\",\n                    },\n                },\n            };\n        }\n        toSARIF() {\n            const message = \"The rule did not apply to the test subject\";\n            return {\n                ruleId: this._rule.uri,\n                kind: \"notApplicable\",\n                level: \"none\",\n                message: {\n                    text: message,\n                    markdown: message,\n                },\n            };\n        }\n    }\n    Outcome.Inapplicable = Inapplicable;\n    (function (Inapplicable) {\n        function isInapplicable(value) {\n            return value instanceof Inapplicable;\n        }\n        Inapplicable.isInapplicable = isInapplicable;\n    })(Inapplicable = Outcome.Inapplicable || (Outcome.Inapplicable = {}));\n    Outcome.inapplicable = Inapplicable.of, Outcome.isInapplicable = Inapplicable.isInapplicable;\n    function from(rule, target, expectations, mode) {\n        return alfa_trilean_1.Trilean.fold((expectations) => alfa_trilean_1.Trilean.every(expectations, (expectation) => expectation\n            .map((expectation) => expectation.isOk())\n            .getOr(undefined)), () => Passed.of(rule, target, alfa_record_1.Record.from(alfa_iterable_1.Iterable.map(expectations.entries(), ([id, expectation]) => [\n            id,\n            // Due to the predicate in every, this branch is only taken if every\n            // expectation is a Some<Ok<T>>.\n            expectation.getUnsafe(),\n        ])), mode), () => Failed.of(rule, target, alfa_record_1.Record.from(alfa_iterable_1.Iterable.map(expectations.entries(), ([id, expectation]) => [\n            id,\n            // One expectation being a Some<Err<T>> is enough to take that branch,\n            // even if others are None.\n            expectation.getOr(alfa_result_1.Err.of(diagnostic_1.Diagnostic.empty)),\n        ])), mode), () => CantTell.of(rule, target, diagnostic_1.Diagnostic.empty, mode), expectations.values());\n    }\n    Outcome.from = from;\n})(Outcome || (exports.Outcome = Outcome = {}));\n//# sourceMappingURL=outcome.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-act/src/outcome.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-act/src/question.js":
/*!************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-act/src/question.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Question = void 0;\nconst alfa_json_1 = __webpack_require__(/*! @siteimprove/alfa-json */ \"./node_modules/@siteimprove/alfa-json/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_refinement_1 = __webpack_require__(/*! @siteimprove/alfa-refinement */ \"./node_modules/@siteimprove/alfa-refinement/src/index.js\");\nconst diagnostic_1 = __webpack_require__(/*! ./diagnostic */ \"./node_modules/@siteimprove/alfa-act/src/diagnostic.js\");\nconst { isOption } = alfa_option_1.Option;\nconst { isBoolean, isFunction } = alfa_refinement_1.Refinement;\n/**\n * @public\n * * TYPE is a (JavaScript manipulable) representation of the expected type of\n *   answers. It allows oracles and such to act on it. It can be an Enum, an ID,\n *   a union of string literals, …\n * * SUBJECT is the subject of the question.\n * * CONTEXT is the context, some extra info added to help the subject make sense.\n *   By convention, the context is *always* the test target (or potential test\n *   target when questions are asked in Applicability).\n * * ANSWER is the expected type of the answer.\n * * T is the final result of the question, after transformation. This gives a\n *   monadic structure to the question and allow manipulation of the answer\n *   without breaking the Question structure.\n * * URI is a unique identifier for the question.\n */\nclass Question {\n    static of(type, uri, message, subject, context, options = {}) {\n        const { fallback = alfa_option_1.None, diagnostic = diagnostic_1.Diagnostic.empty } = options;\n        return new Question(type, uri, message, diagnostic, fallback, subject, context, (answer) => answer);\n    }\n    constructor(type, uri, message, diagnostic, fallback, subject, context, quester) {\n        this._type = type;\n        this._uri = uri;\n        this._message = message;\n        this._diagnostic = diagnostic;\n        this._fallback = fallback;\n        this._subject = subject;\n        this._context = context;\n        this._quester = quester;\n    }\n    get type() {\n        return this._type;\n    }\n    get uri() {\n        return this._uri;\n    }\n    get message() {\n        return this._message;\n    }\n    get diagnostic() {\n        return this._diagnostic;\n    }\n    get fallback() {\n        return this._fallback;\n    }\n    get subject() {\n        return this._subject;\n    }\n    get context() {\n        return this._context;\n    }\n    isRhetorical() {\n        return this instanceof Question.Rhetorical;\n    }\n    answer(answer) {\n        return this._quester(answer);\n    }\n    answerIf(conditionOrPredicateOrAnswer, answerOrMerger) {\n        let condition = false;\n        let answer;\n        let diagnostic = this._diagnostic;\n        if (isBoolean(conditionOrPredicateOrAnswer)) {\n            condition = conditionOrPredicateOrAnswer;\n            // Type is enforced by overload.\n            answer = answerOrMerger;\n        }\n        else if (isFunction(conditionOrPredicateOrAnswer)) {\n            condition = conditionOrPredicateOrAnswer(this._subject, this._context);\n            // Type is enforced by overload.\n            answer = answerOrMerger;\n        }\n        else if (isOption(conditionOrPredicateOrAnswer)) {\n            if (conditionOrPredicateOrAnswer.isSome()) {\n                condition = true;\n                answer = conditionOrPredicateOrAnswer.get();\n            }\n        }\n        else {\n            // Result\n            condition = conditionOrPredicateOrAnswer.isOk();\n            if (condition) {\n                // the check ensures that the result is Ok\n                answer = conditionOrPredicateOrAnswer.getUnsafe();\n            }\n            else {\n                // since the condition is false, we know the result is an Err\n                const error = conditionOrPredicateOrAnswer.getErrUnsafe();\n                if (diagnostic_1.Diagnostic.isDiagnostic(error)) {\n                    // Type is enforced by overload.\n                    const merger = answerOrMerger ??\n                        // Default is to overwrite the old diagnostic\n                        ((old, cur) => cur);\n                    diagnostic = merger(diagnostic, error);\n                }\n            }\n        }\n        return condition\n            ? new Question.Rhetorical(this._type, this._uri, this._message, this._diagnostic, this._subject, this._context, this.answer(answer))\n            : new Question(this._type, this._uri, this._message, diagnostic, this._fallback, this._subject, this._context, this._quester);\n    }\n    map(mapper) {\n        return new Question(this._type, this._uri, this._message, this._diagnostic, this._fallback, this._subject, this._context, (answer) => mapper(this._quester(answer)));\n    }\n    apply(mapper) {\n        return mapper.flatMap((mapper) => this.map(mapper));\n    }\n    flatMap(mapper) {\n        return new Question(this._type, this._uri, this._message, this._diagnostic, this._fallback, this._subject, this._context, (answer) => mapper(this._quester(answer))._quester(answer));\n    }\n    flatten() {\n        return new Question(this._type, this._uri, this._message, this._diagnostic, this._fallback, this._subject, this._context, (answer) => this._quester(answer)._quester(answer));\n    }\n    toJSON() {\n        return {\n            type: alfa_json_1.Serializable.toJSON(this._type),\n            uri: this._uri,\n            message: this._message,\n            diagnostic: this._diagnostic.toJSON(),\n            fallback: this._fallback.toJSON(),\n            subject: alfa_json_1.Serializable.toJSON(this._subject),\n            context: alfa_json_1.Serializable.toJSON(this._context),\n        };\n    }\n}\nexports.Question = Question;\n/**\n * @public\n */\n(function (Question) {\n    function isQuestion(value) {\n        return value instanceof Question;\n    }\n    Question.isQuestion = isQuestion;\n    /**\n     * A rhetorical question is a special type of question in which the answer is\n     * part of the question itself. This is useful for cases where the answer to\n     * a question may optionally be given by the entity asking the question. This\n     * means that a question can be conditionally answered while still retaining\n     * its monadic structure as the question isn't unwrapped to its answer.\n     *\n     * @internal\n     */\n    class Rhetorical extends Question {\n        constructor(type, uri, message, diagnostic, subject, context, answer) {\n            super(type, uri, message, diagnostic, alfa_option_1.None, subject, context, () => answer);\n            this._answer = answer;\n        }\n        answer() {\n            return this._answer;\n        }\n        /**\n         * @remarks\n         * Overriding {@link (Question:class).map} ensures that the answer to a\n         * rhetorical question is not lost as the question is transformed.\n         */\n        map(mapper) {\n            return new Rhetorical(this._type, this._uri, this._message, this._diagnostic, this._subject, this._context, mapper(this._answer));\n        }\n    }\n    Question.Rhetorical = Rhetorical;\n})(Question || (exports.Question = Question = {}));\n//# sourceMappingURL=question.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-act/src/question.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-act/src/requirement.js":
/*!***************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-act/src/requirement.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Requirement = void 0;\n/**\n * @public\n */\nclass Requirement {\n    constructor() { }\n    equals(value) {\n        return value instanceof Requirement && value.uri === this.uri;\n    }\n    toJSON() {\n        return {\n            uri: this.uri,\n        };\n    }\n    toEARL() {\n        return {\n            \"@context\": {\n                earl: \"http://www.w3.org/ns/earl#\",\n            },\n            \"@type\": [\"earl:TestCriterion\", \"earl:TestRequirement\"],\n            \"@id\": this.uri,\n        };\n    }\n}\nexports.Requirement = Requirement;\n/**\n * @public\n */\n(function (Requirement) {\n    function isRequirement(value) {\n        return value instanceof Requirement;\n    }\n    Requirement.isRequirement = isRequirement;\n})(Requirement || (exports.Requirement = Requirement = {}));\n//# sourceMappingURL=requirement.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-act/src/requirement.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-act/src/rule.js":
/*!********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-act/src/rule.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Rule = void 0;\nconst alfa_array_1 = __webpack_require__(/*! @siteimprove/alfa-array */ \"./node_modules/@siteimprove/alfa-array/src/index.js\");\nconst alfa_either_1 = __webpack_require__(/*! @siteimprove/alfa-either */ \"./node_modules/@siteimprove/alfa-either/src/index.js\");\nconst alfa_future_1 = __webpack_require__(/*! @siteimprove/alfa-future */ \"./node_modules/@siteimprove/alfa-future/src/index.js\");\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_list_1 = __webpack_require__(/*! @siteimprove/alfa-list */ \"./node_modules/@siteimprove/alfa-list/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_record_1 = __webpack_require__(/*! @siteimprove/alfa-record */ \"./node_modules/@siteimprove/alfa-record/src/index.js\");\nconst alfa_sequence_1 = __webpack_require__(/*! @siteimprove/alfa-sequence */ \"./node_modules/@siteimprove/alfa-act/node_modules/@siteimprove/alfa-sequence/src/index.js\");\nconst alfa_tuple_1 = __webpack_require__(/*! @siteimprove/alfa-tuple */ \"./node_modules/@siteimprove/alfa-tuple/src/index.js\");\nconst cache_1 = __webpack_require__(/*! ./cache */ \"./node_modules/@siteimprove/alfa-act/src/cache.js\");\nconst interview_1 = __webpack_require__(/*! ./interview */ \"./node_modules/@siteimprove/alfa-act/src/interview.js\");\nconst outcome_1 = __webpack_require__(/*! ./outcome */ \"./node_modules/@siteimprove/alfa-act/src/outcome.js\");\nconst requirement_1 = __webpack_require__(/*! ./requirement */ \"./node_modules/@siteimprove/alfa-act/src/requirement.js\");\nconst tag_1 = __webpack_require__(/*! ./tag */ \"./node_modules/@siteimprove/alfa-act/src/tag.js\");\nconst { flatten, reduce } = alfa_iterable_1.Iterable;\n/**\n * @public\n * * I: type of Input for the rule\n * * T: type of the test targets\n * * Q: questions' metadata type\n * * S: possible types of questions' subject.\n */\nclass Rule {\n    constructor(uri, requirements, tags, evaluator) {\n        this._uri = uri;\n        this._requirements = requirements;\n        this._tags = tags;\n        this._evaluate = evaluator;\n    }\n    get uri() {\n        return this._uri;\n    }\n    get requirements() {\n        return this._requirements;\n    }\n    get tags() {\n        return this._tags;\n    }\n    hasRequirement(requirementOrPredicate) {\n        const predicate = requirement_1.Requirement.isRequirement(requirementOrPredicate)\n            ? (requirement) => requirementOrPredicate.equals(requirement)\n            : requirementOrPredicate;\n        return alfa_array_1.Array.some(this._requirements, predicate);\n    }\n    hasTag(tagOrPredicate) {\n        const predicate = tag_1.Tag.isTag(tagOrPredicate)\n            ? (tag) => tagOrPredicate.equals(tag)\n            : tagOrPredicate;\n        return alfa_array_1.Array.some(this._tags, predicate);\n    }\n    evaluate(input, \n    // A rule asking no questions, never calls its oracle, so it can be anything\n    oracle = () => alfa_future_1.Future.now(alfa_option_1.None), outcomes = cache_1.Cache.empty(), performance) {\n        return this._evaluate(input, oracle, outcomes, performance);\n    }\n    equals(value) {\n        return value instanceof Rule && value._uri === this._uri;\n    }\n    hash(hash) {\n        hash.writeString(this._uri);\n    }\n    toEARL() {\n        return {\n            \"@context\": {\n                earl: \"http://www.w3.org/ns/earl#\",\n                dct: \"http://purl.org/dc/terms/\",\n            },\n            \"@type\": [\"earl:TestCriterion\", \"earl:TestCase\"],\n            \"@id\": this._uri,\n            \"dct:isPartOf\": {\n                \"@set\": this._requirements.map((requirement) => requirement.toEARL()),\n            },\n        };\n    }\n    toSARIF() {\n        return {\n            id: this._uri,\n            helpUri: this._uri,\n        };\n    }\n}\nexports.Rule = Rule;\n/**\n * @public\n */\n(function (Rule) {\n    var Applicable = outcome_1.Outcome.Applicable;\n    function isRule(value) {\n        return value instanceof Rule;\n    }\n    Rule.isRule = isRule;\n    class Atomic extends Rule {\n        static of(properties) {\n            return new Atomic(properties.uri, alfa_array_1.Array.from(properties.requirements ?? []), alfa_array_1.Array.from(properties.tags ?? []), properties.evaluate);\n        }\n        constructor(uri, requirements, tags, evaluate) {\n            super(uri, requirements, tags, (input, oracle, outcomes, performance) => outcomes.get(this, () => {\n                const startRule = performance?.mark(Event.start(this)).start;\n                // In the evaluate function in Atomic.of, \"this\" is not yet build.\n                // So we need a helper to wrap it…\n                const rulePerformance = performance !== undefined\n                    ? {\n                        mark: (name) => performance?.mark(Event.start(this, name)),\n                        measure: (name, start) => performance?.measure(Event.end(this, name), start),\n                    }\n                    : undefined;\n                const { applicability, expectations } = evaluate(input, rulePerformance);\n                const startApplicability = performance?.mark(Event.startApplicability(this)).start;\n                let startExpectation;\n                return alfa_future_1.Future.traverse(applicability(), (interview) => interview_1.Interview.conduct(interview, this, oracle).map((target) => target.either(\n                // We have a target, wrap it properly and return it.\n                ([target, oracleUsed]) => alfa_tuple_1.Tuple.of(alfa_option_1.Maybe.toOption(target), oracleUsed), \n                // We have an unanswered question and return None\n                ([_, oracleUsed]) => alfa_tuple_1.Tuple.of(alfa_option_1.None, oracleUsed))))\n                    .map((targets) => \n                // We both need to keep with each target whether the oracle was used,\n                // and with the global sequence whether it was used at all.\n                // The second case is needed to decide whether the oracle was used\n                // when producing an Inapplicable result (empty sequence).\n                // None are cleared from the sequence, and Some are opened to only\n                // keep the targets.\n                //\n                // For efficiency, we prepend the targets and reverse the full\n                // sequence later to conserve the order.\n                // This result in a O(n) rather than O(n²) process.\n                alfa_sequence_1.Sequence.from(targets).reduce(([acc, wasUsed], [cur, isUsed]) => alfa_tuple_1.Tuple.of(cur.isSome()\n                    ? acc.prepend(alfa_tuple_1.Tuple.of(cur.get(), isUsed))\n                    : acc, wasUsed || isUsed), alfa_tuple_1.Tuple.of(alfa_sequence_1.Sequence.empty(), false)))\n                    .tee(() => {\n                    performance?.measure(Event.endApplicability(this), startApplicability);\n                    startExpectation = performance?.mark(Event.startExpectation(this))\n                        .start;\n                })\n                    .flatMap(([targets, oracleUsed]) => {\n                    if (targets.isEmpty()) {\n                        return alfa_future_1.Future.now([\n                            outcome_1.Outcome.Inapplicable.of(this, getMode(oracleUsed)),\n                        ]);\n                    }\n                    return alfa_future_1.Future.traverse(\n                    // Since targets were prepended when Applicability was processed,\n                    // we now need to reverse the sequence to restore initial order.\n                    targets.reverse(), ([target, oracleUsedInApplicability]) => resolve(target, alfa_record_1.Record.of(expectations(target)), this, oracle, oracleUsedInApplicability)).tee(() => {\n                        performance?.measure(Event.endExpectation(this), startExpectation);\n                    });\n                })\n                    .tee(() => {\n                    performance?.measure(Event.end(this), startRule);\n                });\n            }));\n        }\n        toJSON() {\n            return {\n                type: \"atomic\",\n                uri: this._uri,\n                requirements: this._requirements.map((requirement) => requirement.toJSON()),\n                tags: this._tags.map((tag) => tag.toJSON()),\n            };\n        }\n    }\n    Rule.Atomic = Atomic;\n    (function (Atomic) {\n        function isAtomic(value) {\n            return value instanceof Atomic;\n        }\n        Atomic.isAtomic = isAtomic;\n    })(Atomic = Rule.Atomic || (Rule.Atomic = {}));\n    Rule.isAtomic = Atomic.isAtomic;\n    class Composite extends Rule {\n        static of(properties) {\n            return new Composite(properties.uri, alfa_array_1.Array.from(properties.requirements ?? []), alfa_array_1.Array.from(properties.tags ?? []), alfa_array_1.Array.from(properties.composes), properties.evaluate);\n        }\n        constructor(uri, requirements, tags, composes, evaluate) {\n            super(uri, requirements, tags, (input, oracle, outcomes, performance) => outcomes.get(this, () => {\n                const startRule = performance?.mark(Event.start(this)).start;\n                // In the evaluate function in Atomic.of, \"this\" is not yet build.\n                // So we need a helper to wrap it…\n                const rulePerformance = performance !== undefined\n                    ? {\n                        mark: (name) => performance?.mark(Event.start(this, name)),\n                        measure: (name, start) => performance?.measure(Event.end(this, name), start),\n                    }\n                    : undefined;\n                return alfa_future_1.Future.traverse(this._composes, (rule) => rule.evaluate(input, oracle, outcomes, performance))\n                    .map((outcomes) => \n                // We both need to keep with each outcome whether the oracle was used,\n                // and with the global sequence whether it was used at all.\n                // The second case is needed to decide whether the oracle was used\n                // when producing an Inapplicable result (empty sequence).\n                // Inapplicable outcomes one are cleared from the sequence.\n                //\n                // For efficiency, we prepend the targets and reverse the full\n                // sequence later to conserve the order.\n                // This result in a O(n) rather than O(n²) process.\n                alfa_sequence_1.Sequence.from(flatten(outcomes)).reduce(([acc, wasUsed], outcome) => alfa_tuple_1.Tuple.of(Applicable.isApplicable(outcome)\n                    ? acc.prepend(outcome)\n                    : acc, wasUsed || outcome.isSemiAuto), alfa_tuple_1.Tuple.of(alfa_sequence_1.Sequence.empty(), false)))\n                    .flatMap(([targets, oracleUsed]) => {\n                    if (targets.isEmpty()) {\n                        return alfa_future_1.Future.now([\n                            outcome_1.Outcome.Inapplicable.of(this, getMode(oracleUsed)),\n                        ]);\n                    }\n                    const { expectations } = evaluate(input, rulePerformance);\n                    return alfa_future_1.Future.traverse(\n                    // Since targets were prepended when Applicability was processed,\n                    // we now need to reverse the sequence to restore initial order.\n                    targets.reverse().groupBy((outcome) => outcome.target), ([target, outcomes]) => resolve(target, alfa_record_1.Record.of(expectations(outcomes)), this, oracle, oracleUsed));\n                })\n                    .tee(() => {\n                    performance?.measure(Event.end(this), startRule);\n                });\n            }));\n            this._composes = composes;\n        }\n        get composes() {\n            return this._composes;\n        }\n        toJSON() {\n            return {\n                type: \"composite\",\n                uri: this._uri,\n                requirements: this._requirements.map((requirement) => requirement.toJSON()),\n                tags: this._tags.map((tag) => tag.toJSON()),\n                composes: this._composes.map((rule) => rule.toJSON()),\n            };\n        }\n    }\n    Rule.Composite = Composite;\n    (function (Composite) {\n        function isComposite(value) {\n            return value instanceof Composite;\n        }\n        Composite.isComposite = isComposite;\n    })(Composite = Rule.Composite || (Rule.Composite = {}));\n    Rule.isComposite = Composite.isComposite;\n    /**\n     * @public\n     */\n    class Event {\n        static of(type, rule, name) {\n            return new Event(type, rule, name);\n        }\n        constructor(type, rule, name) {\n            this._type = type;\n            this._rule = rule;\n            this._name = name;\n        }\n        get type() {\n            return this._type;\n        }\n        get rule() {\n            return this._rule;\n        }\n        get name() {\n            return this._name;\n        }\n        toJSON() {\n            return {\n                type: this._type,\n                rule: this._rule.toJSON(),\n                name: this._name,\n            };\n        }\n    }\n    Rule.Event = Event;\n    /**\n     * @public\n     */\n    (function (Event) {\n        function isEvent(value) {\n            return value instanceof Event;\n        }\n        Event.isEvent = isEvent;\n        function start(rule, name = \"total\") {\n            return Event.of(\"start\", rule, name);\n        }\n        Event.start = start;\n        function end(rule, name = \"total\") {\n            return Event.of(\"end\", rule, name);\n        }\n        Event.end = end;\n        function startApplicability(rule) {\n            return Event.of(\"start\", rule, \"applicability\");\n        }\n        Event.startApplicability = startApplicability;\n        function endApplicability(rule) {\n            return Event.of(\"end\", rule, \"applicability\");\n        }\n        Event.endApplicability = endApplicability;\n        function startExpectation(rule) {\n            return Event.of(\"start\", rule, \"expectation\");\n        }\n        Event.startExpectation = startExpectation;\n        function endExpectation(rule) {\n            return Event.of(\"end\", rule, \"expectation\");\n        }\n        Event.endExpectation = endExpectation;\n    })(Event = Rule.Event || (Rule.Event = {}));\n})(Rule || (exports.Rule = Rule = {}));\n// Processes the expectations of the results of an interview.\n// When the result is Passed/Failed (Left), we accumulate the expectations that are later on passed to the Outcome.\n// When we encounter the first Diagnostic result of a cantTell (Right),\n// the processing stops and later it is passed to the cantTell Outcome.\nfunction processExpectation(acc, [id, expectation]) {\n    return acc.either(\n    // The accumulator only contains true result, keep going.\n    ([accumulator, oracleUsedAccumulator]) => expectation.either(\n    // The current result is defined, accumulate.\n    ([result, oracleUsed]) => alfa_either_1.Left.of(alfa_tuple_1.Tuple.of(accumulator.append([id, alfa_option_1.Maybe.toOption(result)]), oracleUsedAccumulator || oracleUsed)), \n    // The current result is cantTell, abort.\n    ([diagnostic, oracleUsed]) => alfa_either_1.Right.of(alfa_tuple_1.Tuple.of(diagnostic, oracleUsedAccumulator || oracleUsed))), \n    // The accumulator already contains cantTell, skip.\n    // Note that we only keep the mode of the first Expectation that cannot tell,\n    // which is likely OK.\n    () => acc);\n}\nfunction resolve(target, expectations, rule, \n// A rule asking no questions, never calls its oracle, so it can be anything\noracle, oracleUsedInApplicability) {\n    return alfa_future_1.Future.traverse(expectations, ([id, interview]) => interview_1.Interview.conduct(interview, rule, oracle).map((expectation) => [id, expectation]))\n        .map((expectations) => reduce(expectations, processExpectation, alfa_either_1.Left.of(alfa_tuple_1.Tuple.of(alfa_list_1.List.empty(), oracleUsedInApplicability))))\n        .map((expectation) => expectation.either(([expectations, oracleUsed]) => outcome_1.Outcome.from(rule, target, alfa_record_1.Record.from(expectations), getMode(oracleUsed)), ([diagnostic, oracleUsed]) => outcome_1.Outcome.CantTell.of(rule, target, diagnostic, getMode(oracleUsed))));\n}\nfunction getMode(oracleUsed) {\n    return oracleUsed ? outcome_1.Outcome.Mode.SemiAuto : outcome_1.Outcome.Mode.Automatic;\n}\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-act/src/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-act/src/tag.js":
/*!*******************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-act/src/tag.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Tag = void 0;\n/**\n * @public\n */\nclass Tag {\n    constructor() { }\n    equals(value) {\n        return value instanceof Tag && value.type === this.type;\n    }\n    toJSON() {\n        return {\n            type: this.type,\n        };\n    }\n}\nexports.Tag = Tag;\n/**\n * @public\n */\n(function (Tag) {\n    function isTag(value, type) {\n        return value instanceof Tag && (type === undefined || value.type === type);\n    }\n    Tag.isTag = isTag;\n})(Tag || (exports.Tag = Tag = {}));\n//# sourceMappingURL=tag.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-act/src/tag.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-affine/src/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-affine/src/index.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * This package provides functionality for working with\n * {@link https://en.wikipedia.org/wiki/Affine_transformation | affine transformations}.\n *\n * @packageDocumentation\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./transformation */ \"./node_modules/@siteimprove/alfa-affine/src/transformation.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-affine/src/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-affine/src/transformation.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-affine/src/transformation.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Transformation = void 0;\nconst alfa_math_1 = __webpack_require__(/*! @siteimprove/alfa-math */ \"./node_modules/@siteimprove/alfa-math/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst { cos, sin, tan, sqrt, max } = Math;\nconst { norm, normalize, dot, cross } = alfa_math_1.Vector;\nconst { determinant, multiply, inverse, transpose } = alfa_math_1.Matrix;\n/**\n * @public\n */\nclass Transformation {\n    static of(matrix) {\n        const [[a = 1, b = 0, c = 0, d = 0] = [], [e = 0, f = 1, g = 0, h = 0] = [], [i = 0, j = 0, k = 1, l = 0] = [], [m = 0, n = 0, o = 0, p = 1] = [],] = matrix;\n        return new Transformation([\n            [a, b, c, d],\n            [e, f, g, h],\n            [i, j, k, l],\n            [m, n, o, p],\n        ]);\n    }\n    static empty() {\n        return this._empty;\n    }\n    constructor(matrix) {\n        this._matrix = matrix;\n    }\n    apply(transformation) {\n        return new Transformation(multiply(this._matrix, transformation._matrix));\n    }\n    translate(tx, ty = 0, tz = 0) {\n        return this.apply(Transformation.translate(tx, ty, tz));\n    }\n    scale(sx, sy = sx, sz = 1) {\n        return this.apply(Transformation.scale(sx, sy, sz));\n    }\n    skew(a, b) {\n        return this.apply(Transformation.skew(a, b));\n    }\n    rotate(a, u) {\n        return this.apply(Transformation.rotate(a, u));\n    }\n    perspective(d) {\n        return this.apply(Transformation.perspective(d));\n    }\n    /**\n     * {@link https://drafts.csswg.org/css-transforms-2/#decomposing-a-3d-matrix}\n     */\n    decompose() {\n        const m = this._matrix;\n        if (m[3][3] === 0) {\n            return alfa_option_1.None;\n        }\n        for (let i = 0; i < 4; i++) {\n            for (let j = 0; j < 4; j++) {\n                m[i][j] /= m[3][3];\n            }\n        }\n        // Perspective\n        let p = alfa_math_1.Matrix.clone(m);\n        for (let i = 0; i < 3; i++) {\n            p[3][i] = 0;\n        }\n        p[3][3] = 1;\n        if (determinant(p) === 0) {\n            return alfa_option_1.None;\n        }\n        if (m[3][0] !== 0 || m[3][1] !== 0 || m[3][2] !== 0) {\n            p = multiply(transpose(inverse(p)), m[3].map((v) => [v])).map(([v]) => v);\n        }\n        else {\n            p = [0, 0, 0, 1];\n        }\n        // Translate\n        const t = [m[0][3], m[1][3], m[2][3]];\n        const u = [\n            [m[0][0], m[0][1], m[0][2]],\n            [m[1][0], m[1][1], m[1][2]],\n            [m[2][0], m[2][1], m[2][2]],\n        ];\n        // Scale\n        const s = [norm(u[0]), 0, 0];\n        u[0] = normalize(u[0]);\n        // Skew\n        const z = [dot(u[0], u[1]), 0, 0];\n        u[1] = combine(u[1], u[0], 1, -z[0]);\n        s[1] = norm(u[1]);\n        u[1] = normalize(u[1]);\n        z[0] /= s[1];\n        z[1] = dot(u[0], u[2]);\n        u[2] = combine(u[2], u[0], 1.0, -z[1]);\n        z[2] = dot(u[1], u[2]);\n        u[2] = combine(u[2], u[1], 1.0, -z[2]);\n        s[2] = norm(u[2]);\n        u[2] = normalize(u[2]);\n        z[1] /= s[2];\n        z[2] /= s[2];\n        if (dot(u[0], cross(u[1], u[2])) < 0) {\n            for (let i = 0; i < 3; i++) {\n                s[i] *= -1;\n                u[i][0] *= -1;\n                u[i][1] *= -1;\n                u[i][2] *= -1;\n            }\n        }\n        // Rotate\n        const r = [\n            0.5 * sqrt(max(1 + u[0][0] - u[1][1] - u[2][2], 0)),\n            0.5 * sqrt(max(1 - u[0][0] + u[1][1] - u[2][2], 0)),\n            0.5 * sqrt(max(1 - u[0][0] - u[1][1] + u[2][2], 0)),\n            0.5 * sqrt(max(1 + u[0][0] + u[1][1] + u[2][2], 0)),\n        ];\n        if (u[2][1] > u[1][2]) {\n            r[0] = -r[0];\n        }\n        if (u[0][2] > u[2][0]) {\n            r[1] = -r[1];\n        }\n        if (u[1][0] > u[0][1]) {\n            r[2] = -r[2];\n        }\n        return alfa_option_1.Option.of({\n            translate: t,\n            scale: s,\n            skew: z,\n            rotate: r,\n            perspective: p,\n        });\n    }\n    equals(value) {\n        return (value instanceof Transformation &&\n            alfa_math_1.Matrix.equals(value._matrix, this._matrix));\n    }\n    toArray() {\n        return alfa_math_1.Matrix.clone(this._matrix);\n    }\n    toJSON() {\n        return alfa_math_1.Matrix.clone(this._matrix);\n    }\n}\nexports.Transformation = Transformation;\nTransformation._empty = new Transformation(alfa_math_1.Matrix.identity(4));\n/**\n * @public\n */\n(function (Transformation) {\n    function translate(tx, ty = 0, tz = 0) {\n        return Transformation.of([\n            [1, 0, 0, tx],\n            [0, 1, 0, ty],\n            [0, 0, 1, tz],\n            [0, 0, 0, 1],\n        ]);\n    }\n    Transformation.translate = translate;\n    function scale(sx, sy = sx, sz = 1) {\n        return Transformation.of([\n            [sx, 0, 0],\n            [0, sy, 0],\n            [0, 0, sz],\n        ]);\n    }\n    Transformation.scale = scale;\n    function skew(a, b) {\n        return Transformation.of([\n            [1, tan(a)],\n            [tan(b), 1],\n        ]);\n    }\n    Transformation.skew = skew;\n    function rotate(a, u = [0, 0, 1]) {\n        const [x, y, z] = normalize(u);\n        return Transformation.of([\n            [\n                cos(a) + x ** 2 * (1 - cos(a)),\n                x * y * (1 - cos(a)) - z * sin(a),\n                x * z * (1 - cos(a)) + y * sin(a),\n            ],\n            [\n                y * x * (1 - cos(a)) + z * sin(a),\n                cos(a) + y ** 2 * (1 - cos(a)),\n                y * z * (1 - cos(a)) - x * sin(a),\n            ],\n            [\n                z * x * (1 - cos(a)) - y * sin(a),\n                z * y * (1 - cos(a)) + x * sin(a),\n                cos(a) + z ** 2 * (1 - cos(a)),\n            ],\n        ]);\n    }\n    Transformation.rotate = rotate;\n    function perspective(d) {\n        return Transformation.of([\n            [1, 0, 0, 0],\n            [0, 1, 0, 0],\n            [0, 0, 1, 0],\n            [0, 0, -1 / d, 1],\n        ]);\n    }\n    Transformation.perspective = perspective;\n})(Transformation || (exports.Transformation = Transformation = {}));\nfunction combine(a, b, ascl, bscl) {\n    return [\n        ascl * a[0] + bscl * b[0],\n        ascl * a[1] + bscl * b[1],\n        ascl * a[2] + bscl * b[2],\n    ];\n}\n//# sourceMappingURL=transformation.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-affine/src/transformation.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-aria/node_modules/@siteimprove/alfa-sequence/src/cons.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-aria/node_modules/@siteimprove/alfa-sequence/src/cons.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Cons = void 0;\nconst alfa_array_1 = __webpack_require__(/*! @siteimprove/alfa-array */ \"./node_modules/@siteimprove/alfa-array/src/index.js\");\nconst alfa_comparable_1 = __webpack_require__(/*! @siteimprove/alfa-comparable */ \"./node_modules/@siteimprove/alfa-comparable/src/index.js\");\nconst alfa_equatable_1 = __webpack_require__(/*! @siteimprove/alfa-equatable */ \"./node_modules/@siteimprove/alfa-equatable/src/index.js\");\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_json_1 = __webpack_require__(/*! @siteimprove/alfa-json */ \"./node_modules/@siteimprove/alfa-json/src/index.js\");\nconst alfa_lazy_1 = __webpack_require__(/*! @siteimprove/alfa-lazy */ \"./node_modules/@siteimprove/alfa-lazy/src/index.js\");\nconst alfa_map_1 = __webpack_require__(/*! @siteimprove/alfa-map */ \"./node_modules/@siteimprove/alfa-map/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_set_1 = __webpack_require__(/*! @siteimprove/alfa-set */ \"./node_modules/@siteimprove/alfa-set/src/index.js\");\nconst sequence_1 = __webpack_require__(/*! ./sequence */ \"./node_modules/@siteimprove/alfa-aria/node_modules/@siteimprove/alfa-sequence/src/sequence.js\");\nconst nil_1 = __webpack_require__(/*! ./nil */ \"./node_modules/@siteimprove/alfa-aria/node_modules/@siteimprove/alfa-sequence/src/nil.js\");\nconst { not, equals } = alfa_predicate_1.Predicate;\nconst { compareComparable } = alfa_comparable_1.Comparable;\n/**\n * @public\n */\nclass Cons {\n    static of(head, tail = alfa_lazy_1.Lazy.force(nil_1.Nil)) {\n        return new Cons(head, tail);\n    }\n    constructor(head, tail) {\n        this._head = head;\n        this._tail = tail;\n    }\n    get size() {\n        return alfa_iterable_1.Iterable.size(this);\n    }\n    isEmpty() {\n        return false;\n    }\n    forEach(callback) {\n        alfa_iterable_1.Iterable.forEach(this, callback);\n    }\n    map(mapper, index = 0) {\n        return new Cons(mapper(this._head, index), this._tail.map((tail) => Cons.isCons(tail) ? tail.map(mapper, index + 1) : nil_1.Nil));\n    }\n    apply(mapper) {\n        return mapper.flatMap((mapper) => this.map(mapper));\n    }\n    flatMap(mapper, index = 0) {\n        let next = this;\n        while (true) {\n            const head = mapper(next._head, index++);\n            if (Cons.isCons(head)) {\n                return new Cons(head._head, head._tail.map((left) => {\n                    const right = next._tail.force();\n                    return Cons.isCons(right)\n                        ? left.concat(right.flatMap(mapper, index))\n                        : left;\n                }));\n            }\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return nil_1.Nil;\n            }\n        }\n    }\n    flatten() {\n        return this.flatMap((sequence) => sequence);\n    }\n    reduce(reducer, accumulator) {\n        let next = this;\n        let index = 0;\n        while (true) {\n            accumulator = reducer(accumulator, next._head, index++);\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                break;\n            }\n        }\n        return accumulator;\n    }\n    reduceWhile(predicate, reducer, accumulator) {\n        let next = this;\n        let index = 0;\n        while (predicate(next._head, index)) {\n            accumulator = reducer(accumulator, next._head, index++);\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                break;\n            }\n        }\n        return accumulator;\n    }\n    reduceUntil(predicate, reducer, accumulator) {\n        return this.reduceWhile(not(predicate), reducer, accumulator);\n    }\n    filter(predicate, index = 0) {\n        let next = this;\n        while (true) {\n            if (predicate(next._head, index++)) {\n                return new Cons(next._head, next._tail.map((tail) => Cons.isCons(tail) ? tail.filter(predicate, index) : nil_1.Nil));\n            }\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return nil_1.Nil;\n            }\n        }\n    }\n    reject(predicate) {\n        return this.filter(not(predicate));\n    }\n    find(predicate) {\n        let next = this;\n        let index = 0;\n        while (true) {\n            const head = next._head;\n            if (predicate(head, index++)) {\n                return alfa_option_1.Option.of(head);\n            }\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return alfa_option_1.None;\n            }\n        }\n    }\n    includes(value) {\n        return this.some(equals(value));\n    }\n    collect(mapper, index = 0) {\n        let next = this;\n        while (true) {\n            const value = mapper(next._head, index++);\n            if (value.isSome()) {\n                return new Cons(value.get(), next._tail.map((tail) => Cons.isCons(tail) ? tail.collect(mapper, index) : nil_1.Nil));\n            }\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return nil_1.Nil;\n            }\n        }\n    }\n    collectFirst(mapper) {\n        let next = this;\n        let index = 0;\n        while (true) {\n            const value = mapper(next._head, index++);\n            if (value.isSome()) {\n                return value;\n            }\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return alfa_option_1.None;\n            }\n        }\n    }\n    some(predicate) {\n        let next = this;\n        let index = 0;\n        while (true) {\n            if (predicate(next._head, index++)) {\n                return true;\n            }\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return false;\n            }\n        }\n    }\n    none(predicate) {\n        return this.every(not(predicate));\n    }\n    every(predicate) {\n        let next = this;\n        let index = 0;\n        while (true) {\n            if (!predicate(next._head, index++)) {\n                return false;\n            }\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return true;\n            }\n        }\n    }\n    count(predicate) {\n        return this.reduce((count, value, index) => (predicate(value, index) ? count + 1 : count), 0);\n    }\n    distinct(seen = alfa_set_1.Set.empty()) {\n        let next = this;\n        while (true) {\n            if (seen.has(next._head)) {\n                const tail = next._tail.force();\n                if (Cons.isCons(tail)) {\n                    next = tail;\n                }\n                else {\n                    return nil_1.Nil;\n                }\n            }\n            else {\n                return Cons.of(next._head, next._tail.map((tail) => Cons.isCons(tail) ? tail.distinct(seen.add(next._head)) : nil_1.Nil));\n            }\n        }\n    }\n    get(index) {\n        return index < 0 ? alfa_option_1.None : this.skip(index).first();\n    }\n    has(index) {\n        return this.get(index).isSome();\n    }\n    set(index, value) {\n        if (index < 0) {\n            return this;\n        }\n        if (index === 0) {\n            if (alfa_equatable_1.Equatable.equals(value, this._head)) {\n                return this;\n            }\n            return new Cons(value, this._tail);\n        }\n        return new Cons(this._head, this._tail.map((tail) => tail.set(index - 1, value)));\n    }\n    insert(index, value) {\n        if (index < 0) {\n            return this;\n        }\n        if (index === 0) {\n            return new Cons(value, alfa_lazy_1.Lazy.force(this));\n        }\n        return new Cons(this._head, this._tail.map((tail) => tail.set(index - 1, value)));\n    }\n    append(value) {\n        return new Cons(this._head, this._tail.map((tail) => tail.append(value)));\n    }\n    prepend(value) {\n        return new Cons(value, alfa_lazy_1.Lazy.force(this));\n    }\n    concat(iterable) {\n        const sequence = sequence_1.Sequence.from(iterable);\n        if (Cons.isCons(sequence)) {\n            return new Cons(this._head, this._tail.map((tail) => tail.concat(sequence)));\n        }\n        return this;\n    }\n    subtract(iterable) {\n        return this.filter((value) => !alfa_iterable_1.Iterable.includes(iterable, value));\n    }\n    intersect(iterable) {\n        return this.filter((value) => alfa_iterable_1.Iterable.includes(iterable, value));\n    }\n    tee(callback, ...args) {\n        callback(this, ...args);\n        return this;\n    }\n    zip(iterable) {\n        const sequence = sequence_1.Sequence.from(iterable);\n        if (Cons.isCons(sequence)) {\n            return new Cons([this._head, sequence._head], this._tail.map((tail) => tail.zip(sequence.rest())));\n        }\n        return nil_1.Nil;\n    }\n    first() {\n        return alfa_option_1.Option.of(this._head);\n    }\n    last() {\n        let next = this;\n        while (true) {\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return alfa_option_1.Option.of(next._head);\n            }\n        }\n    }\n    take(count) {\n        if (count <= 0) {\n            return nil_1.Nil;\n        }\n        return new Cons(this._head, count === 1\n            ? alfa_lazy_1.Lazy.force(nil_1.Nil)\n            : this._tail.map((tail) => Cons.isCons(tail) ? tail.take(count - 1) : nil_1.Nil));\n    }\n    takeWhile(predicate) {\n        return this.takeUntil(not(predicate));\n    }\n    takeUntil(predicate, index = 0) {\n        if (predicate(this._head, index)) {\n            return nil_1.Nil;\n        }\n        return new Cons(this._head, this._tail.map((tail) => Cons.isCons(tail)\n            ? tail.takeUntil(predicate, index + 1)\n            : tail.takeUntil(predicate)));\n    }\n    takeLast(count) {\n        return this.skip(this.size - count);\n    }\n    takeLastWhile(predicate) {\n        return this.reverse().takeWhile(predicate).reverse();\n    }\n    takeLastUntil(predicate) {\n        return this.takeLastWhile(not(predicate));\n    }\n    skip(count) {\n        let next = this;\n        while (count-- > 0) {\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return nil_1.Nil;\n            }\n        }\n        return next;\n    }\n    skipWhile(predicate) {\n        let next = this;\n        let index = 0;\n        while (predicate(next._head, index++)) {\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return nil_1.Nil;\n            }\n        }\n        return next;\n    }\n    skipUntil(predicate) {\n        return this.skipWhile(not(predicate));\n    }\n    skipLast(count) {\n        return this.take(this.size - count);\n    }\n    skipLastWhile(predicate) {\n        return this.reverse().skipWhile(predicate).reverse();\n    }\n    skipLastUntil(predicate) {\n        return this.skipLastWhile(not(predicate));\n    }\n    trim(predicate) {\n        return this.trimLeading(predicate).trimTrailing(predicate);\n    }\n    trimLeading(predicate) {\n        return this.skipWhile(predicate);\n    }\n    trimTrailing(predicate) {\n        return this.skipLastWhile(predicate);\n    }\n    rest() {\n        return this._tail.force();\n    }\n    slice(start, end) {\n        let slice = this.skip(start);\n        if (end !== undefined) {\n            slice = slice.take(end - start);\n        }\n        return slice;\n    }\n    reverse() {\n        return this.reduce((reversed, value) => new Cons(value, alfa_lazy_1.Lazy.force(reversed)), nil_1.Nil);\n    }\n    join(separator) {\n        let result = `${this._head}`;\n        let next = this;\n        while (true) {\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                result += `${separator}${tail._head}`;\n                next = tail;\n            }\n            else {\n                return result;\n            }\n        }\n    }\n    sort() {\n        return this.sortWith(compareComparable);\n    }\n    sortWith(comparer) {\n        return sequence_1.Sequence.fromArray(alfa_array_1.Array.sortWith(this.toArray(), comparer));\n    }\n    compare(iterable) {\n        return this.compareWith(iterable, alfa_comparable_1.Comparable.compare);\n    }\n    compareWith(iterable, comparer) {\n        return alfa_iterable_1.Iterable.compareWith(this, iterable, comparer);\n    }\n    groupBy(grouper) {\n        return this.reduce((groups, value, index) => {\n            const group = grouper(value, index);\n            return groups.set(group, new Cons(value, alfa_lazy_1.Lazy.force(groups.get(group).getOrElse(() => nil_1.Nil))));\n        }, alfa_map_1.Map.empty()).map((group) => group.reverse());\n    }\n    equals(value) {\n        if (!Cons.isCons(value)) {\n            return false;\n        }\n        let a = this;\n        let b = value;\n        while (true) {\n            if (!alfa_equatable_1.Equatable.equals(a._head, b._head)) {\n                return false;\n            }\n            const ta = a._tail.force();\n            const tb = b._tail.force();\n            if (Cons.isCons(ta) && Cons.isCons(tb)) {\n                a = ta;\n                b = tb;\n            }\n            else {\n                return ta === nil_1.Nil && tb === nil_1.Nil;\n            }\n        }\n    }\n    hash(hash) {\n        let size = 0;\n        for (const value of this) {\n            hash.writeUnknown(value);\n            size++;\n        }\n        hash.writeUint32(size);\n    }\n    *iterator() {\n        let next = this;\n        while (true) {\n            yield next._head;\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                break;\n            }\n        }\n    }\n    [Symbol.iterator]() {\n        return this.iterator();\n    }\n    toArray() {\n        const array = [];\n        let next = this;\n        while (true) {\n            array.push(next._head);\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return array;\n            }\n        }\n    }\n    toJSON() {\n        const json = [];\n        let next = this;\n        while (true) {\n            json.push(alfa_json_1.Serializable.toJSON(next._head));\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return json;\n            }\n        }\n    }\n    toString() {\n        return `Sequence [ ${this.join(\", \")} ]`;\n    }\n}\nexports.Cons = Cons;\n/**\n * @public\n */\n(function (Cons) {\n    function isCons(value) {\n        return value instanceof Cons;\n    }\n    Cons.isCons = isCons;\n})(Cons || (exports.Cons = Cons = {}));\n//# sourceMappingURL=cons.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-aria/node_modules/@siteimprove/alfa-sequence/src/cons.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-aria/node_modules/@siteimprove/alfa-sequence/src/index.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-aria/node_modules/@siteimprove/alfa-sequence/src/index.js ***!
  \**************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./cons */ \"./node_modules/@siteimprove/alfa-aria/node_modules/@siteimprove/alfa-sequence/src/cons.js\"), exports);\n__exportStar(__webpack_require__(/*! ./nil */ \"./node_modules/@siteimprove/alfa-aria/node_modules/@siteimprove/alfa-sequence/src/nil.js\"), exports);\n__exportStar(__webpack_require__(/*! ./sequence */ \"./node_modules/@siteimprove/alfa-aria/node_modules/@siteimprove/alfa-sequence/src/sequence.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-aria/node_modules/@siteimprove/alfa-sequence/src/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-aria/node_modules/@siteimprove/alfa-sequence/src/nil.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-aria/node_modules/@siteimprove/alfa-sequence/src/nil.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Nil = void 0;\nconst alfa_comparable_1 = __webpack_require__(/*! @siteimprove/alfa-comparable */ \"./node_modules/@siteimprove/alfa-comparable/src/index.js\");\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_map_1 = __webpack_require__(/*! @siteimprove/alfa-map */ \"./node_modules/@siteimprove/alfa-map/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst sequence_1 = __webpack_require__(/*! ./sequence */ \"./node_modules/@siteimprove/alfa-aria/node_modules/@siteimprove/alfa-sequence/src/sequence.js\");\nconst cons_1 = __webpack_require__(/*! ./cons */ \"./node_modules/@siteimprove/alfa-aria/node_modules/@siteimprove/alfa-sequence/src/cons.js\");\n/**\n * @public\n */\nexports.Nil = new (class Nil {\n    get size() {\n        return 0;\n    }\n    isEmpty() {\n        return true;\n    }\n    forEach() { }\n    map() {\n        return this;\n    }\n    apply() {\n        return this;\n    }\n    flatMap() {\n        return this;\n    }\n    flatten() {\n        return this;\n    }\n    reduce(reducer, accumulator) {\n        return accumulator;\n    }\n    reduceWhile(predicate, reducer, accumulator) {\n        return accumulator;\n    }\n    reduceUntil(predicate, reducer, accumulator) {\n        return accumulator;\n    }\n    filter() {\n        return this;\n    }\n    reject() {\n        return this;\n    }\n    find() {\n        return alfa_option_1.None;\n    }\n    includes() {\n        return false;\n    }\n    collect() {\n        return this;\n    }\n    collectFirst() {\n        return alfa_option_1.None;\n    }\n    some() {\n        return false;\n    }\n    none() {\n        return true;\n    }\n    every() {\n        return true;\n    }\n    count() {\n        return 0;\n    }\n    distinct() {\n        return this;\n    }\n    get() {\n        return alfa_option_1.None;\n    }\n    has() {\n        return false;\n    }\n    set() {\n        return this;\n    }\n    insert(index, value) {\n        return index === 0 ? cons_1.Cons.of(value) : this;\n    }\n    append(value) {\n        return cons_1.Cons.of(value);\n    }\n    prepend(value) {\n        return cons_1.Cons.of(value);\n    }\n    concat(iterable) {\n        if (iterable === this) {\n            return this;\n        }\n        return sequence_1.Sequence.from(iterable);\n    }\n    subtract() {\n        return this;\n    }\n    intersect() {\n        return this;\n    }\n    tee(callback, ...args) {\n        callback(this, ...args);\n        return this;\n    }\n    zip() {\n        return this;\n    }\n    first() {\n        return alfa_option_1.None;\n    }\n    last() {\n        return alfa_option_1.None;\n    }\n    take() {\n        return this;\n    }\n    takeWhile() {\n        return this;\n    }\n    takeUntil() {\n        return this;\n    }\n    takeLast() {\n        return this;\n    }\n    takeLastWhile() {\n        return this;\n    }\n    takeLastUntil() {\n        return this;\n    }\n    skip() {\n        return this;\n    }\n    skipWhile() {\n        return this;\n    }\n    skipUntil() {\n        return this;\n    }\n    skipLast() {\n        return this;\n    }\n    skipLastWhile() {\n        return this;\n    }\n    skipLastUntil() {\n        return this;\n    }\n    trim() {\n        return this;\n    }\n    trimLeading() {\n        return this;\n    }\n    trimTrailing() {\n        return this;\n    }\n    rest() {\n        return this;\n    }\n    slice() {\n        return this;\n    }\n    reverse() {\n        return this;\n    }\n    join() {\n        return \"\";\n    }\n    sort() {\n        return this;\n    }\n    sortWith() {\n        return this;\n    }\n    compare(iterable) {\n        return this.compareWith(iterable, alfa_comparable_1.Comparable.compare);\n    }\n    compareWith(iterable, comparer) {\n        return alfa_iterable_1.Iterable.compareWith(this, iterable, comparer);\n    }\n    groupBy() {\n        return alfa_map_1.Map.empty();\n    }\n    equals(value) {\n        return value instanceof Nil;\n    }\n    hash(hash) {\n        hash.writeUint32(0);\n    }\n    *iterator() { }\n    [Symbol.iterator]() {\n        return this.iterator();\n    }\n    toArray() {\n        return [];\n    }\n    toJSON() {\n        return [];\n    }\n    toString() {\n        return \"Sequence []\";\n    }\n})();\n//# sourceMappingURL=nil.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-aria/node_modules/@siteimprove/alfa-sequence/src/nil.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-aria/node_modules/@siteimprove/alfa-sequence/src/sequence.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-aria/node_modules/@siteimprove/alfa-sequence/src/sequence.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Sequence = void 0;\nconst alfa_array_1 = __webpack_require__(/*! @siteimprove/alfa-array */ \"./node_modules/@siteimprove/alfa-array/src/index.js\");\nconst alfa_lazy_1 = __webpack_require__(/*! @siteimprove/alfa-lazy */ \"./node_modules/@siteimprove/alfa-lazy/src/index.js\");\nconst cons_1 = __webpack_require__(/*! ./cons */ \"./node_modules/@siteimprove/alfa-aria/node_modules/@siteimprove/alfa-sequence/src/cons.js\");\nconst nil_1 = __webpack_require__(/*! ./nil */ \"./node_modules/@siteimprove/alfa-aria/node_modules/@siteimprove/alfa-sequence/src/nil.js\");\n/**\n * @public\n */\nvar Sequence;\n(function (Sequence) {\n    function isSequence(value) {\n        return isCons(value) || isNil(value);\n    }\n    Sequence.isSequence = isSequence;\n    function isCons(value) {\n        return cons_1.Cons.isCons(value);\n    }\n    Sequence.isCons = isCons;\n    function isNil(value) {\n        return value === nil_1.Nil;\n    }\n    Sequence.isNil = isNil;\n    function of(head, tail) {\n        return cons_1.Cons.of(head, tail);\n    }\n    Sequence.of = of;\n    function empty() {\n        return nil_1.Nil;\n    }\n    Sequence.empty = empty;\n    function from(iterable) {\n        if (isSequence(iterable)) {\n            return iterable;\n        }\n        if (alfa_array_1.Array.isArray(iterable)) {\n            return fromArray(iterable);\n        }\n        return fromIterable(iterable);\n    }\n    Sequence.from = from;\n    function fromArray(array) {\n        let i = 0;\n        const tail = () => {\n            if (i >= array.length) {\n                return empty();\n            }\n            return of(array[i++], alfa_lazy_1.Lazy.of(tail));\n        };\n        return tail();\n    }\n    Sequence.fromArray = fromArray;\n    function fromIterable(iterable) {\n        return fromIterator(iterable[Symbol.iterator]());\n    }\n    Sequence.fromIterable = fromIterable;\n    function fromIterator(iterator) {\n        const tail = () => {\n            const head = iterator.next();\n            if (head.done === true) {\n                return empty();\n            }\n            return of(head.value, alfa_lazy_1.Lazy.of(tail));\n        };\n        return tail();\n    }\n    Sequence.fromIterator = fromIterator;\n})(Sequence || (exports.Sequence = Sequence = {}));\n//# sourceMappingURL=sequence.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-aria/node_modules/@siteimprove/alfa-sequence/src/sequence.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-aria/src/attribute.js":
/*!**************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-aria/src/attribute.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Attribute = void 0;\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_sequence_1 = __webpack_require__(/*! @siteimprove/alfa-sequence */ \"./node_modules/@siteimprove/alfa-aria/node_modules/@siteimprove/alfa-sequence/src/index.js\");\nconst data_1 = __webpack_require__(/*! ./attribute/data */ \"./node_modules/@siteimprove/alfa-aria/src/attribute/data.js\");\nconst role_1 = __webpack_require__(/*! ./role */ \"./node_modules/@siteimprove/alfa-aria/src/role.js\");\n/**\n * @public\n */\nclass Attribute {\n    static of(name, value) {\n        return new Attribute(name, value);\n    }\n    constructor(name, value) {\n        this._name = name;\n        this._value = value;\n    }\n    get name() {\n        return this._name;\n    }\n    get value() {\n        return this._value;\n    }\n    get kind() {\n        return data_1.Attributes[this._name].kind;\n    }\n    get type() {\n        return data_1.Attributes[this._name].type;\n    }\n    get default() {\n        const value = data_1.Attributes[this._name].default;\n        if (value === null) {\n            return alfa_option_1.None;\n        }\n        return alfa_option_1.Option.of(value);\n    }\n    get options() {\n        const options = data_1.Attributes[this._name].options;\n        if (options === null) {\n            return alfa_sequence_1.Sequence.empty();\n        }\n        return alfa_sequence_1.Sequence.from(options);\n    }\n    /**\n     * {@link https://www.w3.org/TR/wai-aria/#global_states}\n     */\n    isGlobal() {\n        return role_1.Role.of(\"roletype\").isAttributeSupported(this._name);\n    }\n    equals(value) {\n        return (value instanceof Attribute &&\n            value._name === this._name &&\n            value._value === this._value);\n    }\n    toJSON() {\n        return {\n            name: this._name,\n            value: this._value,\n        };\n    }\n}\nexports.Attribute = Attribute;\n/**\n * @public\n */\n(function (Attribute) {\n    function isName(value) {\n        return value in data_1.Attributes;\n    }\n    Attribute.isName = isName;\n})(Attribute || (exports.Attribute = Attribute = {}));\n//# sourceMappingURL=attribute.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-aria/src/attribute.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-aria/src/attribute/data.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-aria/src/attribute/data.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// This file has been automatically generated based on the WAI-ARIA specification.\n// Do therefore not modify it directly! If you wish to make changes, do so in\n// `scripts/attributes.js` and run `yarn generate` to rebuild this file.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Attributes = void 0;\n/**\n * @internal\n */\nexports.Attributes = {\n    \"aria-activedescendant\": {\n        kind: \"property\",\n        type: \"id-reference\",\n        options: null,\n        default: null,\n    },\n    \"aria-atomic\": {\n        kind: \"property\",\n        type: \"true-false\",\n        options: null,\n        default: \"false\",\n    },\n    \"aria-autocomplete\": {\n        kind: \"property\",\n        type: \"token\",\n        options: [\"inline\", \"list\", \"both\", \"none\"],\n        default: \"none\",\n    },\n    \"aria-busy\": {\n        kind: \"state\",\n        type: \"true-false\",\n        options: null,\n        default: \"false\",\n    },\n    \"aria-checked\": {\n        kind: \"state\",\n        type: \"tristate\",\n        options: null,\n        default: \"undefined\",\n    },\n    \"aria-colcount\": {\n        kind: \"property\",\n        type: \"integer\",\n        options: null,\n        default: null,\n    },\n    \"aria-colindex\": {\n        kind: \"property\",\n        type: \"integer\",\n        options: null,\n        default: null,\n    },\n    \"aria-colspan\": {\n        kind: \"property\",\n        type: \"integer\",\n        options: null,\n        default: null,\n    },\n    \"aria-controls\": {\n        kind: \"property\",\n        type: \"id-reference-list\",\n        options: null,\n        default: null,\n    },\n    \"aria-current\": {\n        kind: \"state\",\n        type: \"token\",\n        options: [\"page\", \"step\", \"location\", \"date\", \"time\", \"true\", \"false\"],\n        default: \"false\",\n    },\n    \"aria-describedby\": {\n        kind: \"property\",\n        type: \"id-reference-list\",\n        options: null,\n        default: null,\n    },\n    \"aria-details\": {\n        kind: \"property\",\n        type: \"id-reference\",\n        options: null,\n        default: null,\n    },\n    \"aria-disabled\": {\n        kind: \"state\",\n        type: \"true-false\",\n        options: null,\n        default: \"false\",\n    },\n    \"aria-dropeffect\": {\n        kind: \"property\",\n        type: \"token-list\",\n        options: [\"copy\", \"execute\", \"link\", \"move\", \"none\", \"popup\"],\n        default: \"none\",\n    },\n    \"aria-errormessage\": {\n        kind: \"property\",\n        type: \"id-reference\",\n        options: null,\n        default: null,\n    },\n    \"aria-expanded\": {\n        kind: \"state\",\n        type: \"true-false-undefined\",\n        options: null,\n        default: \"undefined\",\n    },\n    \"aria-flowto\": {\n        kind: \"property\",\n        type: \"id-reference-list\",\n        options: null,\n        default: null,\n    },\n    \"aria-grabbed\": {\n        kind: \"state\",\n        type: \"true-false-undefined\",\n        options: null,\n        default: \"undefined\",\n    },\n    \"aria-haspopup\": {\n        kind: \"property\",\n        type: \"token\",\n        options: [\"false\", \"true\", \"menu\", \"listbox\", \"tree\", \"grid\", \"dialog\"],\n        default: \"false\",\n    },\n    \"aria-hidden\": {\n        kind: \"state\",\n        type: \"true-false-undefined\",\n        options: null,\n        default: \"undefined\",\n    },\n    \"aria-invalid\": {\n        kind: \"state\",\n        type: \"token\",\n        options: [\"grammar\", \"false\", \"spelling\", \"true\"],\n        default: \"false\",\n    },\n    \"aria-keyshortcuts\": {\n        kind: \"property\",\n        type: \"string\",\n        options: null,\n        default: null,\n    },\n    \"aria-label\": {\n        kind: \"property\",\n        type: \"string\",\n        options: null,\n        default: null,\n    },\n    \"aria-labelledby\": {\n        kind: \"property\",\n        type: \"id-reference-list\",\n        options: null,\n        default: null,\n    },\n    \"aria-level\": {\n        kind: \"property\",\n        type: \"integer\",\n        options: null,\n        default: null,\n    },\n    \"aria-live\": {\n        kind: \"property\",\n        type: \"token\",\n        options: [\"assertive\", \"off\", \"polite\"],\n        default: \"off\",\n    },\n    \"aria-modal\": {\n        kind: \"property\",\n        type: \"true-false\",\n        options: null,\n        default: \"false\",\n    },\n    \"aria-multiline\": {\n        kind: \"property\",\n        type: \"true-false\",\n        options: null,\n        default: \"false\",\n    },\n    \"aria-multiselectable\": {\n        kind: \"property\",\n        type: \"true-false\",\n        options: null,\n        default: \"false\",\n    },\n    \"aria-orientation\": {\n        kind: \"property\",\n        type: \"token\",\n        options: [\"horizontal\", \"undefined\", \"vertical\"],\n        default: \"undefined\",\n    },\n    \"aria-owns\": {\n        kind: \"property\",\n        type: \"id-reference-list\",\n        options: null,\n        default: null,\n    },\n    \"aria-placeholder\": {\n        kind: \"property\",\n        type: \"string\",\n        options: null,\n        default: null,\n    },\n    \"aria-posinset\": {\n        kind: \"property\",\n        type: \"integer\",\n        options: null,\n        default: null,\n    },\n    \"aria-pressed\": {\n        kind: \"state\",\n        type: \"tristate\",\n        options: null,\n        default: \"undefined\",\n    },\n    \"aria-readonly\": {\n        kind: \"property\",\n        type: \"true-false\",\n        options: null,\n        default: \"false\",\n    },\n    \"aria-relevant\": {\n        kind: \"property\",\n        type: \"token-list\",\n        options: [\"additions\", \"additions text\", \"all\", \"removals\", \"text\"],\n        default: \"additions text\",\n    },\n    \"aria-required\": {\n        kind: \"property\",\n        type: \"true-false\",\n        options: null,\n        default: \"false\",\n    },\n    \"aria-roledescription\": {\n        kind: \"property\",\n        type: \"string\",\n        options: null,\n        default: null,\n    },\n    \"aria-rowcount\": {\n        kind: \"property\",\n        type: \"integer\",\n        options: null,\n        default: null,\n    },\n    \"aria-rowindex\": {\n        kind: \"property\",\n        type: \"integer\",\n        options: null,\n        default: null,\n    },\n    \"aria-rowspan\": {\n        kind: \"property\",\n        type: \"integer\",\n        options: null,\n        default: null,\n    },\n    \"aria-selected\": {\n        kind: \"state\",\n        type: \"true-false-undefined\",\n        options: null,\n        default: \"undefined\",\n    },\n    \"aria-setsize\": {\n        kind: \"property\",\n        type: \"integer\",\n        options: null,\n        default: null,\n    },\n    \"aria-sort\": {\n        kind: \"property\",\n        type: \"token\",\n        options: [\"ascending\", \"descending\", \"none\", \"other\"],\n        default: \"none\",\n    },\n    \"aria-valuemax\": {\n        kind: \"property\",\n        type: \"number\",\n        options: null,\n        default: null,\n    },\n    \"aria-valuemin\": {\n        kind: \"property\",\n        type: \"number\",\n        options: null,\n        default: null,\n    },\n    \"aria-valuenow\": {\n        kind: \"property\",\n        type: \"number\",\n        options: null,\n        default: null,\n    },\n    \"aria-valuetext\": {\n        kind: \"property\",\n        type: \"string\",\n        options: null,\n        default: null,\n    },\n};\n//# sourceMappingURL=data.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-aria/src/attribute/data.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-aria/src/dom/dom.js":
/*!************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-aria/src/dom/dom.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./predicate/has-accessible-name */ \"./node_modules/@siteimprove/alfa-aria/src/dom/predicate/has-accessible-name.js\"), exports);\n__exportStar(__webpack_require__(/*! ./predicate/has-explicit-role */ \"./node_modules/@siteimprove/alfa-aria/src/dom/predicate/has-explicit-role.js\"), exports);\n__exportStar(__webpack_require__(/*! ./predicate/has-heading-level */ \"./node_modules/@siteimprove/alfa-aria/src/dom/predicate/has-heading-level.js\"), exports);\n__exportStar(__webpack_require__(/*! ./predicate/has-implicit-role */ \"./node_modules/@siteimprove/alfa-aria/src/dom/predicate/has-implicit-role.js\"), exports);\n__exportStar(__webpack_require__(/*! ./predicate/has-incorrect-role-without-name */ \"./node_modules/@siteimprove/alfa-aria/src/dom/predicate/has-incorrect-role-without-name.js\"), exports);\n__exportStar(__webpack_require__(/*! ./predicate/has-non-default-role */ \"./node_modules/@siteimprove/alfa-aria/src/dom/predicate/has-non-default-role.js\"), exports);\n__exportStar(__webpack_require__(/*! ./predicate/has-non-empty-accessible-name */ \"./node_modules/@siteimprove/alfa-aria/src/dom/predicate/has-non-empty-accessible-name.js\"), exports);\n__exportStar(__webpack_require__(/*! ./predicate/has-role */ \"./node_modules/@siteimprove/alfa-aria/src/dom/predicate/has-role.js\"), exports);\n__exportStar(__webpack_require__(/*! ./predicate/is-included-accessibility-tree */ \"./node_modules/@siteimprove/alfa-aria/src/dom/predicate/is-included-accessibility-tree.js\"), exports);\n__exportStar(__webpack_require__(/*! ./predicate/is-marked-decorative */ \"./node_modules/@siteimprove/alfa-aria/src/dom/predicate/is-marked-decorative.js\"), exports);\n__exportStar(__webpack_require__(/*! ./predicate/is-perceivable */ \"./node_modules/@siteimprove/alfa-aria/src/dom/predicate/is-perceivable.js\"), exports);\n__exportStar(__webpack_require__(/*! ./predicate/is-programmatically-hidden */ \"./node_modules/@siteimprove/alfa-aria/src/dom/predicate/is-programmatically-hidden.js\"), exports);\n__exportStar(__webpack_require__(/*! ./predicate/is-semantically-disabled */ \"./node_modules/@siteimprove/alfa-aria/src/dom/predicate/is-semantically-disabled.js\"), exports);\n//# sourceMappingURL=dom.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-aria/src/dom/dom.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-aria/src/dom/predicate/has-accessible-name.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-aria/src/dom/predicate/has-accessible-name.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.hasAccessibleName = void 0;\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst node_1 = __webpack_require__(/*! ../../node */ \"./node_modules/@siteimprove/alfa-aria/src/node.js\");\nconst has_name_1 = __webpack_require__(/*! ../../node/predicate/has-name */ \"./node_modules/@siteimprove/alfa-aria/src/node/predicate/has-name.js\");\nconst has_value_1 = __webpack_require__(/*! ../../name/predicate/has-value */ \"./node_modules/@siteimprove/alfa-aria/src/name/predicate/has-value.js\");\nconst { test } = alfa_predicate_1.Predicate;\nfunction hasAccessibleName(device, nameOrPredicate = () => true, ...names) {\n    const predicate = typeof nameOrPredicate === \"string\"\n        ? (0, has_value_1.hasValue)(nameOrPredicate, ...names)\n        : nameOrPredicate;\n    return (node) => test((0, has_name_1.hasName)(predicate), node_1.Node.from(node, device));\n}\nexports.hasAccessibleName = hasAccessibleName;\n//# sourceMappingURL=has-accessible-name.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-aria/src/dom/predicate/has-accessible-name.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-aria/src/dom/predicate/has-explicit-role.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-aria/src/dom/predicate/has-explicit-role.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.hasExplicitRole = void 0;\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst role_1 = __webpack_require__(/*! ../../role */ \"./node_modules/@siteimprove/alfa-aria/src/role.js\");\nconst { equals, property } = alfa_predicate_1.Predicate;\nfunction hasExplicitRole(nameOrPredicate = () => true, ...names) {\n    let predicate;\n    if (typeof nameOrPredicate === \"function\") {\n        predicate = nameOrPredicate;\n    }\n    else {\n        predicate = property(\"name\", equals(nameOrPredicate, ...names));\n    }\n    return (element) => role_1.Role.fromExplicit(element).some(predicate);\n}\nexports.hasExplicitRole = hasExplicitRole;\n//# sourceMappingURL=has-explicit-role.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-aria/src/dom/predicate/has-explicit-role.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-aria/src/dom/predicate/has-heading-level.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-aria/src/dom/predicate/has-heading-level.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.hasHeadingLevel = void 0;\nconst node_1 = __webpack_require__(/*! ../../node */ \"./node_modules/@siteimprove/alfa-aria/src/node.js\");\n/**\n * @public\n */\nfunction hasHeadingLevel(device, predicate = (n) => !isNaN(n)) {\n    return (element) => node_1.Node.from(element, device)\n        .attribute(\"aria-level\")\n        .map((level) => Number(level.value))\n        .some(predicate);\n}\nexports.hasHeadingLevel = hasHeadingLevel;\n//# sourceMappingURL=has-heading-level.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-aria/src/dom/predicate/has-heading-level.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-aria/src/dom/predicate/has-implicit-role.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-aria/src/dom/predicate/has-implicit-role.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.hasImplicitRole = void 0;\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst role_1 = __webpack_require__(/*! ../../role */ \"./node_modules/@siteimprove/alfa-aria/src/role.js\");\nconst { equals, property } = alfa_predicate_1.Predicate;\nfunction hasImplicitRole(nameOrPredicate, ...names) {\n    let predicate;\n    if (typeof nameOrPredicate === \"function\") {\n        predicate = nameOrPredicate;\n    }\n    else {\n        predicate = property(\"name\", equals(nameOrPredicate, ...names));\n    }\n    return (element) => role_1.Role.fromImplicit(element).some(predicate);\n}\nexports.hasImplicitRole = hasImplicitRole;\n//# sourceMappingURL=has-implicit-role.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-aria/src/dom/predicate/has-implicit-role.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-aria/src/dom/predicate/has-incorrect-role-without-name.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-aria/src/dom/predicate/has-incorrect-role-without-name.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.hasIncorrectRoleWithoutName = void 0;\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst has_explicit_role_1 = __webpack_require__(/*! ./has-explicit-role */ \"./node_modules/@siteimprove/alfa-aria/src/dom/predicate/has-explicit-role.js\");\nconst has_accessible_name_1 = __webpack_require__(/*! ./has-accessible-name */ \"./node_modules/@siteimprove/alfa-aria/src/dom/predicate/has-accessible-name.js\");\nconst { hasName, isScopedTo } = alfa_dom_1.Element;\nconst { and, not, or } = alfa_predicate_1.Predicate;\n/**\n * `<aside>`, `<form>` and `<section>` elements have a non-generic implicit role\n * only if they have an accessible name.\n * Alfa currently can't handle that and always give them a role.\n * {@link https://github.com/Siteimprove/alfa/issues/298}\n * @public\n */\nfunction hasIncorrectRoleWithoutName(device) {\n    return and(hasSuspiciousRole, not((0, has_explicit_role_1.hasExplicitRole)()), not((0, has_accessible_name_1.hasAccessibleName)(device)));\n}\nexports.hasIncorrectRoleWithoutName = hasIncorrectRoleWithoutName;\n/**\n * form and section without name are always roleless.\n * aside elements are roleless when scoped to sectioning content.\n */\nconst hasSuspiciousRole = or(hasName(\"form\", \"section\"), and(hasName(\"aside\"), isScopedTo(\"article\", \"aside\", \"nav\", \"section\")));\n//# sourceMappingURL=has-incorrect-role-without-name.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-aria/src/dom/predicate/has-incorrect-role-without-name.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-aria/src/dom/predicate/has-non-default-role.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-aria/src/dom/predicate/has-non-default-role.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.hasNonDefaultRole = void 0;\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst has_explicit_role_1 = __webpack_require__(/*! ./has-explicit-role */ \"./node_modules/@siteimprove/alfa-aria/src/dom/predicate/has-explicit-role.js\");\nconst has_implicit_role_1 = __webpack_require__(/*! ./has-implicit-role */ \"./node_modules/@siteimprove/alfa-aria/src/dom/predicate/has-implicit-role.js\");\nconst { not, test } = alfa_predicate_1.Predicate;\n/**\n * @public\n */\nfunction hasNonDefaultRole(element) {\n    return test((0, has_explicit_role_1.hasExplicitRole)((explicit) => test(not((0, has_implicit_role_1.hasImplicitRole)((implicit) => implicit.equals(explicit))), element)), element);\n}\nexports.hasNonDefaultRole = hasNonDefaultRole;\n//# sourceMappingURL=has-non-default-role.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-aria/src/dom/predicate/has-non-default-role.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-aria/src/dom/predicate/has-non-empty-accessible-name.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-aria/src/dom/predicate/has-non-empty-accessible-name.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.hasNonEmptyAccessibleName = void 0;\nconst has_accessible_name_1 = __webpack_require__(/*! ./has-accessible-name */ \"./node_modules/@siteimprove/alfa-aria/src/dom/predicate/has-accessible-name.js\");\nconst has_value_1 = __webpack_require__(/*! ../../name/predicate/has-value */ \"./node_modules/@siteimprove/alfa-aria/src/name/predicate/has-value.js\");\n/**\n * @public\n */\nfunction hasNonEmptyAccessibleName(device) {\n    return (0, has_accessible_name_1.hasAccessibleName)(device, (0, has_value_1.hasValue)((value) => value.trim().length > 0));\n}\nexports.hasNonEmptyAccessibleName = hasNonEmptyAccessibleName;\n//# sourceMappingURL=has-non-empty-accessible-name.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-aria/src/dom/predicate/has-non-empty-accessible-name.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-aria/src/dom/predicate/has-role.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-aria/src/dom/predicate/has-role.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.hasRole = void 0;\nconst node_1 = __webpack_require__(/*! ../../node */ \"./node_modules/@siteimprove/alfa-aria/src/node.js\");\nconst has_name_1 = __webpack_require__(/*! ../../role/predicate/has-name */ \"./node_modules/@siteimprove/alfa-aria/src/role/predicate/has-name.js\");\nfunction hasRole(device, nameOrPredicate = () => true, ...names) {\n    let predicate;\n    if (typeof nameOrPredicate === \"function\") {\n        predicate = nameOrPredicate;\n    }\n    else {\n        predicate = (0, has_name_1.hasName)(nameOrPredicate, ...names);\n    }\n    return (element) => node_1.Node.from(element, device).role.some(predicate);\n}\nexports.hasRole = hasRole;\n//# sourceMappingURL=has-role.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-aria/src/dom/predicate/has-role.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-aria/src/dom/predicate/is-included-accessibility-tree.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-aria/src/dom/predicate/is-included-accessibility-tree.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isIgnored = exports.isIncludedInTheAccessibilityTree = void 0;\nconst __1 = __webpack_require__(/*! ../.. */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\n/**\n * Check if a node is included in the accessibility tree.\n *\n * @remarks\n * It's possible for a node itself to be ignored in the accessibility tree while\n * still having children that aren't.\n *\n * @public\n */\nfunction isIncludedInTheAccessibilityTree(device) {\n    return (node) => !__1.Node.from(node, device).isIgnored();\n}\nexports.isIncludedInTheAccessibilityTree = isIncludedInTheAccessibilityTree;\n/**\n * Check if a node is ignored in the accessibility tree.\n *\n * @remarks\n * It's possible for a node itself to be ignored in the accessibility tree while\n * still having children that aren't.\n *\n * @public\n */\nfunction isIgnored(device) {\n    return (node) => __1.Node.from(node, device).isIgnored();\n}\nexports.isIgnored = isIgnored;\n//# sourceMappingURL=is-included-accessibility-tree.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-aria/src/dom/predicate/is-included-accessibility-tree.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-aria/src/dom/predicate/is-marked-decorative.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-aria/src/dom/predicate/is-marked-decorative.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isMarkedDecorative = void 0;\nconst role_1 = __webpack_require__(/*! ../../role */ \"./node_modules/@siteimprove/alfa-aria/src/role.js\");\n/**\n * Check if an element is marked as decorative.\n *\n * @public\n */\nconst isMarkedDecorative = (element) => {\n    const role = element.attribute(\"role\").flatMap((attribute) => attribute\n        .tokens()\n        .filter(role_1.Role.isName)\n        .map(role_1.Role.of)\n        .reject((role) => role.isAbstract())\n        .first());\n    if (role.some((role) => role.isPresentational())) {\n        return true;\n    }\n    switch (element.name) {\n        case \"img\":\n            return (role.isNone() &&\n                element.attribute(\"alt\").some((attribute) => attribute.value === \"\"));\n        default:\n            return false;\n    }\n};\nexports.isMarkedDecorative = isMarkedDecorative;\n//# sourceMappingURL=is-marked-decorative.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-aria/src/dom/predicate/is-marked-decorative.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-aria/src/dom/predicate/is-perceivable.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-aria/src/dom/predicate/is-perceivable.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isPerceivableForAll = void 0;\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_style_1 = __webpack_require__(/*! @siteimprove/alfa-style */ \"./node_modules/@siteimprove/alfa-style/src/index.js\");\nconst is_included_accessibility_tree_1 = __webpack_require__(/*! ./is-included-accessibility-tree */ \"./node_modules/@siteimprove/alfa-aria/src/dom/predicate/is-included-accessibility-tree.js\");\nconst { and } = alfa_predicate_1.Predicate;\nconst { isVisible } = alfa_style_1.Style;\n/**\n * Check if a node is perceivable for all users.\n *\n * @remarks\n * A node is considered perceivable for all if it's visible and has inclusive\n * descendants that are not ignored in the accessibility tree.\n *\n * @public\n */\nfunction isPerceivableForAll(device) {\n    return and(isVisible(device), (node) => node.inclusiveDescendants().some((0, is_included_accessibility_tree_1.isIncludedInTheAccessibilityTree)(device)));\n}\nexports.isPerceivableForAll = isPerceivableForAll;\n//# sourceMappingURL=is-perceivable.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-aria/src/dom/predicate/is-perceivable.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-aria/src/dom/predicate/is-programmatically-hidden.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-aria/src/dom/predicate/is-programmatically-hidden.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isProgrammaticallyHidden = void 0;\nconst alfa_cache_1 = __webpack_require__(/*! @siteimprove/alfa-cache */ \"./node_modules/@siteimprove/alfa-cache/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_refinement_1 = __webpack_require__(/*! @siteimprove/alfa-refinement */ \"./node_modules/@siteimprove/alfa-refinement/src/index.js\");\nconst alfa_selector_1 = __webpack_require__(/*! @siteimprove/alfa-selector */ \"./node_modules/@siteimprove/alfa-selector/src/index.js\");\nconst alfa_style_1 = __webpack_require__(/*! @siteimprove/alfa-style */ \"./node_modules/@siteimprove/alfa-style/src/index.js\");\nconst { hasAttribute, isElement } = alfa_dom_1.Element;\nconst { or, test, equals } = alfa_predicate_1.Predicate;\nconst { and } = alfa_refinement_1.Refinement;\nconst { hasComputedStyle } = alfa_style_1.Style;\n/**\n * Check if an element is programmatically hidden.\n *\n * While this only uses Style properties, this is thematically related to\n * accessibility and aria-* attributes and therefore lives in alfa-aria.\n *\n * @public\n */\nfunction isProgrammaticallyHidden(device, context = alfa_selector_1.Context.empty()) {\n    return or(hasComputedStyle(\"visibility\", (visibility) => visibility.value !== \"visible\", device, context), hasHiddenAncestors(device, context));\n}\nexports.isProgrammaticallyHidden = isProgrammaticallyHidden;\nconst cache = alfa_cache_1.Cache.empty();\nfunction hasHiddenAncestors(device, context = alfa_selector_1.Context.empty()) {\n    return (node) => cache\n        .get(device, alfa_cache_1.Cache.empty)\n        .get(context, alfa_cache_1.Cache.empty)\n        .get(node, () => test(or(\n    // Either it is a programmatically hidden element\n    and(isElement, or(hasComputedStyle(\"display\", ({ values: [outside] }) => outside.value === \"none\", device, context), hasAttribute(\"aria-hidden\", equals(\"true\")))), \n    // Or its parent is programmatically hidden\n    (node) => node\n        .parent(alfa_dom_1.Node.fullTree)\n        .some(hasHiddenAncestors(device, context))), node));\n}\n//# sourceMappingURL=is-programmatically-hidden.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-aria/src/dom/predicate/is-programmatically-hidden.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-aria/src/dom/predicate/is-semantically-disabled.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-aria/src/dom/predicate/is-semantically-disabled.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isSemanticallyDisabled = void 0;\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst { equals, or } = alfa_predicate_1.Predicate;\n/**\n * Checks if an element is semantically disabled.\n *\n * While this only uses DOM properties, this is thematically related to\n * accessibility and aria-* attributes and therefore lives in alfa-aria.\n *\n * {@link https://alfa.siteimprove.com/terms/disabled}\n *\n * @public\n */\nexports.isSemanticallyDisabled = or(\n// Alfa hub's definition uses the `:disabled` pseudo-class, which is\n// equivalent to \"actually disabled\" for HTML; we shortcut it here.\nalfa_dom_1.Element.isActuallyDisabled, alfa_dom_1.Element.hasAttribute(\"aria-disabled\", equals(\"true\")));\n//# sourceMappingURL=is-semantically-disabled.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-aria/src/dom/predicate/is-semantically-disabled.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-aria/src/feature.js":
/*!************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-aria/src/feature.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Feature = void 0;\nconst alfa_cache_1 = __webpack_require__(/*! @siteimprove/alfa-cache */ \"./node_modules/@siteimprove/alfa-cache/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_map_1 = __webpack_require__(/*! @siteimprove/alfa-map */ \"./node_modules/@siteimprove/alfa-map/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_refinement_1 = __webpack_require__(/*! @siteimprove/alfa-refinement */ \"./node_modules/@siteimprove/alfa-refinement/src/index.js\");\nconst alfa_table_1 = __webpack_require__(/*! @siteimprove/alfa-table */ \"./node_modules/@siteimprove/alfa-table/src/index.js\");\nconst attribute_1 = __webpack_require__(/*! ./attribute */ \"./node_modules/@siteimprove/alfa-aria/src/attribute.js\");\nconst name_1 = __webpack_require__(/*! ./name */ \"./node_modules/@siteimprove/alfa-aria/src/name.js\");\nconst role_1 = __webpack_require__(/*! ./role */ \"./node_modules/@siteimprove/alfa-aria/src/role.js\");\nconst { hasAttribute, hasInputType, hasName, inputType, isElement, isScopedTo, } = alfa_dom_1.Element;\nconst { or, test } = alfa_predicate_1.Predicate;\nconst { and } = alfa_refinement_1.Refinement;\nconst { getElementDescendants } = alfa_dom_1.Query;\n/**\n * @internal\n */\nclass Feature {\n    static of(role = () => alfa_option_1.None, attributes = () => alfa_option_1.None, name = () => alfa_option_1.None) {\n        const roleAspect = typeof role === \"function\" ? role : () => alfa_option_1.Option.of(role_1.Role.of(role));\n        return new Feature(roleAspect, attributes, name);\n    }\n    constructor(roleAspect, attributes, name) {\n        this._role = (element) => {\n            const role = roleAspect(element);\n            return typeof role === \"string\" ? alfa_option_1.Option.of(role_1.Role.of(role)) : role;\n        };\n        this._attributes = attributes;\n        this._name = name;\n    }\n    get role() {\n        return this._role;\n    }\n    get attributes() {\n        return this._attributes;\n    }\n    get name() {\n        return this._name;\n    }\n}\nexports.Feature = Feature;\n/**\n * @internal\n */\n(function (Feature) {\n    function from(namespace, name) {\n        return alfa_option_1.Option.from(Features[namespace]?.[name]).orElse(() => {\n            switch (namespace) {\n                case alfa_dom_1.Namespace.HTML:\n                    return alfa_option_1.Option.of(html());\n                case alfa_dom_1.Namespace.SVG:\n                    return alfa_option_1.Option.of(svg());\n            }\n            return alfa_option_1.None;\n        });\n    }\n    Feature.from = from;\n    Feature.generic = html(\"generic\");\n})(Feature || (exports.Feature = Feature = {}));\nfunction html(role = () => alfa_option_1.None, attributes = () => alfa_option_1.None, name = () => alfa_option_1.None) {\n    return Feature.of(role, attributes, (element, device, state) => name_1.Name.fromSteps(() => name(element, device, state), () => nameFromAttribute(element, \"title\")));\n}\nfunction svg(role = () => alfa_option_1.None, attributes = () => alfa_option_1.None, name = () => alfa_option_1.None) {\n    return Feature.of(role, attributes, (element, device, state) => name_1.Name.fromSteps(() => name(element, device, state), () => nameFromChild(hasName(\"title\"))(element, device, state), () => nameFromAttribute(element, \"title\")));\n}\nconst nameFromAttribute = (element, ...attributes) => {\n    for (const name of attributes) {\n        for (const attribute of element.attribute(name)) {\n            // The attribute value is used as long as it's not completely empty.\n            if (attribute.value.length > 0) {\n                return name_1.Name.fromLabel(attribute);\n            }\n        }\n    }\n    return alfa_option_1.None;\n};\nconst nameFromChild = (predicate) => (element, device, state) => element\n    .children()\n    .filter(isElement)\n    .find(predicate)\n    .flatMap((child) => name_1.Name.fromDescendants(child, device, state.visit(child)).map((name) => name_1.Name.of(name.value, [name_1.Name.Source.descendant(element, name)])));\nconst ids = alfa_cache_1.Cache.empty();\nconst labels = alfa_cache_1.Cache.empty();\nconst nameFromLabel = (element, device, state) => {\n    const root = element.root();\n    const elements = getElementDescendants(root);\n    const isFirstReference = element.id.some((id) => ids\n        .get(root, () => alfa_map_1.Map.from(elements\n        .collect((element) => element.id.map((id) => [id, element]))\n        .reverse()))\n        .get(id)\n        .includes(element));\n    const references = labels\n        .get(root, () => elements.filter(hasName(\"label\")))\n        .filter(or((label) => label.attribute(\"for\").isNone() &&\n        label.descendants().includes(element), (label) => isFirstReference &&\n        label\n            .attribute(\"for\")\n            .some((attribute) => element.id.includes(attribute.value))));\n    const names = references.collect((element) => name_1.Name.fromNode(element, device, state.reference(element, element).recurse(true).descend(false)).map((name) => [name, element]));\n    const name = names\n        .map(([name]) => name.value)\n        .join(\" \")\n        .trim();\n    if (name === \"\") {\n        return alfa_option_1.None;\n    }\n    return alfa_option_1.Option.of(name_1.Name.of(name, names.map(([name, element]) => {\n        for (const attribute of element.attribute(\"for\")) {\n            return name_1.Name.Source.reference(attribute, name);\n        }\n        return name_1.Name.Source.ancestor(element, name);\n    })));\n};\nfunction ifScopedTo(names, ifScoped, ifNotScoped) {\n    return (element) => test(isScopedTo(...names), element) ? ifScoped : ifNotScoped;\n}\nfunction ifHasAttribute(attribute, ifHas, ifDoesNotHave) {\n    return (element) => test(hasAttribute(attribute), element) ? ifHas : ifDoesNotHave;\n}\nconst Features = {\n    [alfa_dom_1.Namespace.HTML]: {\n        a: html(ifHasAttribute(\"href\", \"link\", \"generic\"), () => [], (element, device, state) => name_1.Name.fromDescendants(element, device, state.visit(element))),\n        area: html(ifHasAttribute(\"href\", \"link\", \"generic\"), () => [], (element) => nameFromAttribute(element, \"alt\")),\n        article: html(\"article\"),\n        // We currently cannot detect at this point if the element has an accessible\n        // name, and always map to complementary.\n        // see https://github.com/Siteimprove/alfa/issues/298\n        aside: html(\"complementary\"),\n        button: html(\"button\", function* (element) {\n            // https://w3c.github.io/html-aam/#att-disabled\n            for (const _ of element.attribute(\"disabled\")) {\n                yield attribute_1.Attribute.of(\"aria-disabled\", \"true\");\n            }\n        }),\n        // https://w3c.github.io/html-aam/#el-datalist\n        // <datalist> only has a role if it is correctly mapped to an <input>\n        // via the list attribute. We should probably check that.\n        // Additionally, it seems to never be rendered, hence always ignored.\n        datalist: html(\"listbox\"),\n        dd: html(\"definition\"),\n        dfn: html(\"term\"),\n        dialog: html(\"dialog\", function* (element) {\n            // https://w3c.github.io/html-aam/#att-open-dialog\n            yield attribute_1.Attribute.of(\"aria-expanded\", element.attribute(\"open\").isSome() ? \"true\" : \"false\");\n        }),\n        details: html(() => alfa_option_1.None, function* (element) {\n            // https://w3c.github.io/html-aam/#att-open-details\n            yield attribute_1.Attribute.of(\"aria-expanded\", element.attribute(\"open\").isSome() ? \"true\" : \"false\");\n        }),\n        dt: html(\"term\"),\n        fieldset: html(\"group\", function* (element) {\n            // https://w3c.github.io/html-aam/#att-disabled\n            for (const _ of element.attribute(\"disabled\")) {\n                yield attribute_1.Attribute.of(\"aria-disabled\", \"true\");\n            }\n        }, nameFromChild(hasName(\"legend\"))),\n        figure: html(\"figure\", () => [], nameFromChild(hasName(\"figcaption\"))),\n        footer: html(ifScopedTo([\"article\", \"aside\", \"main\", \"nav\", \"section\"], \"generic\", \"contentinfo\")),\n        // We currently cannot detect at this point if the element has an accessible\n        // name, and always map to form.\n        // see https://github.com/Siteimprove/alfa/issues/298\n        form: html(\"form\"),\n        h1: html(\"heading\", () => [attribute_1.Attribute.of(\"aria-level\", \"1\")]),\n        h2: html(\"heading\", () => [attribute_1.Attribute.of(\"aria-level\", \"2\")]),\n        h3: html(\"heading\", () => [attribute_1.Attribute.of(\"aria-level\", \"3\")]),\n        h4: html(\"heading\", () => [attribute_1.Attribute.of(\"aria-level\", \"4\")]),\n        h5: html(\"heading\", () => [attribute_1.Attribute.of(\"aria-level\", \"5\")]),\n        h6: html(\"heading\", () => [attribute_1.Attribute.of(\"aria-level\", \"6\")]),\n        header: html(ifScopedTo([\"article\", \"aside\", \"main\", \"nav\", \"section\"], \"generic\", \"banner\")),\n        hgroup: html(\"group\"),\n        hr: html(\"separator\"),\n        img: html(\n        // We need to yield all roles, not just return one, in order for the\n        // presentational role conflict resolution to discard `presentation`\n        // and correctly default to `img`.\n        function* (element) {\n            // If there is an alt attribute and it is totally empty\n            if (element.attribute(\"alt\").some((alt) => alt.value === \"\")) {\n                yield role_1.Role.of(\"presentation\");\n            }\n            // if there is no src attribute, or it is empty\n            if (element.attribute(\"src\").every((src) => src.value.trim() === \"\")) {\n                yield role_1.Role.of(\"presentation\");\n            }\n            yield role_1.Role.of(\"img\");\n        }, () => [], (element) => nameFromAttribute(element, \"alt\")),\n        input: html((element) => {\n            switch (inputType(element)) {\n                case \"button\":\n                case \"image\":\n                case \"reset\":\n                case \"submit\":\n                    return \"button\";\n                case \"checkbox\":\n                    return \"checkbox\";\n                case \"number\":\n                    return \"spinbutton\";\n                case \"radio\":\n                    return \"radio\";\n                case \"range\":\n                    return \"slider\";\n                case \"search\":\n                    return element.attribute(\"list\").isSome()\n                        ? \"combobox\"\n                        : \"searchbox\";\n                // Note: The specification for email has changed, it now has role textbox. We should look into this if it becomes an issue.\n                case \"email\":\n                case \"tel\":\n                case \"text\":\n                case \"url\":\n                    return element.attribute(\"list\").isSome() ? \"combobox\" : \"textbox\";\n            }\n            return alfa_option_1.None;\n        }, function* (element) {\n            // https://w3c.github.io/html-aam/#el-input-checkbox\n            // aria-checked should be \"mixed\" if the indeterminate IDL attribute is\n            // true\n            // aria-checked should otherwise mimic the checkedness, i.e. the\n            // checked *IDL* attribute, not the DOM one.\n            // https://w3c.github.io/html-aam/#att-checked\n            yield attribute_1.Attribute.of(\"aria-checked\", element.attribute(\"checked\").isSome() ? \"true\" : \"false\");\n            // https://w3c.github.io/html-aam/#att-list\n            for (const { value } of element.attribute(\"list\")) {\n                yield attribute_1.Attribute.of(\"aria-controls\", value);\n            }\n            // https://w3c.github.io/html-aam/#att-disabled\n            for (const _ of element.attribute(\"disabled\")) {\n                yield attribute_1.Attribute.of(\"aria-disabled\", \"true\");\n            }\n            // https://w3c.github.io/html-aam/#att-placeholder\n            for (const { value } of element.attribute(\"placeholder\")) {\n                yield attribute_1.Attribute.of(\"aria-placeholder\", value);\n            }\n            // https://w3c.github.io/html-aam/#att-readonly\n            for (const _ of element.attribute(\"readonly\")) {\n                yield attribute_1.Attribute.of(\"aria-readonly\", \"true\");\n            }\n            // https://w3c.github.io/html-aam/#att-required\n            for (const _ of element.attribute(\"required\")) {\n                yield attribute_1.Attribute.of(\"aria-required\", \"true\");\n            }\n            // https://w3c.github.io/html-aam/#att-max-input\n            for (const { value } of element.attribute(\"max\")) {\n                yield attribute_1.Attribute.of(\"aria-valuemax\", value);\n            }\n            // https://w3c.github.io/html-aam/#att-min-input\n            for (const { value } of element.attribute(\"min\")) {\n                yield attribute_1.Attribute.of(\"aria-valuemin\", value);\n            }\n            // https://w3c.github.io/html-aam/#att-value-input\n            // but https://github.com/w3c/html-aam/issues/314\n            for (const { value } of element.attribute(\"value\")) {\n                yield attribute_1.Attribute.of(\"aria-valuenow\", value);\n            }\n        }, (element, device, state) => {\n            if (test(hasInputType(\"text\", \"password\", \"search\", \"tel\", \"email\", \"url\"), element)) {\n                /**\n                 * {@link https://www.w3.org/TR/html-aam-1.0/#input-type-text-input-type-password-input-type-search-input-type-tel-input-type-url-and-textarea-element}\n                 */\n                return name_1.Name.fromSteps(() => nameFromLabel(element, device, state), \n                // The title attribute has poor and varying support, but\n                // the specs give it precedence over placeholder.\n                // This could be a browser-branched value.\n                () => nameFromAttribute(element, \"title\", \"placeholder\"));\n            }\n            if (test(hasInputType(\"button\"), element)) {\n                /**\n                 * {@link https://www.w3.org/TR/html-aam-1.0/#input-type-button-input-type-submit-and-input-type-reset}\n                 */\n                return name_1.Name.fromSteps(\n                // {@link https://github.com/w3c/html-aam/pull/423}\n                () => nameFromLabel(element, device, state), () => nameFromAttribute(element, \"value\"));\n            }\n            if (test(hasInputType(\"submit\"), element)) {\n                /**\n                 * {@link https://www.w3.org/TR/html-aam-1.0/#input-type-button-input-type-submit-and-input-type-reset}\n                 */\n                return name_1.Name.fromSteps(\n                // {@link https://github.com/w3c/html-aam/pull/423}\n                () => nameFromLabel(element, device, state), () => nameFromAttribute(element, \"value\"), () => alfa_option_1.Option.of(name_1.Name.of(\"Submit\")));\n            }\n            if (test(hasInputType(\"reset\"), element)) {\n                /**\n                 * {@link https://www.w3.org/TR/html-aam-1.0/#input-type-button-input-type-submit-and-input-type-reset}\n                 */\n                return name_1.Name.fromSteps(\n                // {@link https://github.com/w3c/html-aam/pull/423}\n                () => nameFromLabel(element, device, state), () => nameFromAttribute(element, \"value\"), () => alfa_option_1.Option.of(name_1.Name.of(\"Reset\")));\n            }\n            if (test(hasInputType(\"image\"), element)) {\n                /**\n                 * {@link https://www.w3.org/TR/html-aam-1.0/#input-type-image}\n                 */\n                return name_1.Name.fromSteps(\n                // {@link https://github.com/w3c/html-aam/pull/423}\n                () => nameFromLabel(element, device, state), \n                // The title attribute has poor and varying support, but the specs\n                // use it.\n                // This could be a browser-branched value.\n                () => nameFromAttribute(element, \"alt\", \"title\"), () => alfa_option_1.Option.of(name_1.Name.of(\"Submit Query\")));\n            }\n            return nameFromLabel(element, device, state);\n        }),\n        li: html((element) => element\n            .parent()\n            .some(and(alfa_dom_1.Element.isElement, hasName(\"ol\", \"ul\", \"menu\")))\n            ? \"listitem\"\n            : \"generic\", (element) => {\n            // https://w3c.github.io/html-aam/#el-li\n            const siblings = element\n                .inclusiveSiblings()\n                .filter(and(alfa_dom_1.Element.isElement, alfa_dom_1.Element.hasName(\"li\")));\n            return [\n                attribute_1.Attribute.of(\"aria-setsize\", `${siblings.size}`),\n                attribute_1.Attribute.of(\"aria-posinset\", `${siblings.takeUntil((sibling) => sibling.equals(element)).size + 1}`),\n            ];\n        }),\n        main: html(\"main\"),\n        math: html(\"math\"),\n        menu: html(\"list\"),\n        meter: html(() => alfa_option_1.None, function* (element) {\n            // https://w3c.github.io/html-aam/#att-max\n            for (const { value } of element.attribute(\"max\")) {\n                yield attribute_1.Attribute.of(\"aria-valuemax\", value);\n            }\n            // https://w3c.github.io/html-aam/#att-min\n            for (const { value } of element.attribute(\"min\")) {\n                yield attribute_1.Attribute.of(\"aria-valuemin\", value);\n            }\n            // https://w3c.github.io/html-aam/#att-value-meter\n            for (const { value } of element.attribute(\"value\")) {\n                yield attribute_1.Attribute.of(\"aria-valuenow\", value);\n            }\n        }),\n        nav: html(\"navigation\"),\n        ol: html(\"list\"),\n        optgroup: html(\"group\", function* (element) {\n            // https://w3c.github.io/html-aam/#att-disabled\n            for (const _ of element.attribute(\"disabled\")) {\n                yield attribute_1.Attribute.of(\"aria-disabled\", \"true\");\n            }\n        }),\n        option: html(ifScopedTo([\"select\", \"optgroup\", \"datalist\"], \"option\", alfa_option_1.None), function* (element) {\n            // https://w3c.github.io/html-aam/#att-disabled\n            for (const _ of element.attribute(\"disabled\")) {\n                yield attribute_1.Attribute.of(\"aria-disabled\", \"true\");\n            }\n            // https://w3c.github.io/html-aam/#att-selected\n            yield attribute_1.Attribute.of(\"aria-selected\", element.attribute(\"selected\").isSome() ? \"true\" : \"false\");\n        }),\n        output: html(\"status\"),\n        p: html(\"paragraph\"),\n        progress: html(\"progressbar\", function* (element) {\n            // https://w3c.github.io/html-aam/#att-max\n            for (const { value } of element.attribute(\"max\")) {\n                yield attribute_1.Attribute.of(\"aria-valuemax\", value);\n            }\n            // https://w3c.github.io/html-aam/#att-value-meter\n            for (const { value } of element.attribute(\"value\")) {\n                yield attribute_1.Attribute.of(\"aria-valuenow\", value);\n            }\n        }),\n        // We currently cannot detect at this point if the element has an accessible\n        // name, and always map to region.\n        // see https://github.com/Siteimprove/alfa/issues/298\n        section: html(\"region\"),\n        select: html(\n        // mono-line <select> are mapped to combobox by HTML AAM, but their child\n        // <option> are still mapped to option, which are out of their context role.\n        // We cheat and always map <select> to listbox\n        \"listbox\", \n        // (element) =>\n        //   test(Element.hasDisplaySize((size) => size > 1), element)\n        //   ? \"listbox\" : combobox\n        function* (element) {\n            // https://w3c.github.io/html-aam/#att-disabled\n            for (const _ of element.attribute(\"disabled\")) {\n                yield attribute_1.Attribute.of(\"aria-disabled\", \"true\");\n            }\n            // https://w3c.github.io/html-aam/#att-required\n            for (const _ of element.attribute(\"required\")) {\n                yield attribute_1.Attribute.of(\"aria-required\", \"true\");\n            }\n            // https://w3c.github.io/html-aam/#att-multiple-select\n            for (const _ of element.attribute(\"multiple\")) {\n                yield attribute_1.Attribute.of(\"aria-multiselectable\", \"true\");\n            }\n        }, nameFromLabel),\n        table: html(\"table\", () => [], nameFromChild(hasName(\"caption\"))),\n        tbody: html(\"rowgroup\"),\n        td: html((element) => element\n            .ancestors()\n            .filter(isElement)\n            .find(hasName(\"table\"))\n            .flatMap((table) => {\n            for (const role of role_1.Role.from(table)) {\n                if (role.is(\"table\")) {\n                    return alfa_option_1.Option.of(role_1.Role.of(\"cell\"));\n                }\n                if (role.is(\"grid\")) {\n                    return alfa_option_1.Option.of(role_1.Role.of(\"gridcell\"));\n                }\n            }\n            return alfa_option_1.None;\n        }), function* (element) {\n            // https://w3c.github.io/html-aam/#att-colspan\n            for (const { value } of element.attribute(\"colspan\")) {\n                yield attribute_1.Attribute.of(\"aria-colspan\", value);\n            }\n            // https://w3c.github.io/html-aam/#att-rowspan\n            for (const { value } of element.attribute(\"rowspan\")) {\n                yield attribute_1.Attribute.of(\"aria-rowspan\", value);\n            }\n        }),\n        textarea: html(\"textbox\", function* (element) {\n            // https://w3c.github.io/html-aam/#el-textarea\n            yield attribute_1.Attribute.of(\"aria-multiline\", \"true\");\n            // https://w3c.github.io/html-aam/#att-disabled\n            for (const _ of element.attribute(\"disabled\")) {\n                yield attribute_1.Attribute.of(\"aria-disabled\", \"true\");\n            }\n            // https://w3c.github.io/html-aam/#att-readonly\n            for (const _ of element.attribute(\"readonly\")) {\n                yield attribute_1.Attribute.of(\"aria-readonly\", \"true\");\n            }\n            // https://w3c.github.io/html-aam/#att-required\n            for (const _ of element.attribute(\"required\")) {\n                yield attribute_1.Attribute.of(\"aria-required\", \"true\");\n            }\n            // https://w3c.github.io/html-aam/#att-placeholder\n            for (const { value } of element.attribute(\"placeholder\")) {\n                yield attribute_1.Attribute.of(\"aria-placeholder\", value);\n            }\n        }, (element, device, state) => {\n            return name_1.Name.fromSteps(() => nameFromLabel(element, device, state), () => nameFromAttribute(element, \"title\", \"placeholder\"));\n        }),\n        tfoot: html(\"rowgroup\"),\n        th: html((element) => element\n            .ancestors()\n            .filter(isElement)\n            .find(hasName(\"table\"))\n            .map(alfa_table_1.Table.from)\n            .flatMap((table) => table.cells\n            .filter(alfa_table_1.Cell.isHeader)\n            .find(alfa_table_1.Cell.hasElement(element))\n            .map((cell) => {\n            return { table, cell };\n        }))\n            .flatMap(({ table, cell }) => {\n            switch (cell.scope) {\n                case \"column\":\n                case \"column-group\":\n                    return alfa_option_1.Option.of(role_1.Role.of(\"columnheader\"));\n                case \"row\":\n                case \"row-group\":\n                    return alfa_option_1.Option.of(role_1.Role.of(\"rowheader\"));\n                default:\n                    for (const role of role_1.Role.from(table.element)) {\n                        if (role.is(\"table\")) {\n                            return alfa_option_1.Option.of(role_1.Role.of(\"cell\"));\n                        }\n                        if (role.is(\"grid\")) {\n                            return alfa_option_1.Option.of(role_1.Role.of(\"gridcell\"));\n                        }\n                    }\n                    return alfa_option_1.None;\n            }\n        }), function* (element) {\n            // https://w3c.github.io/html-aam/#att-colspan\n            for (const { value } of element.attribute(\"colspan\")) {\n                yield attribute_1.Attribute.of(\"aria-colspan\", value);\n            }\n            // https://w3c.github.io/html-aam/#att-rowspan\n            for (const { value } of element.attribute(\"rowspan\")) {\n                yield attribute_1.Attribute.of(\"aria-rowspan\", value);\n            }\n        }),\n        thead: html(\"rowgroup\"),\n        tr: html(\"row\"),\n        ul: html(\"list\"),\n        // Generic containers with no real semantics\n        b: Feature.generic,\n        bdi: Feature.generic,\n        bdo: Feature.generic,\n        body: Feature.generic,\n        data: Feature.generic,\n        div: Feature.generic,\n        i: Feature.generic,\n        pre: Feature.generic,\n        q: Feature.generic,\n        samp: Feature.generic,\n        small: Feature.generic,\n        span: Feature.generic,\n        u: Feature.generic,\n    },\n    [alfa_dom_1.Namespace.SVG]: {\n        a: svg(ifHasAttribute(\"href\", \"link\", \"group\")),\n        circle: svg(\"graphics-symbol\"),\n        ellipse: svg(\"graphics-symbol\"),\n        foreignObject: svg(\"group\"),\n        g: svg(\"group\"),\n        image: svg(\"img\"),\n        line: svg(\"graphics-symbol\"),\n        mesh: svg(\"img\"),\n        path: svg(\"graphics-symbol\"),\n        polygon: svg(\"graphics-symbol\"),\n        polyline: svg(\"graphics-symbol\"),\n        rect: svg(\"graphics-symbol\"),\n        svg: svg(\"graphics-document\"),\n        symbol: svg(\"graphics-object\"),\n        text: svg(\"group\"),\n        textPath: svg(\"group\"),\n        use: svg(\"graphics-object\"),\n    },\n};\n//# sourceMappingURL=feature.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-aria/src/feature.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-aria/src/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-aria/src/index.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * This package provides functionality for working with\n * {@link https://www.w3.org/TR/wai-aria/ | ARIA} and the accessibility tree.\n *\n * @packageDocumentation\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DOM = void 0;\nconst dom = __webpack_require__(/*! ./dom/dom */ \"./node_modules/@siteimprove/alfa-aria/src/dom/dom.js\");\n__exportStar(__webpack_require__(/*! ./attribute */ \"./node_modules/@siteimprove/alfa-aria/src/attribute.js\"), exports);\n__exportStar(__webpack_require__(/*! ./feature */ \"./node_modules/@siteimprove/alfa-aria/src/feature.js\"), exports);\n__exportStar(__webpack_require__(/*! ./name */ \"./node_modules/@siteimprove/alfa-aria/src/name.js\"), exports);\n__exportStar(__webpack_require__(/*! ./role */ \"./node_modules/@siteimprove/alfa-aria/src/role.js\"), exports);\n__exportStar(__webpack_require__(/*! ./node */ \"./node_modules/@siteimprove/alfa-aria/src/node.js\"), exports);\n__exportStar(__webpack_require__(/*! ./node/container */ \"./node_modules/@siteimprove/alfa-aria/src/node/container.js\"), exports);\n__exportStar(__webpack_require__(/*! ./node/element */ \"./node_modules/@siteimprove/alfa-aria/src/node/element.js\"), exports);\n__exportStar(__webpack_require__(/*! ./node/inert */ \"./node_modules/@siteimprove/alfa-aria/src/node/inert.js\"), exports);\n__exportStar(__webpack_require__(/*! ./node/text */ \"./node_modules/@siteimprove/alfa-aria/src/node/text.js\"), exports);\n/**\n * Helpers and Predicates for accessibility aspects of DOM objects\n *\n * @public\n */\nvar DOM;\n(function (DOM) {\n    DOM.hasAccessibleName = dom.hasAccessibleName, DOM.hasExplicitRole = dom.hasExplicitRole, DOM.hasHeadingLevel = dom.hasHeadingLevel, DOM.hasImplicitRole = dom.hasImplicitRole, DOM.hasIncorrectRoleWithoutName = dom.hasIncorrectRoleWithoutName, DOM.hasNonDefaultRole = dom.hasNonDefaultRole, DOM.hasNonEmptyAccessibleName = dom.hasNonEmptyAccessibleName, DOM.hasRole = dom.hasRole, DOM.isIgnored = dom.isIgnored, DOM.isIncludedInTheAccessibilityTree = dom.isIncludedInTheAccessibilityTree, DOM.isMarkedDecorative = dom.isMarkedDecorative, DOM.isPerceivableForAll = dom.isPerceivableForAll, DOM.isProgrammaticallyHidden = dom.isProgrammaticallyHidden, DOM.isSemanticallyDisabled = dom.isSemanticallyDisabled;\n})(DOM || (exports.DOM = DOM = {}));\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-aria/src/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-aria/src/name.js":
/*!*********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-aria/src/name.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Name = void 0;\nconst alfa_array_1 = __webpack_require__(/*! @siteimprove/alfa-array */ \"./node_modules/@siteimprove/alfa-array/src/index.js\");\nconst alfa_cache_1 = __webpack_require__(/*! @siteimprove/alfa-cache */ \"./node_modules/@siteimprove/alfa-cache/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_refinement_1 = __webpack_require__(/*! @siteimprove/alfa-refinement */ \"./node_modules/@siteimprove/alfa-refinement/src/index.js\");\nconst alfa_sequence_1 = __webpack_require__(/*! @siteimprove/alfa-sequence */ \"./node_modules/@siteimprove/alfa-aria/node_modules/@siteimprove/alfa-sequence/src/index.js\");\nconst alfa_style_1 = __webpack_require__(/*! @siteimprove/alfa-style */ \"./node_modules/@siteimprove/alfa-style/src/index.js\");\nconst feature_1 = __webpack_require__(/*! ./feature */ \"./node_modules/@siteimprove/alfa-aria/src/feature.js\");\nconst role_1 = __webpack_require__(/*! ./role */ \"./node_modules/@siteimprove/alfa-aria/src/role.js\");\nconst predicate = __webpack_require__(/*! ./name/predicate */ \"./node_modules/@siteimprove/alfa-aria/src/name/predicate.js\");\nconst is_programmatically_hidden_1 = __webpack_require__(/*! ./dom/predicate/is-programmatically-hidden */ \"./node_modules/@siteimprove/alfa-aria/src/dom/predicate/is-programmatically-hidden.js\");\nconst { isElement } = alfa_dom_1.Element;\nconst { isText } = alfa_dom_1.Text;\nconst { test } = alfa_predicate_1.Predicate;\nconst { or } = alfa_refinement_1.Refinement;\nconst { hasComputedStyle } = alfa_style_1.Style;\nconst { getElementIdMap } = alfa_dom_1.Query;\n/**\n * @public\n */\nclass Name {\n    static of(value, sources = []) {\n        return new Name(value, alfa_array_1.Array.from(sources));\n    }\n    constructor(value, sources) {\n        this._value = value;\n        this._sources = sources;\n    }\n    get value() {\n        return this._value;\n    }\n    get source() {\n        return this._sources;\n    }\n    *sourceNodes() {\n        for (const source of this._sources) {\n            yield* source;\n        }\n    }\n    isEmpty() {\n        return this._value.length === 0;\n    }\n    equals(value) {\n        return (value instanceof Name &&\n            value._value === this._value &&\n            value._sources.length === this._sources.length &&\n            value._sources.every((source, i) => source.equals(this._sources[i])));\n    }\n    toJSON() {\n        return {\n            value: this._value,\n            sources: this._sources.map((source) => source.toJSON()),\n        };\n    }\n    toString() {\n        return this._value;\n    }\n}\nexports.Name = Name;\n/**\n * @public\n */\n(function (Name) {\n    let Source;\n    (function (Source) {\n        class Data {\n            static of(text) {\n                return new Data(text);\n            }\n            constructor(text) {\n                this._text = text;\n            }\n            get type() {\n                return \"data\";\n            }\n            get text() {\n                return this._text;\n            }\n            equals(value) {\n                return value instanceof Data && value._text.equals(this._text);\n            }\n            *[Symbol.iterator]() {\n                yield this._text;\n            }\n            toJSON() {\n                return {\n                    type: \"data\",\n                    text: this._text.path(),\n                };\n            }\n        }\n        Source.Data = Data;\n        function data(text) {\n            return Data.of(text);\n        }\n        Source.data = data;\n        class Descendant {\n            static of(element, name) {\n                return new Descendant(element, name);\n            }\n            constructor(element, name) {\n                this._element = element;\n                this._name = name;\n            }\n            get type() {\n                return \"descendants\";\n            }\n            get element() {\n                return this._element;\n            }\n            get name() {\n                return this._name;\n            }\n            equals(value) {\n                return (value instanceof Descendant &&\n                    value._element.equals(this._element) &&\n                    value._name.equals(this._name));\n            }\n            *[Symbol.iterator]() {\n                yield this._element;\n                yield* this._name.sourceNodes();\n            }\n            toJSON() {\n                return {\n                    type: \"descendant\",\n                    element: this._element.path(alfa_dom_1.Node.flatTree),\n                    name: this._name.toJSON(),\n                };\n            }\n        }\n        Source.Descendant = Descendant;\n        function descendant(element, name) {\n            return Descendant.of(element, name);\n        }\n        Source.descendant = descendant;\n        class Ancestor {\n            static of(element, name) {\n                return new Ancestor(element, name);\n            }\n            constructor(element, name) {\n                this._element = element;\n                this._name = name;\n            }\n            get type() {\n                return \"ancestor\";\n            }\n            get element() {\n                return this._element;\n            }\n            get name() {\n                return this._name;\n            }\n            equals(value) {\n                return (value instanceof Ancestor &&\n                    value._element.equals(this._element) &&\n                    value._name.equals(this._name));\n            }\n            *[Symbol.iterator]() {\n                yield this._element;\n                yield* this._name.sourceNodes();\n            }\n            toJSON() {\n                return {\n                    type: \"ancestor\",\n                    element: this._element.path(),\n                    name: this._name.toJSON(),\n                };\n            }\n        }\n        Source.Ancestor = Ancestor;\n        function ancestor(element, name) {\n            return Ancestor.of(element, name);\n        }\n        Source.ancestor = ancestor;\n        class Label {\n            static of(attribute) {\n                return new Label(attribute);\n            }\n            constructor(attribute) {\n                this._attribute = attribute;\n            }\n            get type() {\n                return \"label\";\n            }\n            get attribute() {\n                return this._attribute;\n            }\n            equals(value) {\n                return (value instanceof Label && value._attribute.equals(this._attribute));\n            }\n            *[Symbol.iterator]() {\n                yield this._attribute;\n            }\n            toJSON() {\n                return {\n                    type: \"label\",\n                    attribute: this._attribute.path(),\n                };\n            }\n        }\n        Source.Label = Label;\n        function label(attribute) {\n            return Label.of(attribute);\n        }\n        Source.label = label;\n        class Reference {\n            static of(attribute, name) {\n                return new Reference(attribute, name);\n            }\n            constructor(attribute, name) {\n                this._attribute = attribute;\n                this._name = name;\n            }\n            get type() {\n                return \"reference\";\n            }\n            get attribute() {\n                return this._attribute;\n            }\n            get name() {\n                return this._name;\n            }\n            equals(value) {\n                return (value instanceof Reference && value._attribute.equals(this._attribute));\n            }\n            *[Symbol.iterator]() {\n                yield this._attribute;\n                yield* this._name.sourceNodes();\n            }\n            toJSON() {\n                return {\n                    type: \"reference\",\n                    attribute: this._attribute.path(),\n                    name: this._name.toJSON(),\n                };\n            }\n        }\n        Source.Reference = Reference;\n        function reference(attribute, name) {\n            return Reference.of(attribute, name);\n        }\n        Source.reference = reference;\n    })(Source = Name.Source || (Name.Source = {}));\n    /**\n     * @internal\n     */\n    class State {\n        static empty() {\n            return this._empty;\n        }\n        constructor(visited, referrer, referred, isRecursing, isDescending) {\n            this._visited = visited;\n            this._referrer = referrer;\n            this._referred = referred;\n            this._isRecursing = isRecursing;\n            this._isDescending = isDescending;\n        }\n        /**\n         * The elements that have been seen by the name computation so far. This is\n         * used for detecting circular references resulting from things such as the\n         * `aria-labelledby` attribute and form controls that get their name from\n         * a containing `<label>` element.\n         */\n        get visited() {\n            return this._visited;\n        }\n        /**\n         * The element that referenced the name computation.\n         * (this is the element on which aria-labelledby is set)\n         */\n        get referrer() {\n            return this._referrer;\n        }\n        /**\n         * The element that is referenced during the name computation.\n         * (this is the target of the aria-labelledby attribute)\n         */\n        get referred() {\n            return this._referred;\n        }\n        /**\n         * Whether or not the name computation is the result of recursion.\n         */\n        get isRecursing() {\n            return this._isRecursing;\n        }\n        /**\n         * Whether or not the name computation is the result of a reference.\n         */\n        get isReferencing() {\n            return this._referrer.isSome();\n        }\n        /**\n         * Whether or not the name computation is descending into a subtree.\n         */\n        get isDescending() {\n            return this._isDescending;\n        }\n        hasVisited(element) {\n            return this._visited.includes(element);\n        }\n        visit(element) {\n            if (this._visited.includes(element)) {\n                return this;\n            }\n            return new State([...this._visited, element], this._referrer, this._referred, this._isRecursing, this._isDescending);\n        }\n        recurse(isRecursing) {\n            if (this._isRecursing === isRecursing) {\n                return this;\n            }\n            return new State(this._visited, this._referrer, this._referred, isRecursing, this._isDescending);\n        }\n        /**\n         * @remarks\n         * This set both _referrer and _referred, so that they will always be\n         * either both Some or both None.\n         *\n         * @remarks\n         * We currently have no way to clear references since we currently have no\n         * use for it.\n         */\n        reference(referrer, referred) {\n            if (this._referrer.includes(referrer) &&\n                this._referred.includes(referred)) {\n                return this;\n            }\n            return new State(this._visited, alfa_option_1.Option.of(referrer), alfa_option_1.Option.of(referred), this._isRecursing, this._isDescending);\n        }\n        descend(isDescending) {\n            if (this._isDescending === isDescending) {\n                return this;\n            }\n            return new State(this._visited, this._referrer, this._referred, this._isRecursing, isDescending);\n        }\n        equals(value) {\n            return (value instanceof State &&\n                alfa_array_1.Array.equals(value._visited, this._visited) &&\n                value._referrer.equals(this._referrer) &&\n                value._referred.equals(this._referred) &&\n                value._isRecursing === this._isRecursing &&\n                value._isDescending === this._isDescending);\n        }\n        toJSON() {\n            return {\n                visited: this._visited.map((element) => element.path()),\n                referrer: this._referrer.map((element) => element.path()).getOr(null),\n                referred: this._referred.map((element) => element.path()).getOr(null),\n                isRecursing: this._isRecursing,\n                isDescending: this._isDescending,\n            };\n        }\n    }\n    State._empty = new State([], alfa_option_1.None, alfa_option_1.None, false, false);\n    Name.State = State;\n    function from(node, device) {\n        return fromNode(node, device, State.empty());\n    }\n    Name.from = from;\n    const names = alfa_cache_1.Cache.empty();\n    /**\n     * @internal\n     */\n    function fromNode(node, device, state) {\n        // Construct a thunk with the computed name of the node. We first need to\n        // decide whether or not we can pull the name of the node from the cache and\n        // so the actual computation of the name must be delayed.\n        const name = () => isElement(node) ? fromElement(node, device, state) : fromText(node);\n        if (isElement(node)) {\n            // As chained references are not allowed, we cannot make use of the cache\n            // when computing a referenced name. If, for example, <foo> references\n            // <bar> and <bar> references <baz>...\n            //\n            //   <foo> -> <bar> -> <baz> \"Hello world\"\n            //\n            // ...the reference from <bar> to <baz> is only allowed to be followed\n            // when computing a name for <bar>:\n            //\n            //   <bar> \"Hello world\" -> <baz> \"Hello world\"\n            //\n            // When computing the name for <foo>, however, the second reference must\n            // be ignored and the name for <bar> computed as if though the reference\n            // does not exist:\n            //\n            //   <foo> null -> <bar> null\n            //\n            // We therefore cannot make use of whatever is in the cache for <bar>.\n            if (state.isReferencing) {\n                return name();\n            }\n            // If we're descending then the name already in the cache may not be\n            // relevant due to the last step of the name computation. If, for example,\n            // <baz> is a child of <bar> which is a child of <foo>...\n            //\n            //   <foo>\n            //     <bar>\n            //       <baz> \"Hello world\"\n            //\n            // ...and the name of <baz> has already been computed as \"Hello world\" and\n            // we then compute the name of <bar> and <bar> is not allowed to be named\n            // by its contents, it will not have a name:\n            //\n            //   <bar> null\n            //     <baz> \"Hello world\"\n            //\n            // However, when we compute the name of <foo> and <foo> is allowed to be\n            // named by its contents, the last step of the same computation kicks in\n            // and includes all descendant names:\n            //\n            //   <foo> \"Hello world\"\n            //     <bar> \"Hello world\"\n            //       <baz> \"Hello world\"\n            //\n            // We therefore cannot make use of whatever is in the cache for <bar>.\n            if (state.isDescending) {\n                return name();\n            }\n        }\n        return names.get(device, alfa_cache_1.Cache.empty).get(node, name);\n    }\n    Name.fromNode = fromNode;\n    /**\n     * @internal\n     */\n    function fromElement(element, device, state) {\n        if (state.hasVisited(element)) {\n            // While self-references are allowed, any other forms of circular\n            // references are not. If the referrer therefore isn't the element itself,\n            // the result will be an empty name.\n            if (!state.referrer.includes(element)) {\n                return alfa_option_1.None;\n            }\n        }\n        else {\n            state = state.visit(element);\n        }\n        // The following code handles the _generic_ steps of the accessible name\n        // computation, that is any steps that are shared for all namespaces. All\n        // remaining steps are handled by namespace-specific feature mappings.\n        const role = role_1.Role.from(element);\n        // Step 1: Does the role prohibit naming?\n        // https://w3c.github.io/accname/#step1\n        // Step 1 is skipped when referencing due to step 2B.ii.b\n        // https://w3c.github.io/accname/#step2B.ii.b\n        // Step 1 is skipped when descending due to step 2F.iii.b\n        // https://w3c.github.io/accname/#step2B.iii.b\n        if (!state.isReferencing &&\n            !state.isDescending &&\n            role.some((role) => role.isNameProhibited())) {\n            return alfa_option_1.None;\n        }\n        // Step 2A: Is the element hidden and not part of a reference traversal\n        // whose root was hidden?\n        // https://w3c.github.io/accname/#step2A\n        if (\n        // The element is hidden\n        // https://www.w3.org/TR/wai-aria-1.2/#dfn-hidden\n        // https://w3c.github.io/accname/#step2A (first comment)\n        test((0, is_programmatically_hidden_1.isProgrammaticallyHidden)(device), element)) {\n            // The element is not part of a traversal\n            if (!state.isReferencing) {\n                return alfa_option_1.None;\n            }\n            // The element is part of a native host language traversal;\n            // this is detected by having the referrer and the referred being the\n            // same.\n            // This is theoretically not needed, see\n            // https://github.com/Siteimprove/alfa/issues/1266\n            if (state.referrer.equals(state.referred)) {\n                return alfa_option_1.None;\n            }\n            // The element is part of an `aria-labelledby` traversal whose root was\n            // not hidden.\n            if (state.referred.none((0, is_programmatically_hidden_1.isProgrammaticallyHidden)(device))) {\n                return alfa_option_1.None;\n            }\n            // The element is part of an `aria-labelledby` traversal whose root\n            // was hidden, keep going.\n        }\n        return fromSteps(\n        // Step 2B: Use the `aria-labelledby` attribute, if present and allowed.\n        // https://w3c.github.io/accname/#step2B\n        () => {\n            // Chained `aria-labelledby` references, such `foo` -> `bar` -> `baz`,\n            // are not allowed. If the element is therefore being referenced\n            // already then this step produces an empty name.\n            if (state.isReferencing) {\n                return alfa_option_1.None;\n            }\n            return element\n                .attribute(\"aria-labelledby\")\n                .flatMap((attribute) => fromReferences(attribute, element, device, state));\n        }, \n        // Step 2C: control embedded in a label, not currently handled\n        // https://github.com/Siteimprove/alfa/issues/305\n        // Step 2D: Use the `aria-label` attribute, if present.\n        // https://w3c.github.io/accname/#step2D\n        () => {\n            return element\n                .attribute(\"aria-label\")\n                .flatMap((attribute) => fromLabel(attribute));\n        }, \n        // Step 2E: Use native features, if present and allowed.\n        // https://w3c.github.io/accname/#step2E\n        () => {\n            // Using native features is only allowed if the role, if any, of the\n            // element is not presentational and the element has a namespace with\n            // which to look up its feature mapping, if it exists. If the role of\n            // element therefore is presentational or the element has no namespace\n            // then this step produces an empty name.\n            if (role.some((role) => role.isPresentational()) ||\n                !element.namespace.isSome()) {\n                return alfa_option_1.None;\n            }\n            return feature_1.Feature.from(element.namespace.get(), element.name).flatMap((feature) => feature.name(element, device, state));\n        }, \n        // Step 2F: Use the subtree content, if referencing or allowed.\n        // https://w3c.github.io/accname/#step2F\n        () => {\n            // Using the subtree content is only allowed if the element is either\n            // being referenced or the role, if any, of the element allows it to\n            // be named by its content. If the element therefore isn't being\n            // referenced and is not allowed to be named by its content then this\n            // step produces an empty name.\n            if (!state.isReferencing &&\n                !role.some((role) => role.isNamedBy(\"contents\"))) {\n                return alfa_option_1.None;\n            }\n            return fromDescendants(element, device, state);\n        }, \n        // Step 2H: Use the subtree content, if descending.\n        // https://w3c.github.io/accname/#step2H\n        () => {\n            // Unless we're already descending then this step produces an empty\n            // name.\n            if (!state.isDescending) {\n                return alfa_option_1.None;\n            }\n            return fromDescendants(element, device, state);\n        });\n    }\n    Name.fromElement = fromElement;\n    /**\n     * @internal\n     */\n    function fromText(text) {\n        // Step 2G: Use the data of the text node.\n        // https://w3c.github.io/accname/#step2G\n        return fromData(text);\n    }\n    Name.fromText = fromText;\n    /**\n     * @remarks\n     * Firefox incorrectly skips aria-labelledby when descending\n     * {@link https://bugzilla.mozilla.org/show_bug.cgi?id=1652712}\n     *\n     * @internal\n     */\n    function fromDescendants(element, device, state) {\n        const names = element\n            .children(alfa_dom_1.Node.flatTree)\n            .filter(or(isText, isElement))\n            .collect((element) => fromNode(element, device, state.recurse(true).descend(true)).map((name) => {\n            if (test(hasComputedStyle(\"display\", ({ values: [outside] }) => outside.value === \"block\", device), element)) {\n                return [` ${name.value} `, name];\n            }\n            return [name.value, name];\n        }));\n        const name = flatten(names.map(([value]) => value).join(\"\")).trim();\n        if (name === \"\") {\n            return alfa_option_1.None;\n        }\n        return alfa_option_1.Option.of(Name.of(name, names.map(([, name]) => Source.descendant(element, name))));\n    }\n    Name.fromDescendants = fromDescendants;\n    /**\n     * @internal\n     */\n    function fromLabel(attribute) {\n        const name = flatten(attribute.value);\n        if (name === \"\") {\n            return alfa_option_1.None;\n        }\n        return alfa_option_1.Option.of(Name.of(name, [Source.label(attribute)]));\n    }\n    Name.fromLabel = fromLabel;\n    /**\n     * @internal\n     */\n    function fromReferences(attribute, referrer, device, state) {\n        if (!attribute.owner.isSome()) {\n            return alfa_option_1.None;\n        }\n        const root = attribute.owner.get().root();\n        const names = attribute\n            .tokens()\n            .collect((id) => getElementIdMap(root).get(id))\n            .collect((element) => fromNode(element, device, state.reference(referrer, element).recurse(true).descend(false)));\n        const name = flatten(names.map((name) => name.value).join(\" \"));\n        if (name === \"\") {\n            return alfa_option_1.None;\n        }\n        return alfa_option_1.Option.of(Name.of(name, [\n            Source.reference(attribute, Name.of(name, names.flatMap((name) => alfa_sequence_1.Sequence.from(name.source)))),\n        ]));\n    }\n    Name.fromReferences = fromReferences;\n    /**\n     * @internal\n     */\n    function fromData(text) {\n        const name = flatten(text.data);\n        if (name === \"\") {\n            return alfa_option_1.None;\n        }\n        return alfa_option_1.Option.of(Name.of(name, [Source.data(text)]));\n    }\n    Name.fromData = fromData;\n    /**\n     * @internal\n     */\n    function fromSteps(...steps) {\n        return alfa_array_1.Array.collectFirst(steps, (step) => step());\n    }\n    Name.fromSteps = fromSteps;\n    Name.hasValue = predicate.hasValue;\n})(Name || (exports.Name = Name = {}));\nfunction flatten(string) {\n    return string.replace(/\\s+/g, \" \");\n}\n//# sourceMappingURL=name.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-aria/src/name.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-aria/src/name/predicate.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-aria/src/name/predicate.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./predicate/has-value */ \"./node_modules/@siteimprove/alfa-aria/src/name/predicate/has-value.js\"), exports);\n//# sourceMappingURL=predicate.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-aria/src/name/predicate.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-aria/src/name/predicate/has-value.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-aria/src/name/predicate/has-value.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.hasValue = void 0;\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst { equals } = alfa_predicate_1.Predicate;\nfunction hasValue(valueOrPredicate, ...values) {\n    let predicate;\n    if (typeof valueOrPredicate === \"function\") {\n        predicate = valueOrPredicate;\n    }\n    else {\n        predicate = equals(valueOrPredicate, ...values);\n    }\n    return (name) => predicate(name.value);\n}\nexports.hasValue = hasValue;\n//# sourceMappingURL=has-value.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-aria/src/name/predicate/has-value.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-aria/src/node.js":
/*!*********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-aria/src/node.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Node = void 0;\nconst alfa_cache_1 = __webpack_require__(/*! @siteimprove/alfa-cache */ \"./node_modules/@siteimprove/alfa-cache/src/index.js\");\nconst alfa_flags_1 = __webpack_require__(/*! @siteimprove/alfa-flags */ \"./node_modules/@siteimprove/alfa-flags/src/index.js\");\nconst alfa_graph_1 = __webpack_require__(/*! @siteimprove/alfa-graph */ \"./node_modules/@siteimprove/alfa-graph/src/index.js\");\nconst alfa_map_1 = __webpack_require__(/*! @siteimprove/alfa-map */ \"./node_modules/@siteimprove/alfa-map/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_sequence_1 = __webpack_require__(/*! @siteimprove/alfa-sequence */ \"./node_modules/@siteimprove/alfa-aria/node_modules/@siteimprove/alfa-sequence/src/index.js\");\nconst alfa_set_1 = __webpack_require__(/*! @siteimprove/alfa-set */ \"./node_modules/@siteimprove/alfa-set/src/index.js\");\nconst alfa_style_1 = __webpack_require__(/*! @siteimprove/alfa-style */ \"./node_modules/@siteimprove/alfa-style/src/index.js\");\nconst dom = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst tree = __webpack_require__(/*! @siteimprove/alfa-tree */ \"./node_modules/@siteimprove/alfa-tree/src/index.js\");\nconst attribute_1 = __webpack_require__(/*! ./attribute */ \"./node_modules/@siteimprove/alfa-aria/src/attribute.js\");\nconst feature_1 = __webpack_require__(/*! ./feature */ \"./node_modules/@siteimprove/alfa-aria/src/feature.js\");\nconst name_1 = __webpack_require__(/*! ./name */ \"./node_modules/@siteimprove/alfa-aria/src/name.js\");\nconst role_1 = __webpack_require__(/*! ./role */ \"./node_modules/@siteimprove/alfa-aria/src/role.js\");\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst predicate = __webpack_require__(/*! ./node/predicate */ \"./node_modules/@siteimprove/alfa-aria/src/node/predicate.js\");\nconst { and, equals, not, test } = alfa_predicate_1.Predicate;\nconst { isRendered } = alfa_style_1.Style;\nconst { getElementIdMap, getElementDescendants } = dom.Query;\n/**\n * {@link https://w3c.github.io/aria/#accessibility_tree}\n *\n * @public\n */\nclass Node extends tree.Node {\n    constructor(owner, children, type) {\n        super(children, type);\n        this._node = owner;\n    }\n    get node() {\n        return this._node;\n    }\n    get name() {\n        return alfa_option_1.None;\n    }\n    get role() {\n        return alfa_option_1.None;\n    }\n    attribute(predicate) {\n        return alfa_option_1.None;\n    }\n    /**\n     * {@link https://dom.spec.whatwg.org/#concept-tree-parent}\n     */\n    parent(options = Node.Traversal.empty) {\n        const parent = this._parent;\n        if (options.has(Node.Traversal.ignored)) {\n            return parent;\n        }\n        return parent.flatMap((parent) => parent.isIgnored() ? parent.parent(options) : alfa_option_1.Option.of(parent));\n    }\n    /**\n     * {@link https://dom.spec.whatwg.org/#concept-tree-child}\n     */\n    children(options = Node.Traversal.empty) {\n        const children = alfa_sequence_1.Sequence.from(this._children);\n        if (options.has(Node.Traversal.ignored)) {\n            return children;\n        }\n        return children.flatMap((child) => child.isIgnored() ? child.children(options) : alfa_sequence_1.Sequence.of(child));\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            node: this._node.path(),\n        };\n    }\n}\nexports.Node = Node;\n/**\n * @public\n */\n(function (Node) {\n    class Traversal extends alfa_flags_1.Flags {\n        static of(...flags) {\n            return new Traversal(alfa_flags_1.Flags._reduce(...flags));\n        }\n    }\n    Node.Traversal = Traversal;\n    (function (Traversal) {\n        Traversal.none = 0;\n        /**\n         * When set, traverse both exposed and ignored nodes.\n         */\n        Traversal.ignored = (1 << 0);\n        Traversal.empty = Traversal.of(Traversal.none);\n    })(Traversal = Node.Traversal || (Node.Traversal = {}));\n    /**\n     * Traversal options to include ignored nodes in the traversal.\n     */\n    Node.includeIgnored = Traversal.of(Traversal.ignored);\n    const cache = alfa_cache_1.Cache.empty();\n    function from(node, device) {\n        const _cache = cache.get(device, alfa_cache_1.Cache.empty);\n        // If the cache already holds an entry for the specified node, then the tree\n        // that the node participates in has already been built.\n        if (_cache.has(node)) {\n            // The previous test just ensures that there is something.\n            return _cache.get(node).getUnsafe();\n        }\n        const root = node.root(dom.Node.flatTree);\n        // If the cache already holds an entry for the root of the specified node,\n        // then the tree that the node participates in has already been built, but\n        // the node itself is not included within the resulting accessibility tree.\n        if (_cache.has(root)) {\n            return _cache.get(node, () => _1.Inert.of(node));\n        }\n        // Before we start constructing the accessibility tree, we need to resolve\n        // explicit ownership of elements as specified by the `aria-owns` attribute.\n        // https://w3c.github.io/aria/#aria-owns\n        // Find all elements in the tree. As explicit ownership is specified via ID\n        // references, it cannot cross shadow or document boundaries.\n        const exclusiveDescendants = getElementDescendants(root);\n        const elements = dom.Element.isElement(root)\n            ? exclusiveDescendants.prepend(root)\n            : exclusiveDescendants;\n        const ids = getElementIdMap(root);\n        // Do a first pass over `aria-owns` attributes and collect the referenced\n        // elements.\n        const references = elements.collect((element) => element.attribute(\"aria-owns\").map((attribute) => [\n            element,\n            attribute\n                .tokens()\n                .collect((id) => ids.get(id))\n                // Reject references from the element to itself or its ancestors\n                // as these would cause cyclic references.\n                .reject((reference) => element === reference ||\n                element.ancestors().includes(reference)),\n        ]));\n        // Refine the collected `aria-owns` references, constructing a set of\n        // claimed elements and resolving conflicting claims as needed.\n        const [claimed, owned] = references.reduce(([claimed, owned, graph], [element, references]) => {\n            // Reject all element references that have either already been claimed\n            // or would introduce a cyclic reference. While authors are not allowed\n            // to specify a given ID in more than one `aria-owns` attribute, it will\n            // inevitably happen that multiple `aria-owns` attributes reference the\n            // same ID. We deal with this on a first come, first serve basis and\n            // deny anything but the first claim to a given ID.\n            references = references.reject((reference) => claimed.has(reference) || graph.hasPath(reference, element));\n            // If there are no references left, this element has no explicit\n            // ownership.\n            if (references.isEmpty()) {\n                return [claimed, owned, graph];\n            }\n            // Claim the remaining references.\n            claimed = references.reduce((claimed, reference) => claimed.add(reference), claimed);\n            // Connect the element to each of its references to track cycles.\n            graph = references.reduce((graph, reference) => graph.connect(element, reference), graph);\n            return [claimed, owned.set(element, references), graph];\n        }, [\n            alfa_set_1.Set.empty(),\n            alfa_map_1.Map.empty(),\n            alfa_graph_1.Graph.empty(),\n        ]);\n        fromNode(root, device, claimed, owned, State.empty());\n        return _cache.get(node, () => \n        // If the cache still doesn't hold an entry for the specified node, then\n        // the node doesn't even participate in the tree. Store it as an inert\n        // node.\n        _1.Inert.of(node));\n    }\n    Node.from = from;\n    class State {\n        static empty() {\n            return this._empty;\n        }\n        constructor(isPresentational, isVisible) {\n            this._isPresentational = isPresentational;\n            this._isVisible = isVisible;\n        }\n        get isPresentational() {\n            return this._isPresentational;\n        }\n        get isVisible() {\n            return this._isVisible;\n        }\n        presentational(isPresentational) {\n            if (this._isPresentational === isPresentational) {\n                return this;\n            }\n            return new State(isPresentational, this._isVisible);\n        }\n        visible(isVisible) {\n            if (this._isVisible === isVisible) {\n                return this;\n            }\n            return new State(this._isPresentational, isVisible);\n        }\n    }\n    State._empty = new State(false, true);\n    function fromNode(node, device, claimed, owned, state) {\n        return cache.get(device, alfa_cache_1.Cache.empty).get(node, () => {\n            if (dom.Element.isElement(node)) {\n                // Elements that are explicitly excluded from the accessibility tree\n                // by means of `aria-hidden=true` are never exposed in the\n                // accessibility tree, nor are their descendants.\n                //\n                // Since `aria-hidden` affects descendants in the accessibility tree,\n                // not in the DOM, and since we build the accessibility tree top-down,\n                // we never need to look at more than the current node.\n                //\n                // This behaviour is unfortunately not consistent across browsers,\n                // which we may or may not want to deal with. For now, we pretend that\n                // all browsers act consistently.\n                //\n                // https://github.com/Siteimprove/alfa/issues/184#issuecomment-593878009\n                if (node\n                    .attribute(\"aria-hidden\")\n                    .some((attribute) => attribute.enumerate(\"true\", \"false\").some(equals(\"true\")))) {\n                    return _1.Inert.of(node);\n                }\n                const style = alfa_style_1.Style.from(node, device);\n                // Elements that are not rendered at all are never exposed in\n                // the accessibility tree, nor are their descendants.\n                //\n                // Since `aria-owns` can create an accessibility tree that is fairly\n                // different from the DOM tree, but being rendered is a property of the\n                // DOM, we may \"jump\" onto a node which is not rendered due to some DOM\n                // ancestor (so, unknowingly of the current accessibility tree traversal).\n                // Therefore, we cannot just look at some property of the current node.\n                //\n                // Since `isRendered` is cached, and evaluating it is needed for almost\n                // all nodes in the DOM, this is inexpensive.\n                if (test(not(isRendered(device)), node)) {\n                    return _1.Inert.of(node);\n                }\n                let children;\n                // Get the children explicitly owned by the element. Children can be\n                // explicitly owned using the `aria-owns` attribute.\n                const explicit = owned\n                    .get(node)\n                    .getOrElse(() => alfa_sequence_1.Sequence.empty());\n                // Get the children implicitly owned by the element. These are the\n                // children in the flat tree that are neither claimed already nor\n                // explicitly owned by the element.\n                const implicit = node\n                    .children(dom.Node.flatTree)\n                    .reject((child) => claimed.has(child) || explicit.includes(child));\n                // The children implicitly owned by the element come first, then the\n                // children explicitly owned by the element.\n                children = (state) => implicit\n                    .concat(explicit)\n                    .map((child) => fromNode(child, device, claimed, owned, state));\n                // Elements that are not visible by means of `visibility: hidden` or\n                // `visibility: collapse`, are exposed in the accessibility tree as\n                // containers as they may contain visible descendants.\n                //\n                // Since `visibility` is inherited, this correctly affects DOM descendants\n                // even if `aria-owns` is used to rewrite the tree.\n                if (style.computed(\"visibility\").value.value !== \"visible\") {\n                    return _1.Container.of(node, children(state.visible(false)));\n                }\n                state = state.visible(true);\n                const role = role_1.Role.fromExplicit(node).orElse(() => \n                // If the element has no explicit role and instead inherits a\n                // presentational role then use that, otherwise fall back to the\n                // implicit role.\n                state.isPresentational\n                    ? alfa_option_1.Option.of(role_1.Role.of(\"presentation\"))\n                    : role_1.Role.fromImplicit(node));\n                if (role.some((role) => role.isPresentational())) {\n                    return _1.Container.of(node, children(state.presentational(\n                    // If the implicit role of the presentational element has\n                    // required children then any owned children must also be\n                    // presentational.\n                    role_1.Role.fromImplicit(node).some((role) => role.hasRequiredChildren()))));\n                }\n                let attributes = alfa_map_1.Map.empty();\n                // First pass: Look up implicit attributes on the role.\n                if (role.isSome()) {\n                    for (const attribute of role.get().supportedAttributes) {\n                        for (const value of role.get().implicitAttributeValue(attribute)) {\n                            attributes = attributes.set(attribute, attribute_1.Attribute.of(attribute, value));\n                        }\n                    }\n                }\n                // Second pass: Look up implicit attributes on the feature mapping.\n                for (const namespace of node.namespace) {\n                    for (const feature of feature_1.Feature.from(namespace, node.name)) {\n                        for (const attribute of feature.attributes(node)) {\n                            attributes = attributes.set(attribute.name, attribute);\n                        }\n                    }\n                }\n                // Third pass: Look up explicit `aria-*` attributes and set the ones\n                // that are either global or supported by the role.\n                for (const { name, value } of node.attributes) {\n                    if (attribute_1.Attribute.isName(name)) {\n                        const attribute = attribute_1.Attribute.of(name, value);\n                        if (attribute.isGlobal() ||\n                            role.some((role) => role.isAttributeSupported(attribute.name))) {\n                            attributes = attributes.set(name, attribute);\n                        }\n                    }\n                }\n                // If the element has neither attributes, a role (other than generic),\n                // nor a tabindex, it is not itself interesting for accessibility\n                // purposes. It is therefore exposed as a container.\n                // Some elements (mostly embedded content) are always exposed.\n                if (attributes.isEmpty() &&\n                    role.every(role_1.Role.hasName(\"generic\")) &&\n                    node.tabIndex().isNone() &&\n                    !test(alwaysExpose, node)) {\n                    return _1.Container.of(node, children(state), role);\n                }\n                // If the element has a role that designates its children as\n                // presentational then set the state as presentational.\n                if (role.some((role) => role.hasPresentationalChildren())) {\n                    state = state.presentational(true);\n                }\n                return _1.Element.of(node, role, name_1.Name.from(node, device), attributes.values(), children(state));\n            }\n            if (dom.Text.isText(node)) {\n                // As elements with `visibility: hidden` are exposed as containers for\n                // other elements that _might_ be visible, we need to check the\n                // visibility of the parent element before deciding to expose the text\n                // node. If the parent element isn't visible, the text node instead\n                // becomes inert.\n                if (!state.isVisible) {\n                    return _1.Inert.of(node);\n                }\n                return _1.Text.of(node, name_1.Name.from(node, device));\n            }\n            return _1.Container.of(node, node\n                .children(dom.Node.flatTree)\n                .reject((child) => claimed.has(child))\n                .map((child) => fromNode(child, device, claimed, owned, state)));\n        });\n    }\n    Node.hasAttribute = predicate.hasAttribute, Node.hasName = predicate.hasName, Node.hasRole = predicate.hasRole;\n})(Node || (exports.Node = Node = {}));\n/**\n * Some elements do not have an ARIA role but are nonetheless always exposed to\n * ATs. These are mostly embedded content.\n */\n// <object> with a non-empty data attribute\nconst alwaysExpose = and(dom.Element.hasName(\"object\"), dom.Element.hasAttribute(\"data\", (data) => data.trim() !== \"\"));\n//# sourceMappingURL=node.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-aria/src/node.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-aria/src/node/container.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-aria/src/node/container.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Container = void 0;\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst node_1 = __webpack_require__(/*! ../node */ \"./node_modules/@siteimprove/alfa-aria/src/node.js\");\n/**\n * @remarks\n * Containers are structural element with no interesting semantic.\n * They correspond to elements with no \"interesting\" property, for this a role\n * of `generic` is considered as not interesting.\n * Because `generic` can also be containers, they may still have a role.\n * Because `generic` have prohibited names, and having an `aria-*` property\n * is \"interesting\", Container don't need a name or attributes.\n *\n * @public\n */\nclass Container extends node_1.Node {\n    static of(owner, children = [], role = alfa_option_1.None) {\n        return new Container(owner, Array.from(children), role);\n    }\n    constructor(owner, children, role) {\n        super(owner, children, \"container\");\n        this._role = role;\n    }\n    clone(parent = alfa_option_1.None) {\n        return new Container(this._node, this._children.map((child) => child.clone()), this._role);\n    }\n    get role() {\n        return this._role;\n    }\n    isIgnored() {\n        return true;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            role: this._role.map((role) => role.name).getOr(null),\n        };\n    }\n    toString() {\n        return [\n            \"container\",\n            ...this._children.map((child) => indent(child.toString())),\n        ].join(\"\\n\");\n    }\n}\nexports.Container = Container;\nfunction indent(input) {\n    return input.replace(/^/gm, \"  \");\n}\n//# sourceMappingURL=container.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-aria/src/node/container.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-aria/src/node/element.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-aria/src/node/element.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Element = void 0;\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst node_1 = __webpack_require__(/*! ../node */ \"./node_modules/@siteimprove/alfa-aria/src/node.js\");\n/**\n * @public\n */\nclass Element extends node_1.Node {\n    static of(owner, role = alfa_option_1.None, name = alfa_option_1.None, attributes = [], children = []) {\n        return new Element(owner, role, name, Array.from(attributes), Array.from(children));\n    }\n    constructor(owner, role, name, attributes, children) {\n        super(owner, children, \"element\");\n        this._role = role;\n        this._name = name;\n        this._attributes = attributes;\n    }\n    get role() {\n        return this._role;\n    }\n    get name() {\n        return this._name;\n    }\n    get attributes() {\n        return this._attributes;\n    }\n    attribute(predicate) {\n        return alfa_iterable_1.Iterable.find(this._attributes, typeof predicate === \"string\"\n            ? (attribute) => attribute.name === predicate\n            : predicate);\n    }\n    clone() {\n        return new Element(this._node, this._role, this._name, this._attributes, this._children.map((child) => child.clone()));\n    }\n    isIgnored() {\n        return false;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            role: this._role.map((role) => role.name).getOr(null),\n            name: this._name.map((name) => name.value).getOr(null),\n            attributes: this._attributes.map((attribute) => attribute.toJSON()),\n        };\n    }\n    toString() {\n        return [\n            [\n                this._role.map((role) => role.name).getOr(\"element\"),\n                ...this._name.map((name) => `\"${name}\"`),\n            ].join(\" \"),\n            ...this._children.map((child) => indent(child.toString())),\n        ].join(\"\\n\");\n    }\n}\nexports.Element = Element;\nfunction indent(input) {\n    return input.replace(/^/gm, \"  \");\n}\n//# sourceMappingURL=element.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-aria/src/node/element.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-aria/src/node/inert.js":
/*!***************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-aria/src/node/inert.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Inert = void 0;\nconst node_1 = __webpack_require__(/*! ../node */ \"./node_modules/@siteimprove/alfa-aria/src/node.js\");\n/**\n * @public\n */\nclass Inert extends node_1.Node {\n    static of(owner) {\n        return new Inert(owner);\n    }\n    constructor(owner) {\n        super(owner, [], \"inert\");\n    }\n    clone() {\n        return new Inert(this._node);\n    }\n    isIgnored() {\n        return true;\n    }\n    toString() {\n        return \"ignored\";\n    }\n    toJSON() {\n        const result = super.toJSON();\n        delete result.children;\n        return result;\n    }\n}\nexports.Inert = Inert;\n//# sourceMappingURL=inert.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-aria/src/node/inert.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-aria/src/node/predicate.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-aria/src/node/predicate.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./predicate/has-attribute */ \"./node_modules/@siteimprove/alfa-aria/src/node/predicate/has-attribute.js\"), exports);\n__exportStar(__webpack_require__(/*! ./predicate/has-name */ \"./node_modules/@siteimprove/alfa-aria/src/node/predicate/has-name.js\"), exports);\n__exportStar(__webpack_require__(/*! ./predicate/has-role */ \"./node_modules/@siteimprove/alfa-aria/src/node/predicate/has-role.js\"), exports);\n//# sourceMappingURL=predicate.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-aria/src/node/predicate.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-aria/src/node/predicate/has-attribute.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-aria/src/node/predicate/has-attribute.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.hasAttribute = void 0;\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst { property } = alfa_predicate_1.Predicate;\nfunction hasAttribute(nameOrPredicate, value = () => true) {\n    if (typeof nameOrPredicate === \"function\") {\n        return (node) => node.attribute(nameOrPredicate).isSome();\n    }\n    const name = nameOrPredicate;\n    const predicate = property(\"value\", value);\n    return (node) => node.attribute(name).some(predicate);\n}\nexports.hasAttribute = hasAttribute;\n//# sourceMappingURL=has-attribute.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-aria/src/node/predicate/has-attribute.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-aria/src/node/predicate/has-name.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-aria/src/node/predicate/has-name.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.hasName = void 0;\nconst name_1 = __webpack_require__(/*! ../../name */ \"./node_modules/@siteimprove/alfa-aria/src/name.js\");\nfunction hasName(nameOrPredicate = () => true, ...names) {\n    const predicate = typeof nameOrPredicate === \"function\"\n        ? nameOrPredicate\n        : name_1.Name.hasValue(nameOrPredicate, ...names);\n    return (node) => node.name.some(predicate);\n}\nexports.hasName = hasName;\n//# sourceMappingURL=has-name.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-aria/src/node/predicate/has-name.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-aria/src/node/predicate/has-role.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-aria/src/node/predicate/has-role.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.hasRole = void 0;\nconst has_name_1 = __webpack_require__(/*! ../../role/predicate/has-name */ \"./node_modules/@siteimprove/alfa-aria/src/role/predicate/has-name.js\");\nfunction hasRole(nameOrPredicate = () => true, ...names) {\n    let predicate;\n    if (typeof nameOrPredicate === \"function\") {\n        predicate = nameOrPredicate;\n    }\n    else {\n        predicate = (0, has_name_1.hasName)(nameOrPredicate, ...names);\n    }\n    return (node) => node.role.some(predicate);\n}\nexports.hasRole = hasRole;\n//# sourceMappingURL=has-role.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-aria/src/node/predicate/has-role.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-aria/src/node/text.js":
/*!**************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-aria/src/node/text.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Text = void 0;\nconst node_1 = __webpack_require__(/*! ../node */ \"./node_modules/@siteimprove/alfa-aria/src/node.js\");\n/**\n * @public\n */\nclass Text extends node_1.Node {\n    static of(owner, name) {\n        return new Text(owner, name);\n    }\n    constructor(owner, name) {\n        super(owner, [], \"text\");\n        this._name = name;\n    }\n    get name() {\n        return this._name;\n    }\n    clone() {\n        return new Text(this._node, this._name);\n    }\n    isIgnored() {\n        return false;\n    }\n    toJSON() {\n        const result = {\n            ...super.toJSON(),\n            name: this._name.map((name) => name.value).getOr(null),\n        };\n        delete result.children;\n        return result;\n    }\n    toString() {\n        return `text \"${this._name.map((name) => `${name}`).getOr(\"\")}\"`;\n    }\n}\nexports.Text = Text;\n//# sourceMappingURL=text.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-aria/src/node/text.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-aria/src/role.js":
/*!*********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-aria/src/role.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Role = void 0;\nconst alfa_array_1 = __webpack_require__(/*! @siteimprove/alfa-array */ \"./node_modules/@siteimprove/alfa-array/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_map_1 = __webpack_require__(/*! @siteimprove/alfa-map */ \"./node_modules/@siteimprove/alfa-map/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_sequence_1 = __webpack_require__(/*! @siteimprove/alfa-sequence */ \"./node_modules/@siteimprove/alfa-aria/node_modules/@siteimprove/alfa-sequence/src/index.js\");\nconst alfa_set_1 = __webpack_require__(/*! @siteimprove/alfa-set */ \"./node_modules/@siteimprove/alfa-set/src/index.js\");\nconst feature_1 = __webpack_require__(/*! ./feature */ \"./node_modules/@siteimprove/alfa-aria/src/feature.js\");\nconst data_1 = __webpack_require__(/*! ./role/data */ \"./node_modules/@siteimprove/alfa-aria/src/role/data.js\");\nconst predicate = __webpack_require__(/*! ./role/predicate */ \"./node_modules/@siteimprove/alfa-aria/src/role/predicate.js\");\nconst { and, not, nor } = alfa_predicate_1.Predicate;\nlet roles = alfa_map_1.Map.empty();\n/**\n * @public\n */\nclass Role {\n    static of(name) {\n        return roles.get(name).getOrElse(() => {\n            // The \"as const\" building of Roles makes TS give it a very\n            // rigid type, and we need to manually help it to correctly merge the\n            // Attribute.Name keys into a single union type. As of TS 4.8.2, removing\n            // the type guard, or trying to destructure Roles[name] in one go, breaks.\n            const attributes = data_1.Roles[name].attributes;\n            const inherited = data_1.Roles[name].inherited;\n            const supportedAttributes = alfa_set_1.Set.from(attributes.map(([attribute]) => attribute)).concat(inherited.flatMap((parent) => Role.of(parent).supportedAttributes));\n            const requiredAttributes = alfa_set_1.Set.from(alfa_array_1.Array.collect(attributes, ([attribute, { required }]) => required ? alfa_option_1.Option.of(attribute) : alfa_option_1.None)).concat(inherited.flatMap((parent) => Role.of(parent).requiredAttributes));\n            const prohibitedAttributes = alfa_set_1.Set.from(alfa_array_1.Array.collect(attributes, ([attribute, { prohibited }]) => prohibited ? alfa_option_1.Option.of(attribute) : alfa_option_1.None)).concat(inherited.flatMap((parent) => Role.of(parent).prohibitedAttributes));\n            const role = new Role(name, [...supportedAttributes], [...requiredAttributes], [...prohibitedAttributes]);\n            roles = roles.set(name, role);\n            return role;\n        });\n    }\n    constructor(name, supportedAttributes, requiredAttributes, prohibitedAttributes) {\n        this._name = name;\n        this._supportedAttributes = supportedAttributes;\n        this._requiredAttributes = requiredAttributes;\n        this._prohibitedAttributes = prohibitedAttributes;\n    }\n    get name() {\n        return this._name;\n    }\n    /**\n     * Get all attributes supported by this role and its inherited (ancestors) roles.\n     */\n    get supportedAttributes() {\n        return this._supportedAttributes;\n    }\n    /**\n     * Get all attributes required by this role and its inherited (ancestors) roles.\n     */\n    get requiredAttributes() {\n        return this._requiredAttributes;\n    }\n    /**\n     * Get all attributes prohibited on this role and its inherited (ancestors) roles.\n     */\n    get prohibitedAttributes() {\n        return this._prohibitedAttributes;\n    }\n    /**\n     * Get the required parent of this role.\n     */\n    get requiredParent() {\n        return data_1.Roles[this._name].parent.required;\n    }\n    /**\n     * Get the required children of this role.\n     */\n    get requiredChildren() {\n        return data_1.Roles[this._name].children.required;\n    }\n    /**\n     * Check if this role has the specified name.\n     */\n    hasName(name) {\n        return this._name === name;\n    }\n    /**\n     * Check if this role is a superclass of the role with the specified name.\n     */\n    isSuperclassOf(name) {\n        const { inherited } = data_1.Roles[name];\n        for (const parent of inherited) {\n            if (parent === this._name || this.isSuperclassOf(parent)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Check if this role is a subclass of the role with the specified name.\n     */\n    isSubclassOf(name) {\n        return Role.of(name).isSuperclassOf(this._name);\n    }\n    /**\n     * Check if this role either is, or is a subclass of, the role with the\n     * specified name.\n     */\n    is(name) {\n        return this.hasName(name) || this.isSubclassOf(name);\n    }\n    /**\n     * Check if this role is abstract.\n     */\n    isAbstract() {\n        return data_1.Roles[this._name].abstract;\n    }\n    /**\n     * Check if this role is non-abstract.\n     */\n    isConcrete() {\n        return !this.isAbstract();\n    }\n    /**\n     * Check if this role is presentational.\n     */\n    isPresentational() {\n        return this.hasName(\"presentation\") || this.hasName(\"none\");\n    }\n    /**\n     * Check if this role is a widget.\n     */\n    isWidget() {\n        return this.is(\"widget\");\n    }\n    /**\n     * Check if this role is a landmark.\n     */\n    isLandmark() {\n        return this.is(\"landmark\");\n    }\n    /**\n     * Check if this role supports naming by the specified method.\n     */\n    isNamedBy(method) {\n        for (const found of data_1.Roles[this._name].name.from) {\n            if (found === method) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Check if this role prohibits naming.\n     */\n    isNameProhibited() {\n        return data_1.Roles[this._name].name.prohibited;\n    }\n    /**\n     * Check if this role has a required parent.\n     */\n    hasRequiredParent() {\n        return data_1.Roles[this._name].parent.required.length > 0;\n    }\n    /**\n     * Check if this role has presentational children.\n     */\n    hasPresentationalChildren() {\n        return data_1.Roles[this._name].children.presentational;\n    }\n    /**\n     * Check if this role has required children.\n     */\n    hasRequiredChildren() {\n        return data_1.Roles[this._name].children.required.length > 0;\n    }\n    /**\n     * Check if this role supports the specified attribute.\n     */\n    isAttributeSupported(name) {\n        return this._supportedAttributes.includes(name);\n    }\n    /**\n     * Check if this role requires the specified attribute.\n     */\n    isAttributeRequired(name) {\n        return this._requiredAttributes.includes(name);\n    }\n    /**\n     * Check if this role prohibits the specified attribute.\n     */\n    isAttributeProhibited(name) {\n        return this._prohibitedAttributes.includes(name);\n    }\n    /**\n     * Get the implicit value of the specified attribute, if any.\n     */\n    implicitAttributeValue(name) {\n        const { inherited, attributes } = data_1.Roles[this._name];\n        for (const [found, { value }] of attributes) {\n            if (name === found && value !== null) {\n                return alfa_option_1.Option.from(value);\n            }\n        }\n        for (const parent of inherited) {\n            for (const value of Role.of(parent).implicitAttributeValue(name)) {\n                return alfa_option_1.Option.of(value);\n            }\n        }\n        return alfa_option_1.None;\n    }\n    equals(value) {\n        return value instanceof Role && value._name === this._name;\n    }\n    hash(hash) {\n        hash.writeString(this._name);\n    }\n    toJSON() {\n        return {\n            name: this._name,\n        };\n    }\n}\nexports.Role = Role;\n/**\n * @public\n */\n(function (Role) {\n    function isName(value) {\n        return value in data_1.Roles;\n    }\n    Role.isName = isName;\n    function isRole(value, name) {\n        return value instanceof Role && (name === undefined || value.name === name);\n    }\n    Role.isRole = isRole;\n    /**\n     * Get the role assigned either explicitly or implicitly to an element, if\n     * any.\n     */\n    function from(element) {\n        return fromExplicit(element).orElse(() => fromImplicit(element));\n    }\n    Role.from = from;\n    /**\n     * Get the role explicitly assigned to an element, if any.\n     */\n    function fromExplicit(element) {\n        const roles = element\n            .attribute(\"role\")\n            .map((attribute) => attribute.tokens())\n            .getOrElse(() => alfa_sequence_1.Sequence.empty());\n        return (roles\n            .map((role) => role.toLowerCase())\n            .filter(isName)\n            .map(Role.of)\n            // Abstract roles are only used for ontological purposes and are not\n            // allowed to be used by authors; we therefore filter them out.\n            .reject((role) => role.isAbstract())\n            // If the element is not allowed to be presentational, reject all\n            // presentational roles.\n            .reject((role) => isAllowedPresentational(element) ? false : role.isPresentational())\n            .first());\n    }\n    Role.fromExplicit = fromExplicit;\n    /**\n     * Get the role implicitly assigned to an element, if any.\n     */\n    function fromImplicit(element) {\n        return element.namespace.flatMap((namespace) => feature_1.Feature.from(namespace, element.name).flatMap((feature) => alfa_sequence_1.Sequence.from(feature.role(element))\n            // If the element is not allowed to be presentational, reject all\n            // presentational roles.\n            .reject((role) => isAllowedPresentational(element) ? false : role.isPresentational())\n            .first()));\n    }\n    Role.fromImplicit = fromImplicit;\n    Role.hasName = predicate.hasName;\n})(Role || (exports.Role = Role = {}));\n/**\n * Check if an element has one or more global `aria-*` attributes.\n */\nconst hasGlobalAttributes = (element) => alfa_iterable_1.Iterable.some(Role.of(\"roletype\").supportedAttributes, (attribute) => element.attribute(attribute).isSome());\n/**\n * Check if an element is potentially focusable, not accounting for whether or\n * not the element is rendered.\n */\nconst isPotentiallyFocusable = and(alfa_dom_1.Element.hasTabIndex(), not(alfa_dom_1.Element.isActuallyDisabled));\n/**\n * Check if an element is allowed to be assigned a presentational role.\n */\nconst isAllowedPresentational = nor(hasGlobalAttributes, isPotentiallyFocusable);\n//# sourceMappingURL=role.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-aria/src/role.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-aria/src/role/data.js":
/*!**************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-aria/src/role/data.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// This file has been automatically generated based on the various WAI-ARIA\n// specifications. Do therefore not modify it directly! If you wish to make\n// changes, do so in `scripts/roles.js` and run `yarn generate` to rebuild this\n// file.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Roles = void 0;\n/**\n * @internal\n */\nexports.Roles = {\n    alert: {\n        abstract: false,\n        inherited: [\"section\"],\n        attributes: [\n            [\n                \"aria-atomic\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: \"true\",\n                },\n            ],\n            [\n                \"aria-live\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: \"assertive\",\n                },\n            ],\n        ],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    alertdialog: {\n        abstract: false,\n        inherited: [\"alert\", \"dialog\"],\n        attributes: [],\n        name: {\n            required: true,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    application: {\n        abstract: false,\n        inherited: [\"structure\"],\n        attributes: [\n            [\n                \"aria-activedescendant\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-disabled\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-errormessage\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-expanded\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-haspopup\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-invalid\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n        ],\n        name: {\n            required: true,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    article: {\n        abstract: false,\n        inherited: [\"document\"],\n        attributes: [\n            [\n                \"aria-posinset\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-setsize\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n        ],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    banner: {\n        abstract: false,\n        inherited: [\"landmark\"],\n        attributes: [],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    blockquote: {\n        abstract: false,\n        inherited: [\"section\"],\n        attributes: [],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    button: {\n        abstract: false,\n        inherited: [\"command\"],\n        attributes: [\n            [\n                \"aria-disabled\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-expanded\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-haspopup\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-pressed\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n        ],\n        name: {\n            required: true,\n            prohibited: false,\n            from: [\"author\", \"contents\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: true,\n            required: [],\n        },\n    },\n    caption: {\n        abstract: false,\n        inherited: [\"section\"],\n        attributes: [\n            [\n                \"aria-label\",\n                {\n                    required: false,\n                    prohibited: true,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-labelledby\",\n                {\n                    required: false,\n                    prohibited: true,\n                    value: null,\n                },\n            ],\n        ],\n        name: {\n            required: false,\n            prohibited: true,\n            from: [],\n        },\n        parent: {\n            required: [[\"figure\"], [\"grid\"], [\"table\"], [\"treegrid\"]],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    cell: {\n        abstract: false,\n        inherited: [\"section\"],\n        attributes: [\n            [\n                \"aria-colindex\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-colspan\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-rowindex\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-rowspan\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n        ],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\", \"contents\"],\n        },\n        parent: {\n            required: [[\"row\"]],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    checkbox: {\n        abstract: false,\n        inherited: [\"input\"],\n        attributes: [\n            [\n                \"aria-checked\",\n                {\n                    required: true,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-errormessage\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-expanded\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-invalid\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-readonly\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-required\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n        ],\n        name: {\n            required: true,\n            prohibited: false,\n            from: [\"author\", \"contents\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: true,\n            required: [],\n        },\n    },\n    code: {\n        abstract: false,\n        inherited: [\"section\"],\n        attributes: [\n            [\n                \"aria-label\",\n                {\n                    required: false,\n                    prohibited: true,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-labelledby\",\n                {\n                    required: false,\n                    prohibited: true,\n                    value: null,\n                },\n            ],\n        ],\n        name: {\n            required: false,\n            prohibited: true,\n            from: [],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    columnheader: {\n        abstract: false,\n        inherited: [\"cell\", \"gridcell\", \"sectionhead\"],\n        attributes: [\n            [\n                \"aria-sort\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n        ],\n        name: {\n            required: true,\n            prohibited: false,\n            from: [\"author\", \"contents\"],\n        },\n        parent: {\n            required: [[\"row\"]],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    combobox: {\n        abstract: false,\n        inherited: [\"input\"],\n        attributes: [\n            [\n                \"aria-activedescendant\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-autocomplete\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-controls\",\n                {\n                    required: true,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-errormessage\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-expanded\",\n                {\n                    required: true,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-haspopup\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: \"listbox\",\n                },\n            ],\n            [\n                \"aria-invalid\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-readonly\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-required\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n        ],\n        name: {\n            required: true,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    command: {\n        abstract: true,\n        inherited: [\"widget\"],\n        attributes: [],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    complementary: {\n        abstract: false,\n        inherited: [\"landmark\"],\n        attributes: [],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    composite: {\n        abstract: true,\n        inherited: [\"widget\"],\n        attributes: [\n            [\n                \"aria-activedescendant\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-disabled\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n        ],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    contentinfo: {\n        abstract: false,\n        inherited: [\"landmark\"],\n        attributes: [],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    definition: {\n        abstract: false,\n        inherited: [\"section\"],\n        attributes: [],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    deletion: {\n        abstract: false,\n        inherited: [\"section\"],\n        attributes: [\n            [\n                \"aria-label\",\n                {\n                    required: false,\n                    prohibited: true,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-labelledby\",\n                {\n                    required: false,\n                    prohibited: true,\n                    value: null,\n                },\n            ],\n        ],\n        name: {\n            required: false,\n            prohibited: true,\n            from: [],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    dialog: {\n        abstract: false,\n        inherited: [\"window\"],\n        attributes: [],\n        name: {\n            required: true,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    directory: {\n        abstract: false,\n        inherited: [\"list\"],\n        attributes: [],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    document: {\n        abstract: false,\n        inherited: [\"structure\"],\n        attributes: [],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    emphasis: {\n        abstract: false,\n        inherited: [\"section\"],\n        attributes: [\n            [\n                \"aria-label\",\n                {\n                    required: false,\n                    prohibited: true,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-labelledby\",\n                {\n                    required: false,\n                    prohibited: true,\n                    value: null,\n                },\n            ],\n        ],\n        name: {\n            required: false,\n            prohibited: true,\n            from: [],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    feed: {\n        abstract: false,\n        inherited: [\"list\"],\n        attributes: [],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [[\"article\"]],\n        },\n    },\n    figure: {\n        abstract: false,\n        inherited: [\"section\"],\n        attributes: [],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    form: {\n        abstract: false,\n        inherited: [\"landmark\"],\n        attributes: [],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    generic: {\n        abstract: false,\n        inherited: [\"structure\"],\n        attributes: [\n            [\n                \"aria-label\",\n                {\n                    required: false,\n                    prohibited: true,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-labelledby\",\n                {\n                    required: false,\n                    prohibited: true,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-roledescription\",\n                {\n                    required: false,\n                    prohibited: true,\n                    value: null,\n                },\n            ],\n        ],\n        name: {\n            required: false,\n            prohibited: true,\n            from: [],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    grid: {\n        abstract: false,\n        inherited: [\"composite\", \"table\"],\n        attributes: [\n            [\n                \"aria-multiselectable\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-readonly\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n        ],\n        name: {\n            required: true,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [[\"row\"], [\"rowgroup\", \"row\"]],\n        },\n    },\n    gridcell: {\n        abstract: false,\n        inherited: [\"cell\", \"widget\"],\n        attributes: [\n            [\n                \"aria-disabled\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-errormessage\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-expanded\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-haspopup\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-invalid\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-readonly\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-required\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-selected\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n        ],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\", \"contents\"],\n        },\n        parent: {\n            required: [[\"row\"]],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    group: {\n        abstract: false,\n        inherited: [\"section\"],\n        attributes: [\n            [\n                \"aria-activedescendant\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-disabled\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n        ],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    heading: {\n        abstract: false,\n        inherited: [\"sectionhead\"],\n        attributes: [\n            [\n                \"aria-level\",\n                {\n                    required: true,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n        ],\n        name: {\n            required: true,\n            prohibited: false,\n            from: [\"author\", \"contents\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    img: {\n        abstract: false,\n        inherited: [\"section\"],\n        attributes: [],\n        name: {\n            required: true,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: true,\n            required: [],\n        },\n    },\n    input: {\n        abstract: true,\n        inherited: [\"widget\"],\n        attributes: [\n            [\n                \"aria-disabled\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n        ],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    insertion: {\n        abstract: false,\n        inherited: [\"section\"],\n        attributes: [\n            [\n                \"aria-label\",\n                {\n                    required: false,\n                    prohibited: true,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-labelledby\",\n                {\n                    required: false,\n                    prohibited: true,\n                    value: null,\n                },\n            ],\n        ],\n        name: {\n            required: false,\n            prohibited: true,\n            from: [],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    landmark: {\n        abstract: true,\n        inherited: [\"section\"],\n        attributes: [],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    link: {\n        abstract: false,\n        inherited: [\"command\"],\n        attributes: [\n            [\n                \"aria-disabled\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-expanded\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-haspopup\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n        ],\n        name: {\n            required: true,\n            prohibited: false,\n            from: [\"author\", \"contents\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    list: {\n        abstract: false,\n        inherited: [\"section\"],\n        attributes: [],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [[\"listitem\"]],\n        },\n    },\n    listbox: {\n        abstract: false,\n        inherited: [\"select\"],\n        attributes: [\n            [\n                \"aria-errormessage\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-expanded\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-invalid\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-multiselectable\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-orientation\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: \"vertical\",\n                },\n            ],\n            [\n                \"aria-readonly\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-required\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n        ],\n        name: {\n            required: true,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [[\"group\", \"option\"], [\"option\"]],\n        },\n    },\n    listitem: {\n        abstract: false,\n        inherited: [\"section\"],\n        attributes: [\n            [\n                \"aria-level\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-posinset\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-setsize\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n        ],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [[\"directory\"], [\"list\"]],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    log: {\n        abstract: false,\n        inherited: [\"section\"],\n        attributes: [\n            [\n                \"aria-live\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: \"polite\",\n                },\n            ],\n        ],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    main: {\n        abstract: false,\n        inherited: [\"landmark\"],\n        attributes: [],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    marquee: {\n        abstract: false,\n        inherited: [\"section\"],\n        attributes: [],\n        name: {\n            required: true,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    math: {\n        abstract: false,\n        inherited: [\"section\"],\n        attributes: [],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    menu: {\n        abstract: false,\n        inherited: [\"select\"],\n        attributes: [\n            [\n                \"aria-orientation\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: \"vertical\",\n                },\n            ],\n        ],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [\n                [\"group\", \"menuitem\"],\n                [\"group\", \"menuitemradio\"],\n                [\"group\", \"menuitemcheckbox\"],\n                [\"menuitem\"],\n                [\"menuitemcheckbox\"],\n                [\"menuitemradio\"],\n            ],\n        },\n    },\n    menubar: {\n        abstract: false,\n        inherited: [\"menu\"],\n        attributes: [\n            [\n                \"aria-orientation\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: \"horizontal\",\n                },\n            ],\n        ],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [\n                [\"group\", \"menuitem\"],\n                [\"group\", \"menuitemradio\"],\n                [\"group\", \"menuitemcheckbox\"],\n                [\"menuitem\"],\n                [\"menuitemcheckbox\"],\n                [\"menuitemradio\"],\n            ],\n        },\n    },\n    menuitem: {\n        abstract: false,\n        inherited: [\"command\"],\n        attributes: [\n            [\n                \"aria-disabled\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-expanded\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-haspopup\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-posinset\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-setsize\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n        ],\n        name: {\n            required: true,\n            prohibited: false,\n            from: [\"author\", \"contents\"],\n        },\n        parent: {\n            required: [[\"group\"], [\"menu\"], [\"menubar\"]],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    menuitemcheckbox: {\n        abstract: false,\n        inherited: [\"menuitem\"],\n        attributes: [\n            [\n                \"aria-checked\",\n                {\n                    required: true,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n        ],\n        name: {\n            required: true,\n            prohibited: false,\n            from: [\"author\", \"contents\"],\n        },\n        parent: {\n            required: [[\"group\"], [\"menu\"], [\"menubar\"]],\n        },\n        children: {\n            presentational: true,\n            required: [],\n        },\n    },\n    menuitemradio: {\n        abstract: false,\n        inherited: [\"menuitemcheckbox\"],\n        attributes: [],\n        name: {\n            required: true,\n            prohibited: false,\n            from: [\"author\", \"contents\"],\n        },\n        parent: {\n            required: [[\"group\"], [\"menu\"], [\"menubar\"]],\n        },\n        children: {\n            presentational: true,\n            required: [],\n        },\n    },\n    meter: {\n        abstract: false,\n        inherited: [\"range\"],\n        attributes: [\n            [\n                \"aria-valuemax\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: \"100\",\n                },\n            ],\n            [\n                \"aria-valuemin\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: \"0\",\n                },\n            ],\n            [\n                \"aria-valuenow\",\n                {\n                    required: true,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n        ],\n        name: {\n            required: true,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: true,\n            required: [],\n        },\n    },\n    navigation: {\n        abstract: false,\n        inherited: [\"landmark\"],\n        attributes: [],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    none: {\n        abstract: false,\n        inherited: [],\n        attributes: [],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    note: {\n        abstract: false,\n        inherited: [\"section\"],\n        attributes: [],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    option: {\n        abstract: false,\n        inherited: [\"input\"],\n        attributes: [\n            [\n                \"aria-checked\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-posinset\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-selected\",\n                {\n                    required: true,\n                    prohibited: false,\n                    value: \"false\",\n                },\n            ],\n            [\n                \"aria-setsize\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n        ],\n        name: {\n            required: true,\n            prohibited: false,\n            from: [\"author\", \"contents\"],\n        },\n        parent: {\n            required: [[\"group\"], [\"listbox\"]],\n        },\n        children: {\n            presentational: true,\n            required: [],\n        },\n    },\n    paragraph: {\n        abstract: false,\n        inherited: [\"section\"],\n        attributes: [\n            [\n                \"aria-label\",\n                {\n                    required: false,\n                    prohibited: true,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-labelledby\",\n                {\n                    required: false,\n                    prohibited: true,\n                    value: null,\n                },\n            ],\n        ],\n        name: {\n            required: false,\n            prohibited: true,\n            from: [],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    presentation: {\n        abstract: false,\n        inherited: [\"structure\"],\n        attributes: [\n            [\n                \"aria-label\",\n                {\n                    required: false,\n                    prohibited: true,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-labelledby\",\n                {\n                    required: false,\n                    prohibited: true,\n                    value: null,\n                },\n            ],\n        ],\n        name: {\n            required: false,\n            prohibited: true,\n            from: [],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    progressbar: {\n        abstract: false,\n        inherited: [\"range\", \"widget\"],\n        attributes: [\n            [\n                \"aria-valuemax\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: \"100\",\n                },\n            ],\n            [\n                \"aria-valuemin\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: \"0\",\n                },\n            ],\n        ],\n        name: {\n            required: true,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: true,\n            required: [],\n        },\n    },\n    radio: {\n        abstract: false,\n        inherited: [\"input\"],\n        attributes: [\n            [\n                \"aria-checked\",\n                {\n                    required: true,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-posinset\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-setsize\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n        ],\n        name: {\n            required: true,\n            prohibited: false,\n            from: [\"author\", \"contents\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: true,\n            required: [],\n        },\n    },\n    radiogroup: {\n        abstract: false,\n        inherited: [\"select\"],\n        attributes: [\n            [\n                \"aria-errormessage\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-invalid\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-readonly\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-required\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n        ],\n        name: {\n            required: true,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [[\"radio\"]],\n        },\n    },\n    range: {\n        abstract: true,\n        inherited: [\"structure\"],\n        attributes: [\n            [\n                \"aria-valuemax\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-valuemin\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-valuenow\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-valuetext\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n        ],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    region: {\n        abstract: false,\n        inherited: [\"landmark\"],\n        attributes: [],\n        name: {\n            required: true,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    roletype: {\n        abstract: true,\n        inherited: [],\n        attributes: [\n            [\n                \"aria-atomic\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-busy\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-controls\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-current\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-describedby\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-details\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-dropeffect\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-flowto\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-grabbed\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-hidden\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-keyshortcuts\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-label\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-labelledby\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-live\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-owns\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-relevant\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-roledescription\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n        ],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    row: {\n        abstract: false,\n        inherited: [\"group\", \"widget\"],\n        attributes: [\n            [\n                \"aria-colindex\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-expanded\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-level\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-posinset\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-rowindex\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-selected\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-setsize\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n        ],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\", \"contents\"],\n        },\n        parent: {\n            required: [[\"grid\"], [\"rowgroup\"], [\"table\"], [\"treegrid\"]],\n        },\n        children: {\n            presentational: false,\n            required: [[\"cell\"], [\"columnheader\"], [\"gridcell\"], [\"rowheader\"]],\n        },\n    },\n    rowgroup: {\n        abstract: false,\n        inherited: [\"structure\"],\n        attributes: [],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [[\"grid\"], [\"table\"], [\"treegrid\"]],\n        },\n        children: {\n            presentational: false,\n            required: [[\"row\"]],\n        },\n    },\n    rowheader: {\n        abstract: false,\n        inherited: [\"cell\", \"gridcell\", \"sectionhead\"],\n        attributes: [\n            [\n                \"aria-expanded\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-sort\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n        ],\n        name: {\n            required: true,\n            prohibited: false,\n            from: [\"author\", \"contents\"],\n        },\n        parent: {\n            required: [[\"row\"]],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    scrollbar: {\n        abstract: false,\n        inherited: [\"range\", \"widget\"],\n        attributes: [\n            [\n                \"aria-controls\",\n                {\n                    required: true,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-disabled\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-orientation\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: \"vertical\",\n                },\n            ],\n            [\n                \"aria-valuemax\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: \"100\",\n                },\n            ],\n            [\n                \"aria-valuemin\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: \"0\",\n                },\n            ],\n            [\n                \"aria-valuenow\",\n                {\n                    required: true,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n        ],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: true,\n            required: [],\n        },\n    },\n    search: {\n        abstract: false,\n        inherited: [\"landmark\"],\n        attributes: [],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    searchbox: {\n        abstract: false,\n        inherited: [\"textbox\"],\n        attributes: [],\n        name: {\n            required: true,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    section: {\n        abstract: true,\n        inherited: [\"structure\"],\n        attributes: [],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    sectionhead: {\n        abstract: true,\n        inherited: [\"structure\"],\n        attributes: [],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\", \"contents\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    select: {\n        abstract: true,\n        inherited: [\"composite\", \"group\"],\n        attributes: [\n            [\n                \"aria-orientation\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n        ],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    separator: {\n        abstract: false,\n        inherited: [\"structure\", \"widget\"],\n        attributes: [\n            [\n                \"aria-disabled\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-orientation\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: \"horizontal\",\n                },\n            ],\n            [\n                \"aria-valuemax\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-valuemin\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-valuenow\",\n                {\n                    required: true,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-valuetext\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n        ],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: true,\n            required: [],\n        },\n    },\n    slider: {\n        abstract: false,\n        inherited: [\"input\", \"range\"],\n        attributes: [\n            [\n                \"aria-errormessage\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-haspopup\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-invalid\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-orientation\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: \"horizontal\",\n                },\n            ],\n            [\n                \"aria-readonly\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-valuemax\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: \"100\",\n                },\n            ],\n            [\n                \"aria-valuemin\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: \"0\",\n                },\n            ],\n            [\n                \"aria-valuenow\",\n                {\n                    required: true,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n        ],\n        name: {\n            required: true,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: true,\n            required: [],\n        },\n    },\n    spinbutton: {\n        abstract: false,\n        inherited: [\"composite\", \"input\", \"range\"],\n        attributes: [\n            [\n                \"aria-errormessage\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-invalid\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-readonly\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-required\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-valuemax\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-valuemin\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-valuenow\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-valuetext\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n        ],\n        name: {\n            required: true,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    status: {\n        abstract: false,\n        inherited: [\"section\"],\n        attributes: [\n            [\n                \"aria-atomic\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: \"true\",\n                },\n            ],\n            [\n                \"aria-live\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: \"polite\",\n                },\n            ],\n        ],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    strong: {\n        abstract: false,\n        inherited: [\"section\"],\n        attributes: [\n            [\n                \"aria-label\",\n                {\n                    required: false,\n                    prohibited: true,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-labelledby\",\n                {\n                    required: false,\n                    prohibited: true,\n                    value: null,\n                },\n            ],\n        ],\n        name: {\n            required: false,\n            prohibited: true,\n            from: [],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    structure: {\n        abstract: true,\n        inherited: [\"roletype\"],\n        attributes: [],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    subscript: {\n        abstract: false,\n        inherited: [\"section\"],\n        attributes: [\n            [\n                \"aria-label\",\n                {\n                    required: false,\n                    prohibited: true,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-labelledby\",\n                {\n                    required: false,\n                    prohibited: true,\n                    value: null,\n                },\n            ],\n        ],\n        name: {\n            required: false,\n            prohibited: true,\n            from: [],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    superscript: {\n        abstract: false,\n        inherited: [\"section\"],\n        attributes: [\n            [\n                \"aria-label\",\n                {\n                    required: false,\n                    prohibited: true,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-labelledby\",\n                {\n                    required: false,\n                    prohibited: true,\n                    value: null,\n                },\n            ],\n        ],\n        name: {\n            required: false,\n            prohibited: true,\n            from: [],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    switch: {\n        abstract: false,\n        inherited: [\"checkbox\"],\n        attributes: [\n            [\n                \"aria-checked\",\n                {\n                    required: true,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n        ],\n        name: {\n            required: true,\n            prohibited: false,\n            from: [\"author\", \"contents\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: true,\n            required: [],\n        },\n    },\n    tab: {\n        abstract: false,\n        inherited: [\"sectionhead\", \"widget\"],\n        attributes: [\n            [\n                \"aria-disabled\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-expanded\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-haspopup\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-posinset\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-selected\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: \"false\",\n                },\n            ],\n            [\n                \"aria-setsize\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n        ],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\", \"contents\"],\n        },\n        parent: {\n            required: [[\"tablist\"]],\n        },\n        children: {\n            presentational: true,\n            required: [],\n        },\n    },\n    table: {\n        abstract: false,\n        inherited: [\"section\"],\n        attributes: [\n            [\n                \"aria-colcount\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-rowcount\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n        ],\n        name: {\n            required: true,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [[\"row\"], [\"rowgroup\", \"row\"]],\n        },\n    },\n    tablist: {\n        abstract: false,\n        inherited: [\"composite\"],\n        attributes: [\n            [\n                \"aria-multiselectable\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-orientation\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: \"horizontal\",\n                },\n            ],\n        ],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [[\"tab\"]],\n        },\n    },\n    tabpanel: {\n        abstract: false,\n        inherited: [\"section\"],\n        attributes: [],\n        name: {\n            required: true,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    term: {\n        abstract: false,\n        inherited: [\"section\"],\n        attributes: [],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    textbox: {\n        abstract: false,\n        inherited: [\"input\"],\n        attributes: [\n            [\n                \"aria-activedescendant\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-autocomplete\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-errormessage\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-haspopup\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-invalid\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-multiline\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-placeholder\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-readonly\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-required\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n        ],\n        name: {\n            required: true,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    time: {\n        abstract: false,\n        inherited: [\"section\"],\n        attributes: [],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    timer: {\n        abstract: false,\n        inherited: [\"status\"],\n        attributes: [],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    toolbar: {\n        abstract: false,\n        inherited: [\"group\"],\n        attributes: [\n            [\n                \"aria-orientation\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: \"horizontal\",\n                },\n            ],\n        ],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    tooltip: {\n        abstract: false,\n        inherited: [\"section\"],\n        attributes: [],\n        name: {\n            required: true,\n            prohibited: false,\n            from: [\"author\", \"contents\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    tree: {\n        abstract: false,\n        inherited: [\"select\"],\n        attributes: [\n            [\n                \"aria-errormessage\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-invalid\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-multiselectable\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-orientation\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: \"vertical\",\n                },\n            ],\n            [\n                \"aria-required\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n        ],\n        name: {\n            required: true,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [[\"group\", \"treeitem\"], [\"treeitem\"]],\n        },\n    },\n    treegrid: {\n        abstract: false,\n        inherited: [\"grid\", \"tree\"],\n        attributes: [],\n        name: {\n            required: true,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [[\"row\"], [\"rowgroup\", \"row\"]],\n        },\n    },\n    treeitem: {\n        abstract: false,\n        inherited: [\"listitem\", \"option\"],\n        attributes: [\n            [\n                \"aria-expanded\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n            [\n                \"aria-haspopup\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n        ],\n        name: {\n            required: true,\n            prohibited: false,\n            from: [\"author\", \"contents\"],\n        },\n        parent: {\n            required: [[\"group\"], [\"tree\"]],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    widget: {\n        abstract: true,\n        inherited: [\"roletype\"],\n        attributes: [],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    window: {\n        abstract: true,\n        inherited: [\"roletype\"],\n        attributes: [\n            [\n                \"aria-modal\",\n                {\n                    required: false,\n                    prohibited: false,\n                    value: null,\n                },\n            ],\n        ],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    \"graphics-document\": {\n        abstract: false,\n        inherited: [\"document\"],\n        attributes: [],\n        name: {\n            required: true,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    \"graphics-object\": {\n        abstract: false,\n        inherited: [\"group\"],\n        attributes: [],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\", \"contents\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    \"graphics-symbol\": {\n        abstract: false,\n        inherited: [\"img\"],\n        attributes: [],\n        name: {\n            required: true,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: true,\n            required: [],\n        },\n    },\n    \"doc-abstract\": {\n        abstract: false,\n        inherited: [\"section\"],\n        attributes: [],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    \"doc-acknowledgments\": {\n        abstract: false,\n        inherited: [\"landmark\"],\n        attributes: [],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    \"doc-afterword\": {\n        abstract: false,\n        inherited: [\"landmark\"],\n        attributes: [],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    \"doc-appendix\": {\n        abstract: false,\n        inherited: [\"landmark\"],\n        attributes: [],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    \"doc-backlink\": {\n        abstract: false,\n        inherited: [\"link\"],\n        attributes: [],\n        name: {\n            required: true,\n            prohibited: false,\n            from: [\"author\", \"contents\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    \"doc-biblioentry\": {\n        abstract: false,\n        inherited: [\"listitem\"],\n        attributes: [],\n        name: {\n            required: true,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [[\"doc-bibliography\"]],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    \"doc-bibliography\": {\n        abstract: false,\n        inherited: [\"landmark\"],\n        attributes: [],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [[\"doc-biblioentry\"]],\n        },\n    },\n    \"doc-biblioref\": {\n        abstract: false,\n        inherited: [\"link\"],\n        attributes: [],\n        name: {\n            required: true,\n            prohibited: false,\n            from: [\"author\", \"contents\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    \"doc-chapter\": {\n        abstract: false,\n        inherited: [\"landmark\"],\n        attributes: [],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    \"doc-colophon\": {\n        abstract: false,\n        inherited: [\"section\"],\n        attributes: [],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    \"doc-conclusion\": {\n        abstract: false,\n        inherited: [\"landmark\"],\n        attributes: [],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    \"doc-cover\": {\n        abstract: false,\n        inherited: [\"img\"],\n        attributes: [],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    \"doc-credit\": {\n        abstract: false,\n        inherited: [\"section\"],\n        attributes: [],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    \"doc-credits\": {\n        abstract: false,\n        inherited: [\"landmark\"],\n        attributes: [],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    \"doc-dedication\": {\n        abstract: false,\n        inherited: [\"section\"],\n        attributes: [],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    \"doc-endnote\": {\n        abstract: false,\n        inherited: [\"listitem\"],\n        attributes: [],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [[\"doc-endnotes\"]],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    \"doc-endnotes\": {\n        abstract: false,\n        inherited: [\"landmark\"],\n        attributes: [],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [[\"doc-endnote\"]],\n        },\n    },\n    \"doc-epigraph\": {\n        abstract: false,\n        inherited: [\"section\"],\n        attributes: [],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    \"doc-epilogue\": {\n        abstract: false,\n        inherited: [\"landmark\"],\n        attributes: [],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    \"doc-errata\": {\n        abstract: false,\n        inherited: [\"landmark\"],\n        attributes: [],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    \"doc-example\": {\n        abstract: false,\n        inherited: [\"section\"],\n        attributes: [],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    \"doc-footnote\": {\n        abstract: false,\n        inherited: [\"section\"],\n        attributes: [],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    \"doc-foreword\": {\n        abstract: false,\n        inherited: [\"landmark\"],\n        attributes: [],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    \"doc-glossary\": {\n        abstract: false,\n        inherited: [\"landmark\"],\n        attributes: [],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [[\"term\", \"definition\"]],\n        },\n    },\n    \"doc-glossref\": {\n        abstract: false,\n        inherited: [\"link\"],\n        attributes: [],\n        name: {\n            required: true,\n            prohibited: false,\n            from: [\"author\", \"contents\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    \"doc-index\": {\n        abstract: false,\n        inherited: [\"navigation\"],\n        attributes: [],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    \"doc-introduction\": {\n        abstract: false,\n        inherited: [\"landmark\"],\n        attributes: [],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    \"doc-noteref\": {\n        abstract: false,\n        inherited: [\"link\"],\n        attributes: [],\n        name: {\n            required: true,\n            prohibited: false,\n            from: [\"author\", \"contents\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    \"doc-notice\": {\n        abstract: false,\n        inherited: [\"note\"],\n        attributes: [],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    \"doc-pagebreak\": {\n        abstract: false,\n        inherited: [\"separator\"],\n        attributes: [],\n        name: {\n            required: true,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: true,\n            required: [],\n        },\n    },\n    \"doc-pagelist\": {\n        abstract: false,\n        inherited: [\"navigation\"],\n        attributes: [],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    \"doc-part\": {\n        abstract: false,\n        inherited: [\"landmark\"],\n        attributes: [],\n        name: {\n            required: true,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    \"doc-preface\": {\n        abstract: false,\n        inherited: [\"landmark\"],\n        attributes: [],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    \"doc-prologue\": {\n        abstract: false,\n        inherited: [\"landmark\"],\n        attributes: [],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    \"doc-pullquote\": {\n        abstract: false,\n        inherited: [\"none\"],\n        attributes: [],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    \"doc-qna\": {\n        abstract: false,\n        inherited: [\"section\"],\n        attributes: [],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    \"doc-subtitle\": {\n        abstract: false,\n        inherited: [\"sectionhead\"],\n        attributes: [],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    \"doc-tip\": {\n        abstract: false,\n        inherited: [\"note\"],\n        attributes: [],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n    \"doc-toc\": {\n        abstract: false,\n        inherited: [\"navigation\"],\n        attributes: [],\n        name: {\n            required: false,\n            prohibited: false,\n            from: [\"author\"],\n        },\n        parent: {\n            required: [],\n        },\n        children: {\n            presentational: false,\n            required: [],\n        },\n    },\n};\n//# sourceMappingURL=data.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-aria/src/role/data.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-aria/src/role/predicate.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-aria/src/role/predicate.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./predicate/has-name */ \"./node_modules/@siteimprove/alfa-aria/src/role/predicate/has-name.js\"), exports);\n//# sourceMappingURL=predicate.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-aria/src/role/predicate.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-aria/src/role/predicate/has-name.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-aria/src/role/predicate/has-name.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.hasName = void 0;\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst { equals } = alfa_predicate_1.Predicate;\nfunction hasName(nameOrPredicate, ...names) {\n    let predicate;\n    if (typeof nameOrPredicate === \"function\") {\n        predicate = nameOrPredicate;\n    }\n    else {\n        predicate = equals(nameOrPredicate, ...names);\n    }\n    return (role) => predicate(role.name);\n}\nexports.hasName = hasName;\n//# sourceMappingURL=has-name.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-aria/src/role/predicate/has-name.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-array/src/array.js":
/*!***********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-array/src/array.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Array = void 0;\nconst alfa_clone_1 = __webpack_require__(/*! @siteimprove/alfa-clone */ \"./node_modules/@siteimprove/alfa-clone/src/index.js\");\nconst alfa_comparable_1 = __webpack_require__(/*! @siteimprove/alfa-comparable */ \"./node_modules/@siteimprove/alfa-comparable/src/index.js\");\nconst alfa_equatable_1 = __webpack_require__(/*! @siteimprove/alfa-equatable */ \"./node_modules/@siteimprove/alfa-equatable/src/index.js\");\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_json_1 = __webpack_require__(/*! @siteimprove/alfa-json */ \"./node_modules/@siteimprove/alfa-json/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst builtin = __webpack_require__(/*! ./builtin */ \"./node_modules/@siteimprove/alfa-array/src/builtin.js\");\nconst { not } = alfa_predicate_1.Predicate;\nconst { compareComparable } = alfa_comparable_1.Comparable;\n/**\n * @public\n */\nvar Array;\n(function (Array) {\n    function isArray(value) {\n        return builtin.Array.isArray(value);\n    }\n    Array.isArray = isArray;\n    function of(...values) {\n        return values;\n    }\n    Array.of = of;\n    function empty() {\n        return [];\n    }\n    Array.empty = empty;\n    function allocate(capacity) {\n        return new builtin.Array(capacity);\n    }\n    Array.allocate = allocate;\n    /**\n     * @remarks\n     * Unlike the built-in function of the same name, this function will pass\n     * along existing arrays as-is instead of returning a copy.\n     */\n    function from(iterable) {\n        if (isArray(iterable)) {\n            return iterable;\n        }\n        return [...iterable];\n    }\n    Array.from = from;\n    function size(array) {\n        return array.length;\n    }\n    Array.size = size;\n    function isEmpty(array) {\n        return array.length === 0;\n    }\n    Array.isEmpty = isEmpty;\n    function copy(array) {\n        return array.slice(0);\n    }\n    Array.copy = copy;\n    function clone(array) {\n        return array.map(alfa_clone_1.Clone.clone);\n    }\n    Array.clone = clone;\n    function forEach(array, callback) {\n        for (let i = 0, n = array.length; i < n; i++) {\n            callback(array[i], i);\n        }\n    }\n    Array.forEach = forEach;\n    function map(array, mapper) {\n        const result = new builtin.Array(array.length);\n        for (let i = 0, n = array.length; i < n; i++) {\n            result[i] = mapper(array[i], i);\n        }\n        return result;\n    }\n    Array.map = map;\n    function flatMap(array, mapper) {\n        const result = empty();\n        for (let i = 0, n = array.length; i < n; i++) {\n            result.push(...mapper(array[i], i));\n        }\n        return result;\n    }\n    Array.flatMap = flatMap;\n    function flatten(array) {\n        return flatMap(array, (array) => array);\n    }\n    Array.flatten = flatten;\n    function reduce(array, reducer, accumulator) {\n        for (let i = 0, n = array.length; i < n; i++) {\n            accumulator = reducer(accumulator, array[i], i);\n        }\n        return accumulator;\n    }\n    Array.reduce = reduce;\n    function reduceWhile(array, predicate, reducer, accumulator) {\n        for (let i = 0, n = array.length; i < n; i++) {\n            const value = array[i];\n            if (predicate(value, i)) {\n                accumulator = reducer(accumulator, value, i);\n            }\n            else {\n                break;\n            }\n        }\n        return accumulator;\n    }\n    Array.reduceWhile = reduceWhile;\n    function reduceUntil(array, predicate, reducer, accumulator) {\n        return reduceWhile(array, not(predicate), reducer, accumulator);\n    }\n    Array.reduceUntil = reduceUntil;\n    function apply(array, mapper) {\n        return flatMap(mapper, (mapper) => map(array, mapper));\n    }\n    Array.apply = apply;\n    function filter(array, predicate) {\n        const result = empty();\n        for (let i = 0, n = array.length; i < n; i++) {\n            const value = array[i];\n            if (predicate(value, i)) {\n                result.push(value);\n            }\n        }\n        return result;\n    }\n    Array.filter = filter;\n    function reject(array, predicate) {\n        return filter(array, not(predicate));\n    }\n    Array.reject = reject;\n    function find(array, predicate) {\n        for (let i = 0, n = array.length; i < n; i++) {\n            const value = array[i];\n            if (predicate(value, i)) {\n                return alfa_option_1.Option.of(value);\n            }\n        }\n        return alfa_option_1.None;\n    }\n    Array.find = find;\n    function findLast(array, predicate) {\n        for (let i = array.length - 1; i >= 0; i--) {\n            const value = array[i];\n            if (predicate(value, i)) {\n                return alfa_option_1.Option.of(value);\n            }\n        }\n        return alfa_option_1.None;\n    }\n    Array.findLast = findLast;\n    function includes(array, value) {\n        return some(array, alfa_predicate_1.Predicate.equals(value));\n    }\n    Array.includes = includes;\n    function collect(array, mapper) {\n        const result = empty();\n        for (let i = 0, n = array.length; i < n; i++) {\n            for (const value of mapper(array[i], i)) {\n                result.push(value);\n            }\n        }\n        return result;\n    }\n    Array.collect = collect;\n    function collectFirst(array, mapper) {\n        for (let i = 0, n = array.length; i < n; i++) {\n            const value = mapper(array[i], i);\n            if (value.isSome()) {\n                return value;\n            }\n        }\n        return alfa_option_1.None;\n    }\n    Array.collectFirst = collectFirst;\n    function some(array, predicate) {\n        for (let i = 0, n = array.length; i < n; i++) {\n            if (predicate(array[i], i)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    Array.some = some;\n    function none(array, predicate) {\n        return every(array, not(predicate));\n    }\n    Array.none = none;\n    function every(array, predicate) {\n        for (let i = 0, n = array.length; i < n; i++) {\n            if (!predicate(array[i], i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    Array.every = every;\n    function count(array, predicate) {\n        return reduce(array, (count, value, index) => (predicate(value, index) ? count + 1 : count), 0);\n    }\n    Array.count = count;\n    function distinct(array) {\n        const result = empty();\n        for (let i = 0, n = array.length; i < n; i++) {\n            const value = array[i];\n            if (result.some(alfa_predicate_1.Predicate.equals(value))) {\n                continue;\n            }\n            result.push(value);\n        }\n        return result;\n    }\n    Array.distinct = distinct;\n    function get(array, index) {\n        return index < array.length ? alfa_option_1.Option.of(array[index]) : alfa_option_1.None;\n    }\n    Array.get = get;\n    function has(array, index) {\n        return index < array.length;\n    }\n    Array.has = has;\n    function set(array, index, value) {\n        if (index < array.length) {\n            array[index] = value;\n        }\n        return array;\n    }\n    Array.set = set;\n    function insert(array, index, value) {\n        if (index <= array.length) {\n            array.splice(index, 0, value);\n        }\n        return array;\n    }\n    Array.insert = insert;\n    function append(array, value) {\n        array.push(value);\n        return array;\n    }\n    Array.append = append;\n    function prepend(array, value) {\n        array.unshift(value);\n        return array;\n    }\n    Array.prepend = prepend;\n    function concat(array, ...iterables) {\n        return [...alfa_iterable_1.Iterable.concat(array, ...iterables)];\n    }\n    Array.concat = concat;\n    function subtract(array, ...iterables) {\n        return [...alfa_iterable_1.Iterable.subtract(array, ...iterables)];\n    }\n    Array.subtract = subtract;\n    function intersect(array, ...iterables) {\n        return [...alfa_iterable_1.Iterable.intersect(array, ...iterables)];\n    }\n    Array.intersect = intersect;\n    function zip(array, iterable) {\n        const result = empty();\n        const it = alfa_iterable_1.Iterable.iterator(iterable);\n        for (let i = 0, n = array.length; i < n; i++) {\n            const next = it.next();\n            if (next.done === true) {\n                break;\n            }\n            result.push([array[i], next.value]);\n        }\n        return result;\n    }\n    Array.zip = zip;\n    function first(array) {\n        return array.length > 0 ? alfa_option_1.Option.of(array[0]) : alfa_option_1.None;\n    }\n    Array.first = first;\n    function last(array) {\n        return array.length > 0 ? alfa_option_1.Option.of(array[array.length - 1]) : alfa_option_1.None;\n    }\n    Array.last = last;\n    function sort(array) {\n        return sortWith(array, compareComparable);\n    }\n    Array.sort = sort;\n    function sortWith(array, comparer) {\n        return array.sort(comparer);\n    }\n    Array.sortWith = sortWith;\n    function compare(a, b) {\n        return compareWith(a, b, compareComparable);\n    }\n    Array.compare = compare;\n    function compareWith(a, b, comparer) {\n        return alfa_iterable_1.Iterable.compareWith(a, b, comparer);\n    }\n    Array.compareWith = compareWith;\n    function search(array, value, comparer) {\n        let lower = 0;\n        let upper = array.length - 1;\n        while (lower <= upper) {\n            const middle = (lower + (upper - lower) / 2) >>> 0;\n            switch (comparer(value, array[middle])) {\n                case alfa_comparable_1.Comparison.Greater:\n                    lower = middle + 1;\n                    break;\n                case alfa_comparable_1.Comparison.Less:\n                    upper = middle - 1;\n                    break;\n                case alfa_comparable_1.Comparison.Equal:\n                    return middle;\n            }\n        }\n        return lower;\n    }\n    Array.search = search;\n    function equals(a, b) {\n        if (a.length !== b.length) {\n            return false;\n        }\n        for (let i = 0, n = a.length; i < n; i++) {\n            if (!alfa_equatable_1.Equatable.equals(a[i], b[i])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    Array.equals = equals;\n    function hash(array, hash) {\n        for (let i = 0, n = array.length; i < n; i++) {\n            hash.writeUnknown(array[i]);\n        }\n        hash.writeUint32(array.length);\n    }\n    Array.hash = hash;\n    function iterator(array) {\n        return array[Symbol.iterator]();\n    }\n    Array.iterator = iterator;\n    function toJSON(array) {\n        return array.map((value) => alfa_json_1.Serializable.toJSON(value));\n    }\n    Array.toJSON = toJSON;\n})(Array || (exports.Array = Array = {}));\n//# sourceMappingURL=array.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-array/src/array.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-array/src/builtin.js":
/*!*************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-array/src/builtin.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// This file defines exports from the builtin `Array` constructor for internal\n// use only.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Array = void 0;\n/**\n * @internal\n */\nconst Builtin = Array;\nexports.Array = Builtin;\n//# sourceMappingURL=builtin.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-array/src/builtin.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-array/src/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-array/src/index.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * This package provides functionality for working with arrays.\n *\n * @packageDocumentation\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./array */ \"./node_modules/@siteimprove/alfa-array/src/array.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-array/src/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-bits/src/bits.js":
/*!*********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-bits/src/bits.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Bits = void 0;\n/**\n * @public\n */\nvar Bits;\n(function (Bits) {\n    function bit(i) {\n        return 1 << i;\n    }\n    Bits.bit = bit;\n    function set(bits, i) {\n        return bits | bit(i);\n    }\n    Bits.set = set;\n    function clear(bits, i) {\n        return bits & ~bit(i);\n    }\n    Bits.clear = clear;\n    function test(bits, i) {\n        return (bits & bit(i)) !== 0;\n    }\n    Bits.test = test;\n    function take(bits, n) {\n        return bits & ((1 << n) - 1);\n    }\n    Bits.take = take;\n    function skip(bits, n) {\n        return bits >>> n;\n    }\n    Bits.skip = skip;\n    /**\n     * @remarks\n     * This is a 32-bit variant of the 64-bit population count algorithm outlined\n     * on Wikipedia. Until ECMAScript natively provides an efficient population\n     * count algorithm, this is the best we can do.\n     *\n     * {@link https://en.wikipedia.org/wiki/Hamming_weight}\n     */\n    function popCount(bits) {\n        bits -= (bits >> 1) & 0x55555555;\n        bits = (bits & 0x33333333) + ((bits >> 2) & 0x33333333);\n        bits = (bits + (bits >> 4)) & 0x0f0f0f0f;\n        bits += bits >> 8;\n        bits += bits >> 16;\n        return bits & 0x7f;\n    }\n    Bits.popCount = popCount;\n})(Bits || (exports.Bits = Bits = {}));\n//# sourceMappingURL=bits.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-bits/src/bits.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-bits/src/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-bits/src/index.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./bits */ \"./node_modules/@siteimprove/alfa-bits/src/bits.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-bits/src/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-branched/src/branched.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-branched/src/branched.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Branched = void 0;\nconst alfa_equatable_1 = __webpack_require__(/*! @siteimprove/alfa-equatable */ \"./node_modules/@siteimprove/alfa-equatable/src/index.js\");\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_json_1 = __webpack_require__(/*! @siteimprove/alfa-json */ \"./node_modules/@siteimprove/alfa-json/src/index.js\");\nconst alfa_list_1 = __webpack_require__(/*! @siteimprove/alfa-list */ \"./node_modules/@siteimprove/alfa-list/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst { not } = alfa_predicate_1.Predicate;\n/**\n * @public\n */\nclass Branched {\n    static of(value, ...branches) {\n        return new Branched(alfa_list_1.List.of(Value.of(value, branches.length === 0 ? alfa_option_1.None : alfa_option_1.Some.of(alfa_list_1.List.from(branches)))));\n    }\n    constructor(values) {\n        this._values = values;\n    }\n    get size() {\n        return this._values.size;\n    }\n    isEmpty() {\n        return false;\n    }\n    forEach(callback) {\n        this._values.forEach(({ value, branches }) => callback(value, branches.getOrElse(() => alfa_list_1.List.empty())));\n    }\n    map(mapper) {\n        return new Branched(this._values.reduce((values, { value, branches }) => merge(values, mapper(value, branches.getOrElse(() => alfa_list_1.List.empty())), branches), alfa_list_1.List.empty()));\n    }\n    apply(mapper) {\n        return mapper.flatMap((mapper) => this.map(mapper));\n    }\n    flatMap(mapper) {\n        return new Branched(this._values.reduce((values, { value, branches: scope }) => mapper(value, scope.getOrElse(() => alfa_list_1.List.empty()))._values.reduce((values, { value, branches }) => {\n            if (scope.isNone() && branches.isSome()) {\n                branches = unused(branches, this._values);\n            }\n            else {\n                branches = narrow(branches, scope);\n            }\n            return merge(values, value, branches);\n        }, values), alfa_list_1.List.empty()));\n    }\n    flatten() {\n        return this.flatMap((branched) => branched);\n    }\n    reduce(reducer, accumulator) {\n        return this._values.reduce((accumulator, value) => reducer(accumulator, value.value, value.branches.getOrElse(() => alfa_list_1.List.empty())), accumulator);\n    }\n    filter(predicate) {\n        return new Branched(this._values.filter(({ value, branches }) => predicate(value, branches.getOrElse(() => alfa_list_1.List.empty()))));\n    }\n    reject(predicate) {\n        return this.filter(not(predicate));\n    }\n    find(predicate) {\n        return this._values\n            .find(({ value, branches }) => predicate(value, branches.getOrElse(() => alfa_list_1.List.empty())))\n            .map(({ value }) => value);\n    }\n    includes(value) {\n        return this._values.some(({ value: found }) => alfa_equatable_1.Equatable.equals(value, found));\n    }\n    collect(mapper) {\n        return new Branched(this._values.reduce((values, { value, branches }) => mapper(value, branches.getOrElse(() => alfa_list_1.List.empty()))\n            .map((value) => merge(values, value, branches))\n            .getOr(values), alfa_list_1.List.empty()));\n    }\n    collectFirst(mapper) {\n        return this._values.collectFirst(({ value, branches }) => mapper(value, branches.getOrElse(() => alfa_list_1.List.empty())));\n    }\n    some(predicate) {\n        for (const value of this._values) {\n            if (predicate(value.value, value.branches.getOrElse(() => alfa_list_1.List.empty()))) {\n                return true;\n            }\n        }\n        return false;\n    }\n    none(predicate) {\n        return this.every(not(predicate));\n    }\n    every(predicate) {\n        for (const value of this._values) {\n            if (!predicate(value.value, value.branches.getOrElse(() => alfa_list_1.List.empty()))) {\n                return false;\n            }\n        }\n        return true;\n    }\n    count(predicate) {\n        return this.reduce((count, value, branches) => predicate(value, branches) ? count + 1 : count, 0);\n    }\n    /**\n     * @remarks\n     * As branched values merges branches with duplicate values, they will only\n     * ever contain distinct values.\n     */\n    distinct() {\n        return this;\n    }\n    tee(callback, ...args) {\n        callback(this, ...args);\n        return this;\n    }\n    branch(value, ...branches) {\n        return new Branched(merge(this._values, value, branches.length === 0 ? alfa_option_1.None : alfa_option_1.Some.of(alfa_list_1.List.from(branches))));\n    }\n    equals(value) {\n        return value instanceof Branched && value._values.equals(this._values);\n    }\n    hash(hash) {\n        hash.writeHashable(this._values);\n    }\n    *[Symbol.iterator]() {\n        for (const value of this._values) {\n            yield [value.value, value.branches.getOrElse(() => alfa_list_1.List.empty())];\n        }\n    }\n    toArray() {\n        return this._values\n            .toArray()\n            .map(({ value, branches }) => [\n            value,\n            branches.getOrElse(() => alfa_list_1.List.empty()).toArray(),\n        ]);\n    }\n    toJSON() {\n        return this._values\n            .toArray()\n            .map(({ value, branches }) => [\n            alfa_json_1.Serializable.toJSON(value),\n            branches.getOrElse(() => alfa_list_1.List.empty()).toJSON(),\n        ]);\n    }\n}\nexports.Branched = Branched;\n/**\n * @public\n */\n(function (Branched) {\n    function isBranched(value) {\n        return value instanceof Branched;\n    }\n    Branched.isBranched = isBranched;\n    function from(values) {\n        if (isBranched(values)) {\n            return values;\n        }\n        const [[value, branches], ...rest] = values;\n        return rest.reduce((result, [value, branches]) => result.branch(value, ...branches), Branched.of(value, ...branches));\n    }\n    Branched.from = from;\n    function traverse(values, mapper) {\n        return alfa_iterable_1.Iterable.reduce(values, (values, value, i) => values.flatMap((values) => mapper(value, i).map((value) => values.append(value))), Branched.of(alfa_list_1.List.empty()));\n    }\n    Branched.traverse = traverse;\n    function sequence(values) {\n        return traverse(values, (value) => value);\n    }\n    Branched.sequence = sequence;\n})(Branched || (exports.Branched = Branched = {}));\nclass Value {\n    static of(value, branches = alfa_option_1.None) {\n        return new Value(value, branches);\n    }\n    constructor(value, branches) {\n        this._value = value;\n        this._branches = branches;\n    }\n    get value() {\n        return this._value;\n    }\n    get branches() {\n        return this._branches;\n    }\n    equals(value) {\n        return (value instanceof Value &&\n            alfa_equatable_1.Equatable.equals(value._value, this._value) &&\n            alfa_equatable_1.Equatable.equals(value._branches, this._branches));\n    }\n    hash(hash) {\n        hash.writeUnknown(this._value).writeHashable(this._branches);\n    }\n}\nfunction merge(values, value, branches) {\n    if (values.size === 0) {\n        return alfa_list_1.List.of(Value.of(value, branches));\n    }\n    branches = values\n        .find((existing) => alfa_equatable_1.Equatable.equals(existing.value, value))\n        .map((existing) => existing.branches.flatMap((left) => branches.map((right) => left.concat(right))))\n        .getOr(branches);\n    return deduplicate(values, value, branches).append(Value.of(value, branches));\n}\nfunction deduplicate(values, value, branches) {\n    return values.reduce((values, existing) => {\n        if (alfa_equatable_1.Equatable.equals(existing.value, value)) {\n            return values;\n        }\n        if (existing.branches.isNone()) {\n            return branches.isNone() ? values : values.append(existing);\n        }\n        return existing.branches.reduce((values, existingBranches) => {\n            const deduplicated = branches.reduce((existing, branches) => existing.subtract(branches), existingBranches);\n            if (deduplicated.size === 0) {\n                return values;\n            }\n            return values.append(Value.of(existing.value, alfa_option_1.Some.of(deduplicated)));\n        }, values);\n    }, alfa_list_1.List.empty());\n}\nfunction narrow(branches, scope) {\n    return scope.map((scope) => branches.reduce((scope, branches) => scope.intersect(branches), scope));\n}\nfunction unused(branches, values) {\n    return values.reduce((branches, value) => value.branches\n        .flatMap((existing) => branches.map((branches) => branches.subtract(existing)))\n        .or(branches), branches);\n}\n//# sourceMappingURL=branched.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-branched/src/branched.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-branched/src/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-branched/src/index.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./branched */ \"./node_modules/@siteimprove/alfa-branched/src/branched.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-branched/src/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-cache/src/cache.js":
/*!***********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-cache/src/cache.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Cache = void 0;\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\n/**\n * @public\n */\nclass Cache {\n    static empty() {\n        return new Cache();\n    }\n    constructor() {\n        this._storage = new WeakMap();\n    }\n    get(key, ifMissing) {\n        if (this._storage.has(key)) {\n            const value = this._storage.get(key);\n            if (ifMissing === undefined) {\n                return alfa_option_1.Option.of(value);\n            }\n            return value;\n        }\n        if (ifMissing === undefined) {\n            return alfa_option_1.None;\n        }\n        const value = ifMissing(this);\n        this._storage.set(key, value);\n        return value;\n    }\n    has(key) {\n        return this._storage.has(key);\n    }\n    set(key, value) {\n        this._storage.set(key, value);\n        return this;\n    }\n    merge(iterable) {\n        return alfa_iterable_1.Iterable.reduce(iterable, (cache, [key, value]) => cache.set(key, value), this);\n    }\n}\nexports.Cache = Cache;\n/**\n * @public\n */\n(function (Cache) {\n    function from(iterable) {\n        return Cache.empty().merge(iterable);\n    }\n    Cache.from = from;\n})(Cache || (exports.Cache = Cache = {}));\n//# sourceMappingURL=cache.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-cache/src/cache.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-cache/src/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-cache/src/index.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./cache */ \"./node_modules/@siteimprove/alfa-cache/src/cache.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-cache/src/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-cascade/src/ancestor-filter.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-cascade/src/ancestor-filter.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Bucket = exports.AncestorFilter = void 0;\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_selector_1 = __webpack_require__(/*! @siteimprove/alfa-selector */ \"./node_modules/@siteimprove/alfa-selector/src/index.js\");\n/**\n * The ancestor filter is a data structure used for optimising selector matching\n * in the case of descendant selectors.\n *\n * @remarks\n * When traversing down through the DOM tree during selector matching, the\n * ancestor filter stores information about the ancestor elements that are\n * found up the path from the element that is currently being visited.\n * Given an element and a descendant selector, we can therefore quickly\n * determine if the selector might match an ancestor of the current element.\n *\n * The ancestor filter simply count the number of each ID, class, and type\n * amongst the path walked so far. When a descendant selector is encountered, we\n * can quickly see if the ancestor filter contains the ID, class, or type of the\n * ancestor part, without walking up the full tree again.\n *\n * We need to remember exact count rather than just existence because the\n * initial build of the cascade traverses the tree in depth-first order and\n * therefore needs to be able to *remove* item from the filter when going up.\n *\n * For example, consider the following DOM tree:\n *\n * section#content\n * +-- blockquote\n * +-- p.highlight\n *     +-- b\n *\n * For the `<b>` element, the ancestor filter would be:\n * \\{ ids: [[\"content\", 1]],\n *   classes: [[\"highlight\", 1]],\n *   types: [[\"p\", 1], [\"section\", 1]]\\}\n * Given a selector `main b`, we can therefore reject that the selector would\n * match the `<b>` as the ancestor filter does not contain the type `main`.\n *\n * However, given a selector `section.highlight`, the ancestor filter can only\n * tell that it **may** match the `<b>` element. In this case, it doesn't. So,\n * the filter acts as a quick guaranteed rejection mechanism, but actual match\n * test is needed to have an accurate final result.\n *\n * @privateRemarks\n * Ancestor filters are mutable! None of the operations of the ancestor filter\n * are idempotent to avoid keeping track of more information than strictly\n * necessary. This is however not a problem when ancestor filters are used\n * during top-down traversal of the DOM, in which case an element is only ever\n * visited once. If used elsewhere care must however be taken when adding and\n * removing elements; elements must only ever be added and removed once, and\n * an element must not be removed before being added.\n *\n * {@link http://doc.servo.org/style/bloom/struct.StyleBloom.html}\n *\n * @internal\n */\nclass AncestorFilter {\n    static empty() {\n        return new AncestorFilter();\n    }\n    constructor() {\n        this._ids = Bucket.empty();\n        this._classes = Bucket.empty();\n        this._types = Bucket.empty();\n    }\n    add(element) {\n        for (const id of element.id) {\n            this._ids.add(id);\n        }\n        this._types.add(element.name);\n        for (const className of element.classes) {\n            this._classes.add(className);\n        }\n    }\n    remove(element) {\n        for (const id of element.id) {\n            this._ids.remove(id);\n        }\n        this._types.remove(element.name);\n        for (const className of element.classes) {\n            this._classes.remove(className);\n        }\n    }\n    /**\n     * @internal\n     */\n    matches(selector) {\n        if (alfa_selector_1.Id.isId(selector)) {\n            return this._ids.has(selector.name);\n        }\n        if (alfa_selector_1.Class.isClass(selector)) {\n            return this._classes.has(selector.name);\n        }\n        if (alfa_selector_1.Type.isType(selector)) {\n            return this._types.has(selector.name);\n        }\n        return false;\n    }\n    /**\n     * Check if a selector can be rejected based on the ancestor filter.\n     */\n    canReject(selector) {\n        // If the selector is a simple selector, it must be in the filter in order to match.\n        if (alfa_selector_1.Id.isId(selector) || alfa_selector_1.Class.isClass(selector) || alfa_selector_1.Type.isType(selector)) {\n            return !this.matches(selector);\n        }\n        // If the selector is a compound selector, each of its component must be in\n        // the filter in order to match\n        if (alfa_selector_1.Compound.isCompound(selector)) {\n            // Compound selectors are right-leaning, so recurse to the left first as it\n            // is likely the shortest branch.\n            return alfa_iterable_1.Iterable.some(selector.selectors, (selector) => this.canReject(selector));\n        }\n        // If the selector is a complex selector with a descendant combinator, rejecting\n        // one side of the combinator is enough to reject the full selector.\n        // Sibling combinator are not handled by ancestor filters.\n        if (alfa_selector_1.Complex.isComplex(selector)) {\n            const { combinator } = selector;\n            if (combinator === alfa_selector_1.Combinator.Descendant ||\n                combinator === alfa_selector_1.Combinator.DirectDescendant) {\n                // Complex selectors are left-leaning, so recurse to the right first as it\n                // is likely the shortest branch.\n                return this.canReject(selector.right) || this.canReject(selector.left);\n            }\n        }\n        return false;\n    }\n    toJSON() {\n        return {\n            ids: this._ids.toJSON(),\n            classes: this._classes.toJSON(),\n            types: this._types.toJSON(),\n        };\n    }\n}\nexports.AncestorFilter = AncestorFilter;\n/**\n * An ancestor bucket stores entries with associated counts in order to keep\n * track of how many elements are associated with the entry.\n *\n * @remarks\n * When the number of elements associated with a given entry drops to zero then\n * the entry can be removed from the bucket.\n *\n * While most browser implementations use bloom filters for ancestor filters, we\n * can make do with native maps for two reasons: Memory is not much of a concern\n * as we only ever compute cascade once for every context, and native maps are\n * actually much faster than any bloom filter we might be able to cook up in\n * plain JavaScript.\n *\n * @privateRemarks\n * Buckets are mutable! Adding or removing elements happens by side effect.\n *\n * @internal\n */\nclass Bucket {\n    static empty() {\n        return new Bucket();\n    }\n    constructor() {\n        this._entries = new Map();\n    }\n    has(entry) {\n        return this._entries.has(entry);\n    }\n    add(entry) {\n        const count = this._entries.get(entry);\n        if (count === undefined) {\n            this._entries.set(entry, 1);\n        }\n        else {\n            this._entries.set(entry, count + 1);\n        }\n    }\n    remove(entry) {\n        const count = this._entries.get(entry);\n        if (count === undefined) {\n            return;\n        }\n        if (count === 1) {\n            this._entries.delete(entry);\n        }\n        else {\n            this._entries.set(entry, count - 1);\n        }\n    }\n    toJSON() {\n        return [...this._entries];\n    }\n}\nexports.Bucket = Bucket;\n//# sourceMappingURL=ancestor-filter.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-cascade/src/ancestor-filter.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-cascade/src/block.js":
/*!*************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-cascade/src/block.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Block = void 0;\nconst alfa_array_1 = __webpack_require__(/*! @siteimprove/alfa-array */ \"./node_modules/@siteimprove/alfa-array/src/index.js\");\nconst alfa_comparable_1 = __webpack_require__(/*! @siteimprove/alfa-comparable */ \"./node_modules/@siteimprove/alfa-comparable/src/index.js\");\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_json_1 = __webpack_require__(/*! @siteimprove/alfa-json */ \"./node_modules/@siteimprove/alfa-json/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_selector_1 = __webpack_require__(/*! @siteimprove/alfa-selector */ \"./node_modules/@siteimprove/alfa-selector/src/index.js\");\nconst precedence_1 = __webpack_require__(/*! ./precedence */ \"./node_modules/@siteimprove/alfa-cascade/src/precedence/index.js\");\nconst user_agent_1 = __webpack_require__(/*! ./user-agent */ \"./node_modules/@siteimprove/alfa-cascade/src/user-agent.js\");\n/**\n * While resolving cascade, a Block is a style rule that has been expanded with\n * its selector pre-parsed, its declarations extracted, and extra information\n * about Cascade Sorting Precedence.\n *\n * @remarks\n * Blocks imply coupling between the different parts and are thus grouped into\n * a single structure.\n *\n * Blocks form the data stored in the rule tree and selector map. Upon building the\n * cascade, style rules are turned into Blocks which are inserted into the selector\n * map; and then relevant Blocks are inserted into the rule tree upon matching elements.\n *\n * @internal\n */\nclass Block {\n    /**\n     * Create a block.\n     *\n     * @remarks\n     * This does not validate coupling of the data. Prefer using Block.from()\n     */\n    static of(rule, selector, declarations, precedence) {\n        return new Block(rule, selector, alfa_array_1.Array.from(declarations), precedence);\n    }\n    /**\n     * @internal\n     */\n    static empty() {\n        return this._empty;\n    }\n    constructor(rule, selector, declarations, precedence) {\n        this._rule = rule;\n        this._selector = selector;\n        this._declarations = declarations;\n        this._precedence = precedence;\n    }\n    get rule() {\n        return this._rule;\n    }\n    get selector() {\n        return this._selector;\n    }\n    get declarations() {\n        return this._declarations;\n    }\n    get precedence() {\n        return this._precedence;\n    }\n    equals(value) {\n        return (value instanceof Block &&\n            this._rule.equals(value._rule) &&\n            this._selector.equals(value._selector) &&\n            alfa_array_1.Array.equals(value._declarations, this._declarations) &&\n            precedence_1.Precedence.compare(value._precedence, this._precedence) ===\n                alfa_comparable_1.Comparison.Equal);\n    }\n    toJSON() {\n        return {\n            rule: this._rule.toJSON(),\n            selector: alfa_json_1.Serializable.toJSON(this._selector),\n            declarations: alfa_array_1.Array.toJSON(this._declarations),\n            precedence: precedence_1.Precedence.toJSON(this._precedence),\n        };\n    }\n}\nexports.Block = Block;\nBlock._empty = new Block(alfa_dom_1.h.rule.style(\"*\", []), alfa_selector_1.Universal.of(alfa_option_1.None), [], {\n    origin: precedence_1.Origin.UserAgent,\n    specificity: alfa_selector_1.Specificity.empty(),\n    order: Infinity,\n});\n/**\n * @internal\n */\n(function (Block) {\n    /**\n     * Build Blocks from a style rule. Returns the last order used, that is unchanged\n     * if selector couldn't be parsed, increased by 1 otherwise.\n     *\n     * @remarks\n     * Order is relative to the list of all style rules and thus cannot be inferred\n     * from the rule itself.\n     *\n     * A single rule creates more than one block. Rules with a list selector are\n     * split into their components. E.g., a `div, span { color: red }` rule will\n     * create one block for `div { color: red }`, and a similar one for `span`.\n     * Since all these blocks are declared at the same time, and are declaring\n     * the exact same declarations, they can safely share order.\n     */\n    function from(rule, order) {\n        let blocks = [];\n        for (const [_, selectors] of alfa_selector_1.Selector.parse(alfa_css_1.Lexer.lex(rule.selector))) {\n            const origin = rule.owner.includes(user_agent_1.UserAgent)\n                ? precedence_1.Origin.UserAgent\n                : precedence_1.Origin.Author;\n            order++;\n            for (const selector of selectors) {\n                blocks.push(Block.of(rule, selector, rule.style, {\n                    origin,\n                    order,\n                    specificity: selector.specificity,\n                }));\n            }\n        }\n        return [blocks, order];\n    }\n    Block.from = from;\n    Block.compare = (a, b) => precedence_1.Precedence.compare(a.precedence, b.precedence);\n})(Block || (exports.Block = Block = {}));\n//# sourceMappingURL=block.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-cascade/src/block.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-cascade/src/cascade.js":
/*!***************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-cascade/src/cascade.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Cascade = void 0;\nconst alfa_cache_1 = __webpack_require__(/*! @siteimprove/alfa-cache */ \"./node_modules/@siteimprove/alfa-cache/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_selector_1 = __webpack_require__(/*! @siteimprove/alfa-selector */ \"./node_modules/@siteimprove/alfa-selector/src/index.js\");\nconst ancestor_filter_1 = __webpack_require__(/*! ./ancestor-filter */ \"./node_modules/@siteimprove/alfa-cascade/src/ancestor-filter.js\");\nconst rule_tree_1 = __webpack_require__(/*! ./rule-tree */ \"./node_modules/@siteimprove/alfa-cascade/src/rule-tree.js\");\nconst selector_map_1 = __webpack_require__(/*! ./selector-map */ \"./node_modules/@siteimprove/alfa-cascade/src/selector-map.js\");\nconst user_agent_1 = __webpack_require__(/*! ./user-agent */ \"./node_modules/@siteimprove/alfa-cascade/src/user-agent.js\");\n/**\n * {@link https://drafts.csswg.org/css-cascade-5/}\n *\n * @remarks\n * The cascade associates to each element a node into a rule tree.\n * A single rule tree is built for each document or shadow root. The cascade\n * lazily fills it upon need and caches the associated node for each element.\n *\n * Upon creating a cascade, the full rule tree is built for the empty context\n * in order to leverage the ancestor filter during tree traversal. This assumes\n * that we will often query style of elements in an empty context (the default)\n * and thus benefit from pre-building it for all elements.\n *\n * For specific contexts, we only add the nodes in the rule tree as needed. We assume\n * that we mostly query only a few elements in a specific context, and that the cost\n * of rebuilding a full cascade would be too expensive.\n *\n * The cascade automatically includes the user agent style sheet.\n *\n * @public\n */\nclass Cascade {\n    static from(node, device) {\n        return this._cascades\n            .get(node, alfa_cache_1.Cache.empty)\n            .get(device, () => new Cascade(node, device));\n    }\n    constructor(root, device) {\n        this._rules = rule_tree_1.RuleTree.empty();\n        this._entries = alfa_cache_1.Cache.empty();\n        this._root = root;\n        this._device = device;\n        this._selectors = selector_map_1.SelectorMap.from([user_agent_1.UserAgent, ...root.style], device);\n        // Perform a baseline cascade with an empty context to benefit from ancestor\n        // filtering. As getting style information with an empty context will be the\n        // common case, we benefit a lot from pre-computing this style information\n        // with an ancestor filter applied.\n        const context = alfa_selector_1.Context.empty();\n        const filter = ancestor_filter_1.AncestorFilter.empty();\n        const visit = (node) => {\n            if (alfa_dom_1.Element.isElement(node)) {\n                // Entering an element: add it to the rule tree, and to the ancestor filter.\n                this._entries\n                    .get(node, alfa_cache_1.Cache.empty)\n                    .get(context, () => this._rules.add(this._selectors.get(node, context, filter)));\n                filter.add(node);\n            }\n            for (const child of node.children()) {\n                visit(child);\n            }\n            if (alfa_dom_1.Element.isElement(node)) {\n                // Exiting an element: remove it from the ancestor filter.\n                filter.remove(node);\n            }\n        };\n        visit(root);\n    }\n    /**\n     * Adds an element to the tree, with a custom ancestor filter.\n     *\n     * @remarks\n     * A new ancestor filter is built and filled with the element's ancestors.\n     * When building the full cascade for a DOM tree, this is pointless as we can\n     * just build the filter on the go during DOM tree traversal. When looking up\n     * the style of a single element, we assume that the time spent going up the\n     * DOM tree to build an ancestor filter will be saved by matching fewer\n     * selectors.\n     */\n    add(element, context) {\n        const filter = ancestor_filter_1.AncestorFilter.empty();\n        // Because CSS selectors do not cross shadow or document boundaries,\n        // only get ancestors in the same tree.\n        // Adding elements to the ancestor filter is commutative, so we\n        // can add them from bottom to root without reversing the sequence first.\n        element\n            .ancestors()\n            .filter(alfa_dom_1.Element.isElement)\n            .forEach(filter.add.bind(filter));\n        return this._rules.add(this._selectors.get(element, context, filter));\n    }\n    /**\n     * Get the rule tree node associated with an element.\n     *\n     * @remarks\n     * This also adds the element to the rule tree if needed. That is, the rule\n     * tree is build lazily upon need. For the empty context, we pre-build the full\n     * tree, so we can benefit from an ancestor filter as we traverse the full DOM tree.\n     *\n     * For other contexts, we assume that we will only need the style of a few elements\n     * (e.g., when a link is focused we normally only need the style of the link itself).\n     * Therefore, pre-building the full tree is not worth the cost.\n     */\n    get(element, context = alfa_selector_1.Context.empty()) {\n        return this._entries.get(element, alfa_cache_1.Cache.empty).get(context, \n        // If the entry hasn't been cached already, we assume we are querying\n        // for a single element and pay the price of building its custom ancestor\n        // filter, hopefully saving on the matching cost.\n        () => this.add(element, context));\n    }\n    toJSON() {\n        return {\n            root: this._root.toJSON(),\n            device: this._device.toJSON(),\n            selectors: this._selectors.toJSON(),\n            rules: this._rules.toJSON(),\n        };\n    }\n}\nexports.Cascade = Cascade;\nCascade._cascades = alfa_cache_1.Cache.empty();\n//# sourceMappingURL=cascade.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-cascade/src/cascade.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-cascade/src/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-cascade/src/index.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./cascade */ \"./node_modules/@siteimprove/alfa-cascade/src/cascade.js\"), exports);\n__exportStar(__webpack_require__(/*! ./rule-tree */ \"./node_modules/@siteimprove/alfa-cascade/src/rule-tree.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-cascade/src/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-cascade/src/precedence/index.js":
/*!************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-cascade/src/precedence/index.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./order */ \"./node_modules/@siteimprove/alfa-cascade/src/precedence/order.js\"), exports);\n__exportStar(__webpack_require__(/*! ./origin */ \"./node_modules/@siteimprove/alfa-cascade/src/precedence/origin.js\"), exports);\n__exportStar(__webpack_require__(/*! ./precedence */ \"./node_modules/@siteimprove/alfa-cascade/src/precedence/precedence.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-cascade/src/precedence/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-cascade/src/precedence/order.js":
/*!************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-cascade/src/precedence/order.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Order = void 0;\nconst alfa_comparable_1 = __webpack_require__(/*! @siteimprove/alfa-comparable */ \"./node_modules/@siteimprove/alfa-comparable/src/index.js\");\n/**\n * @public\n */\nvar Order;\n(function (Order) {\n    Order.compare = alfa_comparable_1.Comparable.compareNumber;\n})(Order || (exports.Order = Order = {}));\n//# sourceMappingURL=order.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-cascade/src/precedence/order.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-cascade/src/precedence/origin.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-cascade/src/precedence/origin.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Origin = void 0;\nconst alfa_comparable_1 = __webpack_require__(/*! @siteimprove/alfa-comparable */ \"./node_modules/@siteimprove/alfa-comparable/src/index.js\");\n/**\n * Cascading origins defined in ascending order; origins defined first have\n * lower precedence than origins defined later.\n *\n * {@link https://www.w3.org/TR/css-cascade-5/#cascading-origins}\n *\n * @public\n */\nvar Origin;\n(function (Origin) {\n    /**\n     * {@link https://www.w3.org/TR/css-cascade-5/#cascade-origin-ua}\n     */\n    Origin[Origin[\"UserAgent\"] = 1] = \"UserAgent\";\n    /**\n     * {@link https://www.w3.org/TR/css-cascade-5/#cascade-origin-author}\n     */\n    Origin[Origin[\"Author\"] = 2] = \"Author\";\n})(Origin || (exports.Origin = Origin = {}));\n/**\n * @public\n */\n(function (Origin) {\n    Origin.compare = alfa_comparable_1.Comparable.compareNumber;\n})(Origin || (exports.Origin = Origin = {}));\n//# sourceMappingURL=origin.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-cascade/src/precedence/origin.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-cascade/src/precedence/precedence.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-cascade/src/precedence/precedence.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Precedence = void 0;\nconst alfa_comparable_1 = __webpack_require__(/*! @siteimprove/alfa-comparable */ \"./node_modules/@siteimprove/alfa-comparable/src/index.js\");\nconst specificity_1 = __webpack_require__(/*! @siteimprove/alfa-selector/src/specificity */ \"./node_modules/@siteimprove/alfa-selector/src/specificity.js\");\nconst order_1 = __webpack_require__(/*! ./order */ \"./node_modules/@siteimprove/alfa-cascade/src/precedence/order.js\");\nconst origin_1 = __webpack_require__(/*! ./origin */ \"./node_modules/@siteimprove/alfa-cascade/src/precedence/origin.js\");\n/**\n * {@link https://drafts.csswg.org/css-cascade-5/#cascade-sort}\n *\n * @public\n */\nvar Precedence;\n(function (Precedence) {\n    function toJSON(precedence) {\n        return {\n            origin: precedence.origin,\n            specificity: precedence.specificity.toJSON(),\n            order: precedence.order,\n        };\n    }\n    Precedence.toJSON = toJSON;\n    Precedence.compare = (a, b) => alfa_comparable_1.Comparable.compareLexicographically([a.origin, a.specificity, a.order], [b.origin, b.specificity, b.order], [origin_1.Origin.compare, specificity_1.Specificity.compare, order_1.Order.compare]);\n})(Precedence || (exports.Precedence = Precedence = {}));\n//# sourceMappingURL=precedence.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-cascade/src/precedence/precedence.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-cascade/src/rule-tree.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-cascade/src/rule-tree.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.RuleTree = void 0;\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst block_1 = __webpack_require__(/*! ./block */ \"./node_modules/@siteimprove/alfa-cascade/src/block.js\");\n/**\n * The rule tree is a data structure used for storing the rules that match each\n * element when computing cascade for a document.\n *\n * @remarks\n * Rules are stored in order from most to least precedence (according to cascade\n * sorting order); rules lower in the tree have therefore higher precedence than\n * rules higher in the tree. Each element gets a pointer to the highest\n * precedence rule it matched and can then follow pointers up the rule tree to\n * locate rules of decreasing precedence that the element also matches. This\n * allows elements that share matched rules to also share a path in the rule tree.\n *\n * As an example, consider elements `A = <div class=\"foo\" href=\"A\">`  and\n * `B = <div class=\"foo bar\">`. Element A matches rules `div`, `.foo` and\n * `.foo[href]` whereas element B matches rules `div`, `.foo` and `.bar`. The\n * naïve approach to associating these matched rules with elements\n * would be to associate an array of `[\".foo[href]\", \".foo\", \"div\"]` with\n * element A and an array of `[\".bar\", \".foo\", \"div\"]` with element B. With the\n * rule tree, we instead start by inserting the matched rules for element A into\n * the tree:\n *\n *  \"div\"\n *  +-- \".foo\"\n *      +-- \".foo[href]\"     (A)\n *\n * We then associate rule `\".foo[href]\"` with element A and insert the matched\n * rules for element B into the tree:\n *\n *  \"div\"\n *  +-- \".foo\"\n *      +-- \".foo[href]\"    (A)\n *      +-- \".bar\"          (B)\n *\n * We then associate the rule `\".bar\"` with element B, and we're done. Notice how\n * the tree branches at rule `\".foo\"`, allowing the two elements to share the\n * path in the rule tree that they have in common. This approach is conceptually\n * similar to associating arrays of matched rules with elements with the\n * difference being that we use linked lists instead of arrays, allowing us to\n * share parts of the list between elements. This allows for a much more memory\n * efficient way of associating matched rules with elements, in particular for\n * rules that match most elements, such as the universal selector or `html` and\n * `body`.\n *\n * Note that the resulting rule tree depends greatly on the order in which\n * rules are inserted, which must then be by increasing precedence. The `.foo`\n * and `.bar` selectors are not directly comparable; the example above assumes\n * that the `.bar` rule came later in the style sheet order and therefore wins\n * the cascade sort by \"Order of Appearance\". This information is not available\n * for the rule tree which relies on rules being fed to it in increasing\n * precedence for each element. If `.bar` came before `.foo`, the resulting tree\n * would be (notice that `.foo` is not sharable anymore):\n *\n * \"div\"\n * +-- \".foo\"\n *     +-- \".foo[href]\"   (A)\n * +-- \".bar\"\n *     +-- \".foo\"         (B)\n *\n * {@link http://doc.servo.org/style/rule_tree/struct.RuleTree.html}\n *\n * @privateRemarks\n * The rules tree is actually a forest of nodes since many elements do not share\n * any matched selector. We artificially root it at a fake node with no\n * declarations, hence no impact on style. The fake root is not serialized.\n *\n * @public\n */\nclass RuleTree {\n    static empty() {\n        return new RuleTree();\n    }\n    constructor() {\n        // Rooting the forest at a fake node with no declaration.\n        this._root = RuleTree.Node.of(block_1.Block.empty(), [], alfa_option_1.None);\n    }\n    /**\n     * Add a bunch of items to the tree. Returns the last node created, which is\n     * the highest precedence node for that list of items.\n     *\n     * @remarks\n     * The rules are assumed to be:\n     * 1. all matching the same element; and\n     * 2. be all the rules matching that element.\n     *\n     * It is up to the caller to ensure this is true, as the tree itself cannot\n     * check that (notably, it has no access to the DOM tree to ensure the rules\n     * match the same element; nor to the origin or order of the rules to check\n     * cascade order).\n     *\n     * @privateRemarks\n     * This is stateful. Adding rules to a rule tree does mutate it!\n     *\n     * @internal\n     */\n    add(rules) {\n        let parent = this._root;\n        for (const block of alfa_iterable_1.Iterable.sortWith(rules, block_1.Block.compare)) {\n            // Insert the next rule into the current parent, using the returned rule\n            // entry as the parent of the next rule to insert. This way, we gradually\n            // build up a path of rule entries and then return the final entry to the\n            // caller.\n            parent = parent.add(block);\n        }\n        return parent;\n    }\n    toJSON() {\n        return this._root.children.map((node) => node.toJSON());\n    }\n}\nexports.RuleTree = RuleTree;\n/**\n * @public\n */\n(function (RuleTree) {\n    class Node {\n        static of(block, children, parent) {\n            return new Node(block, children, parent);\n        }\n        constructor(block, children, parent) {\n            this._block = block;\n            this._children = children;\n            this._parent = parent;\n        }\n        get block() {\n            return this._block;\n        }\n        get children() {\n            return this._children;\n        }\n        get parent() {\n            return this._parent;\n        }\n        *ancestors() {\n            for (const parent of this._parent) {\n                yield parent;\n                yield* parent.ancestors();\n            }\n        }\n        *inclusiveAncestors() {\n            yield this;\n            yield* this.ancestors();\n        }\n        /**\n         * Adds style rule to a node in the tree. Returns the node where the rule\n         * was added.\n         *\n         * @privateRemarks\n         * This is stateful. Adding a rule to a node mutates the node!\n         *\n         * @internal\n         */\n        add(block) {\n            // If we have already encountered the exact same selector (physical identity),\n            // we're done.\n            // This occurs when the exact same style rule matches several elements.\n            // The first element added to the rule tree will add that rule, subsequent\n            // ones will just reuse it (if the path so far in the rule tree has\n            // completely been shared).\n            // Notably, because it is the exact same selector, it controls the exact\n            // same rules, so all the information is already in the tree.\n            if (this._block.selector === block.selector) {\n                return this;\n            }\n            // Otherwise, if there is a child with an identical but separate selector,\n            // recursively add to it.\n            // This happens, e.g., when encountering two \".foo\" selectors. They are\n            // then sorted by order of appearance (by assumption) and the later must\n            // be a descendant of the former as it has higher precedence.\n            for (const child of this._children) {\n                if (child._block.selector.equals(block.selector)) {\n                    return child.add(block);\n                }\n            }\n            // Otherwise, the selector is brand new (for this branch of the tree).\n            // Add it as a new child and return it (further rules in the same batch,\n            // matching the same element, should be added as its child.\n            const node = Node.of(block, [], alfa_option_1.Option.of(this));\n            this._children.push(node);\n            return node;\n        }\n        toJSON() {\n            return {\n                block: this._block.toJSON(),\n                children: this._children.map((node) => node.toJSON()),\n            };\n        }\n    }\n    RuleTree.Node = Node;\n})(RuleTree || (exports.RuleTree = RuleTree = {}));\n//# sourceMappingURL=rule-tree.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-cascade/src/rule-tree.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-cascade/src/selector-map.js":
/*!********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-cascade/src/selector-map.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SelectorMap = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_css_feature_1 = __webpack_require__(/*! @siteimprove/alfa-css-feature */ \"./node_modules/@siteimprove/alfa-css-feature/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_refinement_1 = __webpack_require__(/*! @siteimprove/alfa-refinement */ \"./node_modules/@siteimprove/alfa-refinement/src/index.js\");\nconst alfa_selector_1 = __webpack_require__(/*! @siteimprove/alfa-selector */ \"./node_modules/@siteimprove/alfa-selector/src/index.js\");\nconst block_1 = __webpack_require__(/*! ./block */ \"./node_modules/@siteimprove/alfa-cascade/src/block.js\");\nconst { equals, property } = alfa_predicate_1.Predicate;\nconst { and } = alfa_refinement_1.Refinement;\nconst { isComplex } = alfa_selector_1.Complex;\nconst isDescendantSelector = and(isComplex, property(\"combinator\", equals(alfa_selector_1.Combinator.Descendant, alfa_selector_1.Combinator.DirectDescendant)));\n/**\n * The selector map is a data structure used for providing indexed access to the\n * rules that are likely to match a given element.\n *\n * @remarks\n * Rules are indexed according to their key selector, which is the selector\n * that a given element MUST match in order for the rest of the selector to also\n * match. A key selector can be either an ID selector, a class selector, or a\n * type selector. In a complex selector, the key selector will be the\n * right-most selector, e.g. given `main .foo + div` the key selector would be\n * `div`. In a compound selector, the key selector will be left-most selector,\n * e.g. given `div.foo` the key selector would also be `div`.\n *\n * Any element matching a selector must match its key selector. E.g., anything\n * matching `main .foo + div` must be a `div`. Reciprocally, a `<div class\"bar\">`\n * can only match selectors whose key selector is `div` or `bar`. Thus, filtering\n * on key selectors decrease the search space for matching selector before the\n * computation heavy steps of traversing the DOM to look for siblings or ancestors.\n *\n * @privateRemarks\n * Internally, the selector map has three maps and a list in one of which it\n * will store a given selector. The three maps are used for selectors for which\n * a key selector exist; one for ID selectors, one for class selectors, and one\n * for type selectors. The list is used for any remaining selectors (e.g.,\n * pseudo-classes and -elements selectors have no key selector). When looking\n * up the rules that match an element, the ID, class names, and type of the\n * element are used for looking up potentially matching selectors in the three\n * maps. Selector matching is then performed against this list of potentially\n * matching selectors, plus the list of remaining selectors, in order to\n * determine the final set of matches.\n *\n * {@link http://doc.servo.org/style/selector_map/struct.SelectorMap.html}\n *\n * @internal\n */\nclass SelectorMap {\n    static of(ids, classes, types, other) {\n        return new SelectorMap(ids, classes, types, other);\n    }\n    constructor(ids, classes, types, other) {\n        this._ids = ids;\n        this._classes = classes;\n        this._types = types;\n        this._other = other;\n    }\n    /**\n     * Get all blocks matching a given element and context, an optional\n     * ancestor filter can be provided to optimize performances.\n     */\n    *get(element, context, filter) {\n        function* collect(candidates) {\n            for (const block of candidates) {\n                // If the ancestor filter can reject the selector, escape\n                if (isDescendantSelector(block.selector) &&\n                    filter.canReject(block.selector.left)) {\n                    continue;\n                }\n                // otherwise, do the actual match.\n                if (block.selector.matches(element, context)) {\n                    yield block;\n                }\n            }\n        }\n        for (const id of element.id) {\n            yield* collect(this._ids.get(id));\n        }\n        yield* collect(this._types.get(element.name));\n        for (const className of element.classes) {\n            yield* collect(this._classes.get(className));\n        }\n        yield* collect(this._other);\n    }\n    toJSON() {\n        return {\n            ids: this._ids.toJSON(),\n            classes: this._classes.toJSON(),\n            types: this._types.toJSON(),\n            other: this._other.map((node) => node.toJSON()),\n        };\n    }\n}\nexports.SelectorMap = SelectorMap;\n/**\n * @internal\n */\n(function (SelectorMap) {\n    function from(sheets, device) {\n        // Every rule encountered in style sheets is assigned an increasing number\n        // that denotes declaration order. While rules are stored in buckets in the\n        // order in which they were declared, information related to ordering will\n        // otherwise no longer be available once rules from different buckets are\n        // combined.\n        let order = 0;\n        const ids = Bucket.empty();\n        const classes = Bucket.empty();\n        const types = Bucket.empty();\n        const other = [];\n        const add = (block) => {\n            const keySelector = block.selector.key;\n            if (!keySelector.isSome()) {\n                other.push(block);\n            }\n            else {\n                const key = keySelector.get();\n                const buckets = { id: ids, class: classes, type: types };\n                buckets[key.type].add(key.name, block);\n            }\n        };\n        const visit = (rule) => {\n            // For style rule, we just store its blocks.\n            if (alfa_dom_1.StyleRule.isStyleRule(rule)) {\n                // Style rules with empty style blocks aren't relevant and so can be\n                // skipped entirely.\n                if (rule.style.isEmpty()) {\n                    return;\n                }\n                let blocks = [];\n                [blocks, order] = block_1.Block.from(rule, order);\n                for (const block of blocks) {\n                    add(block);\n                }\n            }\n            // For media rules, we recurse into the child rules if and only if the\n            // media condition matches the device.\n            else if (alfa_dom_1.MediaRule.isMediaRule(rule)) {\n                if (!rule.queries.matches(device)) {\n                    return;\n                }\n                for (const child of rule.children()) {\n                    visit(child);\n                }\n            }\n            // For import rules, we recurse into the imported style sheet if and only\n            // if the import condition matches the device.\n            else if (alfa_dom_1.ImportRule.isImportRule(rule)) {\n                if (!rule.queries.matches(device)) {\n                    return;\n                }\n                for (const child of rule.sheet.children()) {\n                    visit(child);\n                }\n            }\n            else if (alfa_dom_1.SupportsRule.isSupportsRule(rule)) {\n                if (rule.query.every((query) => !query.matches(device))) {\n                    // If the option is None, the condition failed to parse and the rule is discarded.\n                    return;\n                }\n                for (const child of rule.children()) {\n                    visit(child);\n                }\n            }\n            // Otherwise, we recurse into whichever child rules are declared by the\n            // current rule.\n            else {\n                for (const child of rule.children()) {\n                    visit(child);\n                }\n            }\n        };\n        for (const sheet of sheets) {\n            if (sheet.disabled) {\n                continue;\n            }\n            if (sheet.condition.isSome()) {\n                const query = alfa_css_feature_1.Feature.parseMediaQuery(alfa_css_1.Lexer.lex(sheet.condition.get()));\n                if (query.every(([, query]) => !query.matches(device))) {\n                    continue;\n                }\n            }\n            for (const rule of sheet.children()) {\n                visit(rule);\n            }\n        }\n        return SelectorMap.of(ids, classes, types, other);\n    }\n    SelectorMap.from = from;\n    /**\n     * @internal\n     */\n    class Bucket {\n        static empty() {\n            return new Bucket(new Map());\n        }\n        constructor(nodes) {\n            this._nodes = nodes;\n        }\n        add(key, node) {\n            const nodes = this._nodes.get(key);\n            if (nodes === undefined) {\n                this._nodes.set(key, [node]);\n            }\n            else {\n                nodes.push(node);\n            }\n        }\n        get(key) {\n            const nodes = this._nodes.get(key);\n            if (nodes === undefined) {\n                return [];\n            }\n            return nodes;\n        }\n        toJSON() {\n            return [...this._nodes].map(([key, nodes]) => [\n                key,\n                nodes.map((node) => node.toJSON()),\n            ]);\n        }\n    }\n    SelectorMap.Bucket = Bucket;\n})(SelectorMap || (exports.SelectorMap = SelectorMap = {}));\n//# sourceMappingURL=selector-map.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-cascade/src/selector-map.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-cascade/src/user-agent.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-cascade/src/user-agent.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.UserAgent = void 0;\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\n/**\n * {@link https://html.spec.whatwg.org/#rendering}\n *\n * @internal\n */\nexports.UserAgent = alfa_dom_1.h.sheet([\n    alfa_dom_1.h.rule.namespace(\"http://www.w3.org/1999/xhtml\"),\n    /**\n     * {@link https://html.spec.whatwg.org/#hidden-elements}\n     */\n    alfa_dom_1.h.rule.style(\"[hidden], base, basefont, datalist, head, link, meta, noembed, noframes, param, rp, script, source, style, template, track, title\", {\n        display: \"none\",\n    }),\n    // <area> elements are a little special in that while they are not rendered,\n    // they are focusable for the purpose of users interacting with the image\n    // reference of the <area> element. To accommodate this, we assign them a\n    // default display property of inline rather than none.\n    alfa_dom_1.h.rule.style(\"area\", {\n        display: \"inline\",\n    }),\n    alfa_dom_1.h.rule.style(\"embed[hidden]\", {\n        display: \"inline\",\n        height: \"0\",\n        width: \"0\",\n    }),\n    alfa_dom_1.h.rule.style(\"input[type=hidden i]\", {\n        display: \"none !important\",\n    }),\n    alfa_dom_1.h.rule.media(\"(scripting)\", [\n        alfa_dom_1.h.rule.style(\"noscript\", {\n            display: \"none !important\",\n        }),\n    ]),\n    /**\n     * {@link https://html.spec.whatwg.org/#the-page}\n     */\n    alfa_dom_1.h.rule.style(\"html, body\", {\n        display: \"block\",\n    }),\n    /**\n     * {@link https://html.spec.whatwg.org/#flow-content-3}\n     */\n    alfa_dom_1.h.rule.style(\"address, blockquote, center, div, figure, figcaption, footer, form, header, hr, legend, listing, main, p, plaintext, pre, xmp\", {\n        display: \"block\",\n    }),\n    alfa_dom_1.h.rule.style(\"dialog:not([open])\", {\n        display: \"none\",\n    }),\n    alfa_dom_1.h.rule.style(\"dialog\", {\n        background: \"white\",\n        color: \"black\",\n    }),\n    alfa_dom_1.h.rule.style(\"dialog::backdrop\", {\n        background: \"rgb(0 0 0 / 0.1)\",\n    }),\n    alfa_dom_1.h.rule.style(\"slot\", {\n        display: \"contents\",\n    }),\n    /**\n     * {@link https://html.spec.whatwg.org/#phrasing-content-3}\n     */\n    alfa_dom_1.h.rule.style(\"cite, dfn, em, i, var\", { fontStyle: \"italic\" }),\n    alfa_dom_1.h.rule.style(\"b, strong\", { fontWeight: \"bolder\" }),\n    alfa_dom_1.h.rule.style(\"code, kbd, samp, tt\", { fontFamily: \"monospace\" }),\n    alfa_dom_1.h.rule.style(\"big\", { fontSize: \"larger\" }),\n    alfa_dom_1.h.rule.style(\"small\", { fontSize: \"smaller\" }),\n    alfa_dom_1.h.rule.style(\"sub\", { verticalAlign: \"sub\" }),\n    alfa_dom_1.h.rule.style(\"sup\", { verticalAlign: \"super\" }),\n    alfa_dom_1.h.rule.style(\"ruby\", { display: \"ruby\" }),\n    alfa_dom_1.h.rule.style(\"rt\", { display: \"ruby-text\" }),\n    alfa_dom_1.h.rule.style(\":link\", { color: \"#0000ee\" }),\n    alfa_dom_1.h.rule.style(\":visited\", { color: \"#551a8b\" }),\n    alfa_dom_1.h.rule.style(\":link:active, :visited:active\", { color: \"#ff0000\" }),\n    alfa_dom_1.h.rule.style(\":link, :visited\", {\n        textDecoration: \"underline\",\n        cursor: \"pointer\",\n    }),\n    alfa_dom_1.h.rule.style(\":focus\", { outline: \"auto\" }),\n    alfa_dom_1.h.rule.style(\"mark\", { background: \"yellow\", color: \"black\" }),\n    alfa_dom_1.h.rule.style(\"ins, u\", { textDecoration: \"underline\" }),\n    alfa_dom_1.h.rule.style(\"del, s, strike\", { textDecoration: \"line-through\" }),\n    /**\n     * {@link https://html.spec.whatwg.org/#sections-and-headings}\n     */\n    alfa_dom_1.h.rule.style(\"article, aside, h1, h2, h3, h4, h5, h6, hgroup, nav, section\", {\n        display: \"block\",\n    }),\n    alfa_dom_1.h.rule.style(\"h1\", { fontSize: \"2.00em\", fontWeight: \"bold\" }),\n    alfa_dom_1.h.rule.style(\"h2\", { fontSize: \"1.50em\", fontWeight: \"bold\" }),\n    alfa_dom_1.h.rule.style(\"h3\", { fontSize: \"1.17em\", fontWeight: \"bold\" }),\n    alfa_dom_1.h.rule.style(\"h4\", { fontSize: \"1.00em\", fontWeight: \"bold\" }),\n    alfa_dom_1.h.rule.style(\"h5\", { fontSize: \"0.83em\", fontWeight: \"bold\" }),\n    alfa_dom_1.h.rule.style(\"h6\", { fontSize: \"0.67em\", fontWeight: \"bold\" }),\n    /**\n     * {@link https://html.spec.whatwg.org/#section-lists}\n     */\n    alfa_dom_1.h.rule.style(\"dir, dd, dl, dt, ol, ul\", { display: \"block\" }),\n    alfa_dom_1.h.rule.style(\"li\", { display: \"list-item\" }),\n    /**\n     * {@link https://html.spec.whatwg.org/#tables}\n     */\n    alfa_dom_1.h.rule.style(\"table\", { display: \"table\" }),\n    alfa_dom_1.h.rule.style(\"caption\", { display: \"table-caption\" }),\n    alfa_dom_1.h.rule.style(\"colgroup, colgroup[hidden]\", { display: \"table-column-group\" }),\n    alfa_dom_1.h.rule.style(\"col, col[hidden]\", { display: \"table-column\" }),\n    alfa_dom_1.h.rule.style(\"thead, thead[hidden]\", { display: \"table-header-group\" }),\n    alfa_dom_1.h.rule.style(\"tbody, tbody[hidden]\", { display: \"table-row-group\" }),\n    alfa_dom_1.h.rule.style(\"tfoot, tfoot[hidden]\", { display: \"table-footer-group\" }),\n    alfa_dom_1.h.rule.style(\"tr, tr[hidden]\", { display: \"table-row\" }),\n    alfa_dom_1.h.rule.style(\"td, th, td[hidden], th[hidden]\", { display: \"table-cell\" }),\n    alfa_dom_1.h.rule.style(\"colgroup[hidden], col[hidden], thead[hidden], tbody[hidden], tfoot[hidden], tr[hidden], td[hidden], th[hidden]\", {\n        visibility: \"collapse\",\n    }),\n    alfa_dom_1.h.rule.style(\"th\", { fontWeight: \"bold\" }),\n    alfa_dom_1.h.rule.style(\":is(table, thead, tbody, tfoot, tr) > form\", {\n        display: \"none !important\",\n    }),\n    /**\n     * {@link https://html.spec.whatwg.org/#form-controls}\n     */\n    alfa_dom_1.h.rule.style(\"input, select, button, textarea\", {\n        letterSpacing: \"initial\",\n        wordSpacing: \"initial\",\n        lineHeight: \"initial\",\n        textTransform: \"initial\",\n        textIndent: \"initial\",\n        textShadow: \"initial\",\n    }),\n    alfa_dom_1.h.rule.style(\"input, select, textarea\", {\n        textAlign: \"initial\",\n    }),\n    alfa_dom_1.h.rule.style(\"input:is([type=reset i], [type=button i], [type=submit i]), button\", {\n        textAlign: \"center\",\n    }),\n    alfa_dom_1.h.rule.style(\"input:is([type=reset i], [type=button i], [type=submit i], [type=color i]), button\", {\n        display: \"inline-block\",\n    }),\n    alfa_dom_1.h.rule.style(\"input:is([type=radio i], [type=checkbox i], [type=reset i], [type=button i], [type=submit i], [type=color i], [type=search i]), select, button\", {\n        boxSizing: \"border-box\",\n    }),\n    alfa_dom_1.h.rule.style(\"textarea\", { whiteSpace: \"pre-wrap\" }),\n    alfa_dom_1.h.rule.style(\"button\", {\n        // <button> element defaults applied consistently by browsers.\n        fontStyle: \"normal\",\n        fontWeight: \"400\",\n        // <button> colors differ between browsers, additionally they can be\n        // overwritten by OS settings which we do not really have access to (although\n        // forced-color media query could help), so we default to the system color.\n        // as of 21.09.23, Chrome uses rgb(240, 240, 240) but Firefox uses\n        // rgb(233, 233, 233).\n        backgroundColor: \"buttonface\",\n        // color seems to rather consistently defaults to black, which is the default.\n        // color: \"buttontext\",\n    }),\n    /**\n     * {@link https://html.spec.whatwg.org/#the-hr-element-rendering}\n     */\n    alfa_dom_1.h.rule.style(\"hr\", {\n        color: \"gray\",\n        overflow: \"hidden\",\n    }),\n    /**\n     * {@link https://html.spec.whatwg.org/#the-fieldset-and-legend-elements}\n     */\n    alfa_dom_1.h.rule.style(\"fieldset\", {\n        display: \"block\",\n    }),\n]);\n//# sourceMappingURL=user-agent.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-cascade/src/user-agent.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-clone/src/clone.js":
/*!***********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-clone/src/clone.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Clone = void 0;\n/**\n * @public\n */\nvar Clone;\n(function (Clone) {\n    function clone(value) {\n        return value.clone();\n    }\n    Clone.clone = clone;\n})(Clone || (exports.Clone = Clone = {}));\n//# sourceMappingURL=clone.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-clone/src/clone.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-clone/src/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-clone/src/index.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./clone */ \"./node_modules/@siteimprove/alfa-clone/src/clone.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-clone/src/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-comparable/src/comparable.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-comparable/src/comparable.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Comparable = void 0;\nconst alfa_refinement_1 = __webpack_require__(/*! @siteimprove/alfa-refinement */ \"./node_modules/@siteimprove/alfa-refinement/src/index.js\");\nconst comparison_1 = __webpack_require__(/*! ./comparison */ \"./node_modules/@siteimprove/alfa-comparable/src/comparison.js\");\nconst { isString, isNumber, isBigInt, isBoolean, isFunction, isObject } = alfa_refinement_1.Refinement;\n/**\n * This namespace provides additional functions for the\n * {@link (Comparable:interface)} interface.\n *\n * @public\n */\nvar Comparable;\n(function (Comparable) {\n    /**\n     * Check if an unknown value implements the {@link (Comparable:interface)}\n     * interface.\n     */\n    function isComparable(value) {\n        return isObject(value) && isFunction(value.compare);\n    }\n    Comparable.isComparable = isComparable;\n    function compare(a, b) {\n        if (isString(a)) {\n            return compareString(a, b);\n        }\n        if (isNumber(a)) {\n            return compareNumber(a, b);\n        }\n        if (isBigInt(a)) {\n            return compareBigInt(a, b);\n        }\n        if (isBoolean(a)) {\n            return compareBoolean(a, b);\n        }\n        return compareComparable(a, b);\n    }\n    Comparable.compare = compare;\n    /**\n     * @remarks\n     * This should only be used in cases where branch mispredictions caused by the\n     * more general {@link (Comparable:namespace).(compare:1)} are undesired.\n     */\n    function compareString(a, b) {\n        return comparePrimitive(a, b);\n    }\n    Comparable.compareString = compareString;\n    /**\n     * @remarks\n     * This should only be used in cases where branch mispredictions caused by the\n     * more general {@link (Comparable:namespace).(compare:2)} are undesired.\n     */\n    function compareNumber(a, b) {\n        return comparePrimitive(a, b);\n    }\n    Comparable.compareNumber = compareNumber;\n    /**\n     * @remarks\n     * This should only be used in cases where branch mispredictions caused by the\n     * more general {@link (Comparable:namespace).(compare:3)} are undesired.\n     */\n    function compareBigInt(a, b) {\n        return comparePrimitive(a, b);\n    }\n    Comparable.compareBigInt = compareBigInt;\n    /**\n     * @remarks\n     * This should only be used in cases where branch mispredictions caused by the\n     * more general {@link (Comparable:namespace).(compare:4)} are undesired.\n     */\n    function compareBoolean(a, b) {\n        return comparePrimitive(a, b);\n    }\n    Comparable.compareBoolean = compareBoolean;\n    /**\n     * @remarks\n     * This should only be used in cases where branch mispredictions caused by the\n     * more general {@link (Comparable:namespace).(compare:5)} are undesired.\n     */\n    function compareComparable(a, b) {\n        return a.compare(b);\n    }\n    Comparable.compareComparable = compareComparable;\n    /**\n     * Compare two primitive values.\n     */\n    function comparePrimitive(a, b) {\n        if (a < b) {\n            return comparison_1.Comparison.Less;\n        }\n        if (a > b) {\n            return comparison_1.Comparison.Greater;\n        }\n        return comparison_1.Comparison.Equal;\n    }\n    /**\n     * Compare tuples lexicographically\n     *\n     * {@link https://en.wikipedia.org/wiki/Lexicographic_order}\n     */\n    function compareLexicographically(a, b, comparer) {\n        for (let i = 0; i < a.length; i++) {\n            const comparison = comparer[i](a[i], b[i]);\n            if (comparison === comparison_1.Comparison.Equal) {\n                continue;\n            }\n            return comparison;\n        }\n        return comparison_1.Comparison.Equal;\n    }\n    Comparable.compareLexicographically = compareLexicographically;\n    /**\n     * Check if one value is less than another.\n     */\n    function isLessThan(a, b) {\n        return a.compare(b) < 0;\n    }\n    Comparable.isLessThan = isLessThan;\n    /**\n     * Check if one value is less than or equal to another.\n     */\n    function isLessThanOrEqual(a, b) {\n        return a.compare(b) <= 0;\n    }\n    Comparable.isLessThanOrEqual = isLessThanOrEqual;\n    /**\n     * Check if one value is equal to another\n     */\n    function isEqual(a, b) {\n        return a.compare(b) === 0;\n    }\n    Comparable.isEqual = isEqual;\n    /**\n     * Check if one value is greater than another.\n     */\n    function isGreaterThan(a, b) {\n        return a.compare(b) > 0;\n    }\n    Comparable.isGreaterThan = isGreaterThan;\n    /**\n     * Check if one value is greater than or equal to another.\n     */\n    function isGreaterThanOrEqual(a, b) {\n        return a.compare(b) >= 0;\n    }\n    Comparable.isGreaterThanOrEqual = isGreaterThanOrEqual;\n})(Comparable || (exports.Comparable = Comparable = {}));\n//# sourceMappingURL=comparable.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-comparable/src/comparable.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-comparable/src/comparer.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-comparable/src/comparer.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=comparer.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-comparable/src/comparer.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-comparable/src/comparison.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-comparable/src/comparison.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Comparison = void 0;\n/**\n * @remarks\n * Comparisons are limited to the range [-1, 1] in order to avoid the potential\n * of over-/underflows when comparisons are implemented naively using\n * subtractions, such `a - b`; this would not be allowed.\n *\n * @public\n */\nvar Comparison;\n(function (Comparison) {\n    Comparison[Comparison[\"Less\"] = -1] = \"Less\";\n    Comparison[Comparison[\"Equal\"] = 0] = \"Equal\";\n    Comparison[Comparison[\"Greater\"] = 1] = \"Greater\";\n})(Comparison || (exports.Comparison = Comparison = {}));\n//# sourceMappingURL=comparison.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-comparable/src/comparison.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-comparable/src/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-comparable/src/index.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./comparable */ \"./node_modules/@siteimprove/alfa-comparable/src/comparable.js\"), exports);\n__exportStar(__webpack_require__(/*! ./comparer */ \"./node_modules/@siteimprove/alfa-comparable/src/comparer.js\"), exports);\n__exportStar(__webpack_require__(/*! ./comparison */ \"./node_modules/@siteimprove/alfa-comparable/src/comparison.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-comparable/src/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css-feature/src/condition/and.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css-feature/src/condition/and.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.And = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst { delimited, option, right } = alfa_parser_1.Parser;\nclass And {\n    static of(left, right) {\n        return new And(left, right);\n    }\n    constructor(left, right) {\n        this._left = left;\n        this._right = right;\n    }\n    /** @public (knip) */\n    get left() {\n        return this._left;\n    }\n    /** @public (knip) */\n    get right() {\n        return this._right;\n    }\n    matches(device) {\n        return this._left.matches(device) && this._right.matches(device);\n    }\n    equals(value) {\n        return (value instanceof And &&\n            value._left.equals(this._left) &&\n            value._right.equals(this._right));\n    }\n    *iterator() {\n        for (const condition of [this._left, this._right]) {\n            yield* condition;\n        }\n    }\n    /** @public (knip) */\n    [Symbol.iterator]() {\n        return this.iterator();\n    }\n    toJSON() {\n        return {\n            type: \"and\",\n            left: this._left.toJSON(),\n            right: this._right.toJSON(),\n        };\n    }\n    toString() {\n        return `(${this._left}) and (${this._right})`;\n    }\n}\nexports.And = And;\n(function (And) {\n    function isAnd(value) {\n        return value instanceof And;\n    }\n    And.isAnd = isAnd;\n    /**\n     * {@link https://drafts.csswg.org/mediaqueries-5/#typedef-media-and}\n     *\n     * @internal\n     */\n    function parse(parseInParens, featureParser) {\n        return right(delimited(option(alfa_css_1.Token.parseWhitespace), alfa_css_1.Token.parseIdent(\"and\")), parseInParens(featureParser));\n    }\n    And.parse = parse;\n})(And || (exports.And = And = {}));\n//# sourceMappingURL=and.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css-feature/src/condition/and.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css-feature/src/condition/condition.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css-feature/src/condition/condition.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Condition = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst and_1 = __webpack_require__(/*! ./and */ \"./node_modules/@siteimprove/alfa-css-feature/src/condition/and.js\");\nconst not_1 = __webpack_require__(/*! ./not */ \"./node_modules/@siteimprove/alfa-css-feature/src/condition/not.js\");\nconst or_1 = __webpack_require__(/*! ./or */ \"./node_modules/@siteimprove/alfa-css-feature/src/condition/or.js\");\nconst { delimited, either, map, oneOrMore, option, pair, zeroOrMore } = alfa_parser_1.Parser;\nvar Condition;\n(function (Condition) {\n    function isCondition(value) {\n        return and_1.And.isAnd(value) || or_1.Or.isOr(value) || not_1.Not.isNot(value);\n    }\n    Condition.isCondition = isCondition;\n    /**\n     * {@link https://drafts.csswg.org/mediaqueries-5/#typedef-media-in-parens}\n     */\n    function parseInParens(featureParser) {\n        return either(delimited(alfa_css_1.Token.parseOpenParenthesis, delimited(option(alfa_css_1.Token.parseWhitespace), (input) => parse(featureParser)(input)), alfa_css_1.Token.parseCloseParenthesis), featureParser);\n    }\n    /**\n     * {@link https://drafts.csswg.org/mediaqueries-5/#typedef-media-condition}\n     *\n     * @privateRemarks\n     * We absolutely must defer evaluation of the parseInParens computation as lazily as\n     * possible to avoid infinite recursion.\n     */\n    function parse(featureParser) {\n        return either(not_1.Not.parse(parseInParens, featureParser), map(pair(parseInParens(featureParser), either(map(oneOrMore(and_1.And.parse(parseInParens, featureParser)), (queries) => [and_1.And.of, queries]), map(oneOrMore(or_1.Or.parse(parseInParens, featureParser)), (queries) => [or_1.Or.of, queries]))), ([left, [constructor, right]]) => alfa_iterable_1.Iterable.reduce(right, (left, right) => constructor(left, right), left)), parseInParens(featureParser));\n    }\n    Condition.parse = parse;\n    /**\n     * {@link https://drafts.csswg.org/mediaqueries-5/#typedef-media-condition-without-or}\n     */\n    function parseWithoutOr(featureParser) {\n        return either(not_1.Not.parse(parseInParens, featureParser), map(pair(parseInParens(featureParser), zeroOrMore(and_1.And.parse(parseInParens, featureParser))), ([left, right]) => [left, ...right].reduce((left, right) => and_1.And.of(left, right))));\n    }\n    Condition.parseWithoutOr = parseWithoutOr;\n})(Condition || (exports.Condition = Condition = {}));\n//# sourceMappingURL=condition.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css-feature/src/condition/condition.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css-feature/src/condition/index.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css-feature/src/condition/index.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./and */ \"./node_modules/@siteimprove/alfa-css-feature/src/condition/and.js\"), exports);\n__exportStar(__webpack_require__(/*! ./condition */ \"./node_modules/@siteimprove/alfa-css-feature/src/condition/condition.js\"), exports);\n__exportStar(__webpack_require__(/*! ./not */ \"./node_modules/@siteimprove/alfa-css-feature/src/condition/not.js\"), exports);\n__exportStar(__webpack_require__(/*! ./or */ \"./node_modules/@siteimprove/alfa-css-feature/src/condition/or.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css-feature/src/condition/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css-feature/src/condition/not.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css-feature/src/condition/not.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Not = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst { delimited, map, option, right } = alfa_parser_1.Parser;\nclass Not {\n    static of(condition) {\n        return new Not(condition);\n    }\n    constructor(condition) {\n        this._condition = condition;\n    }\n    /** @public (knip) */\n    get condition() {\n        return this._condition;\n    }\n    matches(device) {\n        return !this._condition.matches(device);\n    }\n    equals(value) {\n        return value instanceof Not && value._condition.equals(this._condition);\n    }\n    *iterator() {\n        yield* this._condition;\n    }\n    /** @public (knip) */\n    [Symbol.iterator]() {\n        return this.iterator();\n    }\n    toJSON() {\n        return {\n            type: \"not\",\n            condition: this._condition.toJSON(),\n        };\n    }\n    toString() {\n        return `not (${this._condition})`;\n    }\n}\nexports.Not = Not;\n(function (Not) {\n    function isNot(value) {\n        return value instanceof Not;\n    }\n    Not.isNot = isNot;\n    /**\n     * {@link https://drafts.csswg.org/mediaqueries-5/#typedef-media-not}\n     *\n     * @internal\n     */\n    function parse(parseInParens, featureParser) {\n        return map(right(delimited(option(alfa_css_1.Token.parseWhitespace), alfa_css_1.Token.parseIdent(\"not\")), parseInParens(featureParser)), Not.of);\n    }\n    Not.parse = parse;\n})(Not || (exports.Not = Not = {}));\n//# sourceMappingURL=not.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css-feature/src/condition/not.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css-feature/src/condition/or.js":
/*!************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css-feature/src/condition/or.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Or = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst { delimited, option, right } = alfa_parser_1.Parser;\nclass Or {\n    static of(left, right) {\n        return new Or(left, right);\n    }\n    constructor(left, right) {\n        this._left = left;\n        this._right = right;\n    }\n    /** @public (knip) */\n    get left() {\n        return this._left;\n    }\n    /** @public (knip) */\n    get right() {\n        return this._right;\n    }\n    matches(device) {\n        return this._left.matches(device) || this._right.matches(device);\n    }\n    equals(value) {\n        return (value instanceof Or &&\n            value._left.equals(this._left) &&\n            value._right.equals(this._right));\n    }\n    *iterator() {\n        for (const condition of [this._left, this._right]) {\n            yield* condition;\n        }\n    }\n    /** @public (knip) */\n    [Symbol.iterator]() {\n        return this.iterator();\n    }\n    toJSON() {\n        return {\n            type: \"or\",\n            left: this._left.toJSON(),\n            right: this._right.toJSON(),\n        };\n    }\n    toString() {\n        return `(${this._left}) or (${this._right})`;\n    }\n}\nexports.Or = Or;\n(function (Or) {\n    function isOr(value) {\n        return value instanceof Or;\n    }\n    Or.isOr = isOr;\n    /**\n     * {@link https://drafts.csswg.org/mediaqueries-5/#typedef-media-or}\n     *\n     * @internal\n     */\n    function parse(parseInParens, featureParser) {\n        return right(delimited(option(alfa_css_1.Token.parseWhitespace), alfa_css_1.Token.parseIdent(\"or\")), parseInParens(featureParser));\n    }\n    Or.parse = parse;\n})(Or || (exports.Or = Or = {}));\n//# sourceMappingURL=or.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css-feature/src/condition/or.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css-feature/src/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css-feature/src/index.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Feature = void 0;\nconst condition = __webpack_require__(/*! ./condition */ \"./node_modules/@siteimprove/alfa-css-feature/src/condition/index.js\");\nconst media = __webpack_require__(/*! ./media */ \"./node_modules/@siteimprove/alfa-css-feature/src/media/index.js\");\nconst supports = __webpack_require__(/*! ./supports */ \"./node_modules/@siteimprove/alfa-css-feature/src/supports/index.js\");\n/**\n * @public\n */\nvar Feature;\n(function (Feature) {\n    Feature.Condition = condition.Condition;\n    Feature.And = condition.And;\n    Feature.Or = condition.Or;\n    Feature.Not = condition.Not;\n    Feature.Media = media.Media;\n    Feature.Supports = supports.Supports;\n    Feature.isMedia = Feature.Media.isMedia;\n    Feature.isProperty = Feature.Supports.isProperty;\n    Feature.and = Feature.And.of, Feature.isAnd = Feature.And.isAnd;\n    Feature.or = Feature.Or.of, Feature.isOr = Feature.Or.isOr;\n    Feature.not = Feature.Not.of, Feature.isNot = Feature.Not.isNot;\n    Feature.isCondition = Feature.Condition.isCondition;\n    Feature.parseMediaQuery = Feature.Media.parse;\n    Feature.parseSupportsQuery = Feature.Supports.parse;\n})(Feature || (exports.Feature = Feature = {}));\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css-feature/src/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css-feature/src/media/feature/comparison.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css-feature/src/media/feature/comparison.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Comparison = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst { delimited, either, map, option, right } = alfa_parser_1.Parser;\n/**\n * @internal\n */\nvar Comparison;\n(function (Comparison) {\n    Comparison[\"LessThan\"] = \"<\";\n    Comparison[\"LessThanOrEqual\"] = \"<=\";\n    Comparison[\"Equal\"] = \"=\";\n    Comparison[\"GreaterThan\"] = \">\";\n    Comparison[\"GreaterThanOrEqual\"] = \">=\";\n})(Comparison || (exports.Comparison = Comparison = {}));\n/**\n * @internal\n */\n(function (Comparison) {\n    function isInclusive(comparison) {\n        return (comparison === Comparison.LessThanOrEqual ||\n            comparison === Comparison.GreaterThanOrEqual ||\n            comparison === Comparison.Equal);\n    }\n    Comparison.isInclusive = isInclusive;\n    /**\n     * {@link https://drafts.csswg.org/mediaqueries-5/#typedef-mf-lt}\n     */\n    Comparison.parseLessThan = map(delimited(option(alfa_css_1.Token.parseWhitespace), right(alfa_css_1.Token.parseDelim(\"<\"), option(alfa_css_1.Token.parseDelim(\"=\")))), (equal) => equal.isNone() ? Comparison.LessThan : Comparison.LessThanOrEqual);\n    /**\n     * {@link https://drafts.csswg.org/mediaqueries-5/#typedef-mf-gt}\n     */\n    Comparison.parseGreaterThan = map(delimited(option(alfa_css_1.Token.parseWhitespace), right(alfa_css_1.Token.parseDelim(\">\"), option(alfa_css_1.Token.parseDelim(\"=\")))), (equal) => equal.isNone() ? Comparison.GreaterThan : Comparison.GreaterThanOrEqual);\n    /**\n     * {@link https://drafts.csswg.org/mediaqueries-5/#typedef-mf-eq}\n     */\n    Comparison.parseEqual = map(delimited(option(alfa_css_1.Token.parseWhitespace), alfa_css_1.Token.parseDelim(\"=\")), () => Comparison.Equal);\n    /**\n     * {@link https://drafts.csswg.org/mediaqueries-5/#typedef-mf-comparison}\n     */\n    Comparison.parse = either(Comparison.parseEqual, Comparison.parseLessThan, Comparison.parseGreaterThan);\n})(Comparison || (exports.Comparison = Comparison = {}));\n//# sourceMappingURL=comparison.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css-feature/src/media/feature/comparison.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css-feature/src/media/feature/height.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css-feature/src/media/feature/height.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Height = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst media_1 = __webpack_require__(/*! ./media */ \"./node_modules/@siteimprove/alfa-css-feature/src/media/feature/media.js\");\nconst resolver_1 = __webpack_require__(/*! ./resolver */ \"./node_modules/@siteimprove/alfa-css-feature/src/media/feature/resolver.js\");\n/**\n * {@link https://drafts.csswg.org/mediaqueries-5/#height}\n *\n * @internal\n */\nclass Height extends media_1.Media {\n    static of(value) {\n        return new Height(alfa_option_1.Option.of(value));\n    }\n    constructor(value) {\n        super(\"height\", value);\n    }\n    static boolean() {\n        return Height._boolean;\n    }\n    matches(device) {\n        const { viewport: { height }, } = device;\n        const value = this._value.map((value) => value.map((length) => length.resolve(resolver_1.Resolver.length(device))));\n        return height > 0\n            ? value.some((value) => value.matches(alfa_css_1.Length.of(height, \"px\")))\n            : value.every((value) => value.matches(alfa_css_1.Length.of(0, \"px\")));\n    }\n}\nexports.Height = Height;\nHeight._boolean = new Height(alfa_option_1.None);\n/**\n * @internal\n */\n(function (Height) {\n    function from(value) {\n        return value.map(Height.of).getOrElse(Height.boolean);\n    }\n    function isHeight(value) {\n        return value instanceof Height;\n    }\n    Height.isHeight = isHeight;\n    Height.parse = media_1.Media.parseContinuous(\"height\", from);\n})(Height || (exports.Height = Height = {}));\n//# sourceMappingURL=height.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css-feature/src/media/feature/height.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css-feature/src/media/feature/index.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css-feature/src/media/feature/index.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Media = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst media = __webpack_require__(/*! ./media */ \"./node_modules/@siteimprove/alfa-css-feature/src/media/feature/media.js\");\nconst height = __webpack_require__(/*! ./height */ \"./node_modules/@siteimprove/alfa-css-feature/src/media/feature/height.js\");\nconst orientation = __webpack_require__(/*! ./orientation */ \"./node_modules/@siteimprove/alfa-css-feature/src/media/feature/orientation.js\");\nconst scripting = __webpack_require__(/*! ./scripting */ \"./node_modules/@siteimprove/alfa-css-feature/src/media/feature/scripting.js\");\nconst width = __webpack_require__(/*! ./width */ \"./node_modules/@siteimprove/alfa-css-feature/src/media/feature/width.js\");\nconst { delimited, either, option } = alfa_parser_1.Parser;\nvar Media;\n(function (Media) {\n    Media.Height = height.Height;\n    Media.Orientation = orientation.Orientation;\n    Media.Scripting = scripting.Scripting;\n    Media.Width = width.Width;\n    Media.isHeight = Media.Height.isHeight;\n    Media.isWidth = Media.Width.isWidth;\n    Media.isMedia = media.Media.isMedia;\n    /**\n     * {@link https://drafts.csswg.org/mediaqueries-5/#typedef-media-feature}\n     */\n    Media.parse = delimited(alfa_css_1.Token.parseOpenParenthesis, delimited(option(alfa_css_1.Token.parseWhitespace), either(Media.Height.parse, Media.Orientation.parse, Media.Scripting.parse, Media.Width.parse)), alfa_css_1.Token.parseCloseParenthesis);\n})(Media || (exports.Media = Media = {}));\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css-feature/src/media/feature/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css-feature/src/media/feature/media.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css-feature/src/media/feature/media.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Media = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst value_1 = __webpack_require__(/*! ./value */ \"./node_modules/@siteimprove/alfa-css-feature/src/media/feature/value/index.js\");\nconst comparison_1 = __webpack_require__(/*! ./comparison */ \"./node_modules/@siteimprove/alfa-css-feature/src/media/feature/comparison.js\");\nconst { delimited, either, filter, left, map, option, pair, right, separated } = alfa_parser_1.Parser;\n/**\n * {@link https://drafts.csswg.org/mediaqueries-5/#mq-features}\n *\n * @remarks\n * Media features all have a name and a value.\n *\n * @public\n */\nclass Media {\n    constructor(name, value) {\n        this._name = name;\n        this._value = value;\n    }\n    get name() {\n        return this._name;\n    }\n    get value() {\n        return this._value;\n    }\n    equals(value) {\n        return (value instanceof Media &&\n            value.name === this.name &&\n            value._value.equals(this._value));\n    }\n    *iterator() {\n        yield this;\n    }\n    /** @public (knip) */\n    [Symbol.iterator]() {\n        return this.iterator();\n    }\n    toJSON() {\n        return {\n            type: \"feature\",\n            name: this._name,\n            value: this._value.map((value) => value.toJSON()).getOr(null),\n        };\n    }\n    toString() {\n        return `${this.name}${this._value.map((value) => `: ${value}`).getOr(\"\")}`;\n    }\n}\nexports.Media = Media;\n(function (Media) {\n    function isMedia(value) {\n        return value instanceof Media;\n    }\n    Media.isMedia = isMedia;\n    /**\n     * {@link https://drafts.csswg.org/mediaqueries-5/#typedef-mf-name}\n     */\n    function parseName(name, withRange = false) {\n        return filter(map(alfa_css_1.Token.parseIdent(), (ident) => ident.value.toLowerCase()), (parsed) => parsed === name ||\n            (withRange && (parsed === `min-${name}` || parsed === `max-${name}`)), (parsed) => `Unknown feature ${parsed}`);\n    }\n    /**\n     * {@link https://drafts.csswg.org/mediaqueries-5/#typedef-mf-plain}\n     */\n    function parsePlain(name, parseValue, withRange, from) {\n        return map(separated(parseName(name, withRange), delimited(option(alfa_css_1.Token.parseWhitespace), alfa_css_1.Token.parseColon), parseValue), ([name, value]) => {\n            if (withRange && (name.startsWith(\"min-\") || name.startsWith(\"max-\"))) {\n                const range = name.startsWith(\"min-\")\n                    ? value_1.Value.minimumRange\n                    : value_1.Value.maximumRange;\n                return from(alfa_option_1.Option.of(range(value_1.Value.bound(value, /* isInclusive */ true))));\n            }\n            else {\n                return from(alfa_option_1.Option.of(value_1.Value.discrete(value)));\n            }\n        });\n    }\n    /**\n     * {@link https://drafts.csswg.org/mediaqueries-5/#typedef-mf-boolean}\n     */\n    function parseBoolean(name, from) {\n        return map(parseName(name), () => from(alfa_option_1.None));\n    }\n    /**\n     * {@link https://drafts.csswg.org/mediaqueries-5/#typedef-mf-value}\n     *\n     * @remarks\n     * We currently do not support calculations in media queries\n     * We currently only support media features whose value is keyword\n     * or length, keyword parsing uses the `@siteimprove/alfa-css` parser.\n     */\n    const parseLength = filter(alfa_css_1.Length.parse, (length) => !length.hasCalculation(), () => \"Calculations no supported in media queries\");\n    function parseComparisonLengthBound(parseComparison) {\n        return map(pair(parseComparison, parseLength), ([comparison, value]) => [\n            value_1.Value.bound(value, comparison_1.Comparison.isInclusive(comparison)),\n            comparison,\n        ]);\n    }\n    function parseLengthComparisonBound(parseComparison) {\n        return map(pair(parseLength, parseComparison), ([value, comparison]) => [\n            value_1.Value.bound(value, comparison_1.Comparison.isInclusive(comparison)),\n            comparison,\n        ]);\n    }\n    /**\n     * {@link https://drafts.csswg.org/mediaqueries-5/#typedef-mf-range}\n     */\n    function parseRange(name, from) {\n        return either(\n        // <mf-value> <mf-lt> <mf-name> <mf-lt> <mf-value>\n        map(pair(parseLengthComparisonBound(comparison_1.Comparison.parseLessThan), right(delimited(option(alfa_css_1.Token.parseWhitespace), parseName(name)), parseComparisonLengthBound(comparison_1.Comparison.parseLessThan))), ([[minimum], [maximum]]) => from(alfa_option_1.Option.of(value_1.Value.range(minimum, maximum)))), \n        // <mf-value> <mf-gt> <mf-name> <mf-gt> <mf-value>\n        map(pair(parseLengthComparisonBound(comparison_1.Comparison.parseGreaterThan), right(delimited(option(alfa_css_1.Token.parseWhitespace), parseName(name)), parseComparisonLengthBound(comparison_1.Comparison.parseGreaterThan))), ([[maximum], [minimum]]) => from(alfa_option_1.Option.of(value_1.Value.range(minimum, maximum)))), \n        // <mf-name> <mf-comparison> <mf-value>\n        map(right(parseName(name), parseComparisonLengthBound(comparison_1.Comparison.parse)), ([bound, comparison]) => {\n            switch (comparison) {\n                case comparison_1.Comparison.Equal:\n                    return from(alfa_option_1.Option.of(value_1.Value.range(bound, bound)));\n                case comparison_1.Comparison.LessThan:\n                case comparison_1.Comparison.LessThanOrEqual:\n                    return from(alfa_option_1.Option.of(value_1.Value.maximumRange(bound)));\n                case comparison_1.Comparison.GreaterThan:\n                case comparison_1.Comparison.GreaterThanOrEqual:\n                    return from(alfa_option_1.Option.of(value_1.Value.minimumRange(bound)));\n            }\n        }), \n        // <mf-value> <mf-comparison> <mf-name>\n        map(left(parseLengthComparisonBound(comparison_1.Comparison.parse), parseName(name)), ([bound, comparison]) => {\n            switch (comparison) {\n                case comparison_1.Comparison.Equal:\n                    return from(alfa_option_1.Option.of(value_1.Value.range(bound, bound)));\n                case comparison_1.Comparison.LessThan:\n                case comparison_1.Comparison.LessThanOrEqual:\n                    return from(alfa_option_1.Option.of(value_1.Value.minimumRange(bound)));\n                case comparison_1.Comparison.GreaterThan:\n                case comparison_1.Comparison.GreaterThanOrEqual:\n                    return from(alfa_option_1.Option.of(value_1.Value.maximumRange(bound)));\n            }\n        }));\n    }\n    /**\n     * @internal\n     */\n    function parseContinuous(name, from) {\n        return either(parseRange(name, from), parsePlain(name, parseLength, true, from), parseBoolean(name, from));\n    }\n    Media.parseContinuous = parseContinuous;\n    /**\n     * @internal\n     */\n    function parseDiscrete(name, from, ...values) {\n        return either(parsePlain(name, alfa_css_1.Keyword.parse(...values), false, from), parseBoolean(name, from));\n    }\n    Media.parseDiscrete = parseDiscrete;\n})(Media || (exports.Media = Media = {}));\n//# sourceMappingURL=media.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css-feature/src/media/feature/media.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css-feature/src/media/feature/orientation.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css-feature/src/media/feature/orientation.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Orientation = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst media_1 = __webpack_require__(/*! ./media */ \"./node_modules/@siteimprove/alfa-css-feature/src/media/feature/media.js\");\n/**\n * {@link https://drafts.csswg.org/mediaqueries-5/#orientation}\n *\n * @internal\n */\nclass Orientation extends media_1.Media {\n    static of(value) {\n        return new Orientation(alfa_option_1.Option.of(value));\n    }\n    constructor(value) {\n        super(\"orientation\", value);\n    }\n    static boolean() {\n        return Orientation._boolean;\n    }\n    matches(device) {\n        return this._value.every((value) => value.matches(alfa_css_1.Keyword.of(device.viewport.orientation)));\n    }\n}\nexports.Orientation = Orientation;\nOrientation._boolean = new Orientation(alfa_option_1.None);\n/**\n * @internal\n */\n(function (Orientation) {\n    function from(value) {\n        return value.map(Orientation.of).getOrElse(Orientation.boolean);\n    }\n    Orientation.parse = media_1.Media.parseDiscrete(\"orientation\", from, \"portrait\", \"landscape\");\n})(Orientation || (exports.Orientation = Orientation = {}));\n//# sourceMappingURL=orientation.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css-feature/src/media/feature/orientation.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css-feature/src/media/feature/resolver.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css-feature/src/media/feature/resolver.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Resolver = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\n/**\n * Resolvers are functions that resolve values to their canonical, computed\n * representation.\n *\n * @internal\n */\nvar Resolver;\n(function (Resolver) {\n    /**\n     * Resolve a length in an arbitrary unit to a length in pixels.\n     *\n     * {@link https://drafts.csswg.org/css-values/#lengths}\n     *\n     * @remarks\n     * Relative lengths in media queries are based on initial values of the\n     * associated properties. They are hard-coded here to avoid circular dependency\n     * to @siteimprove/alfa-style.\n     */\n    function length(device) {\n        const { viewport } = device;\n        const width = alfa_css_1.Length.of(viewport.width, \"px\");\n        const height = alfa_css_1.Length.of(viewport.height, \"px\");\n        const fontSize = alfa_css_1.Length.of(16, \"px\");\n        const rootFontSize = alfa_css_1.Length.of(16, \"px\");\n        return { length: alfa_css_1.Length.resolver(fontSize, rootFontSize, width, height) };\n    }\n    Resolver.length = length;\n})(Resolver || (exports.Resolver = Resolver = {}));\n//# sourceMappingURL=resolver.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css-feature/src/media/feature/resolver.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css-feature/src/media/feature/scripting.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css-feature/src/media/feature/scripting.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Scripting = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst media_1 = __webpack_require__(/*! ./media */ \"./node_modules/@siteimprove/alfa-css-feature/src/media/feature/media.js\");\n/**\n * {@link https://drafts.csswg.org/mediaqueries-5/#scripting}\n *\n * @internal\n */\nclass Scripting extends media_1.Media {\n    static of(value) {\n        return new Scripting(alfa_option_1.Option.of(value));\n    }\n    constructor(value) {\n        super(\"scripting\", value);\n    }\n    static boolean() {\n        return Scripting._boolean;\n    }\n    matches(device) {\n        return device.scripting.enabled\n            ? this._value.every((value) => value.matches(alfa_css_1.Keyword.of(\"enabled\")))\n            : this._value.some((value) => value.matches(alfa_css_1.Keyword.of(\"none\")));\n    }\n}\nexports.Scripting = Scripting;\nScripting._boolean = new Scripting(alfa_option_1.None);\n/**\n * @internal\n */\n(function (Scripting) {\n    function from(value) {\n        return value.map(Scripting.of).getOrElse(Scripting.boolean);\n    }\n    Scripting.parse = media_1.Media.parseDiscrete(\"scripting\", from, \"none\", \"initial-only\", \"enabled\");\n})(Scripting || (exports.Scripting = Scripting = {}));\n//# sourceMappingURL=scripting.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css-feature/src/media/feature/scripting.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css-feature/src/media/feature/value/bound.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css-feature/src/media/feature/value/bound.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Bound = void 0;\nconst alfa_json_1 = __webpack_require__(/*! @siteimprove/alfa-json */ \"./node_modules/@siteimprove/alfa-json/src/index.js\");\n/**\n * A bound, either inclusive or exclusive.\n *\n * @public\n */\nclass Bound {\n    static of(value, isInclusive) {\n        return new Bound(value, isInclusive);\n    }\n    constructor(value, isInclusive) {\n        this._value = value;\n        this._isInclusive = isInclusive;\n    }\n    get value() {\n        return this._value;\n    }\n    get isInclusive() {\n        return this._isInclusive;\n    }\n    map(mapper) {\n        return new Bound(mapper(this._value), this._isInclusive);\n    }\n    hasValue(refinement) {\n        return refinement(this._value);\n    }\n    toJSON() {\n        return {\n            value: alfa_json_1.Serializable.toJSON(this._value),\n            isInclusive: this._isInclusive,\n        };\n    }\n}\nexports.Bound = Bound;\n//# sourceMappingURL=bound.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css-feature/src/media/feature/value/bound.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css-feature/src/media/feature/value/discrete.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css-feature/src/media/feature/value/discrete.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Discrete = void 0;\nconst alfa_equatable_1 = __webpack_require__(/*! @siteimprove/alfa-equatable */ \"./node_modules/@siteimprove/alfa-equatable/src/index.js\");\nconst alfa_json_1 = __webpack_require__(/*! @siteimprove/alfa-json */ \"./node_modules/@siteimprove/alfa-json/src/index.js\");\n/**\n * A non-numerical value, e.g., orientation.\n *\n * @public\n */\nclass Discrete {\n    static of(value) {\n        return new Discrete(value);\n    }\n    constructor(value) {\n        this._value = value;\n    }\n    get value() {\n        return this._value;\n    }\n    map(mapper) {\n        return new Discrete(mapper(this._value));\n    }\n    matches(value) {\n        return alfa_equatable_1.Equatable.equals(this._value, value);\n    }\n    hasValue(refinement) {\n        return refinement(this._value);\n    }\n    toJSON() {\n        return {\n            type: \"discrete\",\n            value: alfa_json_1.Serializable.toJSON(this._value),\n        };\n    }\n}\nexports.Discrete = Discrete;\n/**\n * @public\n */\n(function (Discrete) {\n    function isDiscrete(value) {\n        return value instanceof Discrete;\n    }\n    Discrete.isDiscrete = isDiscrete;\n})(Discrete || (exports.Discrete = Discrete = {}));\n//# sourceMappingURL=discrete.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css-feature/src/media/feature/value/discrete.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css-feature/src/media/feature/value/index.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css-feature/src/media/feature/value/index.js ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./value */ \"./node_modules/@siteimprove/alfa-css-feature/src/media/feature/value/value.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css-feature/src/media/feature/value/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css-feature/src/media/feature/value/range.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css-feature/src/media/feature/value/range.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Range = void 0;\nconst alfa_comparable_1 = __webpack_require__(/*! @siteimprove/alfa-comparable */ \"./node_modules/@siteimprove/alfa-comparable/src/index.js\");\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_refinement_1 = __webpack_require__(/*! @siteimprove/alfa-refinement */ \"./node_modules/@siteimprove/alfa-refinement/src/index.js\");\n/**\n * A range, with an optional minimum and maximum bound, both of which may be\n * inclusive or exclusive.\n *\n * @public\n */\nclass Range {\n    static of(minimum, maximum) {\n        return new Range(alfa_option_1.Option.of(minimum), alfa_option_1.Option.of(maximum));\n    }\n    static minimum(minimum) {\n        return new Range(alfa_option_1.Option.of(minimum), alfa_option_1.None);\n    }\n    static maximum(maximum) {\n        return new Range(alfa_option_1.None, alfa_option_1.Option.of(maximum));\n    }\n    constructor(minimum, maximum) {\n        this._minimum = minimum;\n        this._maximum = maximum;\n    }\n    get minimum() {\n        return this._minimum;\n    }\n    get maximum() {\n        return this._maximum;\n    }\n    map(mapper) {\n        return new Range(this._minimum.map((bound) => bound.map(mapper)), this._maximum.map((bound) => bound.map(mapper)));\n    }\n    toLength() {\n        return this.map((bound) => alfa_refinement_1.Refinement.and(alfa_css_1.Number.isNumber, (value) => !value.hasCalculation() && value.value === 0)(bound)\n            ? alfa_css_1.Length.of(0, \"px\")\n            : bound);\n    }\n    matches(value) {\n        if (!alfa_comparable_1.Comparable.isComparable(value)) {\n            return false;\n        }\n        // Since we need to match both bounds, we return false if one is not\n        // matched and keep true for the default return at the end.\n        for (const minimum of this._minimum) {\n            if (minimum.isInclusive) {\n                // value is inclusively larger than the minimum if it is not\n                // strictly smaller than it.\n                if (value.compare(minimum.value) < 0) {\n                    return false;\n                }\n            }\n            else {\n                if (value.compare(minimum.value) <= 0) {\n                    return false;\n                }\n            }\n        }\n        for (const maximum of this._maximum) {\n            if (maximum.isInclusive) {\n                if (value.compare(maximum.value) > 0) {\n                    return false;\n                }\n            }\n            else {\n                if (value.compare(maximum.value) >= 0) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    hasValue(refinement) {\n        return (this._minimum.every((bound) => refinement(bound.value)) &&\n            this._maximum.every((bound) => refinement(bound.value)));\n    }\n    toJSON() {\n        return {\n            type: \"range\",\n            minimum: this._minimum.map((bound) => bound.toJSON()).getOr(null),\n            maximum: this._maximum.map((bound) => bound.toJSON()).getOr(null),\n        };\n    }\n}\nexports.Range = Range;\n/**\n * @public\n */\n(function (Range) {\n    function isRange(value) {\n        return value instanceof Range;\n    }\n    Range.isRange = isRange;\n})(Range || (exports.Range = Range = {}));\n//# sourceMappingURL=range.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css-feature/src/media/feature/value/range.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css-feature/src/media/feature/value/value.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css-feature/src/media/feature/value/value.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Value = void 0;\nconst boundValue = __webpack_require__(/*! ./bound */ \"./node_modules/@siteimprove/alfa-css-feature/src/media/feature/value/bound.js\");\nconst discreteValue = __webpack_require__(/*! ./discrete */ \"./node_modules/@siteimprove/alfa-css-feature/src/media/feature/value/discrete.js\");\nconst rangeValue = __webpack_require__(/*! ./range */ \"./node_modules/@siteimprove/alfa-css-feature/src/media/feature/value/range.js\");\n/**\n * @public\n */\nvar Value;\n(function (Value) {\n    Value.Bound = boundValue.Bound;\n    Value.Discrete = discreteValue.Discrete;\n    Value.Range = rangeValue.Range;\n    Value.discrete = Value.Discrete.of, Value.isDiscrete = Value.Discrete.isDiscrete;\n    Value.range = Value.Range.of, Value.minimumRange = Value.Range.minimum, Value.maximumRange = Value.Range.maximum, Value.isRange = Value.Range.isRange;\n    Value.bound = Value.Bound.of;\n})(Value || (exports.Value = Value = {}));\n//# sourceMappingURL=value.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css-feature/src/media/feature/value/value.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css-feature/src/media/feature/width.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css-feature/src/media/feature/width.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Width = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst media_1 = __webpack_require__(/*! ./media */ \"./node_modules/@siteimprove/alfa-css-feature/src/media/feature/media.js\");\nconst resolver_1 = __webpack_require__(/*! ./resolver */ \"./node_modules/@siteimprove/alfa-css-feature/src/media/feature/resolver.js\");\n/**\n * {@link https://drafts.csswg.org/mediaqueries-5/#width}\n *\n * @internal\n */\nclass Width extends media_1.Media {\n    static of(value) {\n        return new Width(alfa_option_1.Option.of(value));\n    }\n    constructor(value) {\n        super(\"width\", value);\n    }\n    static boolean() {\n        return Width._boolean;\n    }\n    matches(device) {\n        const { viewport: { width }, } = device;\n        const value = this._value.map((value) => value.map((length) => length.resolve(resolver_1.Resolver.length(device))));\n        return width > 0\n            ? value.some((value) => value.matches(alfa_css_1.Length.of(width, \"px\")))\n            : value.every((value) => value.matches(alfa_css_1.Length.of(0, \"px\")));\n    }\n}\nexports.Width = Width;\nWidth._boolean = new Width(alfa_option_1.None);\n/**\n * @internal\n */\n(function (Width) {\n    function from(value) {\n        return value.map(Width.of).getOrElse(Width.boolean);\n    }\n    function isWidth(value) {\n        return value instanceof Width;\n    }\n    Width.isWidth = isWidth;\n    Width.parse = media_1.Media.parseContinuous(\"width\", from);\n})(Width || (exports.Width = Width = {}));\n//# sourceMappingURL=width.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css-feature/src/media/feature/width.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css-feature/src/media/index.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css-feature/src/media/index.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Media = void 0;\nconst mediaFeature = __webpack_require__(/*! ./feature */ \"./node_modules/@siteimprove/alfa-css-feature/src/media/feature/index.js\");\nconst mediaList = __webpack_require__(/*! ./list */ \"./node_modules/@siteimprove/alfa-css-feature/src/media/list.js\");\nconst modifier = __webpack_require__(/*! ./modifier */ \"./node_modules/@siteimprove/alfa-css-feature/src/media/modifier.js\");\nconst mediaQuery = __webpack_require__(/*! ./query */ \"./node_modules/@siteimprove/alfa-css-feature/src/media/query.js\");\nconst mediaType = __webpack_require__(/*! ./type */ \"./node_modules/@siteimprove/alfa-css-feature/src/media/type.js\");\nconst value = __webpack_require__(/*! ./feature/value */ \"./node_modules/@siteimprove/alfa-css-feature/src/media/feature/value/index.js\");\n/**\n * @public\n */\nvar Media;\n(function (Media) {\n    Media.Feature = mediaFeature.Media;\n    Media.List = mediaList.List;\n    Media.Modifier = modifier.Modifier;\n    Media.Query = mediaQuery.Query;\n    Media.Type = mediaType.Type;\n    Media.Value = value.Value;\n    Media.type = Media.Type.of, Media.isType = Media.Type.isType;\n    Media.isMedia = Media.Feature.isMedia;\n    Media.query = Media.Query.of, Media.isQuery = Media.Query.isQuery;\n    Media.list = Media.List.of, Media.isList = Media.List.isList;\n    Media.parse = Media.List.parse;\n})(Media || (exports.Media = Media = {}));\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css-feature/src/media/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css-feature/src/media/list.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css-feature/src/media/list.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.List = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst alfa_slice_1 = __webpack_require__(/*! @siteimprove/alfa-slice */ \"./node_modules/@siteimprove/alfa-slice/src/index.js\");\nconst query_1 = __webpack_require__(/*! ./query */ \"./node_modules/@siteimprove/alfa-css-feature/src/media/query.js\");\nconst { either, end, map, separatedList, takeUntil } = alfa_parser_1.Parser;\n/**\n * {@link https://drafts.csswg.org/mediaqueries-5/#media-query-list}\n *\n * @public\n */\nclass List {\n    static of(queries) {\n        return new List(queries);\n    }\n    constructor(queries) {\n        this._queries = Array.from(queries);\n    }\n    get queries() {\n        return this._queries;\n    }\n    matches(device) {\n        return (this._queries.length === 0 ||\n            this._queries.some((query) => query.matches(device)));\n    }\n    equals(value) {\n        return (value instanceof List &&\n            value._queries.length === this._queries.length &&\n            value._queries.every((query, i) => query.equals(this._queries[i])));\n    }\n    *[Symbol.iterator]() {\n        yield* this._queries;\n    }\n    toJSON() {\n        return this._queries.map((query) => query.toJSON());\n    }\n    toString() {\n        return this._queries.join(\", \");\n    }\n}\nexports.List = List;\n/**\n * @public\n */\n(function (List) {\n    function isList(value) {\n        return value instanceof List;\n    }\n    List.isList = isList;\n    /**\n     * {@link https://drafts.csswg.org/mediaqueries-5/#typedef-media-query-list}\n     */\n    List.parse = map(separatedList(map(takeUntil(alfa_css_1.Component.consume, either(alfa_css_1.Token.parseComma, end(() => `Unexpected token`))), (components) => alfa_iterable_1.Iterable.flatten(components)), alfa_css_1.Token.parseComma), (queries) => List.of(alfa_iterable_1.Iterable.map(queries, (tokens) => query_1.Query.parse(alfa_slice_1.Slice.from(tokens).trim(alfa_css_1.Token.isWhitespace))\n        .map(([, query]) => query)\n        .getOr(query_1.Query.notAll))));\n})(List || (exports.List = List = {}));\n//# sourceMappingURL=list.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css-feature/src/media/list.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css-feature/src/media/modifier.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css-feature/src/media/modifier.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Modifier = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst { either, map } = alfa_parser_1.Parser;\n/**\n * {@link https://drafts.csswg.org/mediaqueries-5/#mq-prefix}\n *\n * @public\n */\nvar Modifier;\n(function (Modifier) {\n    Modifier[\"Only\"] = \"only\";\n    Modifier[\"Not\"] = \"not\";\n})(Modifier || (exports.Modifier = Modifier = {}));\n/**\n * @public\n */\n(function (Modifier) {\n    Modifier.parse = either(map(alfa_css_1.Token.parseIdent(\"only\"), () => Modifier.Only), map(alfa_css_1.Token.parseIdent(\"not\"), () => Modifier.Not));\n})(Modifier || (exports.Modifier = Modifier = {}));\n//# sourceMappingURL=modifier.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css-feature/src/media/modifier.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css-feature/src/media/query.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css-feature/src/media/query.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Query = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst condition_1 = __webpack_require__(/*! ../condition */ \"./node_modules/@siteimprove/alfa-css-feature/src/condition/index.js\");\nconst feature_1 = __webpack_require__(/*! ./feature */ \"./node_modules/@siteimprove/alfa-css-feature/src/media/feature/index.js\");\nconst modifier_1 = __webpack_require__(/*! ./modifier */ \"./node_modules/@siteimprove/alfa-css-feature/src/media/modifier.js\");\nconst type_1 = __webpack_require__(/*! ./type */ \"./node_modules/@siteimprove/alfa-css-feature/src/media/type.js\");\nconst { delimited, either, end, left, map, option, pair, right } = alfa_parser_1.Parser;\n/**\n * {@link https://drafts.csswg.org/mediaqueries-5/#media-query}\n *\n * @remarks\n * Media query can contain both a modifier, type and media feature.\n *\n * @public\n */\nclass Query {\n    static of(modifier, type, condition) {\n        return new Query(modifier, type, condition);\n    }\n    constructor(modifier, type, condition) {\n        this._modifier = modifier;\n        this._type = type;\n        this._condition = condition;\n    }\n    get modifier() {\n        return this._modifier;\n    }\n    get type() {\n        return this._type;\n    }\n    get condition() {\n        return this._condition;\n    }\n    matches(device) {\n        const negated = this._modifier.some((modifier) => modifier === modifier_1.Modifier.Not);\n        const type = this._type.every((type) => type.matches(device));\n        const condition = this.condition.every((condition) => condition.matches(device));\n        return negated !== (type && condition);\n    }\n    *iterator() {\n        yield* this._condition;\n    }\n    /** @public (knip) */\n    [Symbol.iterator]() {\n        return this.iterator();\n    }\n    equals(value) {\n        return (value instanceof Query &&\n            value._modifier.equals(this._modifier) &&\n            value._type.equals(this._type) &&\n            value._condition.equals(this._condition));\n    }\n    toJSON() {\n        return {\n            modifier: this._modifier.getOr(null),\n            type: this._type.map((type) => type.toJSON()).getOr(null),\n            condition: this._condition\n                .map((condition) => condition.toJSON())\n                .getOr(null),\n        };\n    }\n    toString() {\n        const modifier = this._modifier.getOr(\"\");\n        const type = this._type\n            .map((type) => (modifier === \"\" ? `${type}` : `${modifier} ${type}`))\n            .getOr(\"\");\n        return this._condition\n            .map((condition) => type === \"\" ? `${condition}` : `${type} and ${condition}`)\n            .getOr(type);\n    }\n}\nexports.Query = Query;\n/**\n * @public\n */\n(function (Query) {\n    function isQuery(value) {\n        return value instanceof Query;\n    }\n    Query.isQuery = isQuery;\n    /**\n     * @internal\n     */\n    Query.notAll = Query.of(alfa_option_1.Option.of(modifier_1.Modifier.Not), alfa_option_1.Option.of(type_1.Type.of(\"all\")), alfa_option_1.None);\n    /**\n     * {@link https://drafts.csswg.org/mediaqueries-5/#typedef-media-query}\n     */\n    Query.parse = left(either(map(condition_1.Condition.parse(feature_1.Media.parse), (condition) => Query.of(alfa_option_1.None, alfa_option_1.None, alfa_option_1.Option.of(condition))), map(pair(pair(option(delimited(option(alfa_css_1.Token.parseWhitespace), modifier_1.Modifier.parse)), type_1.Type.parse), option(right(delimited(option(alfa_css_1.Token.parseWhitespace), alfa_css_1.Token.parseIdent(\"and\")), condition_1.Condition.parseWithoutOr(feature_1.Media.parse)))), ([[modifier, type], condition]) => Query.of(modifier, alfa_option_1.Option.of(type), condition))), end(() => `Unexpected token`));\n})(Query || (exports.Query = Query = {}));\n//# sourceMappingURL=query.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css-feature/src/media/query.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css-feature/src/media/type.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css-feature/src/media/type.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Type = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_device_1 = __webpack_require__(/*! @siteimprove/alfa-device */ \"./node_modules/@siteimprove/alfa-device/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst { map } = alfa_parser_1.Parser;\n/**\n * {@link https://drafts.csswg.org/mediaqueries-5/#media-types}\n *\n * @public\n */\nclass Type {\n    static of(name) {\n        return new Type(name);\n    }\n    constructor(name) {\n        this._name = name;\n    }\n    get name() {\n        return this._name;\n    }\n    matches(device) {\n        switch (this._name) {\n            case \"screen\":\n                return device.type === alfa_device_1.Device.Type.Screen;\n            case \"print\":\n                return device.type === alfa_device_1.Device.Type.Print;\n            case \"speech\":\n                return device.type === alfa_device_1.Device.Type.Speech;\n            case \"all\":\n                return true;\n            default:\n                return false;\n        }\n    }\n    *iterator() {\n        yield this;\n    }\n    /** @public (knip) */\n    [Symbol.iterator]() {\n        return this.iterator();\n    }\n    equals(value) {\n        return value instanceof Type && value._name === this._name;\n    }\n    toJSON() {\n        return {\n            name: this._name,\n        };\n    }\n    toString() {\n        return this._name;\n    }\n}\nexports.Type = Type;\n(function (Type) {\n    function isType(value) {\n        return value instanceof Type;\n    }\n    Type.isType = isType;\n    /**\n     * {@link https://drafts.csswg.org/mediaqueries-5/#typedef-media-type}\n     */\n    Type.parse = map(alfa_css_1.Token.parseIdent((ident) => {\n        switch (ident.value) {\n            // These values are not allowed as media types.\n            case \"only\":\n            case \"not\":\n            case \"and\":\n            case \"or\":\n                return false;\n            default:\n                return true;\n        }\n    }), (ident) => Type.of(ident.value));\n})(Type || (exports.Type = Type = {}));\n//# sourceMappingURL=type.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css-feature/src/media/type.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css-feature/src/supports/feature/index.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css-feature/src/supports/feature/index.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./property */ \"./node_modules/@siteimprove/alfa-css-feature/src/supports/feature/property.js\"), exports);\n/**\n * @remarks\n * Supports function are not currently supported.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/@supports#function_syntax}\n * {@link https://drafts.csswg.org/css-conditional-4/#at-supports-ext}\n *\n * @remarks\n * * `selector(…)` is currently experimental.\n * * `font-tech(…)` and `font-format(…)` are somehow not documented in CSS (?!)\n *\n * We currently do not support the functional notation and will need to expand support\n * upon need.\n */\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css-feature/src/supports/feature/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css-feature/src/supports/feature/property.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css-feature/src/supports/feature/property.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Property = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst { delimited, map, option, separated } = alfa_parser_1.Parser;\n/**\n * @public\n */\nclass Property {\n    static of(name, value) {\n        return new Property(name, value);\n    }\n    constructor(name, value) {\n        this._name = name;\n        this._value = value;\n    }\n    get name() {\n        return this._name;\n    }\n    get value() {\n        return this._value;\n    }\n    matches() {\n        // We pretend to support all standard CSS properties.\n        // When this is not the case, and it impacts our audit, we need to\n        // add support for the missing property…\n        // https://developer.mozilla.org/en-US/docs/Glossary/Vendor_Prefix\n        // The value might be totally invalid. We assume this won't create problem,\n        // that is nobody is relying on a @supports rule with invalid value being\n        // rejected to ensure their styling.\n        return !this._name.startsWith(\"-\");\n    }\n    *iterator() {\n        yield this;\n    }\n    /** @public (knip) */\n    [Symbol.iterator]() {\n        return this.iterator();\n    }\n    equals(value) {\n        return (value instanceof Property &&\n            value._name === this._name &&\n            value._value === this._value);\n    }\n    toJSON() {\n        return {\n            type: \"property\",\n            name: this._name,\n            value: this._value,\n        };\n    }\n    toString() {\n        return `${this._name}: ${this._value}`;\n    }\n}\nexports.Property = Property;\n/**\n * @public\n */\n(function (Property) {\n    function isProperty(value) {\n        return value instanceof Property;\n    }\n    Property.isProperty = isProperty;\n    /**\n     * @remarks\n     * We do not want to actually parse the value at this point, since it would\n     * create a circular dependency with `siteimprove/alfa-style` who knows about\n     * this.\n     * Therefore, we accept any OK-ish string as a decent value… This creates challenges\n     * to be reasonably sure that the value is actually terminated.\n     *\n     * As per grammar, the declaration is enclosed in parentheses. So we stop as soon as we've seen\n     * more `)` than `(`.\n     */\n    const parseValue = (input) => {\n        let count = 0;\n        let value = \"\";\n        let rest = input;\n        while (!rest.isEmpty()) {\n            const token = rest.first().getUnsafe();\n            if (alfa_css_1.Token.isOpenParenthesis(token) || alfa_css_1.Token.isFunction(token)) {\n                count++;\n            }\n            else if (alfa_css_1.Token.isCloseParenthesis(token)) {\n                count--;\n            }\n            if (count < 0) {\n                break;\n            }\n            // Do not consume the last closing parenthesis.\n            rest = rest.rest();\n            value += token.toString();\n        }\n        return count < 0\n            ? alfa_result_1.Ok.of([rest, value.trim()])\n            : alfa_result_1.Err.of(\"Unexpected end of input\");\n    };\n    Property.parse = map(separated(alfa_css_1.Token.parseIdent(), delimited(option(alfa_css_1.Token.parseWhitespace), alfa_css_1.Token.parseColon), parseValue), ([name, value]) => Property.of(name.value, value));\n})(Property || (exports.Property = Property = {}));\n//# sourceMappingURL=property.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css-feature/src/supports/feature/property.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css-feature/src/supports/index.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css-feature/src/supports/index.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Supports = void 0;\nconst supportsFeature = __webpack_require__(/*! ./feature */ \"./node_modules/@siteimprove/alfa-css-feature/src/supports/feature/index.js\");\nconst supportsQuery = __webpack_require__(/*! ./query */ \"./node_modules/@siteimprove/alfa-css-feature/src/supports/query.js\");\n/**\n * @public\n */\nvar Supports;\n(function (Supports) {\n    Supports.Property = supportsFeature.Property;\n    Supports.Query = supportsQuery.Query;\n    Supports.isProperty = Supports.Property.isProperty;\n    Supports.query = Supports.Query.of, Supports.isQuery = Supports.Query.isQuery;\n    Supports.parse = Supports.Query.parse;\n})(Supports || (exports.Supports = Supports = {}));\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css-feature/src/supports/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css-feature/src/supports/query.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css-feature/src/supports/query.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Query = void 0;\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst condition_1 = __webpack_require__(/*! ../condition */ \"./node_modules/@siteimprove/alfa-css-feature/src/condition/index.js\");\nconst feature_1 = __webpack_require__(/*! ./feature */ \"./node_modules/@siteimprove/alfa-css-feature/src/supports/feature/index.js\");\nconst { end, left, map } = alfa_parser_1.Parser;\n/**\n * {@link https://drafts.csswg.org/css-conditional-3/#at-supports}\n *\n * @remarks\n * Supports query are just a wrapper for a condition..\n *\n * @public\n */\nclass Query {\n    static of(condition) {\n        return new Query(condition);\n    }\n    constructor(condition) {\n        this._condition = condition;\n    }\n    get condition() {\n        return this._condition;\n    }\n    matches(device) {\n        return this._condition.matches(device);\n    }\n    *iterator() {\n        yield* this._condition;\n    }\n    /** @public (knip) */\n    [Symbol.iterator]() {\n        return this.iterator();\n    }\n    equals(value) {\n        return value instanceof Query && value._condition.equals(this._condition);\n    }\n    toJSON() {\n        return { condition: this._condition.toJSON() };\n    }\n    toString() {\n        return this._condition.toString();\n    }\n}\nexports.Query = Query;\n/**\n * @public\n */\n(function (Query) {\n    function isQuery(value) {\n        return value instanceof Query;\n    }\n    Query.isQuery = isQuery;\n    /**\n     * {@link https://drafts.csswg.org/mediaqueries-5/#typedef-media-query}\n     */\n    Query.parse = left(map(condition_1.Condition.parse(feature_1.Property.parse), Query.of), end(() => `Unexpected token`));\n})(Query || (exports.Query = Query = {}));\n//# sourceMappingURL=query.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css-feature/src/supports/query.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/calculation/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/calculation/index.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./math-expression */ \"./node_modules/@siteimprove/alfa-css/src/calculation/math-expression/index.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/calculation/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/calculation/math-expression/expression.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/calculation/math-expression/expression.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Expression = void 0;\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\n/**\n * {@link https://drafts.csswg.org/css-values/#calculation-tree}\n *\n * @public\n */\nclass Expression {\n    constructor(type, kind) {\n        this._type = type;\n        this._kind = kind;\n    }\n    get type() {\n        return this._type;\n    }\n    get kind() {\n        return this._kind;\n    }\n    toAngle() {\n        return alfa_result_1.Err.of(`${this} is not a reduced angle`);\n    }\n    toLength() {\n        return alfa_result_1.Err.of(`${this} is not a reduced length`);\n    }\n    toNumber() {\n        return alfa_result_1.Err.of(`${this} is not a reduced number`);\n    }\n    toPercentage() {\n        return alfa_result_1.Err.of(`${this} is not a reduced percentage`);\n    }\n    toJSON() {\n        return {\n            type: this.type,\n        };\n    }\n}\nexports.Expression = Expression;\n//# sourceMappingURL=expression.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/calculation/math-expression/expression.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/calculation/math-expression/function.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/calculation/math-expression/function.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Function = void 0;\nconst alfa_array_1 = __webpack_require__(/*! @siteimprove/alfa-array */ \"./node_modules/@siteimprove/alfa-array/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst numeric_1 = __webpack_require__(/*! ../numeric */ \"./node_modules/@siteimprove/alfa-css/src/calculation/numeric/index.js\");\nconst expression_1 = __webpack_require__(/*! ./expression */ \"./node_modules/@siteimprove/alfa-css/src/calculation/math-expression/expression.js\");\nconst value_1 = __webpack_require__(/*! ./value */ \"./node_modules/@siteimprove/alfa-css/src/calculation/math-expression/value.js\");\nconst { isAngle } = numeric_1.Angle;\nconst { isLength } = numeric_1.Length;\nconst { isNumber } = numeric_1.Number;\nconst { isValueExpression } = value_1.Value;\n/**\n * @public\n */\nclass Function extends expression_1.Expression {\n    constructor(type, args, kind) {\n        super(type, kind);\n        this._args = args;\n        this._kind = kind;\n    }\n    get args() {\n        return this._args;\n    }\n    equals(value) {\n        return (value instanceof Function &&\n            value.type === this.type &&\n            value._args.length === this._args.length &&\n            value._args.every((arg, i) => arg.equals(this._args[i])));\n    }\n    toJSON() {\n        return { ...super.toJSON(), arguments: alfa_array_1.Array.toJSON(this._args) };\n    }\n}\nexports.Function = Function;\n/**\n * @public\n */\n(function (Function) {\n    class Calculation extends Function {\n        static of(expression) {\n            return new Calculation([expression], expression.kind);\n        }\n        constructor(args, kind) {\n            super(\"calculation\", args, kind);\n        }\n        reduce(resolver) {\n            const reduced = this._args[0].reduce(resolver);\n            // If the calculation reduces to a value, no need to keep\n            // the `calc()` wrapper.\n            return isValueExpression(reduced) ? reduced : Calculation.of(reduced);\n        }\n        toString() {\n            return `calc(${this._args[0]})`;\n        }\n    }\n    Function.Calculation = Calculation;\n    /** @public (knip) */\n    function isCalculation(value) {\n        return value instanceof Calculation;\n    }\n    Function.isCalculation = isCalculation;\n    class Max extends Function {\n        static of(first, ...expressions) {\n            // {@see https://drafts.csswg.org/css-values/#determine-the-type-of-a-calculation}\n            const kind = expressions.reduce((old, cur) => old.flatMap((kind) => kind.add(cur.kind)), alfa_result_1.Result.of(first.kind));\n            return kind.map((kind) => new Max([first, ...expressions], kind));\n        }\n        constructor(args, kind) {\n            super(\"max\", args, kind);\n        }\n        reduce(resolver) {\n            // We know from the guard in Max.of that all args have the same kind.\n            const reduced = this._args.map((expr) => expr.reduce(resolver));\n            if (alfa_array_1.Array.every(reduced, isValueExpression)) {\n                const values = reduced.map((expr) => expr.value);\n                // At this point, reduced args should be either:\n                // * numbers\n                // * angle, in canonical unit (deg)\n                // * absolute length, in canonical unit (px)\n                // * percentages\n                // * relative length, in any unit\n                // The first three are reduce-able further; percentages aren't because it\n                // may end up being percentages of negative values.\n                if (values.every(isNumber)) {\n                    return value_1.Value.of(numeric_1.Number.of(Math.max(...values.map((value) => value.value))));\n                }\n                if (values.every(\n                // The unit test is theoretically not needed since reduced angle values\n                // should always be in the canonical unit (no relative angles)\n                (value) => isAngle(value) && value.hasUnit(\"deg\"))) {\n                    return value_1.Value.of(numeric_1.Angle.of(Math.max(...values.map((value) => value.value)), \"deg\"));\n                }\n                if (values.every((value) => isLength(value) && value.hasUnit(\"px\"))) {\n                    return value_1.Value.of(numeric_1.Length.of(Math.max(...values.map((value) => value.value)), \"px\"));\n                }\n                // reduced contains percentages or relative lengths, we just fall through\n                // to the default case.\n            }\n            // reduced contains unreduced calculations, we could eagerly compact on the\n            // fully reduced ones, but it's easier to just keep everything\n            return new Max(reduced, this._kind);\n        }\n        toString() {\n            return `max(${this._args.map((expr) => expr.toString()).join(\", \")})`;\n        }\n    }\n    Function.Max = Max;\n})(Function || (exports.Function = Function = {}));\n//# sourceMappingURL=function.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/calculation/math-expression/function.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/calculation/math-expression/index.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/calculation/math-expression/index.js ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./math */ \"./node_modules/@siteimprove/alfa-css/src/calculation/math-expression/math.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/calculation/math-expression/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/calculation/math-expression/kind.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/calculation/math-expression/kind.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Kind = void 0;\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_record_1 = __webpack_require__(/*! @siteimprove/alfa-record */ \"./node_modules/@siteimprove/alfa-record/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\n/**\n * {@link https://drafts.css-houdini.org/css-typed-om/#numeric-typing}\n *\n * @remarks\n * The shared `Value` interface already uses the term \"type\" to denote the\n * different types of CSS values. We therefore use the term \"kind\" to denote\n * the type of a calculation.\n *\n * @internal\n */\nclass Kind {\n    static of(kind) {\n        const kinds = this._empty._kinds;\n        return new Kind(kind === undefined ? kinds : kinds.set(kind, 1), alfa_option_1.None);\n    }\n    constructor(kinds, hint) {\n        this._kinds = kinds;\n        this._hint = hint;\n    }\n    /** @public (knip) */\n    get kinds() {\n        return this._kinds;\n    }\n    /** @public (knip) */\n    get hint() {\n        return this._hint;\n    }\n    /**\n     * {@link https://drafts.css-houdini.org/css-typed-om/#cssnumericvalue-match}\n     */\n    is(kind, value = 1, hinted = kind === \"percentage\") {\n        for (const entry of this._kinds) {\n            // this is not the dimension we're looking for, and it has power 0.\n            if (entry[0] !== kind && entry[1] === 0) {\n                continue;\n            }\n            // this is the dimension we're looking for, and it has the correct power.\n            if (entry[0] === kind && entry[1] === value) {\n                continue;\n            }\n            return false;\n        }\n        // All the entries have the correct value. Is a hint allowed?\n        return this._hint.isNone() || hinted;\n    }\n    /**\n     * {@link https://drafts.css-houdini.org/css-typed-om/#cssnumericvalue-add-two-types}\n     */\n    add(kind) {\n        let a = this;\n        let b = kind;\n        if (a._hint.some((a) => b._hint.some((b) => a !== b))) {\n            return alfa_result_1.Err.of(`Cannot add types ${a} and ${b}`);\n        }\n        if (a._hint.isNone()) {\n            for (const hint of b._hint) {\n                a = a.apply(hint);\n            }\n        }\n        if (b._hint.isNone()) {\n            for (const hint of a._hint) {\n                b = b.apply(hint);\n            }\n        }\n        if (a._kinds.equals(b._kinds)) {\n            return alfa_result_1.Result.of(a);\n        }\n        if ([a._kinds, b._kinds].some((kinds) => kinds.get(\"percentage\").getOr(0) !== 0) &&\n            [a._kinds, b._kinds].some((kinds) => kinds.some((value, kind) => kind !== \"percentage\" && value !== 0))) {\n            for (const hint of [\"length\", \"angle\"]) {\n                const kind = a.apply(hint);\n                if (kind._kinds.equals(b.apply(hint)._kinds)) {\n                    return alfa_result_1.Result.of(kind);\n                }\n            }\n        }\n        return alfa_result_1.Err.of(`Cannot add types ${a} and ${b}`);\n    }\n    /**\n     * {@link https://drafts.css-houdini.org/css-typed-om/#cssnumericvalue-multiply-two-types}\n     */\n    multiply(kind) {\n        let a = this;\n        let b = kind;\n        if (a._hint.some((a) => b._hint.some((b) => a !== b))) {\n            return alfa_result_1.Err.of(`Cannot multiply types ${a} and ${b}`);\n        }\n        if (a._hint.isNone()) {\n            for (const hint of b._hint) {\n                a = a.apply(hint);\n            }\n        }\n        if (b._hint.isNone()) {\n            for (const hint of a._hint) {\n                b = b.apply(hint);\n            }\n        }\n        return alfa_result_1.Result.of(new Kind(b._kinds.reduce((kinds, value, kind) => kinds.set(kind, kinds.get(kind).getOr(0) + value), a._kinds), a._hint));\n    }\n    /**\n     * {@link https://drafts.css-houdini.org/css-typed-om/#cssnumericvalue-invert-a-type}\n     */\n    invert() {\n        return new Kind(this._kinds.reduce((kinds, value, kind) => kinds.set(kind, -1 * value), this._kinds), alfa_option_1.None);\n    }\n    /**\n     * {@link https://drafts.css-houdini.org/css-typed-om/#apply-the-percent-hint}\n     */\n    apply(hint) {\n        return new Kind(this._kinds\n            .set(hint, this._kinds.get(hint).getOr(0) +\n            this._kinds.get(\"percentage\").getOr(0))\n            .set(\"percentage\", 0), alfa_option_1.Option.of(hint));\n    }\n    equals(value) {\n        return (value instanceof Kind &&\n            value._kinds.equals(this._kinds) &&\n            value._hint.equals(this._hint));\n    }\n    toJSON() {\n        return {\n            kinds: this._kinds.toArray(),\n            hint: this._hint.getOr(null),\n        };\n    }\n}\nexports.Kind = Kind;\nKind._empty = new Kind(alfa_record_1.Record.of({\n    length: 0,\n    angle: 0,\n    percentage: 0,\n}), alfa_option_1.None);\n//# sourceMappingURL=kind.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/calculation/math-expression/kind.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/calculation/math-expression/math.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/calculation/math-expression/math.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Math = void 0;\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst syntax_1 = __webpack_require__(/*! ../../syntax */ \"./node_modules/@siteimprove/alfa-css/src/syntax/index.js\");\nconst numeric_1 = __webpack_require__(/*! ../numeric */ \"./node_modules/@siteimprove/alfa-css/src/calculation/numeric/index.js\");\nconst function_1 = __webpack_require__(/*! ./function */ \"./node_modules/@siteimprove/alfa-css/src/calculation/math-expression/function.js\");\nconst operation_1 = __webpack_require__(/*! ./operation */ \"./node_modules/@siteimprove/alfa-css/src/calculation/math-expression/operation.js\");\nconst value_1 = __webpack_require__(/*! ./value */ \"./node_modules/@siteimprove/alfa-css/src/calculation/math-expression/value.js\");\nconst { delimited, either, filter, map, mapResult, option, pair, separatedList, zeroOrMore, } = alfa_parser_1.Parser;\n/**\n * {@link https://drafts.csswg.org/css-values/#math}\n *\n * @public\n */\nclass Math {\n    static of(expression) {\n        return new Math(expression.reduce({\n            length: (value) => value,\n            percentage: (value) => value,\n        }));\n    }\n    constructor(expression) {\n        this._type = \"math expression\";\n        this._expression = expression;\n    }\n    get expression() {\n        return this._expression;\n    }\n    get type() {\n        return this._type;\n    }\n    reduce(resolver) {\n        return new Math(this._expression.reduce(resolver));\n    }\n    /**\n     * {@link https://drafts.css-houdini.org/css-typed-om/#cssnumericvalue-match}\n     */\n    isDimension(dimension) {\n        return this._expression.kind.is(dimension);\n    }\n    /**\n     * {@link https://drafts.css-houdini.org/css-typed-om/#cssnumericvalue-match}\n     */\n    isDimensionPercentage(dimension) {\n        return (\n        // dimension-percentage are not just (dimension | percentage) because the\n        // dimension does accept a percent hint in this case; while pure\n        // dimensions may not be hinted.\n        this._expression.kind.is(dimension, 1, true) ||\n            this._expression.kind.is(\"percentage\"));\n    }\n    /**\n     * {@link https://drafts.css-houdini.org/css-typed-om/#cssnumericvalue-match}\n     */\n    isNumber() {\n        return this._expression.kind.is();\n    }\n    /**\n     * {@link https://drafts.css-houdini.org/css-typed-om/#cssnumericvalue-match}\n     */\n    isPercentage() {\n        return this._expression.kind.is(\"percentage\");\n    }\n    resolve(resolver, hint) {\n        // Since the expressions can theoretically contain arbitrarily units in them,\n        // e.g. calc(1px * (3 deg / 1 rad)) is a length (even though in practice\n        // they seem to be more restricted), we can't easily type Expression itself\n        // (other than with its Kind).\n        try {\n            const expression = this._expression.reduce({\n                // If the expression is a length, and we can't resolve relative lengths,\n                // abort.\n                length: () => {\n                    throw new Error(`Missing length resolver for ${this}`);\n                },\n                // If the expression is a percentage and we can't resolve percentages,\n                // we keep them as percentages.\n                percentage: (p) => p,\n                ...resolver,\n            });\n            // Pure percentages can be resolved as any dimension (or stay as percentage)\n            // We need a hint, provided by the context, in order to know what type of\n            // value to convert to afterward.\n            if (this.isPercentage()) {\n                const converters = {\n                    angle: \"toAngle\",\n                    length: \"toLength\",\n                };\n                // If no resolver was provided, percentages must stay as percentages\n                return expression[resolver === undefined || hint === undefined\n                    ? \"toPercentage\"\n                    : converters[hint]]();\n            }\n            return this.isDimensionPercentage(\"angle\")\n                ? // angle are also angle-percentage, so this catches both.\n                    expression.toAngle()\n                : this.isDimensionPercentage(\"length\")\n                    ? // length are also length-percentage, so this catches both.\n                        expression.toLength()\n                    : this.isNumber()\n                        ? expression.toNumber()\n                        : alfa_result_1.Err.of(`${this} does not resolve to a valid expression`);\n        }\n        catch (e) {\n            if (e instanceof Error) {\n                return alfa_result_1.Err.of(e.message);\n            }\n            else {\n                return alfa_result_1.Err.of(`Unexpected error while resolving math expression ${this}`);\n            }\n        }\n    }\n    hash(hash) { }\n    equals(value) {\n        return value instanceof Math && value._expression.equals(this._expression);\n    }\n    toJSON() {\n        return {\n            type: \"math expression\",\n            expression: this._expression.toJSON(),\n        };\n    }\n    toString() {\n        return this._expression.toString();\n    }\n}\nexports.Math = Math;\n/**\n * @public\n */\n(function (Math) {\n    function isCalculation(value) {\n        return value instanceof Math;\n    }\n    Math.isCalculation = isCalculation;\n    function isNumber(value) {\n        return isCalculation(value) && value.isNumber();\n    }\n    Math.isNumber = isNumber;\n    function isPercentage(value) {\n        return isCalculation(value) && value.isPercentage();\n    }\n    Math.isPercentage = isPercentage;\n    // Due to possibility of recursive expressions (`calc(1 + calc(2+3) )`), parsers\n    // are mutually recursive and must be kept together here rather than distributed\n    // in the corresponding files.\n    let parseSum;\n    const parseCalc = map(syntax_1.Function.parse(\"calc\", (input) => parseSum(input)), ([, expression]) => function_1.Function.Calculation.of(expression));\n    const parseMax = mapResult(syntax_1.Function.parse(\"max\", (input) => separatedList(parseSum, delimited(option(syntax_1.Token.parseWhitespace), syntax_1.Token.parseComma))(input)), ([, args]) => function_1.Function.Max.of(...args));\n    const parseFunction = either(parseCalc, parseMax);\n    /**\n     * {@link https://drafts.csswg.org/css-values/#typedef-calc-value}\n     */\n    const parseValue = either(map(either(numeric_1.Number.parse, numeric_1.Percentage.parse, numeric_1.Length.parse, numeric_1.Angle.parse), value_1.Value.of), parseFunction, delimited(syntax_1.Token.parseOpenParenthesis, (input) => parseSum(input), syntax_1.Token.parseCloseParenthesis));\n    /**\n     * {@link https://drafts.csswg.org/css-values/#typedef-calc-product}\n     */\n    const parseProduct = mapResult(pair(parseValue, zeroOrMore(pair(delimited(option(syntax_1.Token.parseWhitespace), either(map(syntax_1.Token.parseDelim(\"*\"), () => false), map(syntax_1.Token.parseDelim(\"/\"), () => true))), parseValue))), ([left, result]) => result\n        .map(([invert, right]) => (invert ? operation_1.Operation.Invert.of(right) : right))\n        .reduce((left, right) => left.flatMap((left) => operation_1.Operation.Product.of(left, right)), alfa_result_1.Result.of(left)));\n    /**\n     * {@link https://drafts.csswg.org/css-values/#typedef-calc-sum}\n     */\n    parseSum = mapResult(pair(parseProduct, zeroOrMore(pair(delimited(syntax_1.Token.parseWhitespace, either(map(syntax_1.Token.parseDelim(\"+\"), () => false), map(syntax_1.Token.parseDelim(\"-\"), () => true))), parseProduct))), ([left, result]) => result\n        .map(([invert, right]) => (invert ? operation_1.Operation.Negate.of(right) : right))\n        .reduce((left, right) => left.flatMap((left) => operation_1.Operation.Sum.of(left, right)), alfa_result_1.Result.of(left)));\n    Math.parse = map(parseFunction, Math.of);\n    // other parsers + filters can be added when needed\n    Math.parseAngle = filter(Math.parse, (calculation) => calculation.isDimension(\"angle\"), () => `calc() expression must be of type \"angle\"`);\n    Math.parseAnglePercentage = filter(Math.parse, (calculation) => calculation.isDimensionPercentage(\"angle\"), () => `calc() expression must be of type \"angle\" or \"percentage\"`);\n    Math.parseLength = filter(Math.parse, (calculation) => calculation.isDimension(\"length\"), () => `calc() expression must be of type \"length\"`);\n    Math.parseLengthPercentage = filter(Math.parse, (calculation) => calculation.isDimensionPercentage(\"length\"), () => `calc() expression must be of type \"length\" or \"percentage\"`);\n    Math.parseNumber = filter(Math.parse, (calculation) => calculation.isNumber(), () => `calc() expression must be of type \"number\"`);\n    Math.parsePercentage = filter(Math.parse, (calculation) => calculation.isPercentage(), () => `calc() expression must be of type \"percentage\"`);\n})(Math || (exports.Math = Math = {}));\n//# sourceMappingURL=math.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/calculation/math-expression/math.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/calculation/math-expression/operation.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/calculation/math-expression/operation.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Operation = void 0;\nconst alfa_array_1 = __webpack_require__(/*! @siteimprove/alfa-array */ \"./node_modules/@siteimprove/alfa-array/src/index.js\");\nconst numeric_1 = __webpack_require__(/*! ../numeric */ \"./node_modules/@siteimprove/alfa-css/src/calculation/numeric/index.js\");\nconst unit_1 = __webpack_require__(/*! ../../unit */ \"./node_modules/@siteimprove/alfa-css/src/unit/index.js\");\nconst expression_1 = __webpack_require__(/*! ./expression */ \"./node_modules/@siteimprove/alfa-css/src/calculation/math-expression/expression.js\");\nconst value_1 = __webpack_require__(/*! ./value */ \"./node_modules/@siteimprove/alfa-css/src/calculation/math-expression/value.js\");\nconst { isAngle } = numeric_1.Angle;\nconst { isDimension } = numeric_1.Dimension;\nconst { isLength } = numeric_1.Length;\nconst { isNumber } = numeric_1.Number;\nconst { isPercentage } = numeric_1.Percentage;\n/**\n * {@link https://drafts.csswg.org/css-values/#calculation-tree-operator-nodes}\n *\n * @public\n */\nclass Operation extends expression_1.Expression {\n    constructor(type, operands, kind) {\n        super(type, kind);\n        this._operands = operands;\n    }\n    get operands() {\n        return this._operands;\n    }\n    equals(value) {\n        return (value instanceof Operation &&\n            value._type === this._type &&\n            value._operands.length === this._operands.length &&\n            value._operands.every((operand, i) => operand.equals(this._operands[i])));\n    }\n    toJSON() {\n        return { ...super.toJSON(), operands: alfa_array_1.Array.toJSON(this._operands) };\n    }\n}\nexports.Operation = Operation;\n/**\n * @public\n */\n(function (Operation) {\n    class Unary extends Operation {\n        constructor(type, operands, kind) {\n            super(type, operands, kind);\n        }\n    }\n    Operation.Unary = Unary;\n    class Binary extends Operation {\n        constructor(type, operands, kind) {\n            super(type, operands, kind);\n        }\n    }\n    Operation.Binary = Binary;\n    class Sum extends Binary {\n        static of(...operands) {\n            const [fst, snd] = operands;\n            const kind = fst.kind.add(snd.kind);\n            return kind.map((kind) => new Sum(operands, kind));\n        }\n        constructor(operands, kind) {\n            super(\"sum\", operands, kind);\n        }\n        reduce(resolver) {\n            const [fst, snd] = this._operands.map((operand) => operand.reduce(resolver));\n            if (value_1.Value.isValueExpression(fst) && value_1.Value.isValueExpression(snd)) {\n                if (isNumber(fst.value) && isNumber(snd.value)) {\n                    return value_1.Value.of(numeric_1.Number.of(fst.value.value + snd.value.value));\n                }\n                if (isPercentage(fst.value) && isPercentage(snd.value)) {\n                    return value_1.Value.of(numeric_1.Percentage.of(fst.value.value + snd.value.value));\n                }\n                if (isDimension(fst.value) &&\n                    isDimension(snd.value) &&\n                    fst.value.unit === snd.value.unit) {\n                    const { unit } = fst.value;\n                    if (unit_1.Unit.isLength(unit)) {\n                        return value_1.Value.of(numeric_1.Length.of(fst.value.value + snd.value.value, unit));\n                    }\n                    if (unit_1.Unit.isAngle(unit)) {\n                        return value_1.Value.of(numeric_1.Angle.of(fst.value.value + snd.value.value, unit));\n                    }\n                }\n            }\n            return new Sum([fst, snd], this._kind);\n        }\n        toString() {\n            const [fst, snd] = this._operands;\n            if (isNegateExpression(snd)) {\n                return `(${fst} - ${snd.operands[0]})`;\n            }\n            return `(${fst} + ${snd})`;\n        }\n    }\n    Operation.Sum = Sum;\n    /** @public (knip) */\n    function isSumExpression(value) {\n        return value instanceof Sum;\n    }\n    Operation.isSumExpression = isSumExpression;\n    class Negate extends Unary {\n        static of(operand) {\n            return new Negate([operand], operand.kind);\n        }\n        constructor(operand, kind) {\n            super(\"negate\", operand, kind);\n        }\n        reduce(resolver) {\n            const [operand] = this._operands.map((operand) => operand.reduce(resolver));\n            if (value_1.Value.isValueExpression(operand)) {\n                const { value } = operand;\n                if (isNumber(value)) {\n                    return value_1.Value.of(numeric_1.Number.of(0 - value.value));\n                }\n                if (isPercentage(value)) {\n                    return value_1.Value.of(numeric_1.Percentage.of(0 - value.value));\n                }\n                if (isLength(value)) {\n                    return value_1.Value.of(numeric_1.Length.of(0 - value.value, value.unit));\n                }\n                if (isAngle(value)) {\n                    return value_1.Value.of(numeric_1.Angle.of(0 - value.value, value.unit));\n                }\n            }\n            if (isNegateExpression(operand)) {\n                return operand._operands[0];\n            }\n            return Negate.of(operand);\n        }\n        toString() {\n            const [operand] = this._operands;\n            return `(-1 * ${operand})`;\n        }\n    }\n    Operation.Negate = Negate;\n    function isNegateExpression(value) {\n        return value instanceof Negate;\n    }\n    Operation.isNegateExpression = isNegateExpression;\n    class Product extends Binary {\n        static of(...operands) {\n            const [fst, snd] = operands;\n            const kind = fst.kind.multiply(snd.kind);\n            return kind.map((kind) => new Product(operands, kind));\n        }\n        constructor(operands, kind) {\n            super(\"product\", operands, kind);\n        }\n        reduce(resolver) {\n            const [fst, snd] = this._operands.map((operand) => operand.reduce(resolver));\n            if (value_1.Value.isValueExpression(fst) && value_1.Value.isValueExpression(snd)) {\n                let multipler;\n                let value;\n                if (isNumber(fst.value)) {\n                    multipler = fst.value.value;\n                    value = snd.value;\n                }\n                else if (isNumber(snd.value)) {\n                    multipler = snd.value.value;\n                    value = fst.value;\n                }\n                if (multipler !== undefined) {\n                    if (isNumber(value)) {\n                        return value_1.Value.of(numeric_1.Number.of(multipler * value.value));\n                    }\n                    if (isPercentage(value)) {\n                        return value_1.Value.of(numeric_1.Percentage.of(multipler * value.value));\n                    }\n                    if (isLength(value)) {\n                        return value_1.Value.of(numeric_1.Length.of(multipler * value.value, value.unit));\n                    }\n                    if (isAngle(value)) {\n                        return value_1.Value.of(numeric_1.Angle.of(multipler * value.value, value.unit));\n                    }\n                }\n            }\n            return new Product([fst, snd], this._kind);\n        }\n        toString() {\n            const [fst, snd] = this._operands;\n            return `${fst} * ${snd}`;\n        }\n    }\n    Operation.Product = Product;\n    /** @public (knip) */\n    function isProductExpression(value) {\n        return value instanceof Product;\n    }\n    Operation.isProductExpression = isProductExpression;\n    class Invert extends Unary {\n        static of(operand) {\n            return new Invert([operand], operand.kind.invert());\n        }\n        constructor(operand, kind) {\n            super(\"invert\", operand, kind);\n        }\n        reduce(resolver) {\n            const [operand] = this._operands.map((operand) => operand.reduce(resolver));\n            if (value_1.Value.isValueExpression(operand)) {\n                const { value } = operand;\n                if (isNumber(value)) {\n                    return value_1.Value.of(numeric_1.Number.of(1 / value.value));\n                }\n            }\n            if (isInvertExpression(operand)) {\n                return operand._operands[0];\n            }\n            return Negate.of(operand);\n        }\n        toString() {\n            const [operand] = this._operands;\n            return `(1 / ${operand})`;\n        }\n    }\n    Operation.Invert = Invert;\n    function isInvertExpression(value) {\n        return value instanceof Invert;\n    }\n    Operation.isInvertExpression = isInvertExpression;\n})(Operation || (exports.Operation = Operation = {}));\n//# sourceMappingURL=operation.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/calculation/math-expression/operation.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/calculation/math-expression/value.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/calculation/math-expression/value.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Value = void 0;\nconst alfa_selective_1 = __webpack_require__(/*! @siteimprove/alfa-selective */ \"./node_modules/@siteimprove/alfa-selective/src/index.js\");\nconst numeric_1 = __webpack_require__(/*! ../numeric */ \"./node_modules/@siteimprove/alfa-css/src/calculation/numeric/index.js\");\nconst expression_1 = __webpack_require__(/*! ./expression */ \"./node_modules/@siteimprove/alfa-css/src/calculation/math-expression/expression.js\");\nconst kind_1 = __webpack_require__(/*! ./kind */ \"./node_modules/@siteimprove/alfa-css/src/calculation/math-expression/kind.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst { isAngle } = numeric_1.Angle;\nconst { isLength } = numeric_1.Length;\nconst { isNumber } = numeric_1.Number;\nconst { isPercentage } = numeric_1.Percentage;\n/**\n * @public\n */\nclass Value extends expression_1.Expression {\n    static of(value) {\n        const kind = alfa_selective_1.Selective.of(value)\n            .if(isPercentage, () => kind_1.Kind.of(\"percentage\"))\n            .if(isLength, () => kind_1.Kind.of(\"length\"))\n            .if(isAngle, () => kind_1.Kind.of(\"angle\"))\n            .else(() => kind_1.Kind.of())\n            .get();\n        return new Value(value, kind);\n    }\n    constructor(value, kind) {\n        super(\"value\", kind);\n        this._value = value;\n    }\n    get value() {\n        return this._value;\n    }\n    reduce(resolver) {\n        return Value.of(alfa_selective_1.Selective.of(this._value)\n            .if(isLength, Value.lengthResolver(resolver.length))\n            .if(isAngle, Value.angleResolver)\n            .if(isPercentage, resolver.percentage)\n            .get());\n    }\n    toAngle() {\n        if (isAngle(this.value)) {\n            return alfa_result_1.Ok.of(this.value);\n        }\n        return alfa_result_1.Err.of(`${this} is not an angle`);\n    }\n    toLength() {\n        if (isLength(this.value)) {\n            return alfa_result_1.Ok.of(this.value);\n        }\n        return alfa_result_1.Err.of(`${this} is not a length`);\n    }\n    toNumber() {\n        if (isNumber(this.value)) {\n            return alfa_result_1.Ok.of(this.value);\n        }\n        return alfa_result_1.Err.of(`${this} is not a number`);\n    }\n    toPercentage() {\n        if (isPercentage(this.value)) {\n            return alfa_result_1.Ok.of(this.value);\n        }\n        return alfa_result_1.Err.of(`${this} is not a percentage`);\n    }\n    equals(value) {\n        return value instanceof Value && value._value.equals(this._value);\n    }\n    toJSON() {\n        return {\n            type: \"value\",\n            value: this._value.toJSON(),\n        };\n    }\n    toString() {\n        return `${this._value}`;\n    }\n}\nexports.Value = Value;\n/**\n * @public\n */\n(function (Value) {\n    function isValueExpression(value) {\n        return value instanceof Value;\n    }\n    Value.isValueExpression = isValueExpression;\n    /**\n     * @internal\n     */\n    function angleResolver(angle) {\n        return angle.withUnit(\"deg\");\n    }\n    Value.angleResolver = angleResolver;\n    /**\n     * @internal\n     */\n    function lengthResolver(resolver) {\n        return (length) => length.isRelative() ? resolver(length) : length.withUnit(\"px\");\n    }\n    Value.lengthResolver = lengthResolver;\n})(Value || (exports.Value = Value = {}));\n//# sourceMappingURL=value.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/calculation/math-expression/value.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/calculation/numeric/angle.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/calculation/numeric/angle.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Angle = void 0;\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst syntax_1 = __webpack_require__(/*! ../../syntax */ \"./node_modules/@siteimprove/alfa-css/src/syntax/index.js\");\nconst unit_1 = __webpack_require__(/*! ../../unit */ \"./node_modules/@siteimprove/alfa-css/src/unit/index.js\");\nconst dimension_1 = __webpack_require__(/*! ./dimension */ \"./node_modules/@siteimprove/alfa-css/src/calculation/numeric/dimension.js\");\nconst { map } = alfa_parser_1.Parser;\n/**\n * {@link https://drafts.csswg.org/css-values/#angles}\n *\n * @public\n */\nclass Angle extends dimension_1.Dimension {\n    static of(value, unit) {\n        return new Angle(value, unit);\n    }\n    constructor(value, unit) {\n        super(value, unit, \"angle\");\n    }\n    hasUnit(unit) {\n        return this._unit === unit;\n    }\n    withUnit(unit) {\n        if (this.hasUnit(unit)) {\n            return this;\n        }\n        return new Angle(unit_1.Converter.angle(this._value, this._unit, unit), unit);\n    }\n    scale(factor) {\n        return new Angle(this._value * factor, this._unit);\n    }\n    equals(value) {\n        return (value instanceof Angle &&\n            super.equals(value) &&\n            value._unit === this._unit);\n    }\n    hash(hash) {\n        super.hash(hash);\n        hash.writeString(this._unit);\n    }\n    toJSON() {\n        return super.toJSON();\n    }\n    toString() {\n        return `${this._value}${this._unit}`;\n    }\n}\nexports.Angle = Angle;\n/**\n * @public\n */\n(function (Angle) {\n    function isAngle(value) {\n        return value instanceof Angle;\n    }\n    Angle.isAngle = isAngle;\n    Angle.parse = map(syntax_1.Token.parseDimension((dimension) => unit_1.Unit.isAngle(dimension.unit)), (dimension) => Angle.of(dimension.value, dimension.unit));\n})(Angle || (exports.Angle = Angle = {}));\n//# sourceMappingURL=angle.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/calculation/numeric/angle.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/calculation/numeric/dimension.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/calculation/numeric/dimension.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Dimension = void 0;\nconst numeric_1 = __webpack_require__(/*! ./numeric */ \"./node_modules/@siteimprove/alfa-css/src/calculation/numeric/numeric.js\");\n/**\n * {@link https://drafts.csswg.org/css-values/#dimensions}\n *\n * @public\n */\nclass Dimension extends numeric_1.Numeric {\n    constructor(value, unit, type) {\n        super(value, type);\n        this._unit = unit;\n    }\n    get unit() {\n        return this._unit;\n    }\n    hasUnit(unit) {\n        return this._unit === unit;\n    }\n    equals(value) {\n        return (value instanceof Dimension &&\n            super.equals(value) &&\n            value._unit === this._unit);\n    }\n    toJSON() {\n        return { ...super.toJSON(), unit: this._unit };\n    }\n}\nexports.Dimension = Dimension;\n/**\n * @public\n */\n(function (Dimension) {\n    function isDimension(value) {\n        return value instanceof Dimension;\n    }\n    Dimension.isDimension = isDimension;\n})(Dimension || (exports.Dimension = Dimension = {}));\n//# sourceMappingURL=dimension.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/calculation/numeric/dimension.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/calculation/numeric/index.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/calculation/numeric/index.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./angle */ \"./node_modules/@siteimprove/alfa-css/src/calculation/numeric/angle.js\"), exports);\n__exportStar(__webpack_require__(/*! ./dimension */ \"./node_modules/@siteimprove/alfa-css/src/calculation/numeric/dimension.js\"), exports);\n__exportStar(__webpack_require__(/*! ./integer */ \"./node_modules/@siteimprove/alfa-css/src/calculation/numeric/integer.js\"), exports);\n__exportStar(__webpack_require__(/*! ./length */ \"./node_modules/@siteimprove/alfa-css/src/calculation/numeric/length.js\"), exports);\n__exportStar(__webpack_require__(/*! ./number */ \"./node_modules/@siteimprove/alfa-css/src/calculation/numeric/number.js\"), exports);\n__exportStar(__webpack_require__(/*! ./numeric */ \"./node_modules/@siteimprove/alfa-css/src/calculation/numeric/numeric.js\"), exports);\n__exportStar(__webpack_require__(/*! ./percentage */ \"./node_modules/@siteimprove/alfa-css/src/calculation/numeric/percentage.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/calculation/numeric/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/calculation/numeric/integer.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/calculation/numeric/integer.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Integer = void 0;\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst syntax_1 = __webpack_require__(/*! ../../syntax */ \"./node_modules/@siteimprove/alfa-css/src/syntax/index.js\");\nconst numeric_1 = __webpack_require__(/*! ./numeric */ \"./node_modules/@siteimprove/alfa-css/src/calculation/numeric/numeric.js\");\nconst { map } = alfa_parser_1.Parser;\n/**\n * {@link https://drafts.csswg.org/css-values/#integers}\n *\n * @public\n */\nclass Integer extends numeric_1.Numeric {\n    /**\n     * {@link https://drafts.csswg.org/css-values/#css-round-to-the-nearest-integer}\n     */\n    static of(value) {\n        // Math.round ensure the correct rounding.\n        // The bitwise or ensure coercion to 32 bits integer\n        return new Integer(Math.round(value) | 0);\n    }\n    constructor(value) {\n        super(value, \"integer\");\n    }\n    scale(factor) {\n        return new Integer(this._value * factor);\n    }\n    equals(value) {\n        return value instanceof Integer && super.equals(value);\n    }\n    hash(hash) {\n        hash.writeInt32(this._value);\n    }\n    toJSON() {\n        return super.toJSON();\n    }\n}\nexports.Integer = Integer;\n/**\n * @public\n */\n(function (Integer) {\n    function isInteger(value) {\n        return value instanceof Integer;\n    }\n    Integer.isInteger = isInteger;\n    Integer.parse = map(syntax_1.Token.parseNumber((number) => number.isInteger), (integer) => Integer.of(integer.value));\n})(Integer || (exports.Integer = Integer = {}));\n//# sourceMappingURL=integer.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/calculation/numeric/integer.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/calculation/numeric/length.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/calculation/numeric/length.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Length = void 0;\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst syntax_1 = __webpack_require__(/*! ../../syntax */ \"./node_modules/@siteimprove/alfa-css/src/syntax/index.js\");\nconst unit_1 = __webpack_require__(/*! ../../unit */ \"./node_modules/@siteimprove/alfa-css/src/unit/index.js\");\nconst dimension_1 = __webpack_require__(/*! ./dimension */ \"./node_modules/@siteimprove/alfa-css/src/calculation/numeric/dimension.js\");\nconst { map, either } = alfa_parser_1.Parser;\n/**\n * {@link https://drafts.csswg.org/css-values/#lengths}\n *\n * @public\n */\nclass Length extends dimension_1.Dimension {\n    static of(value, unit) {\n        return new Length(value, unit);\n    }\n    constructor(value, unit) {\n        super(value, unit, \"length\");\n    }\n    hasUnit(unit) {\n        return this._unit === unit;\n    }\n    withUnit(unit) {\n        if (this.hasUnit(unit)) {\n            return this;\n        }\n        if (unit_1.Unit.isAbsoluteLength(unit) && unit_1.Unit.isAbsoluteLength(this._unit)) {\n            return Length.of(unit_1.Converter.length(this._value, this._unit, unit), unit);\n        }\n        throw new Error(`Cannot convert ${this._unit} to ${unit}`);\n    }\n    isRelative() {\n        return unit_1.Unit.isRelativeLength(this._unit);\n    }\n    scale(factor) {\n        return new Length(this._value * factor, this._unit);\n    }\n    equals(value) {\n        return (value instanceof Length &&\n            super.equals(value) &&\n            value._unit === this._unit);\n    }\n    hash(hash) {\n        super.hash(hash);\n        hash.writeString(this._unit);\n    }\n    toJSON() {\n        return super.toJSON();\n    }\n    toString() {\n        return `${this._value}${this._unit}`;\n    }\n}\nexports.Length = Length;\n/**\n * @public\n */\n(function (Length) {\n    function isLength(value) {\n        return value instanceof Length;\n    }\n    Length.isLength = isLength;\n    /**\n     * {@link https://drafts.csswg.org/css-values/#lengths}\n     */\n    Length.parse = either(map(syntax_1.Token.parseDimension((dimension) => unit_1.Unit.isLength(dimension.unit)), (dimension) => Length.of(dimension.value, dimension.unit)), map(syntax_1.Token.parseNumber((number) => number.isInteger && number.value === 0), () => Length.of(0, \"px\")));\n})(Length || (exports.Length = Length = {}));\n//# sourceMappingURL=length.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/calculation/numeric/length.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/calculation/numeric/number.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/calculation/numeric/number.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Number = void 0;\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst syntax_1 = __webpack_require__(/*! ../../syntax */ \"./node_modules/@siteimprove/alfa-css/src/syntax/index.js\");\nconst numeric_1 = __webpack_require__(/*! ./numeric */ \"./node_modules/@siteimprove/alfa-css/src/calculation/numeric/numeric.js\");\nconst { map } = alfa_parser_1.Parser;\n/**\n * {@link https://drafts.csswg.org/css-values/#numbers}\n *\n * @public\n */\nclass Number extends numeric_1.Numeric {\n    static of(value) {\n        return new Number(value);\n    }\n    constructor(value) {\n        super(value, \"number\");\n    }\n    scale(factor) {\n        return new Number(this._value * factor);\n    }\n    equals(value) {\n        return value instanceof Number && super.equals(value);\n    }\n    toJSON() {\n        return super.toJSON();\n    }\n}\nexports.Number = Number;\n/**\n * @public\n */\n(function (Number) {\n    function isNumber(value) {\n        return value instanceof Number;\n    }\n    Number.isNumber = isNumber;\n    /**\n     * {@link https://drafts.csswg.org/css-values/#zero-value}\n     */\n    Number.parseZero = map(syntax_1.Token.parseNumber((number) => number.value === 0), (number) => Number.of(number.value));\n    /**\n     * {@link https://drafts.csswg.org/css-values/#number-value}\n     */\n    Number.parse = map(syntax_1.Token.parseNumber(), (number) => Number.of(number.value));\n})(Number || (exports.Number = Number = {}));\n//# sourceMappingURL=number.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/calculation/numeric/number.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/calculation/numeric/numeric.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/calculation/numeric/numeric.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Numeric = void 0;\nconst alfa_math_1 = __webpack_require__(/*! @siteimprove/alfa-math */ \"./node_modules/@siteimprove/alfa-math/src/index.js\");\n/**\n * @public\n */\nclass Numeric {\n    constructor(value, type) {\n        this._type = type;\n        this._value = alfa_math_1.Real.round(value, Numeric.Decimals);\n    }\n    get type() {\n        return this._type;\n    }\n    get value() {\n        return this._value;\n    }\n    equals(value) {\n        return value instanceof Numeric && value._value === this._value;\n    }\n    hash(hash) {\n        hash.writeFloat64(this._value);\n    }\n    toJSON() {\n        return {\n            type: this._type,\n            value: this._value,\n        };\n    }\n    toString() {\n        return `${this._value}`;\n    }\n}\nexports.Numeric = Numeric;\n/**\n * The number of decimals stored for every numeric value.\n */\nNumeric.Decimals = 7;\n/**\n * @public\n */\n(function (Numeric) {\n    /** @public (knip) */\n    function isNumeric(value) {\n        return value instanceof Numeric;\n    }\n    Numeric.isNumeric = isNumeric;\n})(Numeric || (exports.Numeric = Numeric = {}));\n//# sourceMappingURL=numeric.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/calculation/numeric/numeric.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/calculation/numeric/percentage.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/calculation/numeric/percentage.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Percentage = void 0;\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst syntax_1 = __webpack_require__(/*! ../../syntax */ \"./node_modules/@siteimprove/alfa-css/src/syntax/index.js\");\nconst numeric_1 = __webpack_require__(/*! ./numeric */ \"./node_modules/@siteimprove/alfa-css/src/calculation/numeric/numeric.js\");\nconst { map } = alfa_parser_1.Parser;\n/**\n * {@link https://drafts.csswg.org/css-values/#percentages}\n *\n * @public\n */\nclass Percentage extends numeric_1.Numeric {\n    static of(value) {\n        return new Percentage(value);\n    }\n    constructor(value) {\n        super(value, \"percentage\");\n    }\n    scale(factor) {\n        return new Percentage(this._value * factor);\n    }\n    equals(value) {\n        return value instanceof Percentage && super.equals(value);\n    }\n    toJSON() {\n        return super.toJSON();\n    }\n    toString() {\n        return `${this._value * 100}%`;\n    }\n}\nexports.Percentage = Percentage;\n/**\n * @public\n */\n(function (Percentage) {\n    function isPercentage(value) {\n        return value instanceof Percentage;\n    }\n    Percentage.isPercentage = isPercentage;\n    Percentage.parse = map(syntax_1.Token.parsePercentage(), (percentage) => Percentage.of(percentage.value));\n})(Percentage || (exports.Percentage = Percentage = {}));\n//# sourceMappingURL=percentage.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/calculation/numeric/percentage.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/index.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./syntax */ \"./node_modules/@siteimprove/alfa-css/src/syntax/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./value */ \"./node_modules/@siteimprove/alfa-css/src/value/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./unit */ \"./node_modules/@siteimprove/alfa-css/src/unit/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./calculation */ \"./node_modules/@siteimprove/alfa-css/src/calculation/index.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/syntax/block.js":
/*!****************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/syntax/block.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Block = void 0;\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst component_1 = __webpack_require__(/*! ./component */ \"./node_modules/@siteimprove/alfa-css/src/syntax/component.js\");\nconst token_1 = __webpack_require__(/*! ./token */ \"./node_modules/@siteimprove/alfa-css/src/syntax/token.js\");\nconst { either, pair, left, map, takeUntil } = alfa_parser_1.Parser;\n/**\n * {@link https://drafts.csswg.org/css-syntax/#simple-block}\n *\n * @public\n */\nclass Block {\n    static of(token, value) {\n        return new Block(token, Array.from(value));\n    }\n    constructor(token, value) {\n        this._token = token;\n        this._value = value;\n    }\n    get token() {\n        return this._token;\n    }\n    get value() {\n        return this._value;\n    }\n    *[Symbol.iterator]() {\n        // <open>\n        yield this._token;\n        // <value>\n        yield* this._value;\n        // <close>\n        yield this._token.mirror;\n    }\n    equals(value) {\n        return (value instanceof Block &&\n            value._token.equals(this._token) &&\n            value._value.length === this._value.length &&\n            value._value.every((token, i) => token.equals(this._value[i])));\n    }\n    toJSON() {\n        return {\n            token: this._token.toJSON(),\n            value: this._value.map((token) => token.toJSON()),\n        };\n    }\n    toString() {\n        return (this._token.toString() +\n            this._value.join(\"\") +\n            this._token.mirror.toString());\n    }\n}\nexports.Block = Block;\n/**\n * @public\n */\n(function (Block) {\n    /**\n     * Consumes components delimited by parentheses, square brackets or curly\n     * brackets.\n     *\n     * @remarks\n     * The compiler doesn't check if the delimiter types match, that needs to be\n     * ensured by the caller of the function.\n     */\n    function consumeDelimited(open, closed) {\n        return map(left(pair(open, \n        // eta expansion is necessary for `this` binding to resolve correctly\n        takeUntil((input) => component_1.Component.consume(input), closed)), closed), ([open, components]) => Block.of(open, components.flatMap((component) => [...component])));\n    }\n    const consumeParentheses = consumeDelimited(token_1.Token.parseOpenParenthesis, token_1.Token.parseCloseParenthesis);\n    const consumeSquareBrackets = consumeDelimited(token_1.Token.parseOpenSquareBracket, token_1.Token.parseCloseSquareBracket);\n    const consumeCurlyBracket = consumeDelimited(token_1.Token.parseOpenCurlyBracket, token_1.Token.parseCloseCurlyBracket);\n    /**\n     * {@link https://drafts.csswg.org/css-syntax/#consume-a-simple-block}\n     */\n    Block.consume = either(consumeParentheses, consumeSquareBrackets, consumeCurlyBracket);\n})(Block || (exports.Block = Block = {}));\n//# sourceMappingURL=block.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/syntax/block.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/syntax/comma.js":
/*!****************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/syntax/comma.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Comma = void 0;\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst token_1 = __webpack_require__(/*! ./token */ \"./node_modules/@siteimprove/alfa-css/src/syntax/token.js\");\nconst { option, delimited } = alfa_parser_1.Parser;\n/**\n * @public\n */\nvar Comma;\n(function (Comma) {\n    /**\n     * @remarks\n     * In CSS, commas can often be preceded or followed by whitespace.\n     */\n    Comma.parse = delimited(option(token_1.Token.parseWhitespace), token_1.Token.parseComma);\n})(Comma || (exports.Comma = Comma = {}));\n//# sourceMappingURL=comma.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/syntax/comma.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/syntax/component.js":
/*!********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/syntax/component.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Component = void 0;\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst block_1 = __webpack_require__(/*! ./block */ \"./node_modules/@siteimprove/alfa-css/src/syntax/block.js\");\nconst function_1 = __webpack_require__(/*! ./function */ \"./node_modules/@siteimprove/alfa-css/src/syntax/function.js\");\nconst token_1 = __webpack_require__(/*! ./token */ \"./node_modules/@siteimprove/alfa-css/src/syntax/token.js\");\nconst { delimited, option, either, map } = alfa_parser_1.Parser;\n/**\n * {@link https://drafts.csswg.org/css-syntax/#component-value}\n *\n * @public\n */\nclass Component {\n    static of(value) {\n        return new Component(Array.from(value));\n    }\n    constructor(value) {\n        this._value = value;\n    }\n    get value() {\n        return this._value;\n    }\n    *[Symbol.iterator]() {\n        yield* this._value;\n    }\n    equals(value) {\n        return (value instanceof Component &&\n            value._value.length === this._value.length &&\n            value._value.every((token, i) => token.equals(this._value[i])));\n    }\n    toJSON() {\n        return this._value.map((token) => token.toJSON());\n    }\n    toString() {\n        return this._value.join(\"\");\n    }\n}\nexports.Component = Component;\n/**\n * @public\n */\n(function (Component) {\n    /**\n     * {@link https://drafts.csswg.org/css-syntax/#consume-a-component-value}\n     */\n    Component.consume = (input) => \n    // eta expansion is necessary for `this` binding to resolve correctly\n    either(map(block_1.Block.consume, (value) => Component.of(value)), map(function_1.Function.consume, (value) => Component.of(value)), (input) => input\n        .first()\n        .map((token) => alfa_result_1.Result.of([\n        input.rest(),\n        Component.of([token]),\n    ]))\n        .getOr(alfa_result_1.Err.of(\"Unexpected end of file\")))(input);\n    /**\n     * {@link https://drafts.csswg.org/css-syntax/#parse-component-value}\n     */\n    Component.parse = delimited(option(token_1.Token.parseWhitespace), Component.consume);\n})(Component || (exports.Component = Component = {}));\n//# sourceMappingURL=component.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/syntax/component.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/syntax/declaration.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/syntax/declaration.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Declaration = void 0;\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_slice_1 = __webpack_require__(/*! @siteimprove/alfa-slice */ \"./node_modules/@siteimprove/alfa-slice/src/index.js\");\nconst component_1 = __webpack_require__(/*! ./component */ \"./node_modules/@siteimprove/alfa-css/src/syntax/component.js\");\nconst token_1 = __webpack_require__(/*! ./token */ \"./node_modules/@siteimprove/alfa-css/src/syntax/token.js\");\nconst { not } = alfa_predicate_1.Predicate;\nconst { option, delimited, left, zeroOrMore, map, pair, flatMap } = alfa_parser_1.Parser;\n/**\n * {@link https://drafts.csswg.org/css-syntax/#declaration}\n *\n * @public\n */\nclass Declaration {\n    static of(name, value, important = false) {\n        return new Declaration(name, Array.from(value), important);\n    }\n    constructor(name, value, important) {\n        this._name = name;\n        this._value = value;\n        this._important = important;\n    }\n    get name() {\n        return this._name;\n    }\n    get value() {\n        return this._value;\n    }\n    get important() {\n        return this._important;\n    }\n    *[Symbol.iterator]() {\n        // <name>:\n        yield token_1.Token.Ident.of(this._name);\n        yield token_1.Token.Colon.of();\n        // <value>\n        yield* this._value;\n        if (this._important) {\n            // !important\n            yield token_1.Token.Delim.of(0x21);\n            yield token_1.Token.Ident.of(\"important\");\n        }\n    }\n    equals(value) {\n        return (value instanceof Declaration &&\n            value._name === this._name &&\n            value._important === this._important &&\n            value._value.length === this._value.length &&\n            value._value.every((token, i) => token.equals(this._value[i])));\n    }\n    toJSON() {\n        return {\n            name: this._name,\n            value: this._value.map((token) => token.toJSON()),\n            important: this._important,\n        };\n    }\n    toString() {\n        return `${this._name}: ${this._value}${this._important ? \" !important\" : \"\"}`;\n    }\n}\nexports.Declaration = Declaration;\n/**\n * @public\n */\n(function (Declaration) {\n    /**\n     * {@link https://drafts.csswg.org/css-syntax/#consume-a-declaration}\n     */\n    Declaration.consume = flatMap(pair(left(token_1.Token.parseIdent(), delimited(option(token_1.Token.parseWhitespace), token_1.Token.parseColon)), map(zeroOrMore(component_1.Component.consume), (components) => components.flatMap((component) => [...component]))), ([{ value: name }, value]) => (input) => {\n        let important = false;\n        if (value.length >= 2) {\n            const fst = value[value.length - 2];\n            const snd = value[value.length - 1];\n            if (fst.type === \"delim\" &&\n                fst.value === 0x21 &&\n                snd.type === \"ident\" &&\n                snd.value.toLowerCase() === \"important\") {\n                value.splice(value.length - 2, 2);\n                important = true;\n            }\n        }\n        if (value.length >= 1) {\n            const lst = value[value.length - 1];\n            if (lst.type === \"whitespace\") {\n                value.pop();\n            }\n        }\n        return alfa_result_1.Result.of([\n            input,\n            Declaration.of(name, value, important),\n        ]);\n    });\n    /**\n     * {@link https://drafts.csswg.org/css-syntax/#parse-a-declaration}\n     */\n    Declaration.parse = (input) => {\n        while (input.get(0).some(token_1.Token.isWhitespace)) {\n            input = input.slice(1);\n        }\n        let next = input.get(0);\n        if (next.none(token_1.Token.isIdent)) {\n            return alfa_result_1.Err.of(\"Expected an ident\");\n        }\n        return Declaration.consume(input);\n    };\n    /**\n     * {@link https://drafts.csswg.org/css-syntax/#consume-a-list-of-declarations}\n     */\n    Declaration.consumeList = (input) => {\n        const declarations = [];\n        while (input.length > 0) {\n            for (const next of input.get(0)) {\n                input = input.slice(1);\n                if (token_1.Token.isWhitespace(next) || token_1.Token.isSemicolon(next)) {\n                    continue;\n                }\n                if (token_1.Token.isIdent(next)) {\n                    const value = [next];\n                    while (input.get(0).some(not(token_1.Token.isSemicolon))) {\n                        // Component.consume returns Ok while input is non-empty\n                        const [remainder, component] = component_1.Component.consume(input).getUnsafe();\n                        input = remainder;\n                        value.push(...component);\n                    }\n                    const result = Declaration.consume(alfa_slice_1.Slice.of(value));\n                    if (result.isOk()) {\n                        declarations.push(result.get()[1]);\n                    }\n                }\n                else {\n                    while (input.get(0).some(not(token_1.Token.isSemicolon))) {\n                        // Component.consume returns Ok while input is non-empty\n                        const [remainder] = component_1.Component.consume(input).getUnsafe();\n                        input = remainder;\n                    }\n                }\n            }\n        }\n        return alfa_result_1.Result.of([input, declarations]);\n    };\n    /**\n     * {@link https://drafts.csswg.org/css-syntax/#parse-a-list-of-declarations}\n     */\n    Declaration.parseList = Declaration.consumeList;\n})(Declaration || (exports.Declaration = Declaration = {}));\n//# sourceMappingURL=declaration.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/syntax/declaration.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/syntax/function.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/syntax/function.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Function = void 0;\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_slice_1 = __webpack_require__(/*! @siteimprove/alfa-slice */ \"./node_modules/@siteimprove/alfa-slice/src/index.js\");\nconst component_1 = __webpack_require__(/*! ./component */ \"./node_modules/@siteimprove/alfa-css/src/syntax/component.js\");\nconst token_1 = __webpack_require__(/*! ./token */ \"./node_modules/@siteimprove/alfa-css/src/syntax/token.js\");\nconst { delimited, flatMap, option, peek, right, left, pair, map, takeUntil, either, end, } = alfa_parser_1.Parser;\n/**\n * {@link https://drafts.csswg.org/css-syntax/#function}\n *\n * @public\n */\nclass Function {\n    static of(name, value) {\n        return new Function(name, Array.from(value));\n    }\n    constructor(name, value) {\n        this._name = name;\n        this._value = value;\n    }\n    get name() {\n        return this._name;\n    }\n    get value() {\n        return this._value;\n    }\n    *[Symbol.iterator]() {\n        // <name>(\n        yield token_1.Token.Function.of(this._name);\n        // <value>\n        yield* this._value;\n        // )\n        yield token_1.Token.CloseParenthesis.of();\n    }\n    equals(value) {\n        return (value instanceof Function &&\n            value._name === this._name &&\n            value._value.length === this._value.length &&\n            value._value.every((token, i) => token.equals(this._value[i])));\n    }\n    toJSON() {\n        return {\n            name: this._name,\n            value: this._value.map((token) => token.toJSON()),\n        };\n    }\n    toString() {\n        return `${this._name}(${this._value.join(\"\")})`;\n    }\n}\nexports.Function = Function;\n/**\n * @public\n */\n(function (Function) {\n    /**\n     * {@link https://drafts.csswg.org/css-syntax/#consume-a-function}\n     */\n    Function.consume = (input) => \n    // eta expansion is necessary for `this` binding to resolve correctly\n    map(pair(token_1.Token.parseFunction(), map(left(takeUntil(component_1.Component.consume, either(token_1.Token.parseCloseParenthesis, end(() => \"Dummy error message since this should never fail\"))), option(token_1.Token.parseCloseParenthesis)), (components) => components.flatMap((component) => [...component]))), ([{ value: name }, value]) => Function.of(name, value))(input);\n    Function.parse = (query, body) => flatMap(right(peek(token_1.Token.parseFunction(query)), Function.consume), (fn) => (input) => {\n        if (body === undefined) {\n            return alfa_result_1.Result.of([input, [fn, undefined]]);\n        }\n        // Sadly, JS alone is not capable of differentiating one function from\n        // another. So, at run time we can't differentiate a parser from a\n        // thunk.\n        // We have to rely on exception to handle that.\n        let parse;\n        try {\n            parse = body();\n            // In the off case where `body` is a parser that never looks at its\n            // input, the previous call might not throw.\n            if (alfa_result_1.Result.isResult(parse)) {\n                throw new Error(\"It was a parser after all\");\n            }\n        }\n        catch (err) {\n            parse = body;\n        }\n        const result = delimited(\n        // whitespace just inside the parentheses are OK.\n        option(token_1.Token.parseWhitespace), parse)(alfa_slice_1.Slice.of(fn.value));\n        if (result.isErr()) {\n            return result;\n        }\n        // the previous check ensures the result is Ok\n        const [remainder, value] = result.getUnsafe();\n        if (remainder.length > 0) {\n            // remainder is not empty, so remainder.get(0) is Some.\n            return alfa_result_1.Err.of(`Unexpected token ${remainder.get(0).getUnsafe()}`);\n        }\n        return alfa_result_1.Result.of([input, [fn, value]]);\n    });\n})(Function || (exports.Function = Function = {}));\n//# sourceMappingURL=function.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/syntax/function.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/syntax/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/syntax/index.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./block */ \"./node_modules/@siteimprove/alfa-css/src/syntax/block.js\"), exports);\n__exportStar(__webpack_require__(/*! ./comma */ \"./node_modules/@siteimprove/alfa-css/src/syntax/comma.js\"), exports);\n__exportStar(__webpack_require__(/*! ./component */ \"./node_modules/@siteimprove/alfa-css/src/syntax/component.js\"), exports);\n__exportStar(__webpack_require__(/*! ./declaration */ \"./node_modules/@siteimprove/alfa-css/src/syntax/declaration.js\"), exports);\n__exportStar(__webpack_require__(/*! ./function */ \"./node_modules/@siteimprove/alfa-css/src/syntax/function.js\"), exports);\n__exportStar(__webpack_require__(/*! ./lexer */ \"./node_modules/@siteimprove/alfa-css/src/syntax/lexer.js\"), exports);\n__exportStar(__webpack_require__(/*! ./nth */ \"./node_modules/@siteimprove/alfa-css/src/syntax/nth.js\"), exports);\n__exportStar(__webpack_require__(/*! ./parser */ \"./node_modules/@siteimprove/alfa-css/src/syntax/parser.js\"), exports);\n__exportStar(__webpack_require__(/*! ./token */ \"./node_modules/@siteimprove/alfa-css/src/syntax/token.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/syntax/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/syntax/lexer.js":
/*!****************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/syntax/lexer.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Lexer = void 0;\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_slice_1 = __webpack_require__(/*! @siteimprove/alfa-slice */ \"./node_modules/@siteimprove/alfa-slice/src/index.js\");\nconst token_1 = __webpack_require__(/*! ./token */ \"./node_modules/@siteimprove/alfa-css/src/syntax/token.js\");\nconst { fromCharCode } = String;\nconst { zeroOrMore } = alfa_parser_1.Parser;\n/**\n * @public\n */\nvar Lexer;\n(function (Lexer) {\n    function lex(input) {\n        const points = new Array(input.length);\n        for (let i = 0, n = input.length; i < n; i++) {\n            points[i] = input.charCodeAt(i);\n        }\n        const tokens = [];\n        for (let i = 0, n = points.length; i < n;) {\n            let token;\n            [[, i], token] = consumeToken([points, i]);\n            if (token === null) {\n                break;\n            }\n            tokens.push(token);\n        }\n        return alfa_slice_1.Slice.of(tokens);\n    }\n    Lexer.lex = lex;\n})(Lexer || (exports.Lexer = Lexer = {}));\n/**\n * {@link https://drafts.csswg.org/css-syntax/#digit}\n */\nconst isDigit = (code) => code >= 0x30 && code <= 0x39;\nconst digit = ([input, i]) => {\n    const code = input[i];\n    return isDigit(code)\n        ? alfa_result_1.Result.of([[input, i + 1], code])\n        : alfa_result_1.Err.of(\"Expected a digit\");\n};\n/**\n * {@link https://drafts.csswg.org/css-syntax/#hex-digit}\n */\nconst isHexDigit = (code) => isDigit(code) ||\n    (code >= 0x41 && code <= 0x46) ||\n    (code >= 0x61 && code <= 0x66);\nconst hexDigit = ([input, i,]) => {\n    const code = input[i];\n    return isHexDigit(code)\n        ? alfa_result_1.Result.of([[input, i + 1], code])\n        : alfa_result_1.Err.of(\"Expected a hex digit\");\n};\n/**\n * {@link https://drafts.csswg.org/css-syntax/#uppercase-letter}\n */\nconst isUppercaseLetter = (code) => code >= 0x41 && code <= 0x5a;\n/**\n * {@link https://drafts.csswg.org/css-syntax/#lowercase-letter}\n */\nconst isLowercaseLetter = (code) => code >= 0x61 && code <= 0x7a;\n/**\n * {@link https://drafts.csswg.org/css-syntax/#letter}\n */\nconst isLetter = (code) => isUppercaseLetter(code) || isLowercaseLetter(code);\n/**\n * {@link https://drafts.csswg.org/css-syntax/#non-ascii-code-point}\n */\nconst isNonAscii = (code) => code >= 0x80;\n/**\n * {@link https://drafts.csswg.org/css-syntax/#newline}\n */\nconst isNewline = (code) => code === 0xa;\n/**\n * {@link https://drafts.csswg.org/css-syntax/#whitespace}\n */\nconst isWhitespace = (code) => isNewline(code) || code === 0x9 || code === 0x20;\n/**\n * {@link https://drafts.csswg.org/css-syntax/#non-printable-code-point}\n */\nconst isNonPrintable = (code) => (code >= 0 && code <= 0x8) ||\n    code === 0xb ||\n    (code >= 0xe && code <= 0x1f) ||\n    code === 0x7f;\n/**\n * {@link https://drafts.csswg.org/css-syntax/#name-start-code-point}\n */\nconst isNameStart = (code) => isLetter(code) || isNonAscii(code) || code === 0x5f;\n/**\n * {@link https://drafts.csswg.org/css-syntax/#name-code-point}\n */\nconst isName = (code) => isNameStart(code) || isDigit(code) || code === 0x2d;\n/**\n * {@link https://infra.spec.whatwg.org/#surrogate}\n */\nconst isSurrogate = (code) => code >= 0xd800 && code <= 0xdfff;\n/**\n * {@link https://drafts.csswg.org/css-syntax/#starts-with-a-valid-escape}\n */\nconst startsValidEscape = ([input, i]) => input[i] === 0x5c && !isNewline(input[i + 1]);\n/**\n * {@link https://drafts.csswg.org/css-syntax/#starts-with-a-number}\n */\nconst startsNumber = ([input, i]) => {\n    switch (input[i]) {\n        case 0x2b:\n        case 0x2d:\n            if (input[i + 1] === 0x2e) {\n                return isDigit(input[i + 3]);\n            }\n            else {\n                return isDigit(input[i + 1]);\n            }\n        case 0x2e:\n            return isDigit(input[i + 1]);\n        default:\n            return isDigit(input[i]);\n    }\n};\n/**\n * {@link https://drafts.csswg.org/css-syntax/#would-start-an-identifier}\n */\nconst startsIdentifier = ([input, i]) => {\n    switch (input[i]) {\n        case 0x2d:\n            return (isNameStart(input[i + 1]) ||\n                input[i + 1] === 0x2d ||\n                startsValidEscape([input, i + 1]));\n        case 0x5c:\n            return startsValidEscape([input, i]);\n        default:\n            return isNameStart(input[i]);\n    }\n};\n/**\n * {@link https://drafts.csswg.org/css-syntax/#consume-a-name}\n */\nconst consumeName = ([input, i,]) => {\n    let name = \"\";\n    let code;\n    for (const n = input.length; i < n;) {\n        code = input[i];\n        if (isName(code)) {\n            i++;\n            name += fromCharCode(code);\n        }\n        else if (startsValidEscape([input, i])) {\n            [[input, i], code] = consumeEscapedCodePoint([input, i + 1]);\n            name += fromCharCode(code);\n        }\n        else {\n            break;\n        }\n    }\n    return [[input, i], name];\n};\n/**\n * {@link https://drafts.csswg.org/css-syntax/#consume-an-escaped-code-point}\n */\nconst consumeEscapedCodePoint = ([input, i]) => {\n    const byte = input[i];\n    if (isNaN(byte)) {\n        return [[input, i], 0xfffd];\n    }\n    i++;\n    if (isHexDigit(byte)) {\n        const bytes = [byte];\n        for (const n = i + 5; i < n; i++) {\n            const result = hexDigit([input, i]);\n            if (!result.isOk()) {\n                break;\n            }\n            // the previous check ensure the result is Ok\n            const [, byte] = result.get();\n            bytes.push(byte);\n        }\n        let code = 0;\n        for (let i = 0, n = bytes.length; i < n; i++) {\n            let byte = bytes[i];\n            if (isDigit(byte)) {\n                byte = byte - 0x30;\n            }\n            else if (isLowercaseLetter(byte)) {\n                byte = byte - 0x61 + 10;\n            }\n            else if (isUppercaseLetter(byte)) {\n                byte = byte - 0x41 + 10;\n            }\n            code = 0x10 * code + byte;\n        }\n        if (isWhitespace(input[i])) {\n            i++;\n        }\n        if (code === 0 || isSurrogate(code) || code > 0x10ffff) {\n            return [[input, i], 0xfffd];\n        }\n        return [[input, i], code];\n    }\n    return [[input, i], byte];\n};\n/**\n * {@link https://drafts.csswg.org/css-syntax/#consume-a-number}\n */\nconst consumeNumber = ([input, i]) => {\n    const number = [];\n    let code = input[i];\n    let isSigned = false;\n    let isInteger = true;\n    if (code === 0x2b || code === 0x2d) {\n        number.push(code);\n        code = input[++i];\n        isSigned = true;\n    }\n    while (isDigit(code)) {\n        number.push(code);\n        code = input[++i];\n    }\n    if (code === 0x2e && isDigit(input[i + 1])) {\n        number.push(0x2e, input[i + 1]);\n        code = input[(i += 2)];\n        isInteger = false;\n        while (isDigit(code)) {\n            number.push(code);\n            code = input[++i];\n        }\n    }\n    if (code === 0x45 || code === 0x65) {\n        let offset = 1;\n        if (input[i + 1] === 0x2b || input[i + 1] === 0x2d) {\n            offset = 2;\n        }\n        if (isDigit(input[i + offset])) {\n            number.push(...input.slice(i, i + offset + 1));\n            code = input[(i += offset + 1)];\n            isInteger = false;\n            while (isDigit(code)) {\n                number.push(code);\n                code = input[++i];\n            }\n        }\n    }\n    return [[input, i], token_1.Token.number(convert(number), isInteger, isSigned)];\n};\n/**\n * {@link https://drafts.csswg.org/css-syntax/#consume-a-numeric-token}\n */\nconst consumeNumeric = ([input, i]) => {\n    let number;\n    [[input, i], number] = consumeNumber([input, i]);\n    if (startsIdentifier([input, i])) {\n        let name;\n        [[input, i], name] = consumeName([input, i]);\n        return [\n            [input, i],\n            token_1.Token.dimension(number.value, name, number.isInteger, number.isSigned),\n        ];\n    }\n    if (input[i] === 0x25) {\n        return [\n            [input, i + 1],\n            token_1.Token.percentage(number.value / 100, number.isInteger),\n        ];\n    }\n    return [[input, i], number];\n};\n/**\n * {@link https://drafts.csswg.org/css-syntax/#consume-an-ident-like-token}\n */\nconst consumeIdentifierLike = ([input, i]) => {\n    let string;\n    [[input, i], string] = consumeName([input, i]);\n    const code = input[i];\n    if (string.toLowerCase() === \"url\" && code === 0x28) {\n        i++;\n        while (isWhitespace(input[i]) && isWhitespace(input[i + 1])) {\n            i++;\n        }\n        if (input[i] === 0x22 ||\n            input[i] === 0x27 ||\n            (isWhitespace(input[i]) &&\n                (input[i + 1] === 0x22 || input[i + 1] === 0x27))) {\n            return [[input, i], token_1.Token.func(string)];\n        }\n        return consumeURL([input, i]);\n    }\n    if (code === 0x28) {\n        return [[input, i + 1], token_1.Token.func(string)];\n    }\n    return [[input, i], token_1.Token.ident(string)];\n};\n/**\n * {@link https://drafts.csswg.org/css-syntax/#consume-a-string-token}\n */\nconst consumeString = ([input, i]) => {\n    const end = input[i++];\n    let string = \"\";\n    let code;\n    while (i < input.length) {\n        code = input[i++];\n        if (isNewline(code) || code === end) {\n            break;\n        }\n        string += fromCharCode(code);\n    }\n    return [[input, i], token_1.Token.string(string)];\n};\n/**\n * {@link https://drafts.csswg.org/css-syntax/#consume-a-url-token}\n */\nconst consumeURL = ([input, i]) => {\n    while (isWhitespace(input[i])) {\n        i++;\n    }\n    let value = \"\";\n    let code;\n    while (i < input.length) {\n        code = input[i];\n        if (code === 0x29) {\n            i++;\n            break;\n        }\n        if (isWhitespace(code)) {\n            while (isWhitespace(input[i])) {\n                i++;\n            }\n            if (input[i] === 0x29) {\n                i++;\n                break;\n            }\n            else {\n                return consumeBadURL([input, i]);\n            }\n        }\n        if (code === 0x22 ||\n            code === 0x27 ||\n            code === 0x28 ||\n            isNonPrintable(code)) {\n            return consumeBadURL([input, i + 1]);\n        }\n        if (code === 0x5c) {\n            if (startsValidEscape([input, i])) {\n                [[input, i], code] = consumeEscapedCodePoint([input, i]);\n                value += fromCharCode(code);\n                continue;\n            }\n            else {\n                return consumeBadURL([input, i]);\n            }\n        }\n        i++;\n        value += fromCharCode(code);\n    }\n    return [[input, i], token_1.Token.url(value)];\n};\n/**\n * {@link https://drafts.csswg.org/css-syntax/#consume-remnants-of-bad-url}\n */\nconst consumeBadURL = ([input, i]) => {\n    let code;\n    while (i < input.length) {\n        if (startsValidEscape([input, i])) {\n            [[input, i]] = consumeEscapedCodePoint([input, i]);\n        }\n        else {\n            code = input[i++];\n            if (code === 0x29) {\n                break;\n            }\n        }\n    }\n    return [[input, i], token_1.Token.badURL()];\n};\n/**\n * {@link https://drafts.csswg.org/css-syntax/#consume-a-token}\n */\nconst consumeToken = ([input, i]) => {\n    // https://drafts.csswg.org/css-syntax/#consume-comments\n    while (i < input.length) {\n        if (input[i] === 0x2f && input[i + 1] === 0x2a) {\n            i += 2;\n            while (i < input.length) {\n                if (input[i] === 0x2a && input[i + 1] === 0x2f) {\n                    i += 2;\n                    break;\n                }\n                i++;\n            }\n        }\n        else {\n            break;\n        }\n    }\n    if (i >= input.length) {\n        return [[input, i], null];\n    }\n    const code = input[i];\n    if (isWhitespace(code)) {\n        i++;\n        while (isWhitespace(input[i])) {\n            i++;\n        }\n        return [[input, i], token_1.Token.whitespace()];\n    }\n    if (isNameStart(code)) {\n        return consumeIdentifierLike([input, i]);\n    }\n    if (isDigit(code)) {\n        return consumeNumeric([input, i]);\n    }\n    switch (code) {\n        case 0x22:\n            return consumeString([input, i]);\n        case 0x23:\n            i++;\n            if (isName(input[i]) || startsValidEscape([input, i])) {\n                const isIdentifier = startsIdentifier([input, i]);\n                let name;\n                [[input, i], name] = consumeName([input, i]);\n                return [[input, i], token_1.Token.hash(name, isIdentifier)];\n            }\n            return [[input, i], token_1.Token.delim(code)];\n        case 0x27:\n            return consumeString([input, i]);\n        case 0x28:\n            return [[input, i + 1], token_1.Token.openParenthesis()];\n        case 0x29:\n            return [[input, i + 1], token_1.Token.closeParenthesis()];\n        case 0x2b:\n            if (startsNumber([input, i])) {\n                return consumeNumeric([input, i]);\n            }\n            return [[input, i + 1], token_1.Token.delim(code)];\n        case 0x2c:\n            return [[input, i + 1], token_1.Token.comma()];\n        case 0x2d:\n            if (startsNumber([input, i])) {\n                return consumeNumeric([input, i]);\n            }\n            if (input[i + 1] === 0x2d && input[i + 2] === 0x3e) {\n                return [[input, i + 3], token_1.Token.closeComment()];\n            }\n            if (startsIdentifier([input, i])) {\n                return consumeIdentifierLike([input, i]);\n            }\n            return [[input, i + 1], token_1.Token.delim(code)];\n        case 0x2e:\n            if (startsNumber([input, i])) {\n                return consumeNumeric([input, i]);\n            }\n            return [[input, i + 1], token_1.Token.delim(code)];\n        case 0x3a:\n            return [[input, i + 1], token_1.Token.colon()];\n        case 0x3b:\n            return [[input, i + 1], token_1.Token.semicolon()];\n        case 0x3c:\n            if (input[i + 1] === 0x21 &&\n                input[i + 2] === 0x2d &&\n                input[i + 3] === 0x2d) {\n                return [[input, i + 4], token_1.Token.openComment()];\n            }\n            return [[input, i + 1], token_1.Token.delim(code)];\n        case 0x40:\n            i++;\n            if (startsIdentifier([input, i])) {\n                let name;\n                [[input, i], name] = consumeName([input, i]);\n                return [[input, i], token_1.Token.atKeyword(name)];\n            }\n            return [[input, i], token_1.Token.delim(code)];\n        case 0x5b:\n            return [[input, i + 1], token_1.Token.openSquareBracket()];\n        case 0x5c:\n            if (startsValidEscape([input, i])) {\n                return consumeIdentifierLike([input, i]);\n            }\n            return [[input, i + 1], token_1.Token.delim(code)];\n        case 0x5d:\n            return [[input, i + 1], token_1.Token.closeSquareBracket()];\n        case 0x7b:\n            return [[input, i + 1], token_1.Token.openCurlyBracket()];\n        case 0x7d:\n            return [[input, i + 1], token_1.Token.closeCurlyBracket()];\n    }\n    return [[input, i + 1], token_1.Token.delim(code)];\n};\n/**\n * {@link https://drafts.csswg.org/css-syntax/#convert-a-string-to-a-number}\n */\nfunction convert(input) {\n    let i = 0;\n    let s = input[i] === 0x2d ? -1 : input[i] === 0x2b ? 1 : null;\n    if (s !== null) {\n        i++;\n    }\n    else {\n        s = 1;\n    }\n    let n;\n    let v = 0;\n    for ([[input, i], n] of zeroOrMore(digit)([input, i])) {\n        v = n.reduce((v, c) => 10 * v + (c - 0x30), v);\n    }\n    if (input[i] === 0x2e) {\n        i++;\n    }\n    let f = 0;\n    let d = 0;\n    for ([[input, i], n] of zeroOrMore(digit)([input, i])) {\n        [f, d] = n.reduce(([f, d], c) => [10 * f + (c - 0x30), d + 1], [f, d]);\n    }\n    if (input[i] === 0x45 || input[i] === 0x65) {\n        i++;\n    }\n    let t = input[i] === 0x2d ? -1 : input[i] === 0x2b ? 1 : null;\n    if (t !== null) {\n        i++;\n    }\n    else {\n        t = 1;\n    }\n    let e = 0;\n    for ([[input, i], n] of zeroOrMore(digit)([input, i])) {\n        e = n.reduce((e, c) => 10 * e + (c - 0x30), e);\n    }\n    // To account for floating point precision errors, we flip the sign of the\n    // exponents (`d` and `t`) and divide rather than multiply.\n    return (s * (v + f / 10 ** d)) / 10 ** (-t * e);\n}\n//# sourceMappingURL=lexer.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/syntax/lexer.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/syntax/nth.js":
/*!**************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/syntax/nth.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Nth = void 0;\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst token_1 = __webpack_require__(/*! ./token */ \"./node_modules/@siteimprove/alfa-css/src/syntax/token.js\");\nconst { map, right, pair, delimited, option, either } = alfa_parser_1.Parser;\n/**\n * {@link https://drafts.csswg.org/css-syntax/#anb}\n *\n * @public\n */\nclass Nth {\n    static of(step, offset = 0) {\n        return new Nth(step | 0, offset | 0);\n    }\n    constructor(step, offset) {\n        this._step = step;\n        this._offset = offset;\n    }\n    get step() {\n        return this._step;\n    }\n    get offset() {\n        return this._offset;\n    }\n    /**\n     * Check if the given index matches the indices produced by this nth.\n     *\n     * @remarks\n     * This is checked by solving the equation `an + b = i` for `n`, giving us\n     * `n = (i - b) / a`. The index `i` is matched by this nth if the resulting\n     * `n` is a non-negative integer.\n     */\n    matches(index) {\n        // If the step is 0 then we just need to match the index against the offset.\n        if (this._step === 0) {\n            return this._offset === (index | 0);\n        }\n        const n = ((index | 0) - this._offset) / this._step;\n        return n >= 0 && n === (n | 0);\n    }\n    for(n) {\n        return this._step * (n | 0) + this._offset;\n    }\n    *indices() {\n        for (let n = 0;; n++) {\n            yield this.for(n);\n        }\n    }\n    *[Symbol.iterator]() {\n        if (this._step !== 0) {\n            yield token_1.Token.Dimension.of(this._step, \"n\", true, this._step < 0);\n        }\n        if (this._offset !== 0) {\n            yield token_1.Token.Number.of(this._offset, true, this._offset < 0 || this._step !== 0);\n        }\n    }\n    equals(value) {\n        return (value instanceof Nth &&\n            value._step === this._step &&\n            value._offset === this._offset);\n    }\n    toJSON() {\n        return {\n            step: this._step,\n            offset: this._offset,\n        };\n    }\n    toString() {\n        return this._step === 0\n            ? `${this._offset}`\n            : `${this._step}n+${this._offset};`;\n    }\n}\nexports.Nth = Nth;\n/**\n * @public\n */\n(function (Nth) {\n    /**\n     * @remarks\n     * The An+B syntax isn't really meant for the tokens produced by the CSS lexer\n     * and so the resulting parser ends up being quite complex.\n     *\n     * {@link https://drafts.csswg.org/css-syntax/#anb-production}\n     */\n    Nth.parse = either(\n    // odd | even\n    map(token_1.Token.parseIdent((ident) => ident.value === \"odd\" || ident.value === \"even\"), (ident) => Nth.of(2, ident.value === \"even\" ? 0 : 1)), \n    // <integer>\n    map(token_1.Token.parseNumber((number) => number.isInteger), (number) => Nth.of(0, number.value)), \n    // <ndashdigit-dimension>\n    map(token_1.Token.parseDimension((dimension) => dimension.isInteger && /^n-\\d+$/.test(dimension.unit)), (dimension) => Nth.of(dimension.value, +dimension.unit.slice(1))), \n    // \"+\"? <ndashdigit-ident>\n    right(option(token_1.Token.parseDelim(\"+\")), map(token_1.Token.parseIdent((ident) => /^n-\\d+$/.test(ident.value)), (ident) => Nth.of(1, +ident.value.slice(1)))), \n    // <dashndashdigit-ident>\n    map(token_1.Token.parseIdent((ident) => /^-n-\\d+$/.test(ident.value)), (ident) => Nth.of(-1, +ident.value.slice(2))), \n    // [<n-dimension> | \"+\"? n | -n] [[\"+\" | \"-\"]? <signless-integer> | <signed-integer>]?\n    map(pair(\n    // <n-dimension> | \"+\"? n | -n\n    either(\n    // <n-dimension>\n    map(token_1.Token.parseDimension((dimension) => dimension.isInteger && dimension.unit === \"n\"), (dimension) => dimension.value), \n    // \"+\"? n\n    map(right(option(token_1.Token.parseDelim(\"+\")), token_1.Token.parseIdent(\"n\")), () => 1), \n    // -n\n    map(token_1.Token.parseIdent(\"-n\"), () => -1)), \n    // [[\"+\" | \"-\"]? <signless-integer> | <signed-integer>]?\n    option(either(map(pair(\n    // [\"+\" | \"-\"]?\n    delimited(option(token_1.Token.parseWhitespace), option(either(map(token_1.Token.parseDelim(\"+\"), () => 1), map(token_1.Token.parseDelim(\"-\"), () => -1)))), \n    // <signless-integer>\n    token_1.Token.parseNumber((number) => number.isInteger && !number.isSigned)), ([sign, number]) => sign.getOr(1) * number.value), delimited(option(token_1.Token.parseWhitespace), map(token_1.Token.parseNumber((number) => number.isInteger), (number) => number.value))))), ([step, offset]) => Nth.of(step, offset.getOr(0))), \n    // [<ndash-dimension> | \"+\"? n- | -n-] <signless-integer>\n    map(pair(\n    // <ndash-dimension> | \"+\"? n- | -n-\n    either(\n    // <ndash-dimension>\n    map(token_1.Token.parseDimension((dimension) => dimension.isInteger && dimension.unit === \"n-\"), (dimension) => dimension.value), \n    // \"+\"? n-\n    map(right(option(token_1.Token.parseDelim(\"+\")), token_1.Token.parseIdent(\"n-\")), () => 1), \n    // -n-\n    map(token_1.Token.parseIdent(\"-n-\"), () => -1)), \n    // <signless-integer>\n    delimited(option(token_1.Token.parseWhitespace), map(token_1.Token.parseNumber((number) => number.isInteger && !number.isSigned), (number) => number.value))), ([step, offset]) => Nth.of(step, -1 * offset)));\n})(Nth || (exports.Nth = Nth = {}));\n//# sourceMappingURL=nth.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/syntax/nth.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/syntax/parser.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/syntax/parser.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=parser.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/syntax/parser.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/syntax/token.js":
/*!****************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/syntax/token.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Token = void 0;\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst alfa_refinement_1 = __webpack_require__(/*! @siteimprove/alfa-refinement */ \"./node_modules/@siteimprove/alfa-refinement/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst { map, oneOrMore, parseIf } = alfa_parser_1.Parser;\nconst { fromCharCode } = String;\nconst { and } = alfa_refinement_1.Refinement;\n/**\n * @public\n */\nvar Token;\n(function (Token) {\n    const parseFirst = (input) => input\n        .first()\n        .map((token) => alfa_result_1.Ok.of([input.rest(), token]))\n        .getOr(alfa_result_1.Err.of(\"No token left\"));\n    function parseToken(refinement) {\n        return parseIf(refinement, parseFirst, () => \"Mismatching token\");\n    }\n    class Ident {\n        static of(value) {\n            return new Ident(value);\n        }\n        constructor(value) {\n            this._value = value;\n        }\n        get type() {\n            return \"ident\";\n        }\n        get value() {\n            return this._value;\n        }\n        equals(value) {\n            return value instanceof Ident && value._value === this._value;\n        }\n        toJSON() {\n            return {\n                type: \"ident\",\n                value: this._value,\n            };\n        }\n        toString() {\n            return this._value;\n        }\n    }\n    Token.Ident = Ident;\n    (function (Ident) {\n        function isIdent(value) {\n            return value instanceof Ident;\n        }\n        Ident.isIdent = isIdent;\n    })(Ident = Token.Ident || (Token.Ident = {}));\n    Token.ident = Ident.of, Token.isIdent = Ident.isIdent;\n    function parseIdent(query = () => true) {\n        let predicate;\n        if (typeof query === \"function\") {\n            predicate = query;\n        }\n        else {\n            const value = query;\n            predicate = (ident) => ident.value === value;\n        }\n        return parseToken(and(Token.isIdent, predicate));\n    }\n    Token.parseIdent = parseIdent;\n    class Function {\n        static of(value) {\n            return new Function(value);\n        }\n        constructor(value) {\n            this._value = value;\n        }\n        get type() {\n            return \"function\";\n        }\n        get value() {\n            return this._value;\n        }\n        get mirror() {\n            return CloseParenthesis.of();\n        }\n        equals(value) {\n            return value instanceof Function && value._value === this._value;\n        }\n        toJSON() {\n            return {\n                type: \"function\",\n                value: this._value,\n            };\n        }\n        toString() {\n            return `${this._value}(`;\n        }\n    }\n    Token.Function = Function;\n    (function (Function) {\n        function isFunction(value) {\n            return value instanceof Function;\n        }\n        Function.isFunction = isFunction;\n    })(Function = Token.Function || (Token.Function = {}));\n    Token.func = Function.of, Token.isFunction = Function.isFunction;\n    function parseFunction(query = () => true) {\n        const predicate = typeof query === \"function\" ? query : (ident) => ident.value === query;\n        return parseToken(and(Token.isFunction, predicate));\n    }\n    Token.parseFunction = parseFunction;\n    class AtKeyword {\n        static of(value) {\n            return new AtKeyword(value);\n        }\n        constructor(value) {\n            this._value = value;\n        }\n        get type() {\n            return \"at-keyword\";\n        }\n        get value() {\n            return this._value;\n        }\n        equals(value) {\n            return value instanceof AtKeyword && value._value === this._value;\n        }\n        toJSON() {\n            return {\n                type: \"at-keyword\",\n                value: this._value,\n            };\n        }\n        toString() {\n            return `@${this._value}`;\n        }\n    }\n    Token.AtKeyword = AtKeyword;\n    Token.atKeyword = AtKeyword.of;\n    class Hash {\n        static of(value, isIdentifier) {\n            return new Hash(value, isIdentifier);\n        }\n        constructor(value, isIdentifier) {\n            this._value = value;\n            this._isIdentifier = isIdentifier;\n        }\n        get type() {\n            return \"hash\";\n        }\n        get value() {\n            return this._value;\n        }\n        get isIdentifier() {\n            return this._isIdentifier;\n        }\n        equals(value) {\n            return (value instanceof Hash &&\n                value._value === this._value &&\n                value._isIdentifier === this._isIdentifier);\n        }\n        toJSON() {\n            return {\n                type: \"hash\",\n                value: this._value,\n                isIdentifier: this._isIdentifier,\n            };\n        }\n        toString() {\n            return `#${this._value}`;\n        }\n    }\n    Token.Hash = Hash;\n    (function (Hash) {\n        function isHash(value) {\n            return value instanceof Hash;\n        }\n        Hash.isHash = isHash;\n    })(Hash = Token.Hash || (Token.Hash = {}));\n    Token.hash = Hash.of, Token.isHash = Hash.isHash;\n    function parseHash(predicate = () => true) {\n        return parseToken(and(Token.isHash, predicate));\n    }\n    Token.parseHash = parseHash;\n    class String {\n        static of(value) {\n            return new String(value);\n        }\n        constructor(value) {\n            this._value = value;\n        }\n        get type() {\n            return \"string\";\n        }\n        get value() {\n            return this._value;\n        }\n        equals(value) {\n            return value instanceof String && value._value === this._value;\n        }\n        toJSON() {\n            return {\n                type: \"string\",\n                value: this._value,\n            };\n        }\n        toString() {\n            return `\"${this._value.replace(/\"/g, `\\\\\"`)}\"`;\n        }\n    }\n    Token.String = String;\n    (function (String) {\n        function isString(value) {\n            return value instanceof String;\n        }\n        String.isString = isString;\n    })(String = Token.String || (Token.String = {}));\n    Token.string = String.of, Token.isString = String.isString;\n    function parseString(predicate = () => true) {\n        return parseToken(and(Token.isString, predicate));\n    }\n    Token.parseString = parseString;\n    class URL {\n        static of(value) {\n            return new URL(value);\n        }\n        constructor(value) {\n            this._value = value;\n        }\n        get type() {\n            return \"url\";\n        }\n        get value() {\n            return this._value;\n        }\n        equals(value) {\n            return value instanceof URL && value._value === this._value;\n        }\n        toJSON() {\n            return {\n                type: \"url\",\n                value: this._value,\n            };\n        }\n        toString() {\n            return `url(${this._value})`;\n        }\n    }\n    Token.URL = URL;\n    (function (URL) {\n        function isURL(value) {\n            return value instanceof URL;\n        }\n        URL.isURL = isURL;\n    })(URL = Token.URL || (Token.URL = {}));\n    Token.url = URL.of, Token.isURL = URL.isURL;\n    function parseURL(predicate = () => true) {\n        return parseToken(and(Token.isURL, predicate));\n    }\n    Token.parseURL = parseURL;\n    class BadURL {\n        static of() {\n            return new BadURL();\n        }\n        constructor() { }\n        get type() {\n            return \"bad-url\";\n        }\n        equals(value) {\n            return value instanceof BadURL;\n        }\n        toJSON() {\n            return {\n                type: \"bad-url\",\n            };\n        }\n        toString() {\n            return \"\";\n        }\n    }\n    Token.BadURL = BadURL;\n    Token.badURL = BadURL.of;\n    class Delim {\n        static of(value) {\n            let delim = Delim._delims.get(value);\n            if (delim === undefined) {\n                delim = new Delim(value);\n                Delim._delims.set(value, delim);\n            }\n            return delim;\n        }\n        constructor(value) {\n            this._value = value;\n        }\n        get type() {\n            return \"delim\";\n        }\n        get value() {\n            return this._value;\n        }\n        equals(value) {\n            return value instanceof Delim && value._value === this._value;\n        }\n        toJSON() {\n            return {\n                type: \"delim\",\n                value: this._value,\n            };\n        }\n        toString() {\n            return fromCharCode(this._value);\n        }\n    }\n    Delim._delims = new Map();\n    Token.Delim = Delim;\n    (function (Delim) {\n        function isDelim(value) {\n            return value instanceof Delim;\n        }\n        Delim.isDelim = isDelim;\n    })(Delim = Token.Delim || (Token.Delim = {}));\n    Token.delim = Delim.of, Token.isDelim = Delim.isDelim;\n    function parseDelim(query = () => true) {\n        let predicate;\n        if (typeof query === \"function\") {\n            predicate = query;\n        }\n        else {\n            const value = typeof query === \"number\" ? query : query.charCodeAt(0);\n            predicate = (delim) => delim.value === value;\n        }\n        return parseToken(and(Token.isDelim, predicate));\n    }\n    Token.parseDelim = parseDelim;\n    class Number {\n        static of(value, isInteger, isSigned) {\n            return new Number(value, isInteger, isSigned);\n        }\n        constructor(value, isInteger, isSigned) {\n            this._value = value;\n            this._isInteger = isInteger;\n            this._isSigned = isSigned;\n        }\n        get type() {\n            return \"number\";\n        }\n        get value() {\n            return this._value;\n        }\n        get isInteger() {\n            return this._isInteger;\n        }\n        get isSigned() {\n            return this._isSigned;\n        }\n        equals(value) {\n            return (value instanceof Number &&\n                value._value === this._value &&\n                value._isInteger === this._isInteger &&\n                value._isSigned === this._isSigned);\n        }\n        toJSON() {\n            return {\n                type: \"number\",\n                value: this._value,\n                isInteger: this._isInteger,\n                isSigned: this._isSigned,\n            };\n        }\n        toString() {\n            // If the token is explicitly signed and the value is positive, we must\n            // add a `+` as this won't be included in the stringified value.\n            const sign = this._isSigned && this._value >= 0 ? \"+\" : \"\";\n            return `${sign}${this._value}`;\n        }\n    }\n    Token.Number = Number;\n    (function (Number) {\n        function isNumber(value) {\n            return value instanceof Number;\n        }\n        Number.isNumber = isNumber;\n    })(Number = Token.Number || (Token.Number = {}));\n    Token.number = Number.of, Token.isNumber = Number.isNumber;\n    function parseNumber(predicate = () => true) {\n        return parseToken(and(Token.isNumber, predicate));\n    }\n    Token.parseNumber = parseNumber;\n    class Percentage {\n        static of(value, isInteger) {\n            return new Percentage(value, isInteger);\n        }\n        constructor(value, isInteger) {\n            this._value = value;\n            this._isInteger = isInteger;\n        }\n        get type() {\n            return \"percentage\";\n        }\n        get value() {\n            return this._value;\n        }\n        get isInteger() {\n            return this._isInteger;\n        }\n        equals(value) {\n            return (value instanceof Percentage &&\n                value._value === this._value &&\n                value._isInteger === this._isInteger);\n        }\n        toJSON() {\n            return {\n                type: \"percentage\",\n                value: this._value,\n                isInteger: this._isInteger,\n            };\n        }\n        toString() {\n            return `${this._value * 100}%`;\n        }\n    }\n    Token.Percentage = Percentage;\n    (function (Percentage) {\n        function isPercentage(value) {\n            return value instanceof Percentage;\n        }\n        Percentage.isPercentage = isPercentage;\n    })(Percentage = Token.Percentage || (Token.Percentage = {}));\n    Token.percentage = Percentage.of, Token.isPercentage = Percentage.isPercentage;\n    function parsePercentage(predicate = () => true) {\n        return parseToken(and(Token.isPercentage, predicate));\n    }\n    Token.parsePercentage = parsePercentage;\n    class Dimension {\n        static of(value, unit, isInteger, isSigned) {\n            return new Dimension(value, unit, isInteger, isSigned);\n        }\n        constructor(value, unit, isInteger, isSigned) {\n            this._value = value;\n            this._unit = unit;\n            this._isInteger = isInteger;\n            this._isSigned = isSigned;\n        }\n        get type() {\n            return \"dimension\";\n        }\n        get value() {\n            return this._value;\n        }\n        get unit() {\n            return this._unit;\n        }\n        get isInteger() {\n            return this._isInteger;\n        }\n        get isSigned() {\n            return this._isSigned;\n        }\n        equals(value) {\n            return (value instanceof Dimension &&\n                value._value === this._value &&\n                value._unit === this._unit &&\n                value._isInteger === this._isInteger &&\n                value._isSigned === this._isSigned);\n        }\n        toJSON() {\n            return {\n                type: \"dimension\",\n                value: this._value,\n                unit: this._unit,\n                isInteger: this._isInteger,\n                isSigned: this._isSigned,\n            };\n        }\n        toString() {\n            // If the token is explicitly signed and the value is positive, we must\n            // add a `+` as this won't be included in the stringified value.\n            const sign = this._isSigned && this._value >= 0 ? \"+\" : \"\";\n            return `${sign}${this._value}${this._unit}`;\n        }\n    }\n    Token.Dimension = Dimension;\n    (function (Dimension) {\n        function isDimension(value) {\n            return value instanceof Dimension;\n        }\n        Dimension.isDimension = isDimension;\n    })(Dimension = Token.Dimension || (Token.Dimension = {}));\n    Token.dimension = Dimension.of, Token.isDimension = Dimension.isDimension;\n    function parseDimension(predicate = () => true) {\n        return parseToken(and(Token.isDimension, predicate));\n    }\n    Token.parseDimension = parseDimension;\n    class Whitespace {\n        static of() {\n            return Whitespace._instance;\n        }\n        constructor() { }\n        get type() {\n            return \"whitespace\";\n        }\n        equals(value) {\n            return value instanceof Whitespace;\n        }\n        toJSON() {\n            return {\n                type: \"whitespace\",\n            };\n        }\n        toString() {\n            return \" \";\n        }\n    }\n    Whitespace._instance = new Whitespace();\n    Token.Whitespace = Whitespace;\n    (function (Whitespace) {\n        function isWhitespace(value) {\n            return value instanceof Whitespace;\n        }\n        Whitespace.isWhitespace = isWhitespace;\n    })(Whitespace = Token.Whitespace || (Token.Whitespace = {}));\n    Token.whitespace = Whitespace.of, Token.isWhitespace = Whitespace.isWhitespace;\n    Token.parseWhitespace = map(oneOrMore(parseToken(Token.isWhitespace)), ([first]) => first);\n    class Colon {\n        static of() {\n            return Colon._instance;\n        }\n        constructor() { }\n        get type() {\n            return \"colon\";\n        }\n        equals(value) {\n            return value instanceof Colon;\n        }\n        toJSON() {\n            return {\n                type: \"colon\",\n            };\n        }\n        toString() {\n            return \":\";\n        }\n    }\n    Colon._instance = new Colon();\n    Token.Colon = Colon;\n    (function (Colon) {\n        function isColon(value) {\n            return value instanceof Colon;\n        }\n        Colon.isColon = isColon;\n    })(Colon = Token.Colon || (Token.Colon = {}));\n    Token.colon = Colon.of, Token.isColon = Colon.isColon;\n    Token.parseColon = parseToken(Token.isColon);\n    class Semicolon {\n        static of() {\n            return Semicolon._instance;\n        }\n        constructor() { }\n        get type() {\n            return \"semicolon\";\n        }\n        equals(value) {\n            return value instanceof Semicolon;\n        }\n        toJSON() {\n            return {\n                type: \"semicolon\",\n            };\n        }\n        toString() {\n            return \";\";\n        }\n    }\n    Semicolon._instance = new Semicolon();\n    Token.Semicolon = Semicolon;\n    (function (Semicolon) {\n        function isSemicolon(value) {\n            return value instanceof Semicolon;\n        }\n        Semicolon.isSemicolon = isSemicolon;\n    })(Semicolon = Token.Semicolon || (Token.Semicolon = {}));\n    Token.semicolon = Semicolon.of, Token.isSemicolon = Semicolon.isSemicolon;\n    Token.parseSemicolon = parseToken(Token.isSemicolon);\n    class Comma {\n        static of() {\n            return Comma._instance;\n        }\n        constructor() { }\n        get type() {\n            return \"comma\";\n        }\n        equals(value) {\n            return value instanceof Comma;\n        }\n        toJSON() {\n            return {\n                type: \"comma\",\n            };\n        }\n        toString() {\n            return \",\";\n        }\n    }\n    Comma._instance = new Comma();\n    Token.Comma = Comma;\n    (function (Comma) {\n        function isComma(value) {\n            return value instanceof Comma;\n        }\n        Comma.isComma = isComma;\n    })(Comma = Token.Comma || (Token.Comma = {}));\n    Token.comma = Comma.of, Token.isComma = Comma.isComma;\n    Token.parseComma = parseToken(Token.isComma);\n    class OpenParenthesis {\n        static of() {\n            return OpenParenthesis._instance;\n        }\n        constructor() { }\n        get type() {\n            return \"open-parenthesis\";\n        }\n        get mirror() {\n            return CloseParenthesis.of();\n        }\n        equals(value) {\n            return value instanceof OpenParenthesis;\n        }\n        toJSON() {\n            return {\n                type: \"open-parenthesis\",\n            };\n        }\n        toString() {\n            return \"(\";\n        }\n    }\n    OpenParenthesis._instance = new OpenParenthesis();\n    Token.OpenParenthesis = OpenParenthesis;\n    (function (OpenParenthesis) {\n        function isOpenParenthesis(value) {\n            return value instanceof OpenParenthesis;\n        }\n        OpenParenthesis.isOpenParenthesis = isOpenParenthesis;\n    })(OpenParenthesis = Token.OpenParenthesis || (Token.OpenParenthesis = {}));\n    Token.openParenthesis = OpenParenthesis.of, Token.isOpenParenthesis = OpenParenthesis.isOpenParenthesis;\n    Token.parseOpenParenthesis = parseToken(Token.isOpenParenthesis);\n    class CloseParenthesis {\n        static of() {\n            return CloseParenthesis._instance;\n        }\n        constructor() { }\n        get type() {\n            return \"close-parenthesis\";\n        }\n        get mirror() {\n            return OpenParenthesis.of();\n        }\n        equals(value) {\n            return value instanceof CloseParenthesis;\n        }\n        toJSON() {\n            return {\n                type: \"close-parenthesis\",\n            };\n        }\n        toString() {\n            return \")\";\n        }\n    }\n    CloseParenthesis._instance = new CloseParenthesis();\n    Token.CloseParenthesis = CloseParenthesis;\n    (function (CloseParenthesis) {\n        function isCloseParenthesis(value) {\n            return value instanceof CloseParenthesis;\n        }\n        CloseParenthesis.isCloseParenthesis = isCloseParenthesis;\n    })(CloseParenthesis = Token.CloseParenthesis || (Token.CloseParenthesis = {}));\n    Token.closeParenthesis = CloseParenthesis.of, Token.isCloseParenthesis = CloseParenthesis.isCloseParenthesis;\n    Token.parseCloseParenthesis = parseToken(Token.isCloseParenthesis);\n    class OpenSquareBracket {\n        static of() {\n            return OpenSquareBracket._instance;\n        }\n        constructor() { }\n        get type() {\n            return \"open-square-bracket\";\n        }\n        get mirror() {\n            return CloseSquareBracket.of();\n        }\n        equals(value) {\n            return value instanceof OpenSquareBracket;\n        }\n        toJSON() {\n            return {\n                type: \"open-square-bracket\",\n            };\n        }\n        toString() {\n            return \"[\";\n        }\n    }\n    OpenSquareBracket._instance = new OpenSquareBracket();\n    Token.OpenSquareBracket = OpenSquareBracket;\n    (function (OpenSquareBracket) {\n        function isOpenSquareBracket(value) {\n            return value instanceof OpenSquareBracket;\n        }\n        OpenSquareBracket.isOpenSquareBracket = isOpenSquareBracket;\n    })(OpenSquareBracket = Token.OpenSquareBracket || (Token.OpenSquareBracket = {}));\n    Token.openSquareBracket = OpenSquareBracket.of, Token.isOpenSquareBracket = OpenSquareBracket.isOpenSquareBracket;\n    Token.parseOpenSquareBracket = parseToken(Token.isOpenSquareBracket);\n    class CloseSquareBracket {\n        static of() {\n            return CloseSquareBracket._instance;\n        }\n        constructor() { }\n        get type() {\n            return \"close-square-bracket\";\n        }\n        get mirror() {\n            return OpenSquareBracket.of();\n        }\n        equals(value) {\n            return value instanceof CloseSquareBracket;\n        }\n        toJSON() {\n            return {\n                type: \"close-square-bracket\",\n            };\n        }\n        toString() {\n            return \"]\";\n        }\n    }\n    CloseSquareBracket._instance = new CloseSquareBracket();\n    Token.CloseSquareBracket = CloseSquareBracket;\n    (function (CloseSquareBracket) {\n        function isCloseSquareBracket(value) {\n            return value instanceof CloseSquareBracket;\n        }\n        CloseSquareBracket.isCloseSquareBracket = isCloseSquareBracket;\n    })(CloseSquareBracket = Token.CloseSquareBracket || (Token.CloseSquareBracket = {}));\n    Token.closeSquareBracket = CloseSquareBracket.of, Token.isCloseSquareBracket = CloseSquareBracket.isCloseSquareBracket;\n    Token.parseCloseSquareBracket = parseToken(Token.isCloseSquareBracket);\n    class OpenCurlyBracket {\n        static of() {\n            return OpenCurlyBracket._instance;\n        }\n        constructor() { }\n        get type() {\n            return \"open-curly-bracket\";\n        }\n        get mirror() {\n            return CloseCurlyBracket.of();\n        }\n        equals(value) {\n            return value instanceof OpenCurlyBracket;\n        }\n        toJSON() {\n            return {\n                type: \"open-curly-bracket\",\n            };\n        }\n        toString() {\n            return \"{\";\n        }\n    }\n    OpenCurlyBracket._instance = new OpenCurlyBracket();\n    Token.OpenCurlyBracket = OpenCurlyBracket;\n    (function (OpenCurlyBracket) {\n        function isOpenCurlyBracket(value) {\n            return value instanceof OpenCurlyBracket;\n        }\n        OpenCurlyBracket.isOpenCurlyBracket = isOpenCurlyBracket;\n    })(OpenCurlyBracket = Token.OpenCurlyBracket || (Token.OpenCurlyBracket = {}));\n    Token.openCurlyBracket = OpenCurlyBracket.of, Token.isOpenCurlyBracket = OpenCurlyBracket.isOpenCurlyBracket;\n    Token.parseOpenCurlyBracket = parseToken(Token.isOpenCurlyBracket);\n    class CloseCurlyBracket {\n        static of() {\n            return CloseCurlyBracket._instance;\n        }\n        constructor() { }\n        get type() {\n            return \"close-curly-bracket\";\n        }\n        get mirror() {\n            return OpenCurlyBracket.of();\n        }\n        equals(value) {\n            return value instanceof CloseCurlyBracket;\n        }\n        toJSON() {\n            return {\n                type: \"close-curly-bracket\",\n            };\n        }\n        toString() {\n            return \"}\";\n        }\n    }\n    CloseCurlyBracket._instance = new CloseCurlyBracket();\n    Token.CloseCurlyBracket = CloseCurlyBracket;\n    (function (CloseCurlyBracket) {\n        function isCloseCurlyBracket(value) {\n            return value instanceof CloseCurlyBracket;\n        }\n        CloseCurlyBracket.isCloseCurlyBracket = isCloseCurlyBracket;\n    })(CloseCurlyBracket = Token.CloseCurlyBracket || (Token.CloseCurlyBracket = {}));\n    Token.closeCurlyBracket = CloseCurlyBracket.of, Token.isCloseCurlyBracket = CloseCurlyBracket.isCloseCurlyBracket;\n    Token.parseCloseCurlyBracket = parseToken(Token.isCloseCurlyBracket);\n    class OpenComment {\n        static of() {\n            return OpenComment._instance;\n        }\n        constructor() { }\n        get type() {\n            return \"open-comment\";\n        }\n        equals(value) {\n            return value instanceof OpenComment;\n        }\n        toJSON() {\n            return {\n                type: \"open-comment\",\n            };\n        }\n        toString() {\n            return \"<!--\";\n        }\n    }\n    OpenComment._instance = new OpenComment();\n    Token.OpenComment = OpenComment;\n    (function (OpenComment) {\n        function isOpenComment(value) {\n            return value instanceof OpenComment;\n        }\n        OpenComment.isOpenComment = isOpenComment;\n    })(OpenComment = Token.OpenComment || (Token.OpenComment = {}));\n    Token.openComment = OpenComment.of, Token.isOpenComment = OpenComment.isOpenComment;\n    Token.parseOpenComment = parseToken(Token.isOpenComment);\n    class CloseComment {\n        static of() {\n            return CloseComment._instance;\n        }\n        constructor() { }\n        get type() {\n            return \"close-comment\";\n        }\n        equals(value) {\n            return value instanceof CloseComment;\n        }\n        toJSON() {\n            return {\n                type: \"close-comment\",\n            };\n        }\n        toString() {\n            return \"-->\";\n        }\n    }\n    CloseComment._instance = new CloseComment();\n    Token.CloseComment = CloseComment;\n    (function (CloseComment) {\n        function isCloseComment(value) {\n            return value instanceof CloseComment;\n        }\n        CloseComment.isCloseComment = isCloseComment;\n    })(CloseComment = Token.CloseComment || (Token.CloseComment = {}));\n    Token.closeComment = CloseComment.of, Token.isCloseComment = CloseComment.isCloseComment;\n    Token.parseCloseComment = parseToken(Token.isCloseComment);\n})(Token || (exports.Token = Token = {}));\n//# sourceMappingURL=token.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/syntax/token.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/unit/converter.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/unit/converter.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Converter = void 0;\nconst { PI } = Math;\n/**\n * Given a function that returns a set of rates for a set of units, construct a\n * set of rates for the set of units.\n */\nfunction rates(fn) {\n    return fn();\n}\n/**\n * Given a set of rates for a set of units, construct a converter for the set of\n * units.\n */\nfunction converter(rates) {\n    return (value, from, to) => value * (rates[from] / rates[to]);\n}\n/**\n * @public\n */\nvar Converter;\n(function (Converter) {\n    /**\n     * {@link https://drafts.csswg.org/css-values/#lengths}\n     */\n    Converter.length = converter(rates(() => {\n        const px = 1;\n        const inch = 96;\n        const cm = inch / 2.54;\n        const mm = cm / 10;\n        const Q = cm / 40;\n        const pc = inch / 6;\n        const pt = inch / 72;\n        return {\n            cm,\n            mm,\n            Q,\n            in: inch,\n            pc,\n            pt,\n            px,\n        };\n    }));\n    /**\n     * {@link https://drafts.csswg.org/css-values/#angles}\n     */\n    Converter.angle = converter({\n        deg: 1,\n        grad: 360 / 400,\n        rad: 360 / (2 * PI),\n        turn: 360,\n    });\n    /**\n     * {@link https://drafts.csswg.org/css-values/#time}\n     */\n    Converter.time = converter({\n        s: 1,\n        ms: 0.001,\n    });\n    /**\n     * {@link https://drafts.csswg.org/css-values/#frequency}\n     */\n    Converter.frequency = converter({\n        hz: 1,\n        kHz: 1000,\n    });\n})(Converter || (exports.Converter = Converter = {}));\n//# sourceMappingURL=converter.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/unit/converter.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/unit/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/unit/index.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./converter */ \"./node_modules/@siteimprove/alfa-css/src/unit/converter.js\"), exports);\n__exportStar(__webpack_require__(/*! ./unit */ \"./node_modules/@siteimprove/alfa-css/src/unit/unit.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/unit/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/unit/unit.js":
/*!*************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/unit/unit.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Unit = void 0;\n/**\n * @public\n */\nvar Unit;\n(function (Unit) {\n    let Length;\n    (function (Length) {\n        function isRelative(unit) {\n            return isFontRelative(unit) || isViewportRelative(unit);\n        }\n        Length.isRelative = isRelative;\n        function isFontRelative(unit) {\n            switch (unit) {\n                case \"em\":\n                case \"ex\":\n                case \"ch\":\n                case \"rem\":\n                    return true;\n            }\n            return false;\n        }\n        Length.isFontRelative = isFontRelative;\n        function isViewportRelative(unit) {\n            switch (unit) {\n                case \"vw\":\n                case \"vh\":\n                case \"vmin\":\n                case \"vmax\":\n                    return true;\n            }\n            return false;\n        }\n        Length.isViewportRelative = isViewportRelative;\n        function isAbsolute(unit) {\n            switch (unit) {\n                case \"cm\":\n                case \"mm\":\n                case \"Q\":\n                case \"in\":\n                case \"pc\":\n                case \"pt\":\n                case \"px\":\n                    return true;\n            }\n            return false;\n        }\n        Length.isAbsolute = isAbsolute;\n    })(Length = Unit.Length || (Unit.Length = {}));\n    Unit.isRelativeLength = Length.isRelative, Unit.isFontRelativeLength = Length.isFontRelative, Unit.isViewportRelativeLength = Length.isViewportRelative, Unit.isAbsoluteLength = Length.isAbsolute;\n    function isLength(unit) {\n        return Unit.isRelativeLength(unit) || Unit.isAbsoluteLength(unit);\n    }\n    Unit.isLength = isLength;\n    function isAngle(unit) {\n        switch (unit) {\n            case \"deg\":\n            case \"grad\":\n            case \"rad\":\n            case \"turn\":\n                return true;\n        }\n        return false;\n    }\n    Unit.isAngle = isAngle;\n    function isTime(unit) {\n        switch (unit) {\n            case \"s\":\n            case \"ms\":\n                return true;\n        }\n        return false;\n    }\n    Unit.isTime = isTime;\n    function isFrequency(unit) {\n        switch (unit) {\n            case \"hz\":\n            case \"kHz\":\n                return true;\n        }\n        return false;\n    }\n    Unit.isFrequency = isFrequency;\n    function isResolution(unit) {\n        switch (unit) {\n            case \"dpi\":\n            case \"dpcm\":\n            case \"dppx\":\n                return true;\n        }\n        return false;\n    }\n    Unit.isResolution = isResolution;\n})(Unit || (exports.Unit = Unit = {}));\n//# sourceMappingURL=unit.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/unit/unit.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/box.js":
/*!*************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/box.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Box = void 0;\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst keyword_1 = __webpack_require__(/*! ./keyword */ \"./node_modules/@siteimprove/alfa-css/src/value/keyword.js\");\nconst { either } = alfa_parser_1.Parser;\n/**\n * @public\n */\nvar Box;\n(function (Box) {\n    Box.parse = keyword_1.Keyword.parse(\"border-box\", \"padding-box\", \"content-box\");\n    Box.parseShape = either(Box.parse, keyword_1.Keyword.parse(\"margin-box\"));\n    Box.parseGeometry = either(Box.parseShape, keyword_1.Keyword.parse(\"fill-box\", \"stroke-box\", \"view-box\"));\n})(Box || (exports.Box = Box = {}));\n//# sourceMappingURL=box.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/box.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/collection/index.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/collection/index.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./list */ \"./node_modules/@siteimprove/alfa-css/src/value/collection/list.js\"), exports);\n__exportStar(__webpack_require__(/*! ./tuple */ \"./node_modules/@siteimprove/alfa-css/src/value/collection/tuple.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/collection/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/collection/list.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/collection/list.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.List = void 0;\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst syntax_1 = __webpack_require__(/*! ../../syntax */ \"./node_modules/@siteimprove/alfa-css/src/syntax/index.js\");\nconst value_1 = __webpack_require__(/*! ../value */ \"./node_modules/@siteimprove/alfa-css/src/value/value.js\");\nconst { delimited, option, map, separatedList } = alfa_parser_1.Parser;\n/**\n * @public\n */\nclass List extends value_1.Value {\n    static of(values, separator = \" \") {\n        return new List(Array.from(values), separator);\n    }\n    constructor(values, separator) {\n        super(\"list\", value_1.Value.hasCalculation(...values));\n        this._values = values;\n        this._separator = separator;\n    }\n    get values() {\n        return this._values;\n    }\n    resolve(resolver) {\n        return this.map((value) => value.resolve(resolver));\n    }\n    partiallyResolve(resolver) {\n        return this.map((value) => value.partiallyResolve(resolver));\n    }\n    map(mapper) {\n        return new List(this._values.map(mapper), this._separator);\n    }\n    equals(value) {\n        return (value instanceof List &&\n            value._values.length === this._values.length &&\n            value._values.every((value, i) => value.equals(this._values[i])));\n    }\n    hash(hash) {\n        for (const value of this._values) {\n            value.hash(hash);\n        }\n        hash.writeUint32(this._values.length).writeString(this._separator);\n    }\n    *[Symbol.iterator]() {\n        yield* this._values;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            values: this._values.map((value) => value.toJSON()),\n            separator: this._separator,\n        };\n    }\n    toString() {\n        return this._values.join(this._separator);\n    }\n}\nexports.List = List;\n/**\n * @public\n */\n(function (List) {\n    function isList(value) {\n        return value instanceof List;\n    }\n    List.isList = isList;\n    function parse(parseValue, separator, parseSeparator, lower, upper) {\n        return map(separatedList(parseValue, parseSeparator, lower, upper), (values) => List.of(values, separator));\n    }\n    const parseComma = delimited(option(syntax_1.Token.parseWhitespace), syntax_1.Token.parseComma);\n    const parseSpace = option(syntax_1.Token.parseWhitespace);\n    List.parseCommaSeparated = (parseValue, lower = 1, upper = Infinity) => parse(parseValue, \", \", parseComma, lower, upper);\n    List.parseSpaceSeparated = (parseValue, lower = 1, upper = Infinity) => parse(parseValue, \" \", parseSpace, lower, upper);\n})(List || (exports.List = List = {}));\n//# sourceMappingURL=list.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/collection/list.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/collection/tuple.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/collection/tuple.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Tuple = void 0;\nconst value_1 = __webpack_require__(/*! ../value */ \"./node_modules/@siteimprove/alfa-css/src/value/value.js\");\n/**\n * @public\n */\nclass Tuple extends value_1.Value {\n    static of(...values) {\n        return new Tuple(values);\n    }\n    constructor(values) {\n        super(\"tuple\", value_1.Value.hasCalculation(...values));\n        this._values = values;\n    }\n    get values() {\n        return this._values;\n    }\n    resolve(resolver) {\n        return new Tuple(this._values.map((value) => value.resolve(resolver)));\n    }\n    partiallyResolve(resolver) {\n        return new Tuple(this._values.map((value) => value.resolve(resolver)));\n    }\n    equals(value) {\n        return (Tuple.isTuple(value) &&\n            value._values.length === this._values.length &&\n            value._values.every((value, i) => value.equals(this._values[i])));\n    }\n    hash(hash) {\n        for (const value of this._values) {\n            value.hash(hash);\n        }\n        hash.writeUint32(this._values.length);\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            values: this._values.map((value) => value.toJSON()),\n        };\n    }\n    toString() {\n        return `${this._values.join(\" \")}`.trim();\n    }\n}\nexports.Tuple = Tuple;\n/**\n * @public\n */\n(function (Tuple) {\n    function isTuple(value) {\n        return value instanceof Tuple;\n    }\n    Tuple.isTuple = isTuple;\n})(Tuple || (exports.Tuple = Tuple = {}));\n//# sourceMappingURL=tuple.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/collection/tuple.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/color/color.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/color/color.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Color = void 0;\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst keyword_1 = __webpack_require__(/*! ../keyword */ \"./node_modules/@siteimprove/alfa-css/src/value/keyword.js\");\nconst current_1 = __webpack_require__(/*! ./current */ \"./node_modules/@siteimprove/alfa-css/src/value/color/current.js\");\nconst hex_1 = __webpack_require__(/*! ./hex */ \"./node_modules/@siteimprove/alfa-css/src/value/color/hex.js\");\nconst hsl_1 = __webpack_require__(/*! ./hsl */ \"./node_modules/@siteimprove/alfa-css/src/value/color/hsl.js\");\nconst named_1 = __webpack_require__(/*! ./named */ \"./node_modules/@siteimprove/alfa-css/src/value/color/named.js\");\nconst rgb_1 = __webpack_require__(/*! ./rgb */ \"./node_modules/@siteimprove/alfa-css/src/value/color/rgb.js\");\nconst system_1 = __webpack_require__(/*! ./system */ \"./node_modules/@siteimprove/alfa-css/src/value/color/system.js\");\nconst { either } = alfa_parser_1.Parser;\n/**\n * @public\n */\nvar Color;\n(function (Color) {\n    Color.current = keyword_1.Keyword.of(\"currentcolor\");\n    function hex(value) {\n        return hex_1.Hex.of(value);\n    }\n    Color.hex = hex;\n    function hsl(hue, saturation, lightness, alpha) {\n        return hsl_1.HSL.of(hue, saturation, lightness, alpha);\n    }\n    Color.hsl = hsl;\n    function named(color) {\n        return named_1.Named.of(color);\n    }\n    Color.named = named;\n    function rgb(red, green, blue, alpha) {\n        return rgb_1.RGB.of(red, green, blue, alpha);\n    }\n    Color.rgb = rgb;\n    function system(keyword) {\n        return keyword_1.Keyword.of(keyword);\n    }\n    Color.system = system;\n    /**\n     * {@link https://drafts.csswg.org/css-color/#typedef-color}\n     */\n    Color.parse = either(hex_1.Hex.parse, named_1.Named.parse, rgb_1.RGB.parse, hsl_1.HSL.parse, current_1.Current.parse, system_1.System.parse);\n    function isTransparent(color) {\n        switch (color.type) {\n            case \"keyword\":\n                return false;\n            case \"color\":\n                return color.alpha.value === 0;\n        }\n    }\n    Color.isTransparent = isTransparent;\n})(Color || (exports.Color = Color = {}));\n//# sourceMappingURL=color.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/color/color.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/color/current.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/color/current.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Current = void 0;\nconst keyword_1 = __webpack_require__(/*! ../keyword */ \"./node_modules/@siteimprove/alfa-css/src/value/keyword.js\");\n/**\n * @public\n */\nvar Current;\n(function (Current) {\n    /**\n     * {@link https://drafts.csswg.org/css-color/#valdef-color-currentcolor}\n     */\n    Current.parse = keyword_1.Keyword.parse(\"currentcolor\");\n})(Current || (exports.Current = Current = {}));\n//# sourceMappingURL=current.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/color/current.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/color/format.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/color/format.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Format = void 0;\nconst alfa_math_1 = __webpack_require__(/*! @siteimprove/alfa-math */ \"./node_modules/@siteimprove/alfa-math/src/index.js\");\nconst numeric_1 = __webpack_require__(/*! ../numeric */ \"./node_modules/@siteimprove/alfa-css/src/value/numeric/index.js\");\nconst value_1 = __webpack_require__(/*! ../value */ \"./node_modules/@siteimprove/alfa-css/src/value/value.js\");\n/**\n * @remarks\n * While colors can be calculated, they only use numbers and raw percentages.\n * Therefore, the calculations can be fully resolved at parse time and do not\n * need to be stored.\n *\n * @internal\n */\nclass Format extends value_1.Value {\n    constructor(format) {\n        super(\"color\", false);\n        this._format = format;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            format: this._format,\n        };\n    }\n}\nexports.Format = Format;\n/**\n * @internal\n */\n(function (Format) {\n    function toPercentage(channel, max) {\n        return numeric_1.Percentage.of(alfa_math_1.Real.clamp(channel.value / (numeric_1.Number.isNumber(channel) ? max : 1), 0, 1));\n    }\n    /**\n     * {@link https://drafts.csswg.org/css-color/#resolving-color-values}\n     */\n    function resolve(red, green, blue, alpha) {\n        return [\n            toPercentage(red, 0xff),\n            toPercentage(green, 0xff),\n            toPercentage(blue, 0xff),\n            toPercentage(alpha, 1),\n        ];\n    }\n    Format.resolve = resolve;\n})(Format || (exports.Format = Format = {}));\n//# sourceMappingURL=format.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/color/format.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/color/hex.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/color/hex.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Hex = void 0;\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst syntax_1 = __webpack_require__(/*! ../../syntax */ \"./node_modules/@siteimprove/alfa-css/src/syntax/index.js\");\nconst numeric_1 = __webpack_require__(/*! ../numeric */ \"./node_modules/@siteimprove/alfa-css/src/value/numeric/index.js\");\nconst format_1 = __webpack_require__(/*! ./format */ \"./node_modules/@siteimprove/alfa-css/src/value/color/format.js\");\nconst rgb_1 = __webpack_require__(/*! ./rgb */ \"./node_modules/@siteimprove/alfa-css/src/value/color/rgb.js\");\nconst { map } = alfa_parser_1.Parser;\n/**\n * @public\n */\nclass Hex extends format_1.Format {\n    static of(value) {\n        return new Hex(value);\n    }\n    constructor(value) {\n        super(\"hex\");\n        // Make sure that only the lower 4 bytes are stored.\n        this._value = value & 4294967295;\n    }\n    get value() {\n        return this._value;\n    }\n    get red() {\n        return numeric_1.Number.of(this._value >>> 24);\n    }\n    get green() {\n        return numeric_1.Number.of((this._value >>> 16) & 0xff);\n    }\n    get blue() {\n        return numeric_1.Number.of((this._value >>> 8) & 0xff);\n    }\n    get alpha() {\n        return numeric_1.Number.of(this._value & 0xff);\n    }\n    resolve() {\n        return rgb_1.RGB.of(...format_1.Format.resolve(this.red, this.green, this.blue, this.alpha));\n    }\n    equals(value) {\n        return value instanceof Hex && value._value === this._value;\n    }\n    hash(hash) {\n        hash.writeUint32(this._value);\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            value: this._value,\n        };\n    }\n    toString() {\n        return `#${this._value.toString(16).padStart(8, \"0\")}`;\n    }\n}\nexports.Hex = Hex;\n/**\n * @public\n */\n(function (Hex) {\n    function isHex(value) {\n        return value instanceof Hex;\n    }\n    Hex.isHex = isHex;\n    /**\n     * {@link https://drafts.csswg.org/css-color/#typedef-hex-color}\n     */\n    Hex.parse = map(map(syntax_1.Token.parseHash((hash) => {\n        switch (hash.value.length) {\n            case 3:\n            case 4:\n            case 6:\n            case 8: {\n                return /^[\\da-f]*$/i.test(hash.value);\n            }\n            default:\n                return false;\n        }\n    }), (hash) => {\n        switch (hash.value.length) {\n            case 3: {\n                const [r, g, b] = hash.value;\n                return r + r + g + g + b + b + \"ff\";\n            }\n            case 4: {\n                const [r, g, b, a] = hash.value;\n                return r + r + g + g + b + b + a + a;\n            }\n            case 6:\n                return hash.value + \"ff\";\n            default:\n                return hash.value;\n        }\n    }), (hash) => Hex.of(parseInt(hash, 16)));\n})(Hex || (exports.Hex = Hex = {}));\n//# sourceMappingURL=hex.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/color/hex.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/color/hsl.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/color/hsl.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.HSL = void 0;\nconst alfa_math_1 = __webpack_require__(/*! @siteimprove/alfa-math */ \"./node_modules/@siteimprove/alfa-math/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst syntax_1 = __webpack_require__(/*! ../../syntax */ \"./node_modules/@siteimprove/alfa-css/src/syntax/index.js\");\nconst keyword_1 = __webpack_require__(/*! ../keyword */ \"./node_modules/@siteimprove/alfa-css/src/value/keyword.js\");\nconst numeric_1 = __webpack_require__(/*! ../numeric */ \"./node_modules/@siteimprove/alfa-css/src/value/numeric/index.js\");\nconst format_1 = __webpack_require__(/*! ./format */ \"./node_modules/@siteimprove/alfa-css/src/value/color/format.js\");\nconst rgb_1 = __webpack_require__(/*! ./rgb */ \"./node_modules/@siteimprove/alfa-css/src/value/color/rgb.js\");\nconst { pair, map, either, option, right, take, delimited } = alfa_parser_1.Parser;\n/**\n * @public\n */\nclass HSL extends format_1.Format {\n    static of(hue, saturation, lightness, alpha) {\n        return new HSL(hue.resolve(), saturation.resolve(), lightness.resolve(), alpha.resolve());\n    }\n    constructor(hue, saturation, lightness, alpha) {\n        super(\"hsl\");\n        this._hue = hue;\n        this._saturation = saturation;\n        this._lightness = lightness;\n        this._alpha = alpha;\n        const degrees = numeric_1.Angle.isAngle(hue) ? hue.withUnit(\"deg\").value : hue.value;\n        const [red, green, blue] = hslToRgb(alfa_math_1.Real.modulo(degrees, 360) / 60, alfa_math_1.Real.clamp(saturation.value, 0, 1), alfa_math_1.Real.clamp(lightness.value, 0, 1));\n        this._red = numeric_1.Percentage.of(red);\n        this._green = numeric_1.Percentage.of(green);\n        this._blue = numeric_1.Percentage.of(blue);\n    }\n    get hue() {\n        return this._hue;\n    }\n    get saturation() {\n        return this._saturation;\n    }\n    get lightness() {\n        return this._lightness;\n    }\n    get red() {\n        return this._red;\n    }\n    get green() {\n        return this._green;\n    }\n    get blue() {\n        return this._blue;\n    }\n    get alpha() {\n        return this._alpha;\n    }\n    resolve() {\n        return rgb_1.RGB.of(...format_1.Format.resolve(this.red, this.green, this.blue, this.alpha));\n    }\n    equals(value) {\n        return (value instanceof HSL &&\n            value._hue.equals(this._hue) &&\n            value._saturation.equals(this._saturation) &&\n            value._lightness.equals(this._lightness) &&\n            value._alpha.equals(this._alpha));\n    }\n    hash(hash) {\n        hash\n            .writeHashable(this._hue)\n            .writeHashable(this._saturation)\n            .writeHashable(this._lightness)\n            .writeHashable(this._alpha);\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            hue: this._hue.toJSON(),\n            saturation: this._saturation.toJSON(),\n            lightness: this._lightness.toJSON(),\n            alpha: this._alpha.toJSON(),\n        };\n    }\n    toString() {\n        return `hsl(${this._hue} ${this._saturation} ${this._lightness}${this._alpha.value === 1 ? \"\" : ` / ${this._alpha}`})`;\n    }\n}\nexports.HSL = HSL;\n/**\n * @public\n */\n(function (HSL) {\n    function isHSL(value) {\n        return value instanceof HSL;\n    }\n    HSL.isHSL = isHSL;\n    /**\n     * {@link https://drafts.csswg.org/css-color/#typedef-alpha-value}\n     */\n    const parseAlpha = either(numeric_1.Number.parse, (numeric_1.Percentage.parse));\n    /**\n     * {@link https://drafts.csswg.org/css-color/#typedef-hue}\n     */\n    const parseHue = either(numeric_1.Number.parse, numeric_1.Angle.parse);\n    const orNone = (parser) => either(parser, map(keyword_1.Keyword.parse(\"none\"), () => numeric_1.Percentage.of(0)));\n    const parseTriplet = (separator, acceptNone = false) => map(pair(acceptNone\n        ? either(parseHue, map(keyword_1.Keyword.parse(\"none\"), () => numeric_1.Number.of(0)))\n        : parseHue, take(right(separator, acceptNone\n        ? orNone((numeric_1.Percentage.parse))\n        : numeric_1.Percentage.parse), 2)), ([h, [s, l]]) => [h, s, l]);\n    /**\n     * @remarks\n     * Modern syntax is supposed to accept numbers in addition to percentages\n     * for saturation and lightness. This seems to have poor browser support\n     * currently, so we ignore it until we encounter it in the wild.\n     * Look at what is done for RGB parser if need be.\n     */\n    const parseModern = pair(parseTriplet(option(syntax_1.Token.parseWhitespace), true), option(right(delimited(option(syntax_1.Token.parseWhitespace), syntax_1.Token.parseDelim(\"/\")), orNone(parseAlpha))));\n    const parseLegacy = pair(parseTriplet(delimited(option(syntax_1.Token.parseWhitespace), syntax_1.Token.parseComma)), option(right(delimited(option(syntax_1.Token.parseWhitespace), syntax_1.Token.parseComma), parseAlpha)));\n    /**\n     * {@link https://drafts.csswg.org/css-color/#funcdef-hsl}\n     */\n    HSL.parse = map(syntax_1.Function.parse((fn) => fn.value === \"hsl\" || fn.value === \"hsla\", either(parseLegacy, parseModern)), (result) => {\n        const [, [[hue, saturation, lightness], alpha]] = result;\n        return HSL.of(hue, saturation, lightness, alpha.getOrElse(() => numeric_1.Number.of(1)));\n    });\n})(HSL || (exports.HSL = HSL = {}));\n/**\n * {@link https://drafts.csswg.org/css-color/#hsl-to-rgb}\n */\nfunction hslToRgb(hue, saturation, lightness) {\n    const t2 = lightness <= 0.5\n        ? lightness * (saturation + 1)\n        : lightness + saturation - lightness * saturation;\n    const t1 = lightness * 2 - t2;\n    return [\n        hueToRgb(t1, t2, alfa_math_1.Real.modulo(hue + 2, 6)),\n        hueToRgb(t1, t2, hue),\n        hueToRgb(t1, t2, alfa_math_1.Real.modulo(hue - 2, 6)),\n    ];\n}\n/**\n * {@link https://drafts.csswg.org/css-color/#hsl-to-rgb}\n */\nfunction hueToRgb(t1, t2, hue) {\n    if (hue < 1) {\n        return t1 + (t2 - t1) * hue;\n    }\n    if (hue < 3) {\n        return t2;\n    }\n    if (hue < 4) {\n        return t1 + (t2 - t1) * (4 - hue);\n    }\n    return t1;\n}\n//# sourceMappingURL=hsl.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/color/hsl.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/color/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/color/index.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./color */ \"./node_modules/@siteimprove/alfa-css/src/value/color/color.js\"), exports);\n__exportStar(__webpack_require__(/*! ./current */ \"./node_modules/@siteimprove/alfa-css/src/value/color/current.js\"), exports);\n__exportStar(__webpack_require__(/*! ./hex */ \"./node_modules/@siteimprove/alfa-css/src/value/color/hex.js\"), exports);\n__exportStar(__webpack_require__(/*! ./hsl */ \"./node_modules/@siteimprove/alfa-css/src/value/color/hsl.js\"), exports);\n__exportStar(__webpack_require__(/*! ./named */ \"./node_modules/@siteimprove/alfa-css/src/value/color/named.js\"), exports);\n__exportStar(__webpack_require__(/*! ./rgb */ \"./node_modules/@siteimprove/alfa-css/src/value/color/rgb.js\"), exports);\n__exportStar(__webpack_require__(/*! ./system */ \"./node_modules/@siteimprove/alfa-css/src/value/color/system.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/color/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/color/named.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/color/named.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Named = void 0;\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst syntax_1 = __webpack_require__(/*! ../../syntax */ \"./node_modules/@siteimprove/alfa-css/src/syntax/index.js\");\nconst numeric_1 = __webpack_require__(/*! ../numeric */ \"./node_modules/@siteimprove/alfa-css/src/value/numeric/index.js\");\nconst format_1 = __webpack_require__(/*! ./format */ \"./node_modules/@siteimprove/alfa-css/src/value/color/format.js\");\nconst rgb_1 = __webpack_require__(/*! ./rgb */ \"./node_modules/@siteimprove/alfa-css/src/value/color/rgb.js\");\nconst { map } = alfa_parser_1.Parser;\n/**\n * @public\n */\nclass Named extends format_1.Format {\n    static of(color) {\n        return new Named(color);\n    }\n    constructor(color) {\n        super(\"named\");\n        this._color = color;\n    }\n    get color() {\n        return this._color;\n    }\n    get value() {\n        return Colors[this._color];\n    }\n    get red() {\n        return numeric_1.Number.of(this.value >>> 16);\n    }\n    get green() {\n        return numeric_1.Number.of((this.value >>> 8) & 0xff);\n    }\n    get blue() {\n        return numeric_1.Number.of(this.value & 0xff);\n    }\n    get alpha() {\n        // The \"transparent\" color has an alpha of 0 as it's, well, transparent. All\n        // other named colors are fully opaque and therefore have an alpha of 1.\n        return numeric_1.Number.of(this._color === \"transparent\" ? 0 : 1);\n    }\n    resolve() {\n        return rgb_1.RGB.of(...format_1.Format.resolve(this.red, this.green, this.blue, this.alpha));\n    }\n    equals(value) {\n        return value instanceof Named && value._color === this._color;\n    }\n    hash(hash) {\n        hash.writeString(this._color);\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            color: this._color,\n        };\n    }\n    toString() {\n        return this._color;\n    }\n}\nexports.Named = Named;\n/**\n * @public\n */\n(function (Named) {\n    Named.parse = map(syntax_1.Token.parseIdent((ident) => ident.value.toLowerCase() in Colors), (ident) => Named.of(ident.value.toLowerCase()));\n})(Named || (exports.Named = Named = {}));\n/**\n * {@link https://drafts.csswg.org/css-color/#named-colors}\n */\nconst Colors = {\n    // The \"transparent\" color is a little special in that while it is defined\n    // in its own section, it's still considered a named color.\n    transparent: 0x000000,\n    aliceblue: 0xf0f8ff,\n    antiquewhite: 0xfaebd7,\n    aqua: 0x00ffff,\n    aquamarine: 0x7fffd4,\n    azure: 0xf0ffff,\n    beige: 0xf5f5dc,\n    bisque: 0xffe4c4,\n    black: 0x000000,\n    blanchedalmond: 0xffebcd,\n    blue: 0x0000ff,\n    blueviolet: 0x8a2be2,\n    brown: 0xa52a2a,\n    burlywood: 0xdeb887,\n    cadetblue: 0x5f9ea0,\n    chartreuse: 0x7fff00,\n    chocolate: 0xd2691e,\n    coral: 0xff7f50,\n    cornflowerblue: 0x6495ed,\n    cornsilk: 0xfff8dc,\n    crimson: 0xdc143c,\n    cyan: 0x00ffff,\n    darkblue: 0x00008b,\n    darkcyan: 0x008b8b,\n    darkgoldenrod: 0xb8860b,\n    darkgray: 0xa9a9a9,\n    darkgreen: 0x006400,\n    darkgrey: 0xa9a9a9,\n    darkkhaki: 0xbdb76b,\n    darkmagenta: 0x8b008b,\n    darkolivegreen: 0x556b2f,\n    darkorange: 0xff8c00,\n    darkorchid: 0x9932cc,\n    darkred: 0x8b0000,\n    darksalmon: 0xe9967a,\n    darkseagreen: 0x8fbc8f,\n    darkslateblue: 0x483d8b,\n    darkslategray: 0x2f4f4f,\n    darkslategrey: 0x2f4f4f,\n    darkturquoise: 0x00ced1,\n    darkviolet: 0x9400d3,\n    deeppink: 0xff1493,\n    deepskyblue: 0x00bfff,\n    dimgray: 0x696969,\n    dimgrey: 0x696969,\n    dodgerblue: 0x1e90ff,\n    firebrick: 0xb22222,\n    floralwhite: 0xfffaf0,\n    forestgreen: 0x228b22,\n    fuchsia: 0xff00ff,\n    gainsboro: 0xdcdcdc,\n    ghostwhite: 0xf8f8ff,\n    gold: 0xffd700,\n    goldenrod: 0xdaa520,\n    gray: 0x808080,\n    green: 0x008000,\n    greenyellow: 0xadff2f,\n    grey: 0x808080,\n    honeydew: 0xf0fff0,\n    hotpink: 0xff69b4,\n    indianred: 0xcd5c5c,\n    indigo: 0x4b0082,\n    ivory: 0xfffff0,\n    khaki: 0xf0e68c,\n    lavender: 0xe6e6fa,\n    lavenderblush: 0xfff0f5,\n    lawngreen: 0x7cfc00,\n    lemonchiffon: 0xfffacd,\n    lightblue: 0xadd8e6,\n    lightcoral: 0xf08080,\n    lightcyan: 0xe0ffff,\n    lightgoldenrodyellow: 0xfafad2,\n    lightgray: 0xd3d3d3,\n    lightgreen: 0x90ee90,\n    lightgrey: 0xd3d3d3,\n    lightpink: 0xffb6c1,\n    lightsalmon: 0xffa07a,\n    lightseagreen: 0x20b2aa,\n    lightskyblue: 0x87cefa,\n    lightslategray: 0x778899,\n    lightslategrey: 0x778899,\n    lightsteelblue: 0xb0c4de,\n    lightyellow: 0xffffe0,\n    lime: 0x00ff00,\n    limegreen: 0x32cd32,\n    linen: 0xfaf0e6,\n    magenta: 0xff00ff,\n    maroon: 0x800000,\n    mediumaquamarine: 0x66cdaa,\n    mediumblue: 0x0000cd,\n    mediumorchid: 0xba55d3,\n    mediumpurple: 0x9370db,\n    mediumseagreen: 0x3cb371,\n    mediumslateblue: 0x7b68ee,\n    mediumspringgreen: 0x00fa9a,\n    mediumturquoise: 0x48d1cc,\n    mediumvioletred: 0xc71585,\n    midnightblue: 0x191970,\n    mintcream: 0xf5fffa,\n    mistyrose: 0xffe4e1,\n    moccasin: 0xffe4b5,\n    navajowhite: 0xffdead,\n    navy: 0x000080,\n    oldlace: 0xfdf5e6,\n    olive: 0x808000,\n    olivedrab: 0x6b8e23,\n    orange: 0xffa500,\n    orangered: 0xff4500,\n    orchid: 0xda70d6,\n    palegoldenrod: 0xeee8aa,\n    palegreen: 0x98fb98,\n    paleturquoise: 0xafeeee,\n    palevioletred: 0xdb7093,\n    papayawhip: 0xffefd5,\n    peachpuff: 0xffdab9,\n    peru: 0xcd853f,\n    pink: 0xffc0cb,\n    plum: 0xdda0dd,\n    powderblue: 0xb0e0e6,\n    purple: 0x800080,\n    rebeccapurple: 0x663399,\n    red: 0xff0000,\n    rosybrown: 0xbc8f8f,\n    royalblue: 0x4169e1,\n    saddlebrown: 0x8b4513,\n    salmon: 0xfa8072,\n    sandybrown: 0xf4a460,\n    seagreen: 0x2e8b57,\n    seashell: 0xfff5ee,\n    sienna: 0xa0522d,\n    silver: 0xc0c0c0,\n    skyblue: 0x87ceeb,\n    slateblue: 0x6a5acd,\n    slategray: 0x708090,\n    slategrey: 0x708090,\n    snow: 0xfffafa,\n    springgreen: 0x00ff7f,\n    steelblue: 0x4682b4,\n    tan: 0xd2b48c,\n    teal: 0x008080,\n    thistle: 0xd8bfd8,\n    tomato: 0xff6347,\n    turquoise: 0x40e0d0,\n    violet: 0xee82ee,\n    wheat: 0xf5deb3,\n    white: 0xffffff,\n    whitesmoke: 0xf5f5f5,\n    yellow: 0xffff00,\n    yellowgreen: 0x9acd32,\n};\n//# sourceMappingURL=named.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/color/named.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/color/rgb.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/color/rgb.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.RGB = void 0;\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst syntax_1 = __webpack_require__(/*! ../../syntax */ \"./node_modules/@siteimprove/alfa-css/src/syntax/index.js\");\nconst keyword_1 = __webpack_require__(/*! ../keyword */ \"./node_modules/@siteimprove/alfa-css/src/value/keyword.js\");\nconst numeric_1 = __webpack_require__(/*! ../numeric */ \"./node_modules/@siteimprove/alfa-css/src/value/numeric/index.js\");\nconst format_1 = __webpack_require__(/*! ./format */ \"./node_modules/@siteimprove/alfa-css/src/value/color/format.js\");\nconst { pair, map, either, option, right, take, delimited } = alfa_parser_1.Parser;\n/**\n * @public\n */\nclass RGB extends format_1.Format {\n    static of(red, green, blue, alpha) {\n        return new RGB(red.resolve(), green.resolve(), blue.resolve(), alpha.resolve());\n    }\n    constructor(red, green, blue, alpha) {\n        super(\"rgb\");\n        this._red = red;\n        this._green = green;\n        this._blue = blue;\n        this._alpha = alpha;\n    }\n    get red() {\n        return this._red;\n    }\n    get green() {\n        return this._green;\n    }\n    get blue() {\n        return this._blue;\n    }\n    get alpha() {\n        return this._alpha;\n    }\n    resolve() {\n        return new RGB(...format_1.Format.resolve(this._red, this._green, this._blue, this._alpha));\n    }\n    equals(value) {\n        return (value instanceof RGB &&\n            value._red.equals(this._red) &&\n            value._green.equals(this._green) &&\n            value._blue.equals(this._blue) &&\n            value._alpha.equals(this._alpha));\n    }\n    hash(hash) {\n        hash\n            .writeHashable(this._red)\n            .writeHashable(this._green)\n            .writeHashable(this._blue)\n            .writeHashable(this._alpha);\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            red: this._red.toJSON(),\n            green: this._green.toJSON(),\n            blue: this._blue.toJSON(),\n            alpha: this._alpha.toJSON(),\n        };\n    }\n    toString() {\n        return `rgb(${this._red} ${this._green} ${this._blue}${this._alpha.value === 1 ? \"\" : ` / ${this._alpha}`})`;\n    }\n}\nexports.RGB = RGB;\n/**\n * @public\n */\n(function (RGB) {\n    function isRGB(value) {\n        return value instanceof RGB;\n    }\n    RGB.isRGB = isRGB;\n    /**\n     * @remarks\n     * While the three R, G, B components must be either all numbers or all\n     * percentage, the alpha component can be either independently.\n     *\n     * {@link https://drafts.csswg.org/css-color/#typedef-alpha-value}\n     */\n    const parseAlphaLegacy = either(numeric_1.Number.parse, (numeric_1.Percentage.parse));\n    const parseAlphaModern = either(numeric_1.Number.parse, (numeric_1.Percentage.parse), map(keyword_1.Keyword.parse(\"none\"), () => numeric_1.Percentage.of(0)));\n    /**\n     * Parses either a number/percentage or the keyword \"none\", reduces \"none\" to\n     * the correct type, or fails if it is not allowed.\n     */\n    const parseItem = (parser, ifNone) => either(parser, ifNone !== undefined\n        ? map(keyword_1.Keyword.parse(\"none\"), () => ifNone)\n        : () => alfa_result_1.Err.of(\"none is not accepted in legacy rbg syntax\"));\n    /**\n     * Parses 3 items.\n     * In legacy syntax, they must be separated by a comma, in modern syntax by\n     * whitespace.\n     */\n    const parseTriplet = (parser, separator, ifNone) => map(pair(parseItem(parser, ifNone), take(right(separator, parseItem(parser, ifNone)), 2)), ([r, [g, b]]) => [r, g, b]);\n    const parseLegacyTriplet = (parser) => parseTriplet(parser, delimited(option(syntax_1.Token.parseWhitespace), syntax_1.Token.parseComma));\n    const parseLegacy = pair(either(parseLegacyTriplet((numeric_1.Percentage.parse)), parseLegacyTriplet(numeric_1.Number.parse)), option(right(delimited(option(syntax_1.Token.parseWhitespace), syntax_1.Token.parseComma), parseAlphaLegacy)));\n    const parseModernTriplet = (parser, ifNone) => parseTriplet(parser, option(syntax_1.Token.parseWhitespace), ifNone);\n    const parseModern = pair(either(parseModernTriplet(numeric_1.Percentage.parse, numeric_1.Percentage.of(0)), parseModernTriplet(numeric_1.Number.parse, numeric_1.Number.of(0))), option(right(delimited(option(syntax_1.Token.parseWhitespace), syntax_1.Token.parseDelim(\"/\")), parseAlphaModern)));\n    /**\n     * {@link https://drafts.csswg.org/css-color/#funcdef-rgb}\n     */\n    RGB.parse = map(syntax_1.Function.parse((fn) => fn.value === \"rgb\" || fn.value === \"rgba\", either(parseLegacy, parseModern)), (result) => {\n        const [, [[red, green, blue], alpha]] = result;\n        return RGB.of(red, green, blue, alpha.getOrElse(() => numeric_1.Number.of(1)));\n    });\n})(RGB || (exports.RGB = RGB = {}));\n//# sourceMappingURL=rgb.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/color/rgb.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/color/system.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/color/system.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.System = void 0;\nconst keyword_1 = __webpack_require__(/*! ../keyword */ \"./node_modules/@siteimprove/alfa-css/src/value/keyword.js\");\n/**\n * @public\n */\nvar System;\n(function (System) {\n    /**\n     * {@link https://drafts.csswg.org/css-color/#typedef-system-color}\n     */\n    System.parse = keyword_1.Keyword.parse(\"canvas\", \"canvastext\", \"linktext\", \"visitedtext\", \"activetext\", \"buttonface\", \"buttontext\", \"field\", \"fieldtext\", \"highlight\", \"highlighttext\", \"graytext\");\n})(System || (exports.System = System = {}));\n//# sourceMappingURL=system.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/color/system.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/image/gradient/gradient.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/image/gradient/gradient.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Gradient = void 0;\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst item = __webpack_require__(/*! ./item/ */ \"./node_modules/@siteimprove/alfa-css/src/value/image/gradient/item/index.js\");\nconst linear = __webpack_require__(/*! ./linear/ */ \"./node_modules/@siteimprove/alfa-css/src/value/image/gradient/linear/index.js\");\nconst radial = __webpack_require__(/*! ./radial/ */ \"./node_modules/@siteimprove/alfa-css/src/value/image/gradient/radial/index.js\");\nconst { either } = alfa_parser_1.Parser;\n/**\n * @public\n */\nvar Gradient;\n(function (Gradient) {\n    Gradient.Item = item.Item;\n    Gradient.Linear = linear.Linear;\n    Gradient.Radial = radial.Radial;\n    /**\n     * {@link https://drafts.csswg.org/css-images/#typedef-gradient}\n     */\n    Gradient.parse = either(Gradient.Linear.parse, Gradient.Radial.parse);\n})(Gradient || (exports.Gradient = Gradient = {}));\n//# sourceMappingURL=gradient.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/image/gradient/gradient.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/image/gradient/index.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/image/gradient/index.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./gradient */ \"./node_modules/@siteimprove/alfa-css/src/value/image/gradient/gradient.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/image/gradient/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/image/gradient/item/hint.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/image/gradient/item/hint.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Hint = void 0;\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst numeric_1 = __webpack_require__(/*! ../../../numeric */ \"./node_modules/@siteimprove/alfa-css/src/value/numeric/index.js\");\nconst value_1 = __webpack_require__(/*! ../../../value */ \"./node_modules/@siteimprove/alfa-css/src/value/value.js\");\nconst { map } = alfa_parser_1.Parser;\n/**\n * {@link https://drafts.csswg.org/css-images/#color-transition-hint}\n */\nclass Hint extends value_1.Value {\n    static of(position) {\n        return new Hint(position);\n    }\n    constructor(position) {\n        super(\"hint\", value_1.Value.hasCalculation(position));\n        this._position = position;\n    }\n    /** @public (knip) */\n    get position() {\n        return this._position;\n    }\n    resolve(resolver) {\n        return new Hint(numeric_1.LengthPercentage.resolve(resolver)(this._position));\n    }\n    partiallyResolve(resolver) {\n        return new Hint(numeric_1.LengthPercentage.partiallyResolve(resolver)(this._position));\n    }\n    equals(value) {\n        return value instanceof Hint && value._position.equals(this._position);\n    }\n    hash(hash) {\n        hash.writeHashable(this._position);\n    }\n    toJSON() {\n        return {\n            type: \"hint\",\n            position: this._position.toJSON(),\n        };\n    }\n    toString() {\n        return `${this._position}`;\n    }\n}\nexports.Hint = Hint;\n(function (Hint) {\n    /**\n     * {@link https://drafts.csswg.org/css-images/#typedef-linear-color-hint}\n     */\n    Hint.parse = map(numeric_1.LengthPercentage.parse, Hint.of);\n})(Hint || (exports.Hint = Hint = {}));\n//# sourceMappingURL=hint.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/image/gradient/item/hint.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/image/gradient/item/index.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/image/gradient/item/index.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./item */ \"./node_modules/@siteimprove/alfa-css/src/value/image/gradient/item/item.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/image/gradient/item/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/image/gradient/item/item.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/image/gradient/item/item.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Item = void 0;\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst syntax_1 = __webpack_require__(/*! ../../../../syntax */ \"./node_modules/@siteimprove/alfa-css/src/syntax/index.js\");\nconst hint_1 = __webpack_require__(/*! ./hint */ \"./node_modules/@siteimprove/alfa-css/src/value/image/gradient/item/hint.js\");\nconst stop_1 = __webpack_require__(/*! ./stop */ \"./node_modules/@siteimprove/alfa-css/src/value/image/gradient/item/stop.js\");\nconst { pair, map, option, left, right, separatedList } = alfa_parser_1.Parser;\nvar Item;\n(function (Item) {\n    function resolve(resolver) {\n        return (value) => value.resolve(resolver);\n    }\n    Item.resolve = resolve;\n    // <linear-color-hint>? , <linear-color-stop>\n    const parse = pair(option(left(hint_1.Hint.parse, syntax_1.Comma.parse)), stop_1.Stop.parse);\n    /**\n     * {@link https://drafts.csswg.org/css-images/#typedef-color-stop-list}\n     */\n    Item.parseList = map(pair(stop_1.Stop.parse, right(syntax_1.Comma.parse, separatedList(parse, syntax_1.Comma.parse))), ([first, rest]) => {\n        const items = [first];\n        for (const [hint, stop] of rest) {\n            items.push(...hint, stop);\n        }\n        return items;\n    });\n})(Item || (exports.Item = Item = {}));\n//# sourceMappingURL=item.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/image/gradient/item/item.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/image/gradient/item/stop.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/image/gradient/item/stop.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Stop = void 0;\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst syntax_1 = __webpack_require__(/*! ../../../../syntax */ \"./node_modules/@siteimprove/alfa-css/src/syntax/index.js\");\nconst color_1 = __webpack_require__(/*! ../../../color */ \"./node_modules/@siteimprove/alfa-css/src/value/color/index.js\");\nconst numeric_1 = __webpack_require__(/*! ../../../numeric */ \"./node_modules/@siteimprove/alfa-css/src/value/numeric/index.js\");\nconst value_1 = __webpack_require__(/*! ../../../value */ \"./node_modules/@siteimprove/alfa-css/src/value/value.js\");\nconst { either, pair, map, left, right } = alfa_parser_1.Parser;\n/**\n * {@link https://drafts.csswg.org/css-images/#color-stop}\n */\nclass Stop extends value_1.Value {\n    static of(color, position = alfa_option_1.None) {\n        return new Stop(color, position);\n    }\n    constructor(color, position) {\n        super(\"stop\", (value_1.Value.hasCalculation(color) ||\n            position\n                .map(value_1.Value.hasCalculation)\n                .getOr(false)));\n        this._color = color;\n        this._position = position;\n    }\n    get color() {\n        return this._color;\n    }\n    /** @public (knip) */\n    get position() {\n        return this._position;\n    }\n    resolve(resolver) {\n        return new Stop(this._color.resolve(), this._position.map(numeric_1.LengthPercentage.resolve(resolver)));\n    }\n    partiallyResolve(resolver) {\n        return new Stop(this._color.resolve(), this._position.map(numeric_1.LengthPercentage.partiallyResolve(resolver)));\n    }\n    equals(value) {\n        return (value instanceof Stop &&\n            value._color.equals(this._color) &&\n            value._position.equals(this._position));\n    }\n    hash(hash) {\n        hash.writeHashable(this._color).writeHashable(this._position);\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            color: this._color.toJSON(),\n            position: this._position.map((position) => position.toJSON()).getOr(null),\n        };\n    }\n    toString() {\n        return `${this._color}${this._position\n            .map((position) => ` ${position}`)\n            .getOr(\"\")}`;\n    }\n}\nexports.Stop = Stop;\n(function (Stop) {\n    /** @public (knip) */\n    function isStop(value) {\n        return value instanceof Stop;\n    }\n    Stop.isStop = isStop;\n    /**\n     * {@link https://drafts.csswg.org/css-images/#typedef-linear-color-stop}\n     */\n    Stop.parse = either(map(pair(left(color_1.Color.parse, syntax_1.Token.parseWhitespace), numeric_1.LengthPercentage.parse), (result) => {\n        const [color, position] = result;\n        return Stop.of(color, alfa_option_1.Option.of(position));\n    }), map(pair(numeric_1.LengthPercentage.parse, right(syntax_1.Token.parseWhitespace, color_1.Color.parse)), (result) => {\n        const [position, color] = result;\n        return Stop.of(color, alfa_option_1.Option.of(position));\n    }), map(color_1.Color.parse, (color) => Stop.of(color)));\n})(Stop || (exports.Stop = Stop = {}));\n//# sourceMappingURL=stop.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/image/gradient/item/stop.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/image/gradient/linear/corner.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/image/gradient/linear/corner.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Corner = void 0;\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst syntax_1 = __webpack_require__(/*! ../../../../syntax */ \"./node_modules/@siteimprove/alfa-css/src/syntax/index.js\");\nconst value_1 = __webpack_require__(/*! ../../../value */ \"./node_modules/@siteimprove/alfa-css/src/value/value.js\");\nconst position_1 = __webpack_require__(/*! ./position */ \"./node_modules/@siteimprove/alfa-css/src/value/image/gradient/linear/position.js\");\nconst { map, either, pair, option, right } = alfa_parser_1.Parser;\n/**\n * @internal\n */\nclass Corner extends value_1.Value {\n    static of(vertical, horizontal) {\n        return new Corner(vertical, horizontal);\n    }\n    constructor(vertical, horizontal) {\n        super(\"corner\", false);\n        this._vertical = vertical;\n        this._horizontal = horizontal;\n    }\n    /** @public (knip) */\n    get vertical() {\n        return this._vertical;\n    }\n    /** @public (knip) */\n    get horizontal() {\n        return this._horizontal;\n    }\n    resolve() {\n        return this;\n    }\n    equals(value) {\n        return (value instanceof Corner &&\n            value._vertical === this._vertical &&\n            value._horizontal === this._horizontal);\n    }\n    hash(hash) {\n        hash.writeString(this._vertical).writeString(this._horizontal);\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            vertical: this._vertical,\n            horizontal: this._horizontal,\n        };\n    }\n    toString() {\n        return `to ${this._vertical} ${this._horizontal}`;\n    }\n}\nexports.Corner = Corner;\n/**\n * @internal\n */\n(function (Corner) {\n    const parseCorner = (side1, side2) => pair(side1, right(option(syntax_1.Token.parseWhitespace), side2));\n    /**\n     * {@link https://drafts.csswg.org/css-images/#typedef-side-or-corner}\n     *\n     * @internal\n     */\n    Corner.parse = right(syntax_1.Token.parseIdent(\"to\"), right(syntax_1.Token.parseWhitespace, either(map(parseCorner(position_1.Position.parseVertical, position_1.Position.parseHorizontal), ([vertical, horizontal]) => Corner.of(vertical, horizontal)), map(parseCorner(position_1.Position.parseHorizontal, position_1.Position.parseVertical), ([horizontal, vertical]) => Corner.of(vertical, horizontal)))));\n})(Corner || (exports.Corner = Corner = {}));\n//# sourceMappingURL=corner.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/image/gradient/linear/corner.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/image/gradient/linear/direction.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/image/gradient/linear/direction.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Direction = void 0;\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst numeric_1 = __webpack_require__(/*! ../../../numeric */ \"./node_modules/@siteimprove/alfa-css/src/value/numeric/index.js\");\nconst corner_1 = __webpack_require__(/*! ./corner */ \"./node_modules/@siteimprove/alfa-css/src/value/image/gradient/linear/corner.js\");\nconst side_1 = __webpack_require__(/*! ./side */ \"./node_modules/@siteimprove/alfa-css/src/value/image/gradient/linear/side.js\");\nconst { either } = alfa_parser_1.Parser;\n/**\n * @internal\n */\nvar Direction;\n(function (Direction) {\n    /**\n     * @internal\n     */\n    Direction.parse = either(numeric_1.Angle.parse, \n    // Corners must be parsed before sides as sides are also valid prefixes of\n    // corners.\n    corner_1.Corner.parse, side_1.Side.parse);\n})(Direction || (exports.Direction = Direction = {}));\n//# sourceMappingURL=direction.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/image/gradient/linear/direction.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/image/gradient/linear/index.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/image/gradient/linear/index.js ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./linear */ \"./node_modules/@siteimprove/alfa-css/src/value/image/gradient/linear/linear.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/image/gradient/linear/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/image/gradient/linear/linear.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/image/gradient/linear/linear.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Linear = void 0;\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst syntax_1 = __webpack_require__(/*! ../../../../syntax */ \"./node_modules/@siteimprove/alfa-css/src/syntax/index.js\");\nconst value_1 = __webpack_require__(/*! ../../../value */ \"./node_modules/@siteimprove/alfa-css/src/value/value.js\");\nconst item_1 = __webpack_require__(/*! ../item */ \"./node_modules/@siteimprove/alfa-css/src/value/image/gradient/item/index.js\");\nconst direction_1 = __webpack_require__(/*! ./direction */ \"./node_modules/@siteimprove/alfa-css/src/value/image/gradient/linear/direction.js\");\nconst side_1 = __webpack_require__(/*! ./side */ \"./node_modules/@siteimprove/alfa-css/src/value/image/gradient/linear/side.js\");\nconst { map, pair, option, left } = alfa_parser_1.Parser;\n/**\n * {@link https://drafts.csswg.org/css-images/#linear-gradients}\n *\n * @public\n */\nclass Linear extends value_1.Value {\n    static of(direction, items, repeats) {\n        return new Linear(direction, Array.from(items), repeats);\n    }\n    constructor(direction, items, repeats) {\n        super(\"gradient\", value_1.Value.hasCalculation(direction, ...items));\n        this._direction = direction;\n        this._items = items;\n        this._repeats = repeats;\n    }\n    get kind() {\n        return \"linear\";\n    }\n    get direction() {\n        return this._direction;\n    }\n    get items() {\n        return this._items;\n    }\n    get repeats() {\n        return this._repeats;\n    }\n    resolve(resolver) {\n        return new Linear(this._direction.resolve(), this._items.map(item_1.Item.resolve(resolver)), this._repeats);\n    }\n    partiallyResolve(resolver) {\n        return new Linear(this._direction.resolve(), Array.from(alfa_iterable_1.Iterable.map(this._items, (item) => item.partiallyResolve(resolver))), this._repeats);\n    }\n    equals(value) {\n        return (value instanceof Linear &&\n            value._direction.equals(this._direction) &&\n            value._items.length === this._items.length &&\n            value._items.every((item, i) => item.equals(this._items[i])) &&\n            value._repeats === this._repeats);\n    }\n    hash(hash) {\n        hash.writeHashable(this._direction);\n        for (const item of this._items) {\n            hash.writeHashable(item);\n        }\n        hash.writeUint32(this._items.length).writeBoolean(this._repeats);\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            kind: \"linear\",\n            direction: this._direction.toJSON(),\n            items: this._items.map((item) => item.toJSON()),\n            repeats: this._repeats,\n        };\n    }\n    toString() {\n        const args = [this._direction, ...this._items].join(\", \");\n        return `${this._repeats ? \"repeating-\" : \"\"}linear-gradient(${args})`;\n    }\n}\nexports.Linear = Linear;\n/**\n * @public\n */\n(function (Linear) {\n    /** @public (knip) */\n    function isLinear(value) {\n        return value instanceof Linear;\n    }\n    Linear.isLinear = isLinear;\n    /**\n     * {@link https://drafts.csswg.org/css-images/#funcdef-linear-gradient}\n     */\n    Linear.parse = map(syntax_1.Function.parse((fn) => fn.value === \"linear-gradient\" ||\n        fn.value === \"repeating-linear-gradient\", pair(option(left(direction_1.Direction.parse, syntax_1.Comma.parse)), item_1.Item.parseList)), ([fn, [direction, items]]) => {\n        return Linear.of(direction.getOrElse(() => side_1.Side.of(\"bottom\")), items, fn.name.startsWith(\"repeating\"));\n    });\n})(Linear || (exports.Linear = Linear = {}));\n//# sourceMappingURL=linear.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/image/gradient/linear/linear.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/image/gradient/linear/position.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/image/gradient/linear/position.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Position = void 0;\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst syntax_1 = __webpack_require__(/*! ../../../../syntax */ \"./node_modules/@siteimprove/alfa-css/src/syntax/index.js\");\nconst { map, either } = alfa_parser_1.Parser;\n/**\n * @internal\n */\nvar Position;\n(function (Position) {\n    Position.parseVertical = map(syntax_1.Token.parseIdent((ident) => ident.value === \"top\" || ident.value === \"bottom\"), (ident) => ident.value);\n    Position.parseHorizontal = map(syntax_1.Token.parseIdent((ident) => ident.value === \"left\" || ident.value === \"right\"), (ident) => ident.value);\n    Position.parse = either(Position.parseVertical, Position.parseHorizontal);\n})(Position || (exports.Position = Position = {}));\n//# sourceMappingURL=position.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/image/gradient/linear/position.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/image/gradient/linear/side.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/image/gradient/linear/side.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Side = void 0;\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst syntax_1 = __webpack_require__(/*! ../../../../syntax */ \"./node_modules/@siteimprove/alfa-css/src/syntax/index.js\");\nconst value_1 = __webpack_require__(/*! ../../../value */ \"./node_modules/@siteimprove/alfa-css/src/value/value.js\");\nconst position_1 = __webpack_require__(/*! ./position */ \"./node_modules/@siteimprove/alfa-css/src/value/image/gradient/linear/position.js\");\nconst { map, option, right } = alfa_parser_1.Parser;\n/**\n * @internal\n */\nclass Side extends value_1.Value {\n    static of(side) {\n        return new Side(side);\n    }\n    constructor(side) {\n        super(\"side\", false);\n        this._side = side;\n    }\n    /** @public (knip) */\n    get side() {\n        return this._side;\n    }\n    resolve() {\n        return this;\n    }\n    equals(value) {\n        return value instanceof Side && value._side === this._side;\n    }\n    hash(hash) {\n        hash.writeString(this._side);\n    }\n    toJSON() {\n        return { ...super.toJSON(), side: this._side };\n    }\n    toString() {\n        return `to ${this._side}`;\n    }\n}\nexports.Side = Side;\n/**\n * @internal\n */\n(function (Side) {\n    /**\n     * {@link https://drafts.csswg.org/css-images/#typedef-side-or-corner}\n     *\n     * @internal\n     */\n    Side.parse = map(right(syntax_1.Token.parseIdent(\"to\"), right(option(syntax_1.Token.parseWhitespace), position_1.Position.parse)), (side) => Side.of(side));\n})(Side || (exports.Side = Side = {}));\n//# sourceMappingURL=side.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/image/gradient/linear/side.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/image/gradient/radial/circle.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/image/gradient/radial/circle.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Circle = void 0;\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst syntax_1 = __webpack_require__(/*! ../../../../syntax */ \"./node_modules/@siteimprove/alfa-css/src/syntax/index.js\");\nconst keyword_1 = __webpack_require__(/*! ../../../keyword */ \"./node_modules/@siteimprove/alfa-css/src/value/keyword.js\");\nconst numeric_1 = __webpack_require__(/*! ../../../numeric */ \"./node_modules/@siteimprove/alfa-css/src/value/numeric/index.js\");\nconst value_1 = __webpack_require__(/*! ../../../value */ \"./node_modules/@siteimprove/alfa-css/src/value/value.js\");\n/**\n * {@link https://drafts.csswg.org/css-images/#valdef-ending-shape-circle}\n *\n * @internal\n */\nclass Circle extends value_1.Value {\n    static of(radius) {\n        return new Circle(radius);\n    }\n    constructor(radius) {\n        super(\"circle\", value_1.Value.hasCalculation(radius));\n        this._radius = radius;\n    }\n    /** @public (knip) */\n    get radius() {\n        return this._radius;\n    }\n    resolve(resolver) {\n        return new Circle(this._radius.resolve(resolver));\n    }\n    equals(value) {\n        return value instanceof Circle && value._radius.equals(this._radius);\n    }\n    hash(hash) {\n        hash.writeHashable(this._radius);\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            radius: this._radius.toJSON(),\n        };\n    }\n    toString() {\n        return `circle ${this._radius}`;\n    }\n}\nexports.Circle = Circle;\n/**\n * @internal\n */\n(function (Circle) {\n    const parseShape = keyword_1.Keyword.parse(\"circle\");\n    const parseRadius = numeric_1.Length.parse;\n    Circle.parse = (input) => {\n        let shape;\n        let radius;\n        while (true) {\n            for ([input] of syntax_1.Token.parseWhitespace(input)) {\n            }\n            if (shape === undefined) {\n                const result = parseShape(input);\n                if (result.isOk()) {\n                    [input, shape] = result.get();\n                    continue;\n                }\n            }\n            if (radius === undefined) {\n                const result = parseRadius(input);\n                if (result.isOk()) {\n                    [input, radius] = result.get();\n                    continue;\n                }\n            }\n            break;\n        }\n        if (radius === undefined) {\n            return alfa_result_1.Err.of(`Expected circle radius`);\n        }\n        return alfa_result_1.Result.of([input, Circle.of(radius)]);\n    };\n})(Circle || (exports.Circle = Circle = {}));\n//# sourceMappingURL=circle.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/image/gradient/radial/circle.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/image/gradient/radial/ellipse.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/image/gradient/radial/ellipse.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Ellipse = void 0;\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst syntax_1 = __webpack_require__(/*! ../../../../syntax */ \"./node_modules/@siteimprove/alfa-css/src/syntax/index.js\");\nconst keyword_1 = __webpack_require__(/*! ../../../keyword */ \"./node_modules/@siteimprove/alfa-css/src/value/keyword.js\");\nconst numeric_1 = __webpack_require__(/*! ../../../numeric */ \"./node_modules/@siteimprove/alfa-css/src/value/numeric/index.js\");\nconst value_1 = __webpack_require__(/*! ../../../value */ \"./node_modules/@siteimprove/alfa-css/src/value/value.js\");\nconst { option, separatedList } = alfa_parser_1.Parser;\n/**\n * {@link https://drafts.csswg.org/css-images/#valdef-ending-shape-ellipse}\n *\n * @internal\n */\nclass Ellipse extends value_1.Value {\n    static of(horizontal, vertical) {\n        return new Ellipse(horizontal, vertical);\n    }\n    constructor(horizontal, vertical) {\n        super(\"ellipse\", value_1.Value.hasCalculation(horizontal, vertical));\n        this._horizontal = horizontal;\n        this._vertical = vertical;\n    }\n    /** @public (knip) */\n    get horizontal() {\n        return this._horizontal;\n    }\n    /** @public (knip) */\n    get vertical() {\n        return this._vertical;\n    }\n    resolve(resolver) {\n        return new Ellipse(numeric_1.LengthPercentage.resolve(resolver)(this._horizontal), numeric_1.LengthPercentage.resolve(resolver)(this._vertical));\n    }\n    partiallyResolve(resolver) {\n        return new Ellipse(numeric_1.LengthPercentage.partiallyResolve(resolver)(this._horizontal), numeric_1.LengthPercentage.partiallyResolve(resolver)(this._vertical));\n    }\n    equals(value) {\n        return (value instanceof Ellipse &&\n            value._horizontal.equals(this._horizontal) &&\n            value._vertical.equals(this._vertical));\n    }\n    hash(hash) {\n        hash.writeHashable(this._horizontal).writeHashable(this._vertical);\n    }\n    toJSON() {\n        return {\n            type: \"ellipse\",\n            horizontal: this._horizontal.toJSON(),\n            vertical: this._vertical.toJSON(),\n        };\n    }\n    toString() {\n        return `ellipse ${this._horizontal} ${this._vertical}`;\n    }\n}\nexports.Ellipse = Ellipse;\n/**\n * @internal\n */\n(function (Ellipse) {\n    function isEllipse(value) {\n        return value instanceof Ellipse;\n    }\n    Ellipse.isEllipse = isEllipse;\n    const parseShape = keyword_1.Keyword.parse(\"ellipse\");\n    const parseSize = separatedList(numeric_1.LengthPercentage.parse, option(syntax_1.Token.parseWhitespace), 2, 2);\n    Ellipse.parse = (input) => {\n        let shape;\n        let horizontal;\n        let vertical;\n        while (true) {\n            for ([input] of syntax_1.Token.parseWhitespace(input)) {\n            }\n            if (shape === undefined) {\n                const result = parseShape(input);\n                if (result.isOk()) {\n                    [input, shape] = result.get();\n                    continue;\n                }\n            }\n            if (horizontal === undefined || vertical === undefined) {\n                const result = parseSize(input);\n                if (result.isOk()) {\n                    [input, [horizontal, vertical]] = result.get();\n                    continue;\n                }\n            }\n            break;\n        }\n        if (horizontal === undefined || vertical === undefined) {\n            return alfa_result_1.Err.of(`Expected ellipse size`);\n        }\n        return alfa_result_1.Result.of([input, Ellipse.of(horizontal, vertical)]);\n    };\n})(Ellipse || (exports.Ellipse = Ellipse = {}));\n//# sourceMappingURL=ellipse.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/image/gradient/radial/ellipse.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/image/gradient/radial/extent.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/image/gradient/radial/extent.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Extent = void 0;\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst syntax_1 = __webpack_require__(/*! ../../../../syntax */ \"./node_modules/@siteimprove/alfa-css/src/syntax/index.js\");\nconst keyword_1 = __webpack_require__(/*! ../../../keyword */ \"./node_modules/@siteimprove/alfa-css/src/value/keyword.js\");\nconst value_1 = __webpack_require__(/*! ../../../value */ \"./node_modules/@siteimprove/alfa-css/src/value/value.js\");\nconst { map } = alfa_parser_1.Parser;\n/**\n * @internal\n */\nclass Extent extends value_1.Value {\n    static of(shape = Extent.Shape.Circle, size = Extent.Size.FarthestCorner) {\n        return new Extent(shape, size);\n    }\n    constructor(shape, size) {\n        super(\"extent\", false);\n        this._shape = shape;\n        this._size = size;\n    }\n    /** @public (knip) */\n    get shape() {\n        return this._shape;\n    }\n    /** @public (knip) */\n    get size() {\n        return this._size;\n    }\n    resolve() {\n        return this;\n    }\n    equals(value) {\n        return (value instanceof Extent &&\n            value._shape === this._shape &&\n            value._size === this._size);\n    }\n    hash(hash) {\n        hash.writeString(this._shape).writeString(this._size);\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            shape: this._shape,\n            size: this._size,\n        };\n    }\n    toString() {\n        return `${this._shape} ${this._size}`;\n    }\n}\nexports.Extent = Extent;\n/**\n * @internal\n */\n(function (Extent) {\n    let Shape;\n    (function (Shape) {\n        Shape[\"Circle\"] = \"circle\";\n        Shape[\"Ellipse\"] = \"ellipse\";\n    })(Shape = Extent.Shape || (Extent.Shape = {}));\n    let Size;\n    (function (Size) {\n        Size[\"ClosestSide\"] = \"closest-side\";\n        Size[\"FarthestSide\"] = \"farthest-side\";\n        Size[\"ClosestCorner\"] = \"closest-corner\";\n        Size[\"FarthestCorner\"] = \"farthest-corner\";\n    })(Size = Extent.Size || (Extent.Size = {}));\n    const parseShape = map(keyword_1.Keyword.parse(\"circle\", \"ellipse\"), (keyword) => keyword.value);\n    const parseSize = map(keyword_1.Keyword.parse(\"closest-side\", \"farthest-side\", \"closest-corner\", \"farthest-corner\"), (keyword) => keyword.value);\n    Extent.parse = (input) => {\n        let shape;\n        let size;\n        while (true) {\n            for ([input] of syntax_1.Token.parseWhitespace(input)) {\n            }\n            if (shape === undefined) {\n                const result = parseShape(input);\n                if (result.isOk()) {\n                    [input, shape] = result.get();\n                    continue;\n                }\n            }\n            if (size === undefined) {\n                const result = parseSize(input);\n                if (result.isOk()) {\n                    [input, size] = result.get();\n                    continue;\n                }\n            }\n            break;\n        }\n        if (shape === undefined && size === undefined) {\n            return alfa_result_1.Err.of(`Expected either an extent shape or size`);\n        }\n        return alfa_result_1.Result.of([input, Extent.of(shape, size)]);\n    };\n})(Extent || (exports.Extent = Extent = {}));\n//# sourceMappingURL=extent.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/image/gradient/radial/extent.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/image/gradient/radial/index.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/image/gradient/radial/index.js ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./radial */ \"./node_modules/@siteimprove/alfa-css/src/value/image/gradient/radial/radial.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/image/gradient/radial/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/image/gradient/radial/radial.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/image/gradient/radial/radial.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Radial = void 0;\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst syntax_1 = __webpack_require__(/*! ../../../../syntax */ \"./node_modules/@siteimprove/alfa-css/src/syntax/index.js\");\nconst keyword_1 = __webpack_require__(/*! ../../../keyword */ \"./node_modules/@siteimprove/alfa-css/src/value/keyword.js\");\nconst position_1 = __webpack_require__(/*! ../../../position */ \"./node_modules/@siteimprove/alfa-css/src/value/position/index.js\");\nconst value_1 = __webpack_require__(/*! ../../../value */ \"./node_modules/@siteimprove/alfa-css/src/value/value.js\");\nconst item_1 = __webpack_require__(/*! ../item */ \"./node_modules/@siteimprove/alfa-css/src/value/image/gradient/item/index.js\");\nconst extent_1 = __webpack_require__(/*! ./extent */ \"./node_modules/@siteimprove/alfa-css/src/value/image/gradient/radial/extent.js\");\nconst shape_1 = __webpack_require__(/*! ./shape */ \"./node_modules/@siteimprove/alfa-css/src/value/image/gradient/radial/shape.js\");\nconst { map, either, pair, option, left, right, delimited } = alfa_parser_1.Parser;\n/**\n * {@link https://drafts.csswg.org/css-images/#radial-gradients}\n *\n * @public\n */\nclass Radial extends value_1.Value {\n    static of(shape, position, items, repeats) {\n        return new Radial(shape, position, Array.from(items), repeats);\n    }\n    constructor(shape, position, items, repeats) {\n        super(\"gradient\", value_1.Value.hasCalculation(shape, position, ...items));\n        this._shape = shape;\n        this._position = position;\n        this._items = items;\n        this._repeats = repeats;\n    }\n    get kind() {\n        return \"radial\";\n    }\n    get shape() {\n        return this._shape;\n    }\n    get position() {\n        return this._position;\n    }\n    get items() {\n        return this._items;\n    }\n    get repeats() {\n        return this._repeats;\n    }\n    resolve(resolver) {\n        return new Radial(this._shape.resolve(resolver), this._position.resolve(resolver), this._items.map(item_1.Item.resolve(resolver)), this._repeats);\n    }\n    partiallyResolve(resolver) {\n        return new Radial(shape_1.Shape.partiallyResolve(resolver)(this._shape), this._position.partiallyResolve(resolver), Array.from(alfa_iterable_1.Iterable.map(this._items, (item) => item.partiallyResolve(resolver))), this._repeats);\n    }\n    equals(value) {\n        return (value instanceof Radial &&\n            value._shape.equals(this._shape) &&\n            value._position.equals(this._position) &&\n            value._items.length === this._items.length &&\n            value._items.every((item, i) => item.equals(this._items[i])) &&\n            value._repeats === this._repeats);\n    }\n    hash(hash) {\n        hash.writeHashable(this._shape).writeHashable(this._position);\n        for (const item of this._items) {\n            hash.writeHashable(item);\n        }\n        hash.writeUint32(this._items.length).writeBoolean(this._repeats);\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            kind: \"radial\",\n            shape: this._shape.toJSON(),\n            position: this._position.toJSON(),\n            items: this._items.map((item) => item.toJSON()),\n            repeats: this._repeats,\n        };\n    }\n    toString() {\n        const args = [`${this._shape} at ${this._position}`, ...this._items].join(\", \");\n        return `${this._repeats ? \"repeating-\" : \"\"}radial-gradient(${args})`;\n    }\n}\nexports.Radial = Radial;\n/**\n * @public\n */\n(function (Radial) {\n    /** @public (knip) */\n    function isRadial(value) {\n        return value instanceof Radial;\n    }\n    Radial.isRadial = isRadial;\n    const parsePosition = right(delimited(option(syntax_1.Token.parseWhitespace), keyword_1.Keyword.parse(\"at\")), position_1.Position.parse(false /* legacySyntax */));\n    /**\n     * {@link https://drafts.csswg.org/css-images/#funcdef-radial-gradient}\n     */\n    Radial.parse = map(syntax_1.Function.parse((fn) => fn.value === \"radial-gradient\" ||\n        fn.value === \"repeating-radial-gradient\", pair(option(left(either(pair(map(shape_1.Shape.parse, (shape) => alfa_option_1.Option.of(shape)), option(delimited(option(syntax_1.Token.parseWhitespace), parsePosition))), map(parsePosition, (position) => [alfa_option_1.None, alfa_option_1.Option.of(position)])), syntax_1.Comma.parse)), item_1.Item.parseList)), (result) => {\n        const [fn, [shapeAndPosition, items]] = result;\n        const shape = shapeAndPosition\n            .flatMap(([shape]) => shape)\n            .getOrElse(() => extent_1.Extent.of());\n        const position = shapeAndPosition\n            .flatMap(([, position]) => position)\n            .getOrElse(() => position_1.Position.of(keyword_1.Keyword.of(\"center\"), keyword_1.Keyword.of(\"center\")));\n        return Radial.of(shape, position, items, fn.name.startsWith(\"repeating\"));\n    });\n})(Radial || (exports.Radial = Radial = {}));\n//# sourceMappingURL=radial.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/image/gradient/radial/radial.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/image/gradient/radial/shape.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/image/gradient/radial/shape.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Shape = void 0;\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst alfa_selective_1 = __webpack_require__(/*! @siteimprove/alfa-selective */ \"./node_modules/@siteimprove/alfa-selective/src/index.js\");\nconst circle_1 = __webpack_require__(/*! ./circle */ \"./node_modules/@siteimprove/alfa-css/src/value/image/gradient/radial/circle.js\");\nconst ellipse_1 = __webpack_require__(/*! ./ellipse */ \"./node_modules/@siteimprove/alfa-css/src/value/image/gradient/radial/ellipse.js\");\nconst extent_1 = __webpack_require__(/*! ./extent */ \"./node_modules/@siteimprove/alfa-css/src/value/image/gradient/radial/extent.js\");\nconst { either } = alfa_parser_1.Parser;\n/**\n * Radial gradient shapes\n *\n * @remarks\n * The syntax inside a radial-gradient() function is significantly different\n * from the basic shape functions circle() and ellipse(), so we cannot easily\n * reuse the code.\n *\n * @internal\n */\nvar Shape;\n(function (Shape) {\n    function partiallyResolve(resolver) {\n        return (value) => alfa_selective_1.Selective.of(value)\n            .if(ellipse_1.Ellipse.isEllipse, (ellipse) => ellipse.partiallyResolve(resolver))\n            .else((value) => value.resolve(resolver))\n            .get();\n    }\n    Shape.partiallyResolve = partiallyResolve;\n    Shape.parse = either(ellipse_1.Ellipse.parse, circle_1.Circle.parse, extent_1.Extent.parse);\n})(Shape || (exports.Shape = Shape = {}));\n//# sourceMappingURL=shape.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/image/gradient/radial/shape.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/image/image.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/image/image.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Image = void 0;\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst alfa_selective_1 = __webpack_require__(/*! @siteimprove/alfa-selective */ \"./node_modules/@siteimprove/alfa-selective/src/index.js\");\nconst value_1 = __webpack_require__(/*! ../value */ \"./node_modules/@siteimprove/alfa-css/src/value/value.js\");\nconst url_1 = __webpack_require__(/*! ./url */ \"./node_modules/@siteimprove/alfa-css/src/value/image/url.js\");\nconst gradient_1 = __webpack_require__(/*! ./gradient */ \"./node_modules/@siteimprove/alfa-css/src/value/image/gradient/index.js\");\nconst { map, either } = alfa_parser_1.Parser;\n/**\n * {@link https://drafts.csswg.org/css-values/#images}\n *\n * @public\n */\nclass Image extends value_1.Value {\n    static of(image) {\n        return new Image(image);\n    }\n    constructor(image) {\n        super(\"image\", value_1.Value.hasCalculation(image));\n        this._image = image;\n    }\n    get image() {\n        return this._image;\n    }\n    resolve(resolver) {\n        return new Image(this._image.resolve(resolver));\n    }\n    partiallyResolve(resolver) {\n        return Image.of(alfa_selective_1.Selective.of(this._image)\n            .if(url_1.URL.isURL, (url) => url.resolve())\n            .else((gradient) => gradient.partiallyResolve(resolver))\n            .get());\n    }\n    equals(value) {\n        return value instanceof Image && value._image.equals(this._image);\n    }\n    hash(hash) {\n        hash.writeHashable(this._image);\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            image: this._image.toJSON(),\n        };\n    }\n    toString() {\n        return `${this._image}`;\n    }\n}\nexports.Image = Image;\n/**\n * @public\n */\n(function (Image) {\n    function isImage(value) {\n        return value instanceof Image;\n    }\n    Image.isImage = isImage;\n    /**\n     * {@link https://drafts.csswg.org/css-images/#typedef-image}\n     */\n    Image.parse = map(either(url_1.URL.parse, gradient_1.Gradient.parse), Image.of);\n})(Image || (exports.Image = Image = {}));\n//# sourceMappingURL=image.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/image/image.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/image/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/image/index.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./gradient */ \"./node_modules/@siteimprove/alfa-css/src/value/image/gradient/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./image */ \"./node_modules/@siteimprove/alfa-css/src/value/image/image.js\"), exports);\n__exportStar(__webpack_require__(/*! ./url */ \"./node_modules/@siteimprove/alfa-css/src/value/image/url.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/image/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/image/url.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/image/url.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.URL = void 0;\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst syntax_1 = __webpack_require__(/*! ../../syntax */ \"./node_modules/@siteimprove/alfa-css/src/syntax/index.js\");\nconst value_1 = __webpack_require__(/*! ../value */ \"./node_modules/@siteimprove/alfa-css/src/value/value.js\");\nconst { map, either } = alfa_parser_1.Parser;\n/**\n * {@link https://drafts.csswg.org/css-values/#urls}\n *\n * @public\n */\nclass URL extends value_1.Value {\n    static of(url) {\n        return new URL(url);\n    }\n    constructor(url) {\n        super(\"url\", false);\n        this._url = url;\n    }\n    get url() {\n        return this._url;\n    }\n    resolve() {\n        return this;\n    }\n    equals(value) {\n        return value instanceof URL && value._url === this._url;\n    }\n    hash(hash) {\n        hash.writeString(this._url);\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            url: this._url,\n        };\n    }\n    toString() {\n        return `url(${this._url})`;\n    }\n}\nexports.URL = URL;\n/**\n * @public\n */\n(function (URL) {\n    function isURL(value) {\n        return value instanceof URL;\n    }\n    URL.isURL = isURL;\n    /**\n     * {@link https://drafts.csswg.org/css-values/#url-value}\n     */\n    URL.parse = map(either(syntax_1.Token.parseURL(), map(syntax_1.Function.parse(\"url\", syntax_1.Token.parseString()), ([_, url]) => url)), (url) => URL.of(url.value));\n})(URL || (exports.URL = URL = {}));\n//# sourceMappingURL=url.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/image/url.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/index.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./box */ \"./node_modules/@siteimprove/alfa-css/src/value/box.js\"), exports);\n__exportStar(__webpack_require__(/*! ./collection */ \"./node_modules/@siteimprove/alfa-css/src/value/collection/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./color */ \"./node_modules/@siteimprove/alfa-css/src/value/color/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./image */ \"./node_modules/@siteimprove/alfa-css/src/value/image/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./keyword */ \"./node_modules/@siteimprove/alfa-css/src/value/keyword.js\"), exports);\n__exportStar(__webpack_require__(/*! ./numeric */ \"./node_modules/@siteimprove/alfa-css/src/value/numeric/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./position */ \"./node_modules/@siteimprove/alfa-css/src/value/position/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./resolvable */ \"./node_modules/@siteimprove/alfa-css/src/value/resolvable.js\"), exports);\n__exportStar(__webpack_require__(/*! ./shadow */ \"./node_modules/@siteimprove/alfa-css/src/value/shadow.js\"), exports);\n__exportStar(__webpack_require__(/*! ./shape */ \"./node_modules/@siteimprove/alfa-css/src/value/shape/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./string */ \"./node_modules/@siteimprove/alfa-css/src/value/string.js\"), exports);\n__exportStar(__webpack_require__(/*! ./transform */ \"./node_modules/@siteimprove/alfa-css/src/value/transform/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./value */ \"./node_modules/@siteimprove/alfa-css/src/value/value.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/keyword.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/keyword.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Keyword = void 0;\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst syntax_1 = __webpack_require__(/*! ../syntax */ \"./node_modules/@siteimprove/alfa-css/src/syntax/index.js\");\nconst value_1 = __webpack_require__(/*! ./value */ \"./node_modules/@siteimprove/alfa-css/src/value/value.js\");\nconst { map } = alfa_parser_1.Parser;\nconst { equals } = alfa_predicate_1.Predicate;\n/**\n * {@link https://drafts.csswg.org/css-values/#keywords}\n *\n * @public\n */\nclass Keyword extends value_1.Value {\n    static of(value) {\n        return new Keyword(value);\n    }\n    constructor(value) {\n        super(\"keyword\", false);\n        this._value = value;\n    }\n    get value() {\n        return this._value;\n    }\n    resolve() {\n        return this;\n    }\n    equals(value) {\n        return value instanceof Keyword && value._value === this._value;\n    }\n    hash(hash) {\n        hash.writeString(this._value);\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            value: this._value,\n        };\n    }\n    toString() {\n        return this._value;\n    }\n}\nexports.Keyword = Keyword;\n/**\n * @public\n */\n(function (Keyword) {\n    function isKeyword(value) {\n        return value instanceof Keyword;\n    }\n    Keyword.isKeyword = isKeyword;\n    function parse(...keywords) {\n        return map(syntax_1.Token.parseIdent((ident) => keywords.some(equals(ident.value.toLowerCase()))), (ident) => \n        // Make sure each possible keyword is separated into its own type. For\n        // example, we want `parse(\"foo\", \"bar\")` to result in the type\n        // `Keyword<\"foo\"> | Keyword<\"bar\">`, not `Keyword<\"foo\" | \"bar\">`. Why?\n        // Because the former is assignable to the latter, but the latter isn't\n        // assignable to the former.\n        Keyword.of(ident.value.toLowerCase()));\n    }\n    Keyword.parse = parse;\n})(Keyword || (exports.Keyword = Keyword = {}));\n//# sourceMappingURL=keyword.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/keyword.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/numeric/angle-percentage.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/numeric/angle-percentage.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AnglePercentage = void 0;\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst calculation_1 = __webpack_require__(/*! ../../calculation */ \"./node_modules/@siteimprove/alfa-css/src/calculation/index.js\");\nconst Base = __webpack_require__(/*! ../../calculation/numeric */ \"./node_modules/@siteimprove/alfa-css/src/calculation/numeric/index.js\");\nconst dimension_1 = __webpack_require__(/*! ./dimension */ \"./node_modules/@siteimprove/alfa-css/src/value/numeric/dimension.js\");\nconst angle_1 = __webpack_require__(/*! ./angle */ \"./node_modules/@siteimprove/alfa-css/src/value/numeric/angle.js\");\nconst percentage_1 = __webpack_require__(/*! ./percentage */ \"./node_modules/@siteimprove/alfa-css/src/value/numeric/percentage.js\");\nconst { either, map } = alfa_parser_1.Parser;\n/**\n * @public\n */\nvar AnglePercentage;\n(function (AnglePercentage) {\n    /**\n     * Angle-percentages that are the result of a calculation.\n     */\n    class Calculated extends dimension_1.Dimension.Calculated {\n        static of(value) {\n            return new Calculated(value);\n        }\n        constructor(math) {\n            super(math, \"angle-percentage\");\n        }\n        hasCalculation() {\n            return true;\n        }\n        resolve() {\n            return angle_1.Angle.Fixed.of(this._math\n                // The math expression resolver is only aware of BasePercentage and\n                // thus work with it, but we want to abstract it from further layers,\n                // so the resolver here is only aware of Percentage, and we need to\n                // translate back and forth.\n                .resolve({\n                // 100% is always 1 full turn!\n                percentage: (value) => Base.Angle.of(360, \"deg\").scale(value.value),\n            })\n                // Since the expression has been correctly typed, it should always resolve.\n                .getUnsafe(`Could not resolve ${this._math} as an angle`));\n        }\n        equals(value) {\n            return value instanceof Calculated && super.equals(value);\n        }\n    }\n    AnglePercentage.Calculated = Calculated;\n    /**\n     * Fully resolves an angle-percentage, when a full resolver is provided.\n     */\n    function resolve(value) {\n        return percentage_1.Percentage.isPercentage(value)\n            ? value.resolve({ percentageBase: angle_1.Angle.of(360, \"deg\") })\n            : value.resolve();\n    }\n    AnglePercentage.resolve = resolve;\n    function isAnglePercentage(value) {\n        return (value instanceof Calculated ||\n            angle_1.Angle.isAngle(value) ||\n            percentage_1.Percentage.isPercentage(value));\n    }\n    AnglePercentage.isAnglePercentage = isAnglePercentage;\n    function isCalculated(value) {\n        return (value instanceof Calculated ||\n            angle_1.Angle.isCalculated(value) ||\n            percentage_1.Percentage.isCalculated(value));\n    }\n    AnglePercentage.isCalculated = isCalculated;\n    function isFixed(value) {\n        return value instanceof angle_1.Angle.Fixed;\n    }\n    AnglePercentage.isFixed = isFixed;\n    function isPercentage(value) {\n        return value instanceof percentage_1.Percentage.Fixed;\n    }\n    AnglePercentage.isPercentage = isPercentage;\n    function of(value, unit) {\n        if (typeof value === \"number\") {\n            if (unit === undefined) {\n                return percentage_1.Percentage.of(value);\n            }\n            else {\n                return angle_1.Angle.of(value, unit);\n            }\n        }\n        if (Base.Angle.isAngle(value)) {\n            return angle_1.Angle.of(value.value, value.unit);\n        }\n        if (Base.Percentage.isPercentage(value)) {\n            return percentage_1.Percentage.of(value.value);\n        }\n        // value must be a math expression\n        if (value.isPercentage()) {\n            return percentage_1.Percentage.of(value);\n        }\n        if (value.isDimension(\"angle\")) {\n            return angle_1.Angle.of(value);\n        }\n        return Calculated.of(value);\n    }\n    AnglePercentage.of = of;\n    /**\n     * {@link https://drafts.csswg.org/css-values/#angles}\n     */\n    AnglePercentage.parse = either(angle_1.Angle.parse, (percentage_1.Percentage.parse), map(calculation_1.Math.parseAnglePercentage, of));\n})(AnglePercentage || (exports.AnglePercentage = AnglePercentage = {}));\n//# sourceMappingURL=angle-percentage.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/numeric/angle-percentage.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/numeric/angle.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/numeric/angle.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Angle = void 0;\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst calculation_1 = __webpack_require__(/*! ../../calculation */ \"./node_modules/@siteimprove/alfa-css/src/calculation/index.js\");\nconst numeric_1 = __webpack_require__(/*! ../../calculation/numeric */ \"./node_modules/@siteimprove/alfa-css/src/calculation/numeric/index.js\");\nconst unit_1 = __webpack_require__(/*! ../../unit */ \"./node_modules/@siteimprove/alfa-css/src/unit/index.js\");\nconst dimension_1 = __webpack_require__(/*! ./dimension */ \"./node_modules/@siteimprove/alfa-css/src/value/numeric/dimension.js\");\nconst { either, map } = alfa_parser_1.Parser;\n/**\n * {@link https://drafts.csswg.org/css-values/#numbers}\n *\n * @public\n */\nvar Angle;\n(function (Angle) {\n    /**\n     * Angles that are the result of a calculation.\n     */\n    class Calculated extends dimension_1.Dimension.Calculated {\n        static of(value) {\n            return new Calculated(value);\n        }\n        constructor(value) {\n            super(value, \"angle\");\n        }\n        hasCalculation() {\n            return true;\n        }\n        resolve() {\n            return Fixed.of(this._math\n                .resolve()\n                // Since the expression has been correctly typed, it should always resolve.\n                .getUnsafe(`Could not resolve ${this._math} as an angle`));\n        }\n        equals(value) {\n            return value instanceof Calculated && super.equals(value);\n        }\n    }\n    Angle.Calculated = Calculated;\n    /**\n     * Angles that are a fixed (not calculated) value.\n     */\n    class Fixed extends dimension_1.Dimension.Fixed {\n        static of(value, unit) {\n            if (typeof value === \"number\") {\n                // The overloads ensure that unit is not undefined\n                return new Fixed(value, unit);\n            }\n            return new Fixed(value.value, value.unit);\n        }\n        constructor(value, unit) {\n            super(value, unit, \"angle\");\n        }\n        hasCalculation() {\n            return false;\n        }\n        hasUnit(unit) {\n            return this._unit === unit;\n        }\n        withUnit(unit) {\n            if (this.hasUnit(unit)) {\n                return this;\n            }\n            return Fixed.of(unit_1.Converter.angle(this._value, this._unit, unit), unit);\n        }\n        scale(factor) {\n            return new Fixed(this._value * factor, this._unit);\n        }\n        resolve() {\n            return this.withUnit(\"deg\");\n        }\n        equals(value) {\n            return value instanceof Fixed && super.equals(value);\n        }\n    }\n    Angle.Fixed = Fixed;\n    function isCalculated(value) {\n        return value instanceof Calculated;\n    }\n    Angle.isCalculated = isCalculated;\n    function isFixed(value) {\n        return value instanceof Fixed;\n    }\n    Angle.isFixed = isFixed;\n    function isAngle(value) {\n        return value instanceof Calculated || value instanceof Fixed;\n    }\n    Angle.isAngle = isAngle;\n    function of(value, unit) {\n        if (typeof value === \"number\") {\n            // The overloads ensure that unit is not undefined\n            return Fixed.of(value, unit);\n        }\n        if (numeric_1.Angle.isAngle(value)) {\n            return Fixed.of(value.value, value.unit);\n        }\n        return Calculated.of(value);\n    }\n    Angle.of = of;\n    /**\n     * {@link https://drafts.csswg.org/css-values/#number-value}\n     */\n    Angle.parse = either(map(numeric_1.Angle.parse, of), map(calculation_1.Math.parseAngle, of));\n})(Angle || (exports.Angle = Angle = {}));\n//# sourceMappingURL=angle.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/numeric/angle.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/numeric/dimension.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/numeric/dimension.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Dimension = void 0;\nconst alfa_comparable_1 = __webpack_require__(/*! @siteimprove/alfa-comparable */ \"./node_modules/@siteimprove/alfa-comparable/src/index.js\");\nconst numeric_1 = __webpack_require__(/*! ./numeric */ \"./node_modules/@siteimprove/alfa-css/src/value/numeric/numeric.js\");\n/**\n * @public\n */\nvar Dimension;\n(function (Dimension) {\n    /**\n     * Dimensions that are the result of a calculation.\n     */\n    class Calculated extends numeric_1.Numeric.Calculated {\n        constructor(math, type) {\n            super(math, type);\n        }\n        hasCalculation() {\n            return true;\n        }\n        equals(value) {\n            return value instanceof Calculated && super.equals(value);\n        }\n    }\n    Dimension.Calculated = Calculated;\n    /**\n     * Dimensions that are a fixed (not calculated) value.\n     */\n    class Fixed extends numeric_1.Numeric.Fixed {\n        constructor(value, unit, type) {\n            super(value, type);\n            this._unit = unit;\n        }\n        get unit() {\n            return this._unit;\n        }\n        hasCalculation() {\n            return false;\n        }\n        /**\n         * {@link https://drafts.csswg.org/css-values/#canonical-unit}\n         */\n        get canonicalUnit() {\n            // The this.type test does not correctly narrow T, so we need to force typing.\n            return (this.type === \"angle\" ? \"deg\" : \"px\");\n        }\n        equals(value) {\n            return (value instanceof Fixed &&\n                super.equals(value) &&\n                value._unit === this._unit);\n        }\n        compare(value) {\n            const a = this.withUnit(this.canonicalUnit);\n            const b = value.withUnit(value.canonicalUnit);\n            return alfa_comparable_1.Comparable.compareNumber(a.value, b.value);\n        }\n        hash(hash) {\n            super.hash(hash);\n            hash.writeString(this._unit);\n        }\n        toJSON() {\n            return { ...super.toJSON(), unit: this._unit };\n        }\n        toString() {\n            return `${this._value}${this._unit}`;\n        }\n    }\n    Dimension.Fixed = Fixed;\n    function isCalculated(value) {\n        return value instanceof Calculated;\n    }\n    Dimension.isCalculated = isCalculated;\n    function isFixed(value) {\n        return value instanceof Fixed;\n    }\n    Dimension.isFixed = isFixed;\n    function isDimension(value) {\n        return value instanceof Calculated || value instanceof Fixed;\n    }\n    Dimension.isDimension = isDimension;\n})(Dimension || (exports.Dimension = Dimension = {}));\n//# sourceMappingURL=dimension.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/numeric/dimension.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/numeric/index.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/numeric/index.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./angle */ \"./node_modules/@siteimprove/alfa-css/src/value/numeric/angle.js\"), exports);\n__exportStar(__webpack_require__(/*! ./angle-percentage */ \"./node_modules/@siteimprove/alfa-css/src/value/numeric/angle-percentage.js\"), exports);\n__exportStar(__webpack_require__(/*! ./dimension */ \"./node_modules/@siteimprove/alfa-css/src/value/numeric/dimension.js\"), exports);\n__exportStar(__webpack_require__(/*! ./integer */ \"./node_modules/@siteimprove/alfa-css/src/value/numeric/integer.js\"), exports);\n__exportStar(__webpack_require__(/*! ./length */ \"./node_modules/@siteimprove/alfa-css/src/value/numeric/length.js\"), exports);\n__exportStar(__webpack_require__(/*! ./length-percentage */ \"./node_modules/@siteimprove/alfa-css/src/value/numeric/length-percentage.js\"), exports);\n__exportStar(__webpack_require__(/*! ./number */ \"./node_modules/@siteimprove/alfa-css/src/value/numeric/number.js\"), exports);\n__exportStar(__webpack_require__(/*! ./numeric */ \"./node_modules/@siteimprove/alfa-css/src/value/numeric/numeric.js\"), exports);\n__exportStar(__webpack_require__(/*! ./percentage */ \"./node_modules/@siteimprove/alfa-css/src/value/numeric/percentage.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/numeric/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/numeric/integer.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/numeric/integer.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Integer = void 0;\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst alfa_selective_1 = __webpack_require__(/*! @siteimprove/alfa-selective */ \"./node_modules/@siteimprove/alfa-selective/src/index.js\");\n// We need to rename Math to avoid collision with the global namespace.\nconst calculation_1 = __webpack_require__(/*! ../../calculation */ \"./node_modules/@siteimprove/alfa-css/src/calculation/index.js\");\nconst numeric_1 = __webpack_require__(/*! ../../calculation/numeric */ \"./node_modules/@siteimprove/alfa-css/src/calculation/numeric/index.js\");\nconst numeric_2 = __webpack_require__(/*! ./numeric */ \"./node_modules/@siteimprove/alfa-css/src/value/numeric/numeric.js\");\nconst { either, map } = alfa_parser_1.Parser;\n/**\n * {@link https://drafts.csswg.org/css-values/#integers}\n *\n * @public\n */\nvar Integer;\n(function (Integer) {\n    /**\n     * Integers that are the result of a calculation.\n     */\n    class Calculated extends numeric_2.Numeric.Calculated {\n        static of(value) {\n            return new Calculated(value);\n        }\n        constructor(value) {\n            super(value, \"number\");\n        }\n        /**\n         * @remarks\n         * Numbers are rounded to the nearest integer upon resolving calculation\n         *\n         * {@link https://drafts.csswg.org/css-values/#calc-type-checking}\n         */\n        resolve() {\n            return Fixed.of(this._math\n                .resolve()\n                // Since the expression has been correctly typed, it should always resolve.\n                .getUnsafe(`Could not fully resolve ${this} as a number`).value);\n        }\n        partiallyResolve() {\n            return this.resolve();\n        }\n        equals(value) {\n            return value instanceof Calculated && super.equals(value);\n        }\n        toJSON() {\n            return super.toJSON();\n        }\n    }\n    Integer.Calculated = Calculated;\n    /**\n     * Numbers that are a fixed (not calculated) value.\n     */\n    class Fixed extends numeric_2.Numeric.Fixed {\n        /**\n         * {@link https://drafts.csswg.org/css-values/#css-round-to-the-nearest-integer}\n         */\n        static of(value) {\n            return new Fixed(numeric_1.Integer.isInteger(value)\n                ? value.value\n                : // Math.round ensure the correct rounding.\n                    // The bitwise or ensure coercion to 32 bits integer\n                    Math.round(value) | 0);\n        }\n        constructor(value) {\n            super(value, \"number\");\n        }\n        resolve() {\n            return this;\n        }\n        partiallyResolve() {\n            return this;\n        }\n        scale(factor) {\n            return new Fixed(this._value * factor);\n        }\n        equals(value) {\n            return value instanceof Fixed && super.equals(value);\n        }\n        hash(hash) {\n            hash.writeInt32(this._value);\n        }\n        toJSON() {\n            return super.toJSON();\n        }\n    }\n    Integer.Fixed = Fixed;\n    function isCalculated(value) {\n        return value instanceof Calculated;\n    }\n    Integer.isCalculated = isCalculated;\n    function isFixed(value) {\n        return value instanceof Fixed;\n    }\n    Integer.isFixed = isFixed;\n    function isInteger(value) {\n        return value instanceof Calculated || value instanceof Fixed;\n    }\n    Integer.isInteger = isInteger;\n    function of(value) {\n        return alfa_selective_1.Selective.of(value)\n            .if(calculation_1.Math.isNumber, Calculated.of)\n            .else(Fixed.of)\n            .get();\n    }\n    Integer.of = of;\n    /**\n     * {@link https://drafts.csswg.org/css-values/#number-value}\n     */\n    Integer.parse = either(map(numeric_1.Integer.parse, of), map(calculation_1.Math.parseNumber, of));\n})(Integer || (exports.Integer = Integer = {}));\n//# sourceMappingURL=integer.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/numeric/integer.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/numeric/length-percentage.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/numeric/length-percentage.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.LengthPercentage = void 0;\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst alfa_selective_1 = __webpack_require__(/*! @siteimprove/alfa-selective */ \"./node_modules/@siteimprove/alfa-selective/src/index.js\");\nconst calculation_1 = __webpack_require__(/*! ../../calculation */ \"./node_modules/@siteimprove/alfa-css/src/calculation/index.js\");\nconst Base = __webpack_require__(/*! ../../calculation/numeric */ \"./node_modules/@siteimprove/alfa-css/src/calculation/numeric/index.js\");\nconst dimension_1 = __webpack_require__(/*! ./dimension */ \"./node_modules/@siteimprove/alfa-css/src/value/numeric/dimension.js\");\nconst length_1 = __webpack_require__(/*! ./length */ \"./node_modules/@siteimprove/alfa-css/src/value/numeric/length.js\");\nconst percentage_1 = __webpack_require__(/*! ./percentage */ \"./node_modules/@siteimprove/alfa-css/src/value/numeric/percentage.js\");\nconst { either, map } = alfa_parser_1.Parser;\n/**\n * @public\n */\nvar LengthPercentage;\n(function (LengthPercentage) {\n    /**\n     * Length-percentages that are the result of a calculation.\n     */\n    class Calculated extends dimension_1.Dimension.Calculated {\n        static of(value) {\n            return new Calculated(value);\n        }\n        constructor(math) {\n            super(math, \"length-percentage\");\n        }\n        hasCalculation() {\n            return true;\n        }\n        resolve(resolver) {\n            return length_1.Length.Fixed.of(this._math\n                // The math expression resolver is only aware of BaseLength and\n                // BasePercentage and thus work with these, but we want to abstract\n                // them from further layers, so the resolver here is only aware of\n                // Length and Percentage, and we need to translate back and forth.\n                .resolve({\n                length: (length) => {\n                    const resolved = resolver.length(length_1.Length.Fixed.of(length));\n                    return Base.Length.of(resolved.value, resolved.unit);\n                },\n                percentage: (value) => Base.Length.of(resolver.percentageBase.value, \n                /* this is \"px\"! */ resolver.percentageBase.unit).scale(value.value),\n            })\n                // Since the expression has been correctly typed, it should always resolve.\n                .getUnsafe(`Could not resolve ${this._math} as a length`));\n        }\n        partiallyResolve(resolver) {\n            return this;\n        }\n        equals(value) {\n            return value instanceof Calculated && super.equals(value);\n        }\n    }\n    LengthPercentage.Calculated = Calculated;\n    /**\n     * Fully resolves a length-percentage, when a full resolver is provided.\n     */\n    function resolve(resolver) {\n        return (value) => \n        // We need to break down the union to help TS find the correct overload\n        // of each component and correctly narrow the result.\n        percentage_1.Percentage.isPercentage(value)\n            ? value.resolve(resolver)\n            : value.resolve(resolver);\n    }\n    LengthPercentage.resolve = resolve;\n    /**\n     * Partially resolves a length-percentage, when only a length resolver is\n     * provided.\n     *\n     * @remarks\n     * For many style properties, the percentages are resolved depending on the\n     * dimensions of the box, which we do not always have. In this case, we cannot\n     * resolve the percentage parts, but we can still fully resolve the length parts.\n     * Calculated percentages cannot be fully resolved into a canonical length, but\n     * we can nonetheless reduce them to a pure percentage. However, mixed\n     * calculations have to stay as they are.\n     */\n    function partiallyResolve(resolver) {\n        return (value) => alfa_selective_1.Selective.of(value)\n            .if(length_1.Length.isLength, (value) => value.resolve(resolver))\n            .if(percentage_1.Percentage.isPercentage, (value) => value.partiallyResolve())\n            .get();\n    }\n    LengthPercentage.partiallyResolve = partiallyResolve;\n    function isLengthPercentage(value) {\n        return (value instanceof Calculated ||\n            length_1.Length.isLength(value) ||\n            percentage_1.Percentage.isPercentage(value));\n    }\n    LengthPercentage.isLengthPercentage = isLengthPercentage;\n    function isCalculated(value) {\n        return (value instanceof Calculated ||\n            length_1.Length.isCalculated(value) ||\n            percentage_1.Percentage.isCalculated(value));\n    }\n    LengthPercentage.isCalculated = isCalculated;\n    function isFixed(value) {\n        return value instanceof length_1.Length.Fixed;\n    }\n    LengthPercentage.isFixed = isFixed;\n    function isPercentage(value) {\n        return value instanceof percentage_1.Percentage.Fixed;\n    }\n    LengthPercentage.isPercentage = isPercentage;\n    function of(value, unit) {\n        if (typeof value === \"number\") {\n            if (unit === undefined) {\n                return percentage_1.Percentage.of(value);\n            }\n            else {\n                return length_1.Length.of(value, unit);\n            }\n        }\n        if (Base.Length.isLength(value)) {\n            return length_1.Length.of(value.value, value.unit);\n        }\n        if (Base.Percentage.isPercentage(value)) {\n            return percentage_1.Percentage.of(value.value);\n        }\n        // value must be a math expression\n        if (value.isPercentage()) {\n            return percentage_1.Percentage.of(value);\n        }\n        if (value.isDimension(\"length\")) {\n            return length_1.Length.of(value);\n        }\n        return Calculated.of(value);\n    }\n    LengthPercentage.of = of;\n    /**\n     * {@link https://drafts.csswg.org/css-values/#lengths}\n     */\n    LengthPercentage.parse = either(length_1.Length.parse, (percentage_1.Percentage.parse), map(calculation_1.Math.parseLengthPercentage, of));\n})(LengthPercentage || (exports.LengthPercentage = LengthPercentage = {}));\n//# sourceMappingURL=length-percentage.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/numeric/length-percentage.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/numeric/length.js":
/*!************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/numeric/length.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Length = void 0;\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst calculation_1 = __webpack_require__(/*! ../../calculation */ \"./node_modules/@siteimprove/alfa-css/src/calculation/index.js\");\nconst numeric_1 = __webpack_require__(/*! ../../calculation/numeric */ \"./node_modules/@siteimprove/alfa-css/src/calculation/numeric/index.js\");\nconst unit_1 = __webpack_require__(/*! ../../unit */ \"./node_modules/@siteimprove/alfa-css/src/unit/index.js\");\nconst dimension_1 = __webpack_require__(/*! ./dimension */ \"./node_modules/@siteimprove/alfa-css/src/value/numeric/dimension.js\");\nconst { either, map } = alfa_parser_1.Parser;\n/**\n * @public\n */\nvar Length;\n(function (Length) {\n    /**\n     * Lengths that are the result of a calculation.\n     */\n    class Calculated extends dimension_1.Dimension.Calculated {\n        static of(value) {\n            return new Calculated(value);\n        }\n        constructor(math) {\n            super(math, \"length\");\n        }\n        hasCalculation() {\n            return true;\n        }\n        resolve(resolver) {\n            return Fixed.of(this._math\n                .resolve({\n                // The math expression resolver is only aware of BaseLength and thus\n                // work with these, but we want to abstract them from further layers,\n                // so the resolver here is only aware of Length, and we need to\n                // translate back and forth.\n                length: (length) => {\n                    const resolved = resolver.length(Fixed.of(length));\n                    return numeric_1.Length.of(resolved.value, resolved.unit);\n                },\n            })\n                // Since the expression has been correctly typed, it should always resolve.\n                .getUnsafe(`Could not resolve ${this._math} as a length`));\n        }\n        equals(value) {\n            return value instanceof Calculated && super.equals(value);\n        }\n    }\n    Length.Calculated = Calculated;\n    /**\n     * Lengths that are a fixed (not calculated) value.\n     */\n    class Fixed extends dimension_1.Dimension.Fixed {\n        static of(value, unit) {\n            if (typeof value === \"number\") {\n                // The overloads ensure that unit is not undefined\n                return new Fixed(value, unit);\n            }\n            return new Fixed(value.value, value.unit);\n        }\n        constructor(value, unit) {\n            super(value, unit, \"length\");\n        }\n        hasCalculation() {\n            return false;\n        }\n        hasUnit(unit) {\n            return this._unit === unit;\n        }\n        withUnit(unit) {\n            if (this.hasUnit(unit)) {\n                return this;\n            }\n            if (unit_1.Unit.isAbsoluteLength(unit) && unit_1.Unit.isAbsoluteLength(this._unit)) {\n                return Fixed.of(unit_1.Converter.length(this._value, this._unit, unit), unit);\n            }\n            throw new Error(`Cannot convert ${this._unit} to ${unit}`);\n        }\n        isRelative() {\n            return unit_1.Unit.isRelativeLength(this._unit);\n        }\n        isFontRelative() {\n            return unit_1.Unit.isFontRelativeLength(this._unit);\n        }\n        isViewportRelative() {\n            return unit_1.Unit.isViewportRelativeLength(this._unit);\n        }\n        isAbsolute() {\n            return unit_1.Unit.isAbsoluteLength(this._unit);\n        }\n        scale(factor) {\n            return new Fixed(this._value * factor, this._unit);\n        }\n        /**\n         * Resolve a Length into an absolute Length in pixels.\n         */\n        resolve(resolver) {\n            return this.isRelative() ? resolver.length(this) : this.withUnit(\"px\");\n        }\n        equals(value) {\n            return value instanceof Fixed && super.equals(value);\n        }\n    }\n    Length.Fixed = Fixed;\n    /**\n     * Build a (fixed) length resolver, using basis for the relative units\n     */\n    function resolver(emBase, remBase, vwBase, vhBase) {\n        return (length) => {\n            const { unit, value } = length;\n            const [min, max] = vhBase.value < vwBase.value ? [vhBase, vwBase] : [vwBase, vhBase];\n            switch (unit) {\n                // https://www.w3.org/TR/css-values/#em\n                case \"em\":\n                    return emBase.scale(value);\n                // https://www.w3.org/TR/css-values/#rem\n                case \"rem\": {\n                    return remBase.scale(value);\n                }\n                // https://www.w3.org/TR/css-values/#ex\n                case \"ex\":\n                // https://www.w3.org/TR/css-values/#ch\n                case \"ch\":\n                    return emBase.scale(value * 0.5);\n                // https://www.w3.org/TR/css-values/#vh\n                case \"vh\":\n                    return vhBase.scale(value / 100);\n                // https://www.w3.org/TR/css-values/#vw\n                case \"vw\":\n                    return vwBase.scale(value / 100);\n                // https://www.w3.org/TR/css-values/#vmin\n                case \"vmin\":\n                    return min.scale(value / 100);\n                // https://www.w3.org/TR/css-values/#vmax\n                case \"vmax\":\n                    return max.scale(value / 100);\n            }\n        };\n    }\n    Length.resolver = resolver;\n    function isLength(value) {\n        return value instanceof Calculated || value instanceof Fixed;\n    }\n    Length.isLength = isLength;\n    function isCalculated(value) {\n        return value instanceof Calculated;\n    }\n    Length.isCalculated = isCalculated;\n    function isFixed(value) {\n        return value instanceof Fixed;\n    }\n    Length.isFixed = isFixed;\n    function of(value, unit) {\n        if (typeof value === \"number\") {\n            // The overloads ensure that unit is not undefined\n            return Fixed.of(value, unit);\n        }\n        if (numeric_1.Length.isLength(value)) {\n            return Fixed.of(value.value, value.unit);\n        }\n        return Calculated.of(value);\n    }\n    Length.of = of;\n    /**\n     * {@link https://drafts.csswg.org/css-values/#lengths}\n     */\n    Length.parse = either(map(numeric_1.Length.parse, of), map(calculation_1.Math.parseLength, of));\n})(Length || (exports.Length = Length = {}));\n//# sourceMappingURL=length.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/numeric/length.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/numeric/number.js":
/*!************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/numeric/number.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Number = void 0;\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst alfa_selective_1 = __webpack_require__(/*! @siteimprove/alfa-selective */ \"./node_modules/@siteimprove/alfa-selective/src/index.js\");\nconst calculation_1 = __webpack_require__(/*! ../../calculation */ \"./node_modules/@siteimprove/alfa-css/src/calculation/index.js\");\nconst numeric_1 = __webpack_require__(/*! ../../calculation/numeric */ \"./node_modules/@siteimprove/alfa-css/src/calculation/numeric/index.js\");\nconst numeric_2 = __webpack_require__(/*! ./numeric */ \"./node_modules/@siteimprove/alfa-css/src/value/numeric/numeric.js\");\nconst { either, map } = alfa_parser_1.Parser;\n/**\n * {@link https://drafts.csswg.org/css-values/#numbers}\n *\n * @public\n */\nvar Number;\n(function (Number) {\n    /**\n     * Numbers that are the result of a calculation.\n     */\n    class Calculated extends numeric_2.Numeric.Calculated {\n        static of(value) {\n            return new Calculated(value);\n        }\n        constructor(value) {\n            super(value, \"number\");\n        }\n        resolve() {\n            return Fixed.of(this._math\n                .resolve()\n                // Since the expression has been correctly typed, it should always resolve.\n                .getUnsafe(`Could not fully resolve ${this} as a number`));\n        }\n        partiallyResolve() {\n            return this.resolve();\n        }\n        equals(value) {\n            return value instanceof Calculated && super.equals(value);\n        }\n        toJSON() {\n            return super.toJSON();\n        }\n    }\n    Number.Calculated = Calculated;\n    /**\n     * Numbers that are a fixed (not calculated) value.\n     */\n    class Fixed extends numeric_2.Numeric.Fixed {\n        static of(value) {\n            return new Fixed(numeric_1.Number.isNumber(value) ? value.value : value);\n        }\n        constructor(value) {\n            super(value, \"number\");\n        }\n        resolve() {\n            return this;\n        }\n        partiallyResolve() {\n            return this;\n        }\n        scale(factor) {\n            return new Fixed(this._value * factor);\n        }\n        equals(value) {\n            return value instanceof Fixed && super.equals(value);\n        }\n        toJSON() {\n            return super.toJSON();\n        }\n    }\n    Number.Fixed = Fixed;\n    function isCalculated(value) {\n        return value instanceof Calculated;\n    }\n    Number.isCalculated = isCalculated;\n    function isFixed(value) {\n        return value instanceof Fixed;\n    }\n    Number.isFixed = isFixed;\n    function isNumber(value) {\n        return value instanceof Calculated || value instanceof Fixed;\n    }\n    Number.isNumber = isNumber;\n    function of(value) {\n        return alfa_selective_1.Selective.of(value)\n            .if(calculation_1.Math.isNumber, Calculated.of)\n            .else(Fixed.of)\n            .get();\n    }\n    Number.of = of;\n    /**\n     * {@link https://drafts.csswg.org/css-values/#number-value}\n     */\n    Number.parse = either(map(numeric_1.Number.parse, of), map(calculation_1.Math.parseNumber, of));\n    /**\n     * @remarks\n     * Zero values must be true 0, not calculations evaluating to 0.\n     *\n     * {@link https://drafts.csswg.org/css-values/#zero-value}\n     */\n    Number.parseZero = map(numeric_1.Number.parseZero, of);\n})(Number || (exports.Number = Number = {}));\n//# sourceMappingURL=number.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/numeric/number.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/numeric/numeric.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/numeric/numeric.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Numeric = void 0;\nconst alfa_comparable_1 = __webpack_require__(/*! @siteimprove/alfa-comparable */ \"./node_modules/@siteimprove/alfa-comparable/src/index.js\");\nconst alfa_math_1 = __webpack_require__(/*! @siteimprove/alfa-math */ \"./node_modules/@siteimprove/alfa-math/src/index.js\");\nconst numeric_1 = __webpack_require__(/*! ../../calculation/numeric */ \"./node_modules/@siteimprove/alfa-css/src/calculation/numeric/index.js\");\nconst value_1 = __webpack_require__(/*! ../value */ \"./node_modules/@siteimprove/alfa-css/src/value/value.js\");\n/**\n * @public\n */\nvar Numeric;\n(function (Numeric) {\n    /**\n     * Numerics that are the result of a calculation.\n     */\n    class Calculated extends value_1.Value {\n        constructor(math, type) {\n            super(type, true);\n            this._math = math;\n        }\n        get math() {\n            return this._math;\n        }\n        hasCalculation() {\n            return true;\n        }\n        equals(value) {\n            return value instanceof Calculated && value._math.equals(this._math);\n        }\n        hash(hash) {\n            this._math.hash(hash);\n        }\n        toJSON() {\n            return { ...super.toJSON(), math: this._math.toJSON() };\n        }\n        toString() {\n            return this._math.toString();\n        }\n    }\n    Numeric.Calculated = Calculated;\n    /**\n     * Numerics that are a fixed (not calculated) value.\n     */\n    class Fixed extends value_1.Value {\n        constructor(value, type) {\n            super(type, false);\n            this._value = alfa_math_1.Real.round(value, numeric_1.Numeric.Decimals);\n        }\n        get value() {\n            return this._value;\n        }\n        hasCalculation() {\n            return false;\n        }\n        isZero() {\n            return this._value === 0;\n        }\n        equals(value) {\n            return value instanceof Fixed && value._value === this._value;\n        }\n        compare(value) {\n            return alfa_comparable_1.Comparable.compareNumber(this._value, value._value);\n        }\n        hash(hash) {\n            hash.writeFloat64(this._value);\n        }\n        toJSON() {\n            return {\n                ...super.toJSON(),\n                value: this._value,\n            };\n        }\n        toString() {\n            return `${this._value}`;\n        }\n    }\n    Numeric.Fixed = Fixed;\n    function isCalculated(value) {\n        return value instanceof Calculated;\n    }\n    Numeric.isCalculated = isCalculated;\n    function isFixed(value) {\n        return value instanceof Fixed;\n    }\n    Numeric.isFixed = isFixed;\n    function isNumeric(value) {\n        return value instanceof Calculated || value instanceof Fixed;\n    }\n    Numeric.isNumeric = isNumeric;\n    // Curryfied version is more convenient for monadic call sites.\n    function isZero(value) {\n        return value.isZero();\n    }\n    Numeric.isZero = isZero;\n})(Numeric || (exports.Numeric = Numeric = {}));\n//# sourceMappingURL=numeric.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/numeric/numeric.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/numeric/percentage.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/numeric/percentage.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Percentage = void 0;\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst alfa_selective_1 = __webpack_require__(/*! @siteimprove/alfa-selective */ \"./node_modules/@siteimprove/alfa-selective/src/index.js\");\nconst calculation_1 = __webpack_require__(/*! ../../calculation */ \"./node_modules/@siteimprove/alfa-css/src/calculation/index.js\");\nconst numeric_1 = __webpack_require__(/*! ../../calculation/numeric */ \"./node_modules/@siteimprove/alfa-css/src/calculation/numeric/index.js\");\nconst numeric_2 = __webpack_require__(/*! ./numeric */ \"./node_modules/@siteimprove/alfa-css/src/value/numeric/numeric.js\");\nconst { either, map } = alfa_parser_1.Parser;\n/**\n * {@link https://drafts.csswg.org/css-values/#numbers}\n *\n * @public\n */\nvar Percentage;\n(function (Percentage) {\n    /**\n     * Percentages that are the result of a calculation.\n     *\n     */\n    class Calculated extends numeric_2.Numeric.Calculated {\n        static of(value) {\n            return new Calculated(value);\n        }\n        constructor(math) {\n            super(math, \"percentage\");\n        }\n        hasCalculation() {\n            return true;\n        }\n        resolve(resolver) {\n            const percentage = Fixed.of(this._math\n                .resolve()\n                // Since the expression has been correctly typed, it should always resolve.\n                .getUnsafe(`Could not fully resolve ${this} as a percentage`));\n            return resolver === undefined\n                ? percentage\n                : // since we don't know much about percentageBase, scale defaults to\n                    // the abstract one on Numeric and loses its actual type which needs\n                    // to be asserted again.\n                    resolver.percentageBase.scale(percentage.value);\n        }\n        partiallyResolve() {\n            return Fixed.of(this._math\n                .resolve()\n                // Since the expression has been correctly typed, it should always resolve.\n                .getUnsafe(`Could not resolve ${this} as a percentage`));\n        }\n        equals(value) {\n            return value instanceof Calculated && super.equals(value);\n        }\n        toJSON() {\n            return super.toJSON();\n        }\n    }\n    Percentage.Calculated = Calculated;\n    /**\n     * Percentages that are a fixed (not calculated) value.\n     */\n    class Fixed extends numeric_2.Numeric.Fixed {\n        static of(value) {\n            return new Fixed(numeric_1.Percentage.isPercentage(value) ? value.value : value);\n        }\n        constructor(value) {\n            super(value, \"percentage\");\n        }\n        resolve(resolver) {\n            return resolver === undefined\n                ? this\n                : // since we don't know much about percentageBase, scale defaults to\n                    // the abstract one on Numeric and loses its actual type which needs\n                    // to be asserted again.\n                    resolver.percentageBase.scale(this._value);\n        }\n        partiallyResolve() {\n            return this;\n        }\n        scale(factor) {\n            return new Fixed(this._value * factor);\n        }\n        equals(value) {\n            return value instanceof Fixed && super.equals(value);\n        }\n        toJSON() {\n            return super.toJSON();\n        }\n        toString() {\n            return `${this._value * 100}%`;\n        }\n    }\n    Percentage.Fixed = Fixed;\n    function isCalculated(value) {\n        return value instanceof Calculated;\n    }\n    Percentage.isCalculated = isCalculated;\n    function isFixed(value) {\n        return value instanceof Fixed;\n    }\n    Percentage.isFixed = isFixed;\n    function isPercentage(value) {\n        return value instanceof Calculated || value instanceof Fixed;\n    }\n    Percentage.isPercentage = isPercentage;\n    function of(value) {\n        return alfa_selective_1.Selective.of(value)\n            .if(calculation_1.Math.isPercentage, (Calculated.of))\n            .else((Fixed.of))\n            .get();\n    }\n    Percentage.of = of;\n    /**\n     * {@link https://drafts.csswg.org/css-values/#number-value}\n     */\n    function parse(input) {\n        return either(map(numeric_1.Percentage.parse, (of)), map(calculation_1.Math.parsePercentage, (of)))(input);\n    }\n    Percentage.parse = parse;\n})(Percentage || (exports.Percentage = Percentage = {}));\n//# sourceMappingURL=percentage.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/numeric/percentage.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/position/component.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/position/component.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Component = void 0;\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst keyword_1 = __webpack_require__(/*! ../keyword */ \"./node_modules/@siteimprove/alfa-css/src/value/keyword.js\");\nconst numeric_1 = __webpack_require__(/*! ../numeric */ \"./node_modules/@siteimprove/alfa-css/src/value/numeric/index.js\");\nconst side_1 = __webpack_require__(/*! ./side */ \"./node_modules/@siteimprove/alfa-css/src/value/position/side.js\");\nconst { either, map } = alfa_parser_1.Parser;\n/**\n * @public\n */\nvar Component;\n(function (Component) {\n    function resolve(resolver) {\n        return (value) => (side_1.Side.isSide(value) ? value.resolve(resolver) : value);\n    }\n    Component.resolve = resolve;\n    function partiallyResolve(resolver) {\n        return (value) => side_1.Side.isSide(value) ? value.partiallyResolve(resolver) : value;\n    }\n    Component.partiallyResolve = partiallyResolve;\n    /**\n     * Parses an isolated offset (length-percentage), and adds the provided default\n     * side to make a Side.\n     *\n     * @internal\n     */\n    function parseOffset(side) {\n        return map(numeric_1.LengthPercentage.parse, (value) => side_1.Side.of(side, value));\n    }\n    Component.parseOffset = parseOffset;\n    // \"center\" is included in Side.parse[Horizontal, Vertical]\n    /**\n     * @internal\n     */\n    Component.parseHorizontal = either(parseOffset(keyword_1.Keyword.of(\"left\")), side_1.Side.parseHorizontal);\n    /**\n     * @internal\n     */\n    Component.parseVertical = either(parseOffset(keyword_1.Keyword.of(\"top\")), side_1.Side.parseVertical);\n})(Component || (exports.Component = Component = {}));\n//# sourceMappingURL=component.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/position/component.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/position/index.js":
/*!************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/position/index.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./position */ \"./node_modules/@siteimprove/alfa-css/src/value/position/position.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/position/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/position/keywords.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/position/keywords.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Keywords = void 0;\nconst keyword_1 = __webpack_require__(/*! ../keyword */ \"./node_modules/@siteimprove/alfa-css/src/value/keyword.js\");\n/**\n * @public\n */\nvar Keywords;\n(function (Keywords) {\n    /**\n     * @internal\n     */\n    Keywords.parseCenter = keyword_1.Keyword.parse(\"center\");\n    /**\n     * @internal\n     */\n    Keywords.parseVertical = keyword_1.Keyword.parse(\"top\", \"bottom\");\n    /**\n     * @internal\n     */\n    Keywords.parseHorizontal = keyword_1.Keyword.parse(\"left\", \"right\");\n})(Keywords || (exports.Keywords = Keywords = {}));\n//# sourceMappingURL=keywords.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/position/keywords.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/position/position.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/position/position.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Position = void 0;\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst syntax_1 = __webpack_require__(/*! ../../syntax */ \"./node_modules/@siteimprove/alfa-css/src/syntax/index.js\");\nconst keyword_1 = __webpack_require__(/*! ../keyword */ \"./node_modules/@siteimprove/alfa-css/src/value/keyword.js\");\nconst value_1 = __webpack_require__(/*! ../value */ \"./node_modules/@siteimprove/alfa-css/src/value/value.js\");\nconst component = __webpack_require__(/*! ./component */ \"./node_modules/@siteimprove/alfa-css/src/value/position/component.js\");\nconst keywords = __webpack_require__(/*! ./keywords */ \"./node_modules/@siteimprove/alfa-css/src/value/position/keywords.js\");\nconst side = __webpack_require__(/*! ./side */ \"./node_modules/@siteimprove/alfa-css/src/value/position/side.js\");\nconst { map, either, pair, right } = alfa_parser_1.Parser;\n/**\n * {@link https://drafts.csswg.org/css-values/#position}\n *\n * @remarks\n * A Position has a horizontal and a vertical component, corresponding to some\n * coordinates. Each component can either be an offset (implicitly from the\n * \"start\" side (left or top, usually)), or the keyword \"center\", or a Side\n * (i.e. an explicit side with an optional offset).\n *\n * @public\n */\nclass Position extends value_1.Value {\n    static of(horizontal, vertical) {\n        return new Position(horizontal, vertical);\n    }\n    constructor(horizontal, vertical) {\n        super(\"position\", value_1.Value.hasCalculation(horizontal, vertical));\n        this._horizontal = horizontal;\n        this._vertical = vertical;\n    }\n    get horizontal() {\n        return this._horizontal;\n    }\n    get vertical() {\n        return this._vertical;\n    }\n    resolve(resolver) {\n        return new Position(Position.Component.resolve({\n            length: resolver.length,\n            percentageBase: resolver.percentageHBase,\n        })(this._horizontal), Position.Component.resolve({\n            length: resolver.length,\n            percentageBase: resolver.percentageVBase,\n        })(this._vertical));\n    }\n    partiallyResolve(resolver) {\n        return new Position(Position.Component.partiallyResolve(resolver)(this._horizontal), Position.Component.partiallyResolve(resolver)(this._vertical));\n    }\n    equals(value) {\n        return (value instanceof Position &&\n            value._horizontal.equals(this._horizontal) &&\n            value._vertical.equals(this._vertical));\n    }\n    hash(hash) {\n        hash.writeHashable(this._horizontal).writeHashable(this._vertical);\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            horizontal: this._horizontal.toJSON(),\n            vertical: this._vertical.toJSON(),\n        };\n    }\n    toString() {\n        return `${this._horizontal} ${this._vertical}`;\n    }\n}\nexports.Position = Position;\n/**\n * @public\n */\n(function (Position) {\n    Position.Keywords = keywords.Keywords;\n    Position.Side = side.Side;\n    Position.Component = component.Component;\n    /**\n     * @remarks\n     * Positions can be declared using either 1, 2, 3, or 4 tokens with the\n     * longest possible match taking precedence. The 3-token syntax is deprecated\n     * and must be selectively enabled.\n     *\n     * It is not easy to reuse component parsing here because, for example,\n     * H v would be incorrectly parsed as Hh by the horizontal component parser,\n     * so we need parsing error recovery to happen globally.\n     * Moreover, the parsers must be tested in decreasing number of tokens so that\n     * the 1 token parser does not eagerly accept something which actually has 4\n     * tokens.\n     *\n     * Notation:\n     *\n     *   - H/V: keyword: top | bottom | right | left | center\n     *   - h/v: numeric: \\<length | percentage\\>\n     *   - Hh/Vv: keyword (excluding center) and numeric\n     *\n     * Syntax:\n     *\n     *   - 4 tokens: Hh Vv | Vv Hh\n     *   - 3 tokens: Hh V | H Vv | Vv H | V Hh\n     *   - 2 tokens: H V | H v | h V | h v | V H   <- Obs! no V h | v H | v h\n     *   - 1 token:  H | V | h\n     */\n    const mapHV = ([horizontal, vertical]) => Position.of(horizontal, vertical);\n    const mapVH = ([vertical, horizontal]) => Position.of(horizontal, vertical);\n    const { parseHorizontalKeywordValue, parseHorizontalKeyword, parseVerticalKeywordValue, parseVerticalKeyword, } = Position.Side;\n    const parse4 = either(map(pair(parseHorizontalKeywordValue, right(syntax_1.Token.parseWhitespace, parseVerticalKeywordValue)), mapHV), map(pair(parseVerticalKeywordValue, right(syntax_1.Token.parseWhitespace, parseHorizontalKeywordValue)), mapVH));\n    // Hh V | H Vv | Vv H | V Hh\n    const parse3 = either(map(either(pair(parseHorizontalKeywordValue, right(syntax_1.Token.parseWhitespace, parseVerticalKeyword)), pair(parseHorizontalKeyword, right(syntax_1.Token.parseWhitespace, parseVerticalKeywordValue))), mapHV), map(either(pair(parseVerticalKeywordValue, right(syntax_1.Token.parseWhitespace, parseHorizontalKeyword)), pair(parseVerticalKeyword, right(syntax_1.Token.parseWhitespace, parseHorizontalKeywordValue))), mapVH));\n    // H V | H v | h V | h v | V H = (H | h) (V | v) | V H\n    const parse2 = either(map(pair(either(parseHorizontalKeyword, Position.Component.parseOffset(keyword_1.Keyword.of(\"left\"))), right(syntax_1.Token.parseWhitespace, either(parseVerticalKeyword, Position.Component.parseOffset(keyword_1.Keyword.of(\"top\"))))), mapHV), map(pair(parseVerticalKeyword, right(syntax_1.Token.parseWhitespace, parseHorizontalKeyword)), mapVH));\n    // H | V | h\n    const parse1 = either(map(parseHorizontalKeyword, (horizontal) => Position.of(horizontal, keyword_1.Keyword.of(\"center\"))), map(parseVerticalKeyword, (vertical) => Position.of(keyword_1.Keyword.of(\"center\"), vertical)), map(Position.Component.parseOffset(keyword_1.Keyword.of(\"left\")), (horizontal) => Position.of(horizontal, keyword_1.Keyword.of(\"center\"))));\n    /**\n     * Parse a position, optionally accepting legacy 3-values syntax.\n     *\n     * {@link https://drafts.csswg.org/css-values/#typedef-position}\n     * {@link https://drafts.csswg.org/css-backgrounds/#typedef-bg-position}\n     *\n     * @privateRemarks\n     * The parsers must be tested in decreasing number of tokens.\n     */\n    function parse(legacySyntax = false) {\n        return either(parse4, legacySyntax ? parse3 : () => alfa_result_1.Err.of(\"Three-value syntax is not allowed\"), parse2, parse1);\n    }\n    Position.parse = parse;\n})(Position || (exports.Position = Position = {}));\n//# sourceMappingURL=position.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/position/position.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/position/side.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/position/side.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Side = void 0;\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst syntax_1 = __webpack_require__(/*! ../../syntax */ \"./node_modules/@siteimprove/alfa-css/src/syntax/index.js\");\nconst numeric_1 = __webpack_require__(/*! ../numeric */ \"./node_modules/@siteimprove/alfa-css/src/value/numeric/index.js\");\nconst value_1 = __webpack_require__(/*! ../value */ \"./node_modules/@siteimprove/alfa-css/src/value/value.js\");\nconst keywords_1 = __webpack_require__(/*! ./keywords */ \"./node_modules/@siteimprove/alfa-css/src/value/position/keywords.js\");\nconst { either, map, pair, right } = alfa_parser_1.Parser;\n/**\n * @public\n */\nclass Side extends value_1.Value {\n    static of(side, offset) {\n        return new Side(side, alfa_option_1.Option.isOption(offset) ? offset : alfa_option_1.Option.from(offset));\n    }\n    constructor(side, offset) {\n        super(\"side\", offset.some(value_1.Value.hasCalculation));\n        this._side = side;\n        this._offset = offset;\n    }\n    get side() {\n        return this._side;\n    }\n    get offset() {\n        return this._offset;\n    }\n    resolve(resolver) {\n        return new Side(this._side, this._offset.map(numeric_1.LengthPercentage.resolve(resolver)));\n    }\n    partiallyResolve(resolver) {\n        return new Side(this._side, this._offset.map(numeric_1.LengthPercentage.partiallyResolve(resolver)));\n    }\n    equals(value) {\n        return (value instanceof Side &&\n            value._side.equals(this._side) &&\n            value._offset.equals(this._offset));\n    }\n    hash(hash) {\n        hash.writeHashable(this._side).writeHashable(this._offset);\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            side: this._side.toJSON(),\n            offset: this._offset.map((offset) => offset.toJSON()).getOr(null),\n        };\n    }\n    toString() {\n        return `${this._side}${this._offset\n            .map((offset) => ` ${offset}`)\n            .getOr(\"\")}`;\n    }\n}\nexports.Side = Side;\n/**\n * @public\n */\n(function (Side) {\n    function isSide(value) {\n        return value instanceof Side;\n    }\n    Side.isSide = isSide;\n    /**\n     * Parse a side keyword (top/bottom/left/right) or \"center\"\n     */\n    function parseKeyword(parser) {\n        return either(keywords_1.Keywords.parseCenter, map(parser, (side) => Side.of(side)));\n    }\n    /**\n     * Parse a side keyword followed by an offset (length-percentage).\n     */\n    function parseKeywordValue(parser) {\n        return map(pair(parser, right(syntax_1.Token.parseWhitespace, numeric_1.LengthPercentage.parse)), ([keyword, value]) => Side.of(keyword, value));\n    }\n    Side.parseHorizontalKeywordValue = parseKeywordValue(keywords_1.Keywords.parseHorizontal);\n    Side.parseHorizontalKeyword = parseKeyword(keywords_1.Keywords.parseHorizontal);\n    Side.parseHorizontal = either(Side.parseHorizontalKeyword, Side.parseHorizontalKeywordValue);\n    Side.parseVerticalKeywordValue = parseKeywordValue(keywords_1.Keywords.parseVertical);\n    Side.parseVerticalKeyword = parseKeyword(keywords_1.Keywords.parseVertical);\n    Side.parseVertical = either(Side.parseVerticalKeyword, Side.parseVerticalKeywordValue);\n})(Side || (exports.Side = Side = {}));\n//# sourceMappingURL=side.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/position/side.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/resolvable.js":
/*!********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/resolvable.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=resolvable.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/resolvable.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/shadow.js":
/*!****************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/shadow.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Shadow = void 0;\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst syntax_1 = __webpack_require__(/*! ../syntax */ \"./node_modules/@siteimprove/alfa-css/src/syntax/index.js\");\nconst color_1 = __webpack_require__(/*! ./color */ \"./node_modules/@siteimprove/alfa-css/src/value/color/index.js\");\nconst keyword_1 = __webpack_require__(/*! ./keyword */ \"./node_modules/@siteimprove/alfa-css/src/value/keyword.js\");\nconst numeric_1 = __webpack_require__(/*! ./numeric */ \"./node_modules/@siteimprove/alfa-css/src/value/numeric/index.js\");\nconst value_1 = __webpack_require__(/*! ./value */ \"./node_modules/@siteimprove/alfa-css/src/value/value.js\");\nconst { parseIf, separatedList } = alfa_parser_1.Parser;\n/**\n * @public\n */\nclass Shadow extends value_1.Value {\n    static of(horizontal, vertical, blur, spread, color, isInset) {\n        return new Shadow(horizontal, vertical, blur, spread, color, isInset);\n    }\n    constructor(horizontal, vertical, blur, spread, color, isInset) {\n        super(\"shadow\", value_1.Value.hasCalculation(horizontal, vertical, blur, spread, color));\n        this._horizontal = horizontal;\n        this._vertical = vertical;\n        this._blur = blur;\n        this._spread = spread;\n        this._color = color;\n        this._isInset = isInset;\n    }\n    get horizontal() {\n        return this._horizontal;\n    }\n    get vertical() {\n        return this._vertical;\n    }\n    get blur() {\n        return this._blur;\n    }\n    get spread() {\n        return this._spread;\n    }\n    get color() {\n        return this._color;\n    }\n    get isInset() {\n        return this._isInset;\n    }\n    resolve(resolver) {\n        return new Shadow(this._horizontal.resolve(resolver), this._vertical.resolve(resolver), this._blur.resolve(resolver), this._spread.resolve(resolver), this._color.resolve(), this._isInset);\n    }\n    equals(value) {\n        return (value instanceof Shadow &&\n            value._horizontal.equals(this._horizontal) &&\n            value._vertical.equals(this._vertical) &&\n            value._blur.equals(this._blur) &&\n            value._spread.equals(this._spread) &&\n            value._color.equals(this._color) &&\n            value._isInset === this._isInset);\n    }\n    hash(hash) {\n        hash\n            .writeHashable(this._horizontal)\n            .writeHashable(this._vertical)\n            .writeHashable(this._blur)\n            .writeHashable(this._spread)\n            .writeHashable(this._color)\n            .writeBoolean(this._isInset);\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            horizontal: this._horizontal.toJSON(),\n            vertical: this._vertical.toJSON(),\n            blur: this._blur.toJSON(),\n            spread: this._spread.toJSON(),\n            color: this._color.toJSON(),\n            isInset: this._isInset,\n        };\n    }\n    toString() {\n        return `${this._color} ${this._horizontal} ${this._vertical} ${this._blur} ${this._spread}${this._isInset ? \" inset\" : \"\"}`;\n    }\n}\nexports.Shadow = Shadow;\n/**\n * @public\n */\n(function (Shadow) {\n    function checkLength(max) {\n        return (array) => array.length >= 2 && array.length <= max;\n    }\n    function parseLengths(max) {\n        return parseIf(checkLength(max), separatedList(numeric_1.Length.parse, syntax_1.Token.parseWhitespace), () => `Shadows must have between 2 and ${max} lengths`);\n    }\n    function parse(options) {\n        const { withInset = true, withSpread = true } = options ?? {};\n        return (input) => {\n            let horizontal;\n            let vertical;\n            let blur;\n            let spread;\n            let color;\n            let isInset;\n            const skipWhitespace = () => {\n                for (const [remainder] of syntax_1.Token.parseWhitespace(input)) {\n                    input = remainder;\n                }\n            };\n            while (true) {\n                skipWhitespace();\n                if (horizontal === undefined) {\n                    // horizontal vertical blur? spread?\n                    const result = parseLengths(withSpread ? 4 : 3)(input);\n                    if (result.isOk()) {\n                        [input, [horizontal, vertical, blur, spread]] = result.get();\n                        continue;\n                    }\n                }\n                if (color === undefined) {\n                    // color: <color>?\n                    const result = color_1.Color.parse(input);\n                    if (result.isOk()) {\n                        [input, color] = result.get();\n                        continue;\n                    }\n                }\n                if (isInset === undefined) {\n                    // isInset: inset?\n                    const result = keyword_1.Keyword.parse(\"inset\")(input);\n                    if (result.isOk()) {\n                        if (!withInset) {\n                            return alfa_result_1.Err.of(\"Inset is not allowed in this shadow\");\n                        }\n                        isInset = true;\n                        [input] = result.get();\n                        continue;\n                    }\n                }\n                break;\n            }\n            if (horizontal === undefined || vertical === undefined) {\n                return alfa_result_1.Err.of(\"Expected horizontal and vertical offset\");\n            }\n            return alfa_result_1.Result.of([\n                input,\n                Shadow.of(horizontal, vertical, blur ?? numeric_1.Length.of(0, \"px\"), spread ?? numeric_1.Length.of(0, \"px\"), color ?? keyword_1.Keyword.of(\"currentcolor\"), isInset ?? false),\n            ]);\n        };\n    }\n    Shadow.parse = parse;\n})(Shadow || (exports.Shadow = Shadow = {}));\n//# sourceMappingURL=shadow.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/shadow.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/shape/basic-shape.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/shape/basic-shape.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BasicShape = void 0;\nconst value_1 = __webpack_require__(/*! ../value */ \"./node_modules/@siteimprove/alfa-css/src/value/value.js\");\n/**\n * @internal\n */\nclass BasicShape extends value_1.Value {\n    constructor(kind, hasCalculation) {\n        super(\"basic-shape\", hasCalculation);\n        this._kind = kind;\n    }\n    /** @public (knip) */\n    get kind() {\n        return this._kind;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            kind: this._kind,\n        };\n    }\n}\nexports.BasicShape = BasicShape;\n//# sourceMappingURL=basic-shape.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/shape/basic-shape.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/shape/circle.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/shape/circle.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Circle = void 0;\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst syntax_1 = __webpack_require__(/*! ../../syntax */ \"./node_modules/@siteimprove/alfa-css/src/syntax/index.js\");\nconst keyword_1 = __webpack_require__(/*! ../keyword */ \"./node_modules/@siteimprove/alfa-css/src/value/keyword.js\");\nconst position_1 = __webpack_require__(/*! ../position */ \"./node_modules/@siteimprove/alfa-css/src/value/position/index.js\");\nconst value_1 = __webpack_require__(/*! ../value */ \"./node_modules/@siteimprove/alfa-css/src/value/value.js\");\nconst basic_shape_1 = __webpack_require__(/*! ./basic-shape */ \"./node_modules/@siteimprove/alfa-css/src/value/shape/basic-shape.js\");\nconst radius_1 = __webpack_require__(/*! ./radius */ \"./node_modules/@siteimprove/alfa-css/src/value/shape/radius.js\");\nconst { map, option, pair, right } = alfa_parser_1.Parser;\n/**\n * {@link https://drafts.csswg.org/css-shapes/#funcdef-circle}\n *\n * @public\n */\nclass Circle extends basic_shape_1.BasicShape {\n    static of(radius, center) {\n        return new Circle(radius, center);\n    }\n    constructor(radius, center) {\n        super(\"circle\", value_1.Value.hasCalculation(radius, center));\n        this._radius = radius;\n        this._center = center;\n    }\n    get radius() {\n        return this._radius;\n    }\n    get center() {\n        return this._center;\n    }\n    resolve(resolver) {\n        return new Circle(this._radius.resolve(resolver), this._center.resolve(resolver));\n    }\n    partiallyResolve(resolver) {\n        return new Circle(this._radius.partiallyResolve(resolver), this._center.partiallyResolve(resolver));\n    }\n    equals(value) {\n        return (value instanceof Circle &&\n            value._radius.equals(this._radius) &&\n            value._center.equals(this._center));\n    }\n    hash(hash) {\n        hash.writeHashable(this._radius).writeHashable(this._center);\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            radius: this._radius.toJSON(),\n            center: this._center.toJSON(),\n        };\n    }\n    toString() {\n        return `circle(${this._radius.toString()} at ${this._center.toString()})`;\n    }\n}\nexports.Circle = Circle;\n/**\n * @public\n */\n(function (Circle) {\n    function isCircle(value) {\n        return value instanceof Circle;\n    }\n    Circle.isCircle = isCircle;\n    Circle.parse = map(syntax_1.Function.parse(\"circle\", pair(option(radius_1.Radius.parse), option(right(option(syntax_1.Token.parseWhitespace), right(keyword_1.Keyword.parse(\"at\"), right(syntax_1.Token.parseWhitespace, position_1.Position.parse())))))), ([_, [radius, center]]) => Circle.of(radius.getOr(radius_1.Radius.of(keyword_1.Keyword.of(\"closest-side\"))), center.getOr(position_1.Position.of(keyword_1.Keyword.of(\"center\"), keyword_1.Keyword.of(\"center\")))));\n})(Circle || (exports.Circle = Circle = {}));\n//# sourceMappingURL=circle.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/shape/circle.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/shape/corner.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/shape/corner.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Corner = void 0;\nconst alfa_math_1 = __webpack_require__(/*! @siteimprove/alfa-math */ \"./node_modules/@siteimprove/alfa-math/src/index.js\");\nconst numeric_1 = __webpack_require__(/*! ../numeric */ \"./node_modules/@siteimprove/alfa-css/src/value/numeric/index.js\");\nconst value_1 = __webpack_require__(/*! ../value */ \"./node_modules/@siteimprove/alfa-css/src/value/value.js\");\n/**\n * @internal\n */\nvar Corner;\n(function (Corner) {\n    function hasCalculation(corner) {\n        return numeric_1.LengthPercentage.isLengthPercentage(corner)\n            ? value_1.Value.hasCalculation(corner)\n            : value_1.Value.hasCalculation(corner[0] || value_1.Value.hasCalculation(corner[1]));\n    }\n    Corner.hasCalculation = hasCalculation;\n    function resolve(resolver) {\n        function resolveAndClamp(radius) {\n            const resolved = numeric_1.LengthPercentage.resolve(resolver)(radius);\n            return numeric_1.LengthPercentage.of(alfa_math_1.Real.clamp(resolved.value, 0, Infinity), resolved.unit);\n        }\n        return (value) => numeric_1.LengthPercentage.isLengthPercentage(value)\n            ? resolveAndClamp(value)\n            : [resolveAndClamp(value[0]), resolveAndClamp(value[1])];\n    }\n    Corner.resolve = resolve;\n    function partiallyResolve(resolver) {\n        function resolveAndClamp(radius) {\n            const resolved = numeric_1.LengthPercentage.partiallyResolve(resolver)(radius);\n            if (resolved.hasCalculation()) {\n                return resolved;\n            }\n            const clamped = alfa_math_1.Real.clamp(resolved.value, 0, Infinity);\n            return numeric_1.LengthPercentage.isPercentage(resolved)\n                ? numeric_1.LengthPercentage.of(clamped)\n                : numeric_1.LengthPercentage.of(clamped, resolved.unit);\n        }\n        return (value) => numeric_1.LengthPercentage.isLengthPercentage(value)\n            ? resolveAndClamp(value)\n            : [resolveAndClamp(value[0]), resolveAndClamp(value[1])];\n    }\n    Corner.partiallyResolve = partiallyResolve;\n})(Corner || (exports.Corner = Corner = {}));\n//# sourceMappingURL=corner.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/shape/corner.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/shape/ellipse.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/shape/ellipse.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Ellipse = void 0;\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst syntax_1 = __webpack_require__(/*! ../../syntax */ \"./node_modules/@siteimprove/alfa-css/src/syntax/index.js\");\nconst keyword_1 = __webpack_require__(/*! ../keyword */ \"./node_modules/@siteimprove/alfa-css/src/value/keyword.js\");\nconst position_1 = __webpack_require__(/*! ../position */ \"./node_modules/@siteimprove/alfa-css/src/value/position/index.js\");\nconst value_1 = __webpack_require__(/*! ../value */ \"./node_modules/@siteimprove/alfa-css/src/value/value.js\");\nconst basic_shape_1 = __webpack_require__(/*! ./basic-shape */ \"./node_modules/@siteimprove/alfa-css/src/value/shape/basic-shape.js\");\nconst radius_1 = __webpack_require__(/*! ./radius */ \"./node_modules/@siteimprove/alfa-css/src/value/shape/radius.js\");\nconst { map, option, pair, right } = alfa_parser_1.Parser;\n/**\n * {@link https://drafts.csswg.org/css-shapes/#funcdef-ellipse}\n *\n * @public\n */\nclass Ellipse extends basic_shape_1.BasicShape {\n    static of(rx, ry, center) {\n        return new Ellipse(rx, ry, center);\n    }\n    constructor(rx, ry, center) {\n        super(\"ellipse\", \n        // TS sees the first as Value.HasCalculation<[R, R, P]>\n        value_1.Value.hasCalculation(rx, ry, center));\n        this._rx = rx;\n        this._ry = ry;\n        this._center = center;\n    }\n    get rx() {\n        return this._rx;\n    }\n    get ry() {\n        return this._ry;\n    }\n    get center() {\n        return this._center;\n    }\n    resolve(resolver) {\n        return new Ellipse(this._rx.resolve(resolver), this._ry.resolve(resolver), this._center.resolve(resolver));\n    }\n    partiallyResolve(resolver) {\n        return new Ellipse(this._rx.partiallyResolve(resolver), this._ry.partiallyResolve(resolver), this._center.partiallyResolve(resolver));\n    }\n    equals(value) {\n        return (value instanceof Ellipse &&\n            value._rx.equals(this._rx) &&\n            value._ry.equals(this._ry) &&\n            value._center.equals(this._center));\n    }\n    hash(hash) {\n        hash\n            .writeHashable(this._rx)\n            .writeHashable(this._ry)\n            .writeHashable(this._center);\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            rx: this._rx.toJSON(),\n            ry: this._ry.toJSON(),\n            center: this._center.toJSON(),\n        };\n    }\n    toString() {\n        return `ellipse(${this._rx} ${this._ry} at ${this._center})`;\n    }\n}\nexports.Ellipse = Ellipse;\n/**\n * @public\n */\n(function (Ellipse) {\n    function isEllipse(value) {\n        return value instanceof Ellipse;\n    }\n    Ellipse.isEllipse = isEllipse;\n    Ellipse.parse = map(syntax_1.Function.parse(\"ellipse\", pair(option(pair(radius_1.Radius.parse, right(syntax_1.Token.parseWhitespace, radius_1.Radius.parse))), option(right(option(syntax_1.Token.parseWhitespace), right(keyword_1.Keyword.parse(\"at\"), right(syntax_1.Token.parseWhitespace, position_1.Position.parse())))))), ([_, [radii, center]]) => {\n        const [rx, ry] = radii.getOr([\n            radius_1.Radius.of(keyword_1.Keyword.of(\"closest-side\")),\n            radius_1.Radius.of(keyword_1.Keyword.of(\"closest-side\")),\n        ]);\n        return Ellipse.of(rx, ry, center.getOr(position_1.Position.of(keyword_1.Keyword.of(\"center\"), keyword_1.Keyword.of(\"center\"))));\n    });\n})(Ellipse || (exports.Ellipse = Ellipse = {}));\n//# sourceMappingURL=ellipse.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/shape/ellipse.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/shape/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/shape/index.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./circle */ \"./node_modules/@siteimprove/alfa-css/src/value/shape/circle.js\"), exports);\n__exportStar(__webpack_require__(/*! ./ellipse */ \"./node_modules/@siteimprove/alfa-css/src/value/shape/ellipse.js\"), exports);\n__exportStar(__webpack_require__(/*! ./inset */ \"./node_modules/@siteimprove/alfa-css/src/value/shape/inset.js\"), exports);\n__exportStar(__webpack_require__(/*! ./polygon */ \"./node_modules/@siteimprove/alfa-css/src/value/shape/polygon.js\"), exports);\n__exportStar(__webpack_require__(/*! ./radius */ \"./node_modules/@siteimprove/alfa-css/src/value/shape/radius.js\"), exports);\n__exportStar(__webpack_require__(/*! ./rectangle */ \"./node_modules/@siteimprove/alfa-css/src/value/shape/rectangle.js\"), exports);\n__exportStar(__webpack_require__(/*! ./shape */ \"./node_modules/@siteimprove/alfa-css/src/value/shape/shape.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/shape/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/shape/inset.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/shape/inset.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Inset = void 0;\nconst alfa_array_1 = __webpack_require__(/*! @siteimprove/alfa-array */ \"./node_modules/@siteimprove/alfa-array/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst syntax_1 = __webpack_require__(/*! ../../syntax */ \"./node_modules/@siteimprove/alfa-css/src/syntax/index.js\");\nconst keyword_1 = __webpack_require__(/*! ../keyword */ \"./node_modules/@siteimprove/alfa-css/src/value/keyword.js\");\nconst numeric_1 = __webpack_require__(/*! ../numeric */ \"./node_modules/@siteimprove/alfa-css/src/value/numeric/index.js\");\nconst value_1 = __webpack_require__(/*! ../value */ \"./node_modules/@siteimprove/alfa-css/src/value/value.js\");\nconst basic_shape_1 = __webpack_require__(/*! ./basic-shape */ \"./node_modules/@siteimprove/alfa-css/src/value/shape/basic-shape.js\");\nconst corner_1 = __webpack_require__(/*! ./corner */ \"./node_modules/@siteimprove/alfa-css/src/value/shape/corner.js\");\nconst { delimited, filter, map, option, pair, right, separatedList } = alfa_parser_1.Parser;\nconst { parseDelim, parseWhitespace } = syntax_1.Token;\n/**\n * {@link https://drafts.csswg.org/css-shapes/#funcdef-inset}\n *\n * @public\n */\nclass Inset extends basic_shape_1.BasicShape {\n    static of(offsets, corners) {\n        return new Inset(offsets, corners);\n    }\n    constructor(offsets, corners) {\n        super(\"inset\", (value_1.Value.hasCalculation(...offsets) ||\n            corners.some((corners) => corners.some(corner_1.Corner.hasCalculation))));\n        this._offsets = offsets;\n        this._corners = corners;\n    }\n    get offsets() {\n        return this._offsets;\n    }\n    get corners() {\n        return this._corners;\n    }\n    get top() {\n        return this._offsets[0];\n    }\n    get right() {\n        return this._offsets[1];\n    }\n    get bottom() {\n        return this._offsets[2];\n    }\n    get left() {\n        return this._offsets[3];\n    }\n    get topLeft() {\n        return this._corners.map((corners) => corners[0]);\n    }\n    get topRight() {\n        return this._corners.map((corners) => corners[1]);\n    }\n    get bottomRight() {\n        return this._corners.map((corners) => corners[2]);\n    }\n    get bottomLeft() {\n        return this._corners.map((corners) => corners[3]);\n    }\n    resolve(resolver) {\n        // map is losing the length of the arrays\n        return new Inset(this._offsets.map(numeric_1.LengthPercentage.resolve(resolver)), this._corners.map((corners) => corners.map(corner_1.Corner.resolve(resolver))));\n    }\n    partiallyResolve(resolver) {\n        return new Inset(this._offsets.map(numeric_1.LengthPercentage.partiallyResolve(resolver)), this._corners.map((corners) => corners.map(corner_1.Corner.partiallyResolve(resolver))));\n    }\n    equals(value) {\n        return (value instanceof Inset &&\n            alfa_array_1.Array.equals(value._offsets, this._offsets) &&\n            value._corners.equals(this._corners));\n    }\n    hash(hash) {\n        alfa_array_1.Array.hash(this._offsets, hash);\n        hash.writeHashable(this._corners);\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            offsets: alfa_array_1.Array.toJSON(this._offsets),\n            corners: this._corners.toJSON(),\n        };\n    }\n    toString() {\n        const result = `ellipse(${this.top} ${this.right} ${this.bottom} ${this.left}`;\n        for (const corners of this._corners) {\n            // If at least one corner has both horizontal and vertical radius, we need\n            // to split things.\n            if (corners.some((corner) => alfa_array_1.Array.isArray(corner))) {\n                const [tlh, tlv] = alfa_array_1.Array.isArray(this.topLeft)\n                    ? this.topLeft\n                    : [this.topLeft, this.topLeft];\n                const [trh, trv] = alfa_array_1.Array.isArray(this.topRight)\n                    ? this.topRight\n                    : [this.topRight, this.topRight];\n                const [brh, brv] = alfa_array_1.Array.isArray(this.bottomRight)\n                    ? this.bottomRight\n                    : [this.bottomRight, this.bottomRight];\n                const [blh, blv] = alfa_array_1.Array.isArray(this.bottomLeft)\n                    ? this.bottomLeft\n                    : [this.bottomLeft, this.bottomLeft];\n                return (result + `${tlh} ${trh} ${brh} ${blh} / ${tlv} ${trv} ${brv} ${blv})`);\n            }\n            else {\n                return (result +\n                    `${this.topLeft} ${this.topRight} ${this.bottomRight} ${this.bottomLeft})`);\n            }\n        }\n        return result + \")\";\n    }\n}\nexports.Inset = Inset;\n/**\n * @public\n */\n(function (Inset) {\n    function isInset(value) {\n        return value instanceof Inset;\n    }\n    Inset.isInset = isInset;\n    const parseOffsets = map(separatedList(numeric_1.LengthPercentage.parse, option(parseWhitespace), 1, 4), ([top, right = top, bottom = top, left = right]) => [top, right, bottom, left]);\n    const parseRadius = filter(numeric_1.LengthPercentage.parse, \n    // https://drafts.csswg.org/css-values/#calc-range\n    (value) => value.hasCalculation() || value.value >= 0, () => \"Radius cannot be negative\");\n    const parseRadii = map(separatedList(parseRadius, option(parseWhitespace), 1, 4), ([topLeft, topRight = topLeft, bottomRight = topLeft, bottomLeft = topRight,]) => [topLeft, topRight, bottomRight, bottomLeft]);\n    const parseCorners = map(pair(parseRadii, option(right(delimited(option(parseWhitespace), parseDelim(\"/\")), parseRadii))), ([horizontal, vertical]) => vertical\n        .map((vertical) => [\n        [horizontal[0], vertical[0]],\n        [horizontal[1], vertical[1]],\n        [horizontal[2], vertical[2]],\n        [horizontal[3], vertical[3]],\n    ])\n        .getOr(horizontal));\n    Inset.parse = map(syntax_1.Function.parse(\"inset\", pair(parseOffsets, option(right(option(syntax_1.Token.parseWhitespace), right(keyword_1.Keyword.parse(\"round\"), right(syntax_1.Token.parseWhitespace, parseCorners)))))), ([_, [offsets, corners]]) => Inset.of(offsets, corners));\n})(Inset || (exports.Inset = Inset = {}));\n//# sourceMappingURL=inset.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/shape/inset.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/shape/polygon.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/shape/polygon.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Polygon = void 0;\nconst alfa_array_1 = __webpack_require__(/*! @siteimprove/alfa-array */ \"./node_modules/@siteimprove/alfa-array/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst syntax_1 = __webpack_require__(/*! ../../syntax */ \"./node_modules/@siteimprove/alfa-css/src/syntax/index.js\");\nconst keyword_1 = __webpack_require__(/*! ../keyword */ \"./node_modules/@siteimprove/alfa-css/src/value/keyword.js\");\nconst numeric_1 = __webpack_require__(/*! ../numeric */ \"./node_modules/@siteimprove/alfa-css/src/value/numeric/index.js\");\nconst value_1 = __webpack_require__(/*! ../value */ \"./node_modules/@siteimprove/alfa-css/src/value/value.js\");\nconst basic_shape_1 = __webpack_require__(/*! ./basic-shape */ \"./node_modules/@siteimprove/alfa-css/src/value/shape/basic-shape.js\");\nconst { left, map, option, pair, right, separated, separatedList } = alfa_parser_1.Parser;\nconst { parseComma, parseWhitespace } = syntax_1.Token;\n/**\n * {@link https://drafts.csswg.org/css-shapes/#funcdef-polygon}\n *\n * @public\n */\nclass Polygon extends basic_shape_1.BasicShape {\n    static of(fill, vertices) {\n        return new Polygon(fill, alfa_array_1.Array.from(vertices));\n    }\n    constructor(fill, vertices) {\n        super(\"polygon\", vertices.reduce((calc, vertex) => calc || value_1.Value.hasCalculation(...vertex), false));\n        this._fill = fill;\n        this._vertices = vertices;\n    }\n    get fill() {\n        return this._fill;\n    }\n    get vertices() {\n        return this._vertices;\n    }\n    resolve(resolver) {\n        return new Polygon(this._fill, this._vertices.map((vertex) => \n        // map loses the fact that vertex has exactly two elements.\n        vertex.map(numeric_1.LengthPercentage.resolve(resolver))));\n    }\n    partiallyResolve(resolver) {\n        return new Polygon(this._fill, this._vertices.map((vertex) => \n        // map loses the fact that vertex has exactly two elements.\n        vertex.map(numeric_1.LengthPercentage.partiallyResolve(resolver))));\n    }\n    equals(value) {\n        return (value instanceof Polygon &&\n            value._fill.equals(this._fill) &&\n            alfa_array_1.Array.equals(value._vertices, this._vertices));\n    }\n    hash(hash) {\n        hash.writeHashable(this._fill);\n        alfa_array_1.Array.hash(this._vertices, hash);\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            fill: this._fill.toJSON(),\n            vertices: alfa_array_1.Array.toJSON(this._vertices),\n        };\n    }\n    toString() {\n        const fill = this._fill.reduce((_, fill) => `${fill}, `, \"\");\n        const vertices = this._vertices.map(([h, v]) => `${h} ${v}`).join(\" \");\n        return `polygon(${fill}${vertices})`;\n    }\n}\nexports.Polygon = Polygon;\n/**\n * @public\n */\n(function (Polygon) {\n    function isPolygon(value) {\n        return value instanceof Polygon;\n    }\n    Polygon.isPolygon = isPolygon;\n    const parseVertex = separated(numeric_1.LengthPercentage.parse, parseWhitespace, numeric_1.LengthPercentage.parse);\n    Polygon.parse = map(syntax_1.Function.parse(\"polygon\", pair(option(left(keyword_1.Keyword.parse(\"nonzero\", \"evenodd\"), parseComma)), right(option(parseWhitespace), separatedList(parseVertex, parseWhitespace)))), ([_, [fill, vertices]]) => Polygon.of(fill, vertices));\n})(Polygon || (exports.Polygon = Polygon = {}));\n//# sourceMappingURL=polygon.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/shape/polygon.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/shape/radius.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/shape/radius.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Radius = void 0;\nconst alfa_math_1 = __webpack_require__(/*! @siteimprove/alfa-math */ \"./node_modules/@siteimprove/alfa-math/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst keyword_1 = __webpack_require__(/*! ../keyword */ \"./node_modules/@siteimprove/alfa-css/src/value/keyword.js\");\nconst numeric_1 = __webpack_require__(/*! ../numeric */ \"./node_modules/@siteimprove/alfa-css/src/value/numeric/index.js\");\nconst value_1 = __webpack_require__(/*! ../value */ \"./node_modules/@siteimprove/alfa-css/src/value/value.js\");\nconst basic_shape_1 = __webpack_require__(/*! ./basic-shape */ \"./node_modules/@siteimprove/alfa-css/src/value/shape/basic-shape.js\");\nconst { either, filter, map } = alfa_parser_1.Parser;\n/**\n * {@link https://drafts.csswg.org/css-shapes/#typedef-shape-radius}\n *\n * @public\n */\nclass Radius extends basic_shape_1.BasicShape {\n    static of(value) {\n        return new Radius(value);\n    }\n    constructor(value) {\n        super(\"radius\", value_1.Value.hasCalculation(value));\n        this._value = value;\n    }\n    get value() {\n        return this._value;\n    }\n    resolve(resolver) {\n        if (keyword_1.Keyword.isKeyword(this._value)) {\n            // TS lose the fact that if this._value is a Side, then this must be a\n            // Radius<Side>…\n            return this;\n        }\n        const resolved = numeric_1.LengthPercentage.resolve(resolver)(this._value);\n        return new Radius(numeric_1.LengthPercentage.of(alfa_math_1.Real.clamp(resolved.value, 0, Infinity), resolved.unit));\n    }\n    partiallyResolve(resolver) {\n        if (keyword_1.Keyword.isKeyword(this._value)) {\n            // TS lose the fact that if this._value is a Side, then this must be a\n            // Radius<Side>…\n            return this;\n        }\n        const resolved = numeric_1.LengthPercentage.partiallyResolve(resolver)(this._value);\n        if (resolved.hasCalculation()) {\n            return Radius.of(resolved);\n        }\n        const clamped = alfa_math_1.Real.clamp(resolved.value, 0, Infinity);\n        return Radius.of(numeric_1.LengthPercentage.isPercentage(resolved)\n            ? numeric_1.LengthPercentage.of(clamped)\n            : numeric_1.LengthPercentage.of(clamped, resolved.unit));\n    }\n    equals(value) {\n        return value instanceof Radius && value._value.equals(this._value);\n    }\n    hash(hash) {\n        hash.writeHashable(this._value);\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            value: this._value.toJSON(),\n        };\n    }\n    toString() {\n        return this.value.toString();\n    }\n}\nexports.Radius = Radius;\n/**\n * @public\n */\n(function (Radius) {\n    function isRadius(value) {\n        return value instanceof Radius;\n    }\n    Radius.isRadius = isRadius;\n    Radius.parse = map(either(filter(numeric_1.LengthPercentage.parse, \n    // https://drafts.csswg.org/css-values/#calc-range\n    (value) => value.hasCalculation() || value.value >= 0, () => \"Radius cannot be negative\"), keyword_1.Keyword.parse(\"closest-side\", \"farthest-side\")), (radius) => Radius.of(radius));\n})(Radius || (exports.Radius = Radius = {}));\n//# sourceMappingURL=radius.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/shape/radius.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/shape/rectangle.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/shape/rectangle.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Rectangle = void 0;\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst syntax_1 = __webpack_require__(/*! ../../syntax */ \"./node_modules/@siteimprove/alfa-css/src/syntax/index.js\");\nconst keyword_1 = __webpack_require__(/*! ../keyword */ \"./node_modules/@siteimprove/alfa-css/src/value/keyword.js\");\nconst numeric_1 = __webpack_require__(/*! ../numeric */ \"./node_modules/@siteimprove/alfa-css/src/value/numeric/index.js\");\nconst value_1 = __webpack_require__(/*! ../value */ \"./node_modules/@siteimprove/alfa-css/src/value/value.js\");\nconst basic_shape_1 = __webpack_require__(/*! ./basic-shape */ \"./node_modules/@siteimprove/alfa-css/src/value/shape/basic-shape.js\");\nconst { either, map, option, separatedList } = alfa_parser_1.Parser;\n/**\n * {@link https://drafts.fxtf.org/css-masking/#funcdef-clip-rect}\n *\n * @public\n * @deprecated Deprecated as of CSS Masking Module Level 1\n */\nclass Rectangle extends basic_shape_1.BasicShape {\n    static of(top, right, bottom, left) {\n        return new Rectangle(top, right, bottom, left);\n    }\n    constructor(top, right, bottom, left) {\n        super(\"rectangle\", value_1.Value.hasCalculation(top, right, bottom, left));\n        this._top = top;\n        this._right = right;\n        this._bottom = bottom;\n        this._left = left;\n    }\n    get top() {\n        return this._top;\n    }\n    get right() {\n        return this._right;\n    }\n    get bottom() {\n        return this._bottom;\n    }\n    get left() {\n        return this._left;\n    }\n    resolve(resolver) {\n        return new Rectangle(this._top.resolve(resolver), this._right.resolve(resolver), this._bottom.resolve(resolver), this._left.resolve(resolver));\n    }\n    equals(value) {\n        return (value instanceof Rectangle &&\n            value._top.equals(this._top) &&\n            value._right.equals(this._right) &&\n            value._bottom.equals(this._bottom) &&\n            value._left.equals(this._left));\n    }\n    hash(hash) {\n        hash\n            .writeHashable(this._top)\n            .writeHashable(this._right)\n            .writeHashable(this._bottom)\n            .writeHashable(this._left);\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            top: this._top.toJSON(),\n            right: this._right.toJSON(),\n            bottom: this._bottom.toJSON(),\n            left: this._left.toJSON(),\n        };\n    }\n    toString() {\n        return `rect(${this._top}, ${this._right}, ${this._bottom}, ${this._left})`;\n    }\n}\nexports.Rectangle = Rectangle;\n/**\n * @public\n * @deprecated Deprecated as of CSS Masking Module Level 1\n */\n(function (Rectangle) {\n    function isRectangle(value) {\n        return value instanceof Rectangle;\n    }\n    Rectangle.isRectangle = isRectangle;\n    const parseLengthAuto = either(numeric_1.Length.parse, keyword_1.Keyword.parse(\"auto\"));\n    Rectangle.parse = map(syntax_1.Function.parse(\"rect\", either(separatedList(parseLengthAuto, option(syntax_1.Token.parseWhitespace), 4, 4), separatedList(parseLengthAuto, syntax_1.Comma.parse, 4, 4))), ([_, [top, right, bottom, left]]) => Rectangle.of(top, right, bottom, left));\n})(Rectangle || (exports.Rectangle = Rectangle = {}));\n//# sourceMappingURL=rectangle.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/shape/rectangle.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/shape/shape.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/shape/shape.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Shape = void 0;\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_selective_1 = __webpack_require__(/*! @siteimprove/alfa-selective */ \"./node_modules/@siteimprove/alfa-selective/src/index.js\");\nconst value_1 = __webpack_require__(/*! ../value */ \"./node_modules/@siteimprove/alfa-css/src/value/value.js\");\nconst syntax_1 = __webpack_require__(/*! ../../syntax */ \"./node_modules/@siteimprove/alfa-css/src/syntax/index.js\");\nconst box_1 = __webpack_require__(/*! ../box */ \"./node_modules/@siteimprove/alfa-css/src/value/box.js\");\nconst keyword_1 = __webpack_require__(/*! ../keyword */ \"./node_modules/@siteimprove/alfa-css/src/value/keyword.js\");\nconst circle_1 = __webpack_require__(/*! ./circle */ \"./node_modules/@siteimprove/alfa-css/src/value/shape/circle.js\");\nconst inset_1 = __webpack_require__(/*! ./inset */ \"./node_modules/@siteimprove/alfa-css/src/value/shape/inset.js\");\nconst rectangle_1 = __webpack_require__(/*! ./rectangle */ \"./node_modules/@siteimprove/alfa-css/src/value/shape/rectangle.js\");\nconst ellipse_1 = __webpack_require__(/*! ./ellipse */ \"./node_modules/@siteimprove/alfa-css/src/value/shape/ellipse.js\");\nconst polygon_1 = __webpack_require__(/*! ./polygon */ \"./node_modules/@siteimprove/alfa-css/src/value/shape/polygon.js\");\nconst { either } = alfa_parser_1.Parser;\n/**\n * @public\n */\nclass Shape extends value_1.Value {\n    static of(shape, box) {\n        return new Shape(shape, box);\n    }\n    constructor(shape, box) {\n        super(\"shape\", value_1.Value.hasCalculation(shape));\n        this._shape = shape;\n        this._box = box;\n    }\n    get shape() {\n        return this._shape;\n    }\n    get box() {\n        return this._box;\n    }\n    resolve(resolver) {\n        return new Shape(this._shape.resolve(resolver), this._box);\n    }\n    partiallyResolve(resolver) {\n        return Shape.of(Shape.Basic.partiallyResolve(resolver)(this._shape), this._box);\n    }\n    equals(value) {\n        return (value instanceof Shape &&\n            value._shape.equals(this._shape) &&\n            value._box.equals(this._box));\n    }\n    hash(hash) {\n        hash.writeHashable(this._shape).writeHashable(this._box);\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            shape: this._shape.toJSON(),\n            box: this._box.toJSON(),\n        };\n    }\n    toString() {\n        return `${this._shape.toString()} ${this._box.toString()}`;\n    }\n}\nexports.Shape = Shape;\n/**\n * @public\n */\n(function (Shape) {\n    let Basic;\n    (function (Basic) {\n        function partiallyResolve(resolver) {\n            return (value) => alfa_selective_1.Selective.of(value)\n                .if(rectangle_1.Rectangle.isRectangle, (rectangle) => rectangle.resolve(resolver))\n                .else((value) => value.partiallyResolve(resolver))\n                .get();\n        }\n        Basic.partiallyResolve = partiallyResolve;\n        /**\n         * @remarks\n         * This does not parse the deprecated `rect()` shape.\n         *\n         * @internal\n         */\n        Basic.parse = either(circle_1.Circle.parse, ellipse_1.Ellipse.parse, inset_1.Inset.parse, polygon_1.Polygon.parse);\n    })(Basic = Shape.Basic || (Shape.Basic = {}));\n    /**\n     * @remarks\n     * This does not parse the deprecated `rect()` shape.\n     */\n    Shape.parse = (input) => {\n        let shape;\n        let box;\n        const skipWhitespace = () => {\n            for (const [remainder] of syntax_1.Token.parseWhitespace(input)) {\n                input = remainder;\n            }\n        };\n        while (true) {\n            skipWhitespace();\n            if (shape === undefined) {\n                const result = Basic.parse(input);\n                if (result.isOk()) {\n                    [input, shape] = result.get();\n                    continue;\n                }\n            }\n            if (box === undefined) {\n                const result = box_1.Box.parseGeometry(input);\n                if (result.isOk()) {\n                    [input, box] = result.get();\n                    continue;\n                }\n            }\n            break;\n        }\n        // Even though `<geometry-box>` alone is accepted by the specs, it seems to\n        // have no browser support.\n        if (shape === undefined) {\n            return alfa_result_1.Err.of(\"Expected a shape\");\n        }\n        return alfa_result_1.Result.of([input, Shape.of(shape, box ?? keyword_1.Keyword.of(\"border-box\"))]);\n    };\n})(Shape || (exports.Shape = Shape = {}));\n//# sourceMappingURL=shape.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/shape/shape.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/string.js":
/*!****************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/string.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.String = void 0;\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst syntax_1 = __webpack_require__(/*! ../syntax */ \"./node_modules/@siteimprove/alfa-css/src/syntax/index.js\");\nconst value_1 = __webpack_require__(/*! ./value */ \"./node_modules/@siteimprove/alfa-css/src/value/value.js\");\nconst { map } = alfa_parser_1.Parser;\n/**\n * {@link https://drafts.csswg.org/css-values/#strings}\n *\n * @public\n */\nclass String extends value_1.Value {\n    static of(value) {\n        return new String(value);\n    }\n    constructor(value) {\n        super(\"string\", false);\n        this._value = value;\n    }\n    get value() {\n        return this._value;\n    }\n    resolve() {\n        return this;\n    }\n    equals(value) {\n        return value instanceof String && value._value === this._value;\n    }\n    hash(hash) {\n        hash.writeString(this._value);\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            value: this._value,\n        };\n    }\n    toString() {\n        return `\"${this._value.replace(/\"/g, '\\\\\"')}\"`;\n    }\n}\nexports.String = String;\n/**\n * @public\n */\n(function (String) {\n    function isString(value) {\n        return value instanceof String;\n    }\n    String.isString = isString;\n    String.parse = map(syntax_1.Token.parseString(), (string) => String.of(string.value));\n})(String || (exports.String = String = {}));\n//# sourceMappingURL=string.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/string.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/transform/function.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/transform/function.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Function = void 0;\nconst value_1 = __webpack_require__(/*! ../value */ \"./node_modules/@siteimprove/alfa-css/src/value/value.js\");\n/**\n * @internal\n */\nclass Function extends value_1.Value {\n    constructor(kind, hasCalculation) {\n        super(\"transform\", hasCalculation);\n        this._kind = kind;\n    }\n    get kind() {\n        return this._kind;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            kind: this._kind,\n        };\n    }\n}\nexports.Function = Function;\n//# sourceMappingURL=function.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/transform/function.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/transform/index.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/transform/index.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./transform */ \"./node_modules/@siteimprove/alfa-css/src/value/transform/transform.js\"), exports);\n__exportStar(__webpack_require__(/*! ./matrix */ \"./node_modules/@siteimprove/alfa-css/src/value/transform/matrix.js\"), exports);\n__exportStar(__webpack_require__(/*! ./perspective */ \"./node_modules/@siteimprove/alfa-css/src/value/transform/perspective.js\"), exports);\n__exportStar(__webpack_require__(/*! ./rotate */ \"./node_modules/@siteimprove/alfa-css/src/value/transform/rotate.js\"), exports);\n__exportStar(__webpack_require__(/*! ./scale */ \"./node_modules/@siteimprove/alfa-css/src/value/transform/scale.js\"), exports);\n__exportStar(__webpack_require__(/*! ./skew */ \"./node_modules/@siteimprove/alfa-css/src/value/transform/skew.js\"), exports);\n__exportStar(__webpack_require__(/*! ./translate */ \"./node_modules/@siteimprove/alfa-css/src/value/transform/translate.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/transform/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/transform/matrix.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/transform/matrix.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Matrix = void 0;\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst syntax_1 = __webpack_require__(/*! ../../syntax */ \"./node_modules/@siteimprove/alfa-css/src/syntax/index.js\");\nconst collection_1 = __webpack_require__(/*! ../collection */ \"./node_modules/@siteimprove/alfa-css/src/value/collection/index.js\");\nconst numeric_1 = __webpack_require__(/*! ../numeric */ \"./node_modules/@siteimprove/alfa-css/src/value/numeric/index.js\");\nconst function_1 = __webpack_require__(/*! ./function */ \"./node_modules/@siteimprove/alfa-css/src/value/transform/function.js\");\nconst { map, either } = alfa_parser_1.Parser;\n/**\n * @public\n */\nclass Matrix extends function_1.Function {\n    static of(...values) {\n        return new Matrix(values.map((row) => row.map((value) => value.resolve())));\n    }\n    constructor(values) {\n        super(\"matrix\", false);\n        this._values = values;\n    }\n    get values() {\n        return this._values;\n    }\n    resolve() {\n        return this;\n    }\n    equals(value) {\n        return (value instanceof Matrix &&\n            value._values.every((row, i) => row.every((value, j) => value.equals(this._values[i][j]))));\n    }\n    hash(hash) {\n        for (const row of this._values) {\n            for (const number of row) {\n                hash.writeHashable(number);\n            }\n        }\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            values: this._values.map((row) => row.map((value) => value.toJSON())),\n        };\n    }\n    toString() {\n        const [[a, e, i, m], [b, f, j, n], [c, g, k, o], [d, h, l, p]] = this._values;\n        if (c.value === 0 &&\n            d.value === 0 &&\n            g.value === 0 &&\n            h.value === 0 &&\n            i.value === 0 &&\n            j.value === 0 &&\n            k.value === 1 &&\n            l.value === 0 &&\n            o.value === 0 &&\n            p.value === 1) {\n            return `matrix(${[a, b, e, f, m, n].join(\", \")})`;\n        }\n        return `matrix3d(${[a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p].join(\", \")})`;\n    }\n}\nexports.Matrix = Matrix;\n/**\n * @public\n */\n(function (Matrix) {\n    function isMatrix(value) {\n        return value instanceof Matrix;\n    }\n    Matrix.isMatrix = isMatrix;\n    const _0 = numeric_1.Number.of(0);\n    const _1 = numeric_1.Number.of(1);\n    const parseValues = (name, quantity) => syntax_1.Function.parse(name, map(collection_1.List.parseCommaSeparated(numeric_1.Number.parse, quantity, quantity), (list) => list.values));\n    /**\n     * {@link https://drafts.csswg.org/css-transforms/#funcdef-transform-matrix}\n     */\n    const parseMatrix = map(parseValues(\"matrix\", 6), (result) => {\n        const [_, [_a, _b, _c, _d, _e, _f]] = result;\n        return Matrix.of([_a, _c, _0, _e], [_b, _d, _0, _f], [_0, _0, _1, _0], [_0, _0, _0, _1]);\n    });\n    /**\n     * {@link https://drafts.csswg.org/css-transforms-2/#funcdef-matrix3d}\n     */\n    const parseMatrix3d = map(parseValues(\"matrix3d\", 16), (result) => {\n        const [_, [_a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m, _n, _o, _p],] = result;\n        return Matrix.of([_a, _e, _i, _m], [_b, _f, _j, _n], [_c, _g, _k, _o], [_d, _h, _l, _p]);\n    });\n    Matrix.parse = either(parseMatrix, parseMatrix3d);\n})(Matrix || (exports.Matrix = Matrix = {}));\n//# sourceMappingURL=matrix.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/transform/matrix.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/transform/perspective.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/transform/perspective.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Perspective = void 0;\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst syntax_1 = __webpack_require__(/*! ../../syntax */ \"./node_modules/@siteimprove/alfa-css/src/syntax/index.js\");\nconst numeric_1 = __webpack_require__(/*! ../numeric */ \"./node_modules/@siteimprove/alfa-css/src/value/numeric/index.js\");\nconst value_1 = __webpack_require__(/*! ../value */ \"./node_modules/@siteimprove/alfa-css/src/value/value.js\");\nconst function_1 = __webpack_require__(/*! ./function */ \"./node_modules/@siteimprove/alfa-css/src/value/transform/function.js\");\nconst { map, filter } = alfa_parser_1.Parser;\n/**\n * @public\n */\nclass Perspective extends function_1.Function {\n    static of(depth) {\n        return new Perspective(depth);\n    }\n    constructor(depth) {\n        super(\"perspective\", value_1.Value.hasCalculation(depth));\n        this._depth = depth;\n    }\n    get depth() {\n        return this._depth;\n    }\n    resolve(resolver) {\n        return new Perspective(this._depth.resolve(resolver));\n    }\n    equals(value) {\n        return value instanceof Perspective && value._depth.equals(this._depth);\n    }\n    hash(hash) {\n        hash.writeHashable(this._depth);\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            depth: this._depth.toJSON(),\n        };\n    }\n    toString() {\n        return `perspective(${this._depth})`;\n    }\n}\nexports.Perspective = Perspective;\n/**\n * @public\n */\n(function (Perspective) {\n    function isPerspective(value) {\n        return value instanceof Perspective;\n    }\n    Perspective.isPerspective = isPerspective;\n    /**\n     * {@link https://drafts.csswg.org/css-transforms-2/#funcdef-perspective}\n     */\n    Perspective.parse = map(syntax_1.Function.parse(\"perspective\", filter(numeric_1.Length.parse, \n    // {@link https://drafts.csswg.org/css-values/#calc-range}\n    (length) => length.hasCalculation() || length.value >= 0, () => \"Depth cannot be less than 0\")), ([_, depth]) => Perspective.of(depth));\n})(Perspective || (exports.Perspective = Perspective = {}));\n//# sourceMappingURL=perspective.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/transform/perspective.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/transform/rotate.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/transform/rotate.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Rotate = void 0;\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst syntax_1 = __webpack_require__(/*! ../../syntax */ \"./node_modules/@siteimprove/alfa-css/src/syntax/index.js\");\nconst collection_1 = __webpack_require__(/*! ../collection */ \"./node_modules/@siteimprove/alfa-css/src/value/collection/index.js\");\nconst numeric_1 = __webpack_require__(/*! ../numeric */ \"./node_modules/@siteimprove/alfa-css/src/value/numeric/index.js\");\nconst function_1 = __webpack_require__(/*! ./function */ \"./node_modules/@siteimprove/alfa-css/src/value/transform/function.js\");\nconst { map, right, pair, either, delimited, option } = alfa_parser_1.Parser;\n/**\n * @public\n */\nclass Rotate extends function_1.Function {\n    static of(x, y, z, angle) {\n        return new Rotate(x.resolve(), y.resolve(), z.resolve(), angle.resolve());\n    }\n    constructor(x, y, z, angle) {\n        super(\"rotate\", false);\n        this._x = x;\n        this._y = y;\n        this._z = z;\n        this._angle = angle;\n    }\n    get x() {\n        return this._x;\n    }\n    get y() {\n        return this._y;\n    }\n    get z() {\n        return this._z;\n    }\n    get angle() {\n        return this._angle;\n    }\n    resolve() {\n        return this;\n    }\n    equals(value) {\n        return (value instanceof Rotate &&\n            value._x.equals(this._x) &&\n            value._y.equals(this._y) &&\n            value._z.equals(this._z) &&\n            value._angle.equals(this._angle));\n    }\n    hash(hash) {\n        hash\n            .writeHashable(this._x)\n            .writeHashable(this._y)\n            .writeHashable(this._z)\n            .writeHashable(this._angle);\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            x: this._x.toJSON(),\n            y: this._y.toJSON(),\n            z: this._z.toJSON(),\n            angle: this._angle.toJSON(),\n        };\n    }\n    toString() {\n        if (this._x.value === 0 && this._y.value === 0 && this._z.value === 1) {\n            return `rotate(${this._angle})`;\n        }\n        return `rotate3d(${this._x}, ${this._y}, ${this._z}, ${this._angle})`;\n    }\n}\nexports.Rotate = Rotate;\n/**\n * @public\n */\n(function (Rotate) {\n    function isRotate(value) {\n        return value instanceof Rotate;\n    }\n    Rotate.isRotate = isRotate;\n    const _0 = numeric_1.Number.of(0);\n    const _1 = numeric_1.Number.of(1);\n    const parseAngleOrZero = either(numeric_1.Angle.parse, map(numeric_1.Number.parseZero, () => numeric_1.Angle.of(0, \"deg\")));\n    const parseAxis = (name) => map(syntax_1.Function.parse(name, parseAngleOrZero), ([_, angle]) => angle);\n    /**\n     * {@link https://drafts.csswg.org/css-transforms/#funcdef-transform-rotate}\n     */\n    const parseRotate = map(parseAxis(\"rotate\"), (angle) => Rotate.of(_0, _0, _1, angle));\n    /**\n     * {@link https://drafts.csswg.org/css-transforms-2/#funcdef-rotatex}\n     */\n    const parseRotateX = map(parseAxis(\"rotateX\"), (angle) => Rotate.of(_1, _0, _0, angle));\n    /**\n     * {@link https://drafts.csswg.org/css-transforms-2/#funcdef-rotatey}\n     */\n    const parseRotateY = map(parseAxis(\"rotateY\"), (angle) => Rotate.of(_0, _1, _0, angle));\n    /**\n     * {@link https://drafts.csswg.org/css-transforms-2/#funcdef-rotatey}\n     */\n    const parseRotateZ = map(parseAxis(\"rotateZ\"), (angle) => Rotate.of(_0, _0, _1, angle));\n    /**\n     * {@link https://drafts.csswg.org/css-transforms-2/#funcdef-rotate3d}\n     */\n    const parseRotate3d = map(syntax_1.Function.parse(\"rotate3d\", pair(map(collection_1.List.parseCommaSeparated(numeric_1.Number.parse, 3, 3), (list) => list.values), right(delimited(option(syntax_1.Token.parseWhitespace), syntax_1.Token.parseComma), parseAngleOrZero))), (result) => {\n        const [_, [[x, y, z], angle]] = result;\n        return Rotate.of(x, y, z, angle);\n    });\n    Rotate.parse = either(parseRotate, parseRotateX, parseRotateY, parseRotateZ, parseRotate3d);\n})(Rotate || (exports.Rotate = Rotate = {}));\n//# sourceMappingURL=rotate.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/transform/rotate.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/transform/scale.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/transform/scale.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Scale = void 0;\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst syntax_1 = __webpack_require__(/*! ../../syntax */ \"./node_modules/@siteimprove/alfa-css/src/syntax/index.js\");\nconst collection_1 = __webpack_require__(/*! ../collection */ \"./node_modules/@siteimprove/alfa-css/src/value/collection/index.js\");\nconst numeric_1 = __webpack_require__(/*! ../numeric */ \"./node_modules/@siteimprove/alfa-css/src/value/numeric/index.js\");\nconst function_1 = __webpack_require__(/*! ./function */ \"./node_modules/@siteimprove/alfa-css/src/value/transform/function.js\");\nconst { map, either } = alfa_parser_1.Parser;\n/**\n * @public\n */\nclass Scale extends function_1.Function {\n    static of(x, y) {\n        return new Scale(x.resolve(), y.resolve());\n    }\n    constructor(x, y) {\n        super(\"scale\", false);\n        this._x = x;\n        this._y = y;\n    }\n    get kind() {\n        return \"scale\";\n    }\n    get x() {\n        return this._x;\n    }\n    get y() {\n        return this._y;\n    }\n    resolve() {\n        return this;\n    }\n    equals(value) {\n        return (value instanceof Scale &&\n            value._x.equals(this._x) &&\n            value._y.equals(this._y));\n    }\n    hash(hash) {\n        hash.writeHashable(this._x).writeHashable(this._y);\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            x: this._x.toJSON(),\n            y: this._y.toJSON(),\n        };\n    }\n    toString() {\n        if (this._x.value === this._y.value) {\n            return `scale(${this._x})`;\n        }\n        if (this._y.value === 1) {\n            return `scaleX(${this._x})`;\n        }\n        if (this._x.value === 1) {\n            return `scaleY(${this._y})`;\n        }\n        return `scale(${this._x}, ${this._y})`;\n    }\n}\nexports.Scale = Scale;\n/**\n * @public\n */\n(function (Scale) {\n    function isScale(value) {\n        return value instanceof Scale;\n    }\n    Scale.isScale = isScale;\n    /**\n     * {@link https://drafts.csswg.org/css-transforms/#funcdef-transform-scale}\n     */\n    const parseScale = map(syntax_1.Function.parse(\"scale\", map(collection_1.List.parseCommaSeparated(numeric_1.Number.parse, 1, 2), (list) => list.values)), ([_, [x, y]]) => Scale.of(x, y ?? x));\n    /**\n     * {@link https://drafts.csswg.org/css-transforms/#funcdef-transform-scalex}\n     */\n    const parseScaleX = map(syntax_1.Function.parse(\"scaleX\", numeric_1.Number.parse), ([_, x]) => Scale.of(x, numeric_1.Number.of(1)));\n    /**\n     * {@link https://drafts.csswg.org/css-transforms/#funcdef-transform-scaley}\n     */\n    const parseScaleY = map(syntax_1.Function.parse(\"scaleY\", numeric_1.Number.parse), ([_, y]) => Scale.of(numeric_1.Number.of(1), y));\n    Scale.parse = either(parseScale, parseScaleX, parseScaleY);\n})(Scale || (exports.Scale = Scale = {}));\n//# sourceMappingURL=scale.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/transform/scale.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/transform/skew.js":
/*!************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/transform/skew.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Skew = void 0;\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst syntax_1 = __webpack_require__(/*! ../../syntax */ \"./node_modules/@siteimprove/alfa-css/src/syntax/index.js\");\nconst collection_1 = __webpack_require__(/*! ../collection */ \"./node_modules/@siteimprove/alfa-css/src/value/collection/index.js\");\nconst numeric_1 = __webpack_require__(/*! ../numeric */ \"./node_modules/@siteimprove/alfa-css/src/value/numeric/index.js\");\nconst function_1 = __webpack_require__(/*! ./function */ \"./node_modules/@siteimprove/alfa-css/src/value/transform/function.js\");\nconst { map, either } = alfa_parser_1.Parser;\n/**\n * @public\n */\nclass Skew extends function_1.Function {\n    static of(x, y) {\n        return new Skew(x.resolve(), y.resolve());\n    }\n    constructor(x, y) {\n        super(\"skew\", false);\n        this._x = x;\n        this._y = y;\n    }\n    get x() {\n        return this._x;\n    }\n    get y() {\n        return this._y;\n    }\n    resolve() {\n        return this;\n    }\n    equals(value) {\n        return (value instanceof Skew &&\n            value._x.equals(this._x) &&\n            value._y.equals(this._y));\n    }\n    hash(hash) {\n        hash.writeHashable(this._x).writeHashable(this._y);\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            x: this._x.toJSON(),\n            y: this._y.toJSON(),\n        };\n    }\n    toString() {\n        if (this._y.value === 0) {\n            return `skewX(${this._x})`;\n        }\n        if (this._x.value === 0) {\n            return `skewY(${this._y})`;\n        }\n        return `skew(${this._x}, ${this._y})`;\n    }\n}\nexports.Skew = Skew;\n/**\n * @public\n */\n(function (Skew) {\n    function isSkew(value) {\n        return value instanceof Skew;\n    }\n    Skew.isSkew = isSkew;\n    const _0 = numeric_1.Angle.of(0, \"deg\");\n    const parseAngleOrZero = either(numeric_1.Angle.parse, map(numeric_1.Number.parseZero, () => _0));\n    /**\n     * {@link https://drafts.csswg.org/css-transforms/#funcdef-transform-skew}\n     */\n    const parseSkew = map(syntax_1.Function.parse(\"skew\", map(collection_1.List.parseCommaSeparated(parseAngleOrZero, 1, 2), (list) => list.values)), ([_, [x, y]]) => Skew.of(x, y ?? _0));\n    /**\n     * {@link https://drafts.csswg.org/css-transforms/#funcdef-transform-skewx}\n     */\n    const parseSkewX = map(syntax_1.Function.parse(\"skewX\", parseAngleOrZero), ([_, x]) => Skew.of(x, _0));\n    /**\n     * {@link https://drafts.csswg.org/css-transforms/#funcdef-transform-skewy}\n     */\n    const parseSkewY = map(syntax_1.Function.parse(\"skewY\", parseAngleOrZero), ([_, y]) => Skew.of(_0, y));\n    Skew.parse = either(parseSkew, parseSkewX, parseSkewY);\n})(Skew || (exports.Skew = Skew = {}));\n//# sourceMappingURL=skew.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/transform/skew.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/transform/transform.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/transform/transform.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Transform = void 0;\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst collection_1 = __webpack_require__(/*! ../collection */ \"./node_modules/@siteimprove/alfa-css/src/value/collection/index.js\");\nconst matrix_1 = __webpack_require__(/*! ./matrix */ \"./node_modules/@siteimprove/alfa-css/src/value/transform/matrix.js\");\nconst perspective_1 = __webpack_require__(/*! ./perspective */ \"./node_modules/@siteimprove/alfa-css/src/value/transform/perspective.js\");\nconst rotate_1 = __webpack_require__(/*! ./rotate */ \"./node_modules/@siteimprove/alfa-css/src/value/transform/rotate.js\");\nconst scale_1 = __webpack_require__(/*! ./scale */ \"./node_modules/@siteimprove/alfa-css/src/value/transform/scale.js\");\nconst skew_1 = __webpack_require__(/*! ./skew */ \"./node_modules/@siteimprove/alfa-css/src/value/transform/skew.js\");\nconst translate_1 = __webpack_require__(/*! ./translate */ \"./node_modules/@siteimprove/alfa-css/src/value/transform/translate.js\");\nconst { either } = alfa_parser_1.Parser;\n/**\n * @public\n */\nvar Transform;\n(function (Transform) {\n    function resolve(resolver) {\n        return (value) => value.resolve(resolver);\n    }\n    Transform.resolve = resolve;\n    function partiallyResolve(resolver) {\n        return (value) => translate_1.Translate.isTranslate(value)\n            ? value.partiallyResolve(resolver)\n            : value.resolve(resolver);\n    }\n    Transform.partiallyResolve = partiallyResolve;\n    function matrix(...values) {\n        return matrix_1.Matrix.of(...values);\n    }\n    Transform.matrix = matrix;\n    function perspective(depth) {\n        return perspective_1.Perspective.of(depth);\n    }\n    Transform.perspective = perspective;\n    function rotate(x, y, z, angle) {\n        return rotate_1.Rotate.of(x, y, z, angle);\n    }\n    Transform.rotate = rotate;\n    function scale(x, y) {\n        return scale_1.Scale.of(x, y);\n    }\n    Transform.scale = scale;\n    function skew(x, y) {\n        return skew_1.Skew.of(x, y);\n    }\n    Transform.skew = skew;\n    function translate(x, y, z) {\n        return translate_1.Translate.of(x, y, z);\n    }\n    Transform.translate = translate;\n    /**\n     * {@link https://drafts.csswg.org/css-transforms/#typedef-transform-function}\n     *\n     * @internal\n     */\n    Transform.parse = either(matrix_1.Matrix.parse, perspective_1.Perspective.parse, rotate_1.Rotate.parse, scale_1.Scale.parse, skew_1.Skew.parse, translate_1.Translate.parse);\n    /**\n     * {@link https://drafts.csswg.org/css-transforms/#typedef-transform-list}\n     */\n    Transform.parseList = collection_1.List.parseSpaceSeparated(Transform.parse);\n})(Transform || (exports.Transform = Transform = {}));\n//# sourceMappingURL=transform.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/transform/transform.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/transform/translate.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/transform/translate.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Translate = void 0;\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst syntax_1 = __webpack_require__(/*! ../../syntax */ \"./node_modules/@siteimprove/alfa-css/src/syntax/index.js\");\nconst collection_1 = __webpack_require__(/*! ../collection */ \"./node_modules/@siteimprove/alfa-css/src/value/collection/index.js\");\nconst numeric_1 = __webpack_require__(/*! ../numeric */ \"./node_modules/@siteimprove/alfa-css/src/value/numeric/index.js\");\nconst value_1 = __webpack_require__(/*! ../value */ \"./node_modules/@siteimprove/alfa-css/src/value/value.js\");\nconst function_1 = __webpack_require__(/*! ./function */ \"./node_modules/@siteimprove/alfa-css/src/value/transform/function.js\");\nconst { map, either, parseIf } = alfa_parser_1.Parser;\n/**\n * @public\n */\nclass Translate extends function_1.Function {\n    static of(x, y, z) {\n        return new Translate(x, y, z);\n    }\n    constructor(x, y, z) {\n        super(\"translate\", value_1.Value.hasCalculation(x, y, z));\n        this._x = x;\n        this._y = y;\n        this._z = z;\n    }\n    get x() {\n        return this._x;\n    }\n    get y() {\n        return this._y;\n    }\n    get z() {\n        return this._z;\n    }\n    resolve(resolver) {\n        return new Translate(numeric_1.LengthPercentage.resolve(resolver)(this._x), numeric_1.LengthPercentage.resolve(resolver)(this._y), this._z.resolve(resolver));\n    }\n    partiallyResolve(resolver) {\n        return new Translate(numeric_1.LengthPercentage.partiallyResolve(resolver)(this._x), numeric_1.LengthPercentage.partiallyResolve(resolver)(this._x), this._z.resolve(resolver));\n    }\n    equals(value) {\n        return (value instanceof Translate &&\n            value._x.equals(this._x) &&\n            value._y.equals(this._y) &&\n            value._z.equals(this._z));\n    }\n    hash(hash) {\n        hash.writeHashable(this._x).writeHashable(this._y).writeHashable(this._z);\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            x: this._x.toJSON(),\n            y: this._y.toJSON(),\n            z: this._z.toJSON(),\n        };\n    }\n    toString() {\n        if (!this._z.hasCalculation() && numeric_1.Numeric.isZero(this._z)) {\n            return `translate(${this._x}${!this._y.hasCalculation() && numeric_1.Numeric.isZero(this._y)\n                ? \"\"\n                : `, ${this._y}`})`;\n        }\n        return `translate3d(${this._x}, ${this._y}, ${this._z})`;\n    }\n}\nexports.Translate = Translate;\n/**\n * @public\n */\n(function (Translate) {\n    function isTranslate(value) {\n        return value instanceof Translate;\n    }\n    Translate.isTranslate = isTranslate;\n    const _0 = numeric_1.Length.of(0, \"px\");\n    /**\n     * {@link https://drafts.csswg.org/css-transforms/#funcdef-transform-translate}\n     */\n    const parseTranslate = map(syntax_1.Function.parse(\"translate\", map(collection_1.List.parseCommaSeparated(numeric_1.LengthPercentage.parse, 1, 2), (list) => list.values)), ([_, [x, y]]) => Translate.of(x, y ?? _0, _0));\n    /**\n     * {@link https://drafts.csswg.org/css-transforms/#funcdef-transform-translatex}\n     */\n    const parseTranslateX = map(syntax_1.Function.parse(\"translateX\", numeric_1.LengthPercentage.parse), ([_, x]) => Translate.of(x, _0, _0));\n    /**\n     * {@link https://drafts.csswg.org/css-transforms/#funcdef-transform-translatey}\n     */\n    const parseTranslateY = map(syntax_1.Function.parse(\"translateY\", numeric_1.LengthPercentage.parse), ([_, y]) => Translate.of(_0, y, _0));\n    /**\n     * {@link https://drafts.csswg.org/css-transforms-2/#funcdef-translatez}\n     */\n    const parseTranslateZ = map(syntax_1.Function.parse(\"translateZ\", numeric_1.Length.parse), ([_, z]) => Translate.of(_0, _0, z));\n    /**\n     * {@link https://drafts.csswg.org/css-transforms-2/#funcdef-translate3d}\n     */\n    const parseTranslate3d = map(syntax_1.Function.parse(\"translate3d\", parseIf((values) => numeric_1.Length.isLength(values[2]), map(collection_1.List.parseCommaSeparated(numeric_1.LengthPercentage.parse, 3, 3), (list) => list.values), () => \"The z component of translate3d must be a length\")), \n    // The type of z is ensured by parseIf.\n    ([_, [x, y, z]]) => Translate.of(x, y, z));\n    Translate.parse = either(parseTranslate, parseTranslateX, parseTranslateY, parseTranslateZ, parseTranslate3d);\n})(Translate || (exports.Translate = Translate = {}));\n//# sourceMappingURL=translate.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/transform/translate.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-css/src/value/value.js":
/*!***************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-css/src/value/value.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Value = void 0;\n/**\n * Representation of a CSS Value\n *\n * @remarks\n * * T: a string representation of the type stored in the value,\n *      e.g. \"length\", \"color\", …\n * * CALC: whether the numeric values in this may include calculation or not.\n *         When CALC is true, the value hasn't been resolved. It does not\n *         necessarily contain calculation; when CALC is false, the value has\n *         been fully resolved and is guaranteed without calculations.\n * * R: a string representation of the type stored in the resolved value.\n *      This differs from T, typically, for dimension-percentage values that\n *      are resolved as dimensions only.\n * * PR: a string representation of the type stored in the partially resolved value.\n *\n * @public\n */\nclass Value {\n    constructor(type, hasCalculation) {\n        this._type = type;\n        this._hasCalculation = hasCalculation;\n    }\n    get type() {\n        return this._type;\n    }\n    hasCalculation() {\n        return this._hasCalculation;\n    }\n    partiallyResolve(resolver) {\n        return this.resolve(resolver);\n    }\n    toJSON() {\n        return { type: this._type };\n    }\n}\nexports.Value = Value;\n/**\n * @public\n */\n(function (Value) {\n    function isValue(value, type) {\n        return (value instanceof Value && (type === undefined || value.type === type));\n    }\n    Value.isValue = isValue;\n    /**\n     * @internal\n     */\n    function hasCalculation(...values) {\n        return values.some((value) => value.hasCalculation());\n    }\n    Value.hasCalculation = hasCalculation;\n})(Value || (exports.Value = Value = {}));\n//# sourceMappingURL=value.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-css/src/value/value.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-device/src/device.js":
/*!*************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-device/src/device.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Device = void 0;\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_map_1 = __webpack_require__(/*! @siteimprove/alfa-map */ \"./node_modules/@siteimprove/alfa-map/src/index.js\");\nconst display_1 = __webpack_require__(/*! ./display */ \"./node_modules/@siteimprove/alfa-device/src/display.js\");\nconst preference_1 = __webpack_require__(/*! ./preference */ \"./node_modules/@siteimprove/alfa-device/src/preference.js\");\nconst scripting_1 = __webpack_require__(/*! ./scripting */ \"./node_modules/@siteimprove/alfa-device/src/scripting.js\");\nconst viewport_1 = __webpack_require__(/*! ./viewport */ \"./node_modules/@siteimprove/alfa-device/src/viewport.js\");\n/**\n * @public\n */\nclass Device {\n    /**\n     * @remarks\n     * If the iterable of preferences contains preferences with duplicate names,\n     * the last preference with a given name will take precedence.\n     */\n    static of(type, viewport, display, scripting = scripting_1.Scripting.of(true), preferences = []) {\n        return new Device(type, viewport, display, scripting, alfa_map_1.Map.from(alfa_iterable_1.Iterable.map(preferences, (preference) => [\n            preference.name,\n            preference,\n        ])));\n    }\n    constructor(type, viewport, display, scripting, preferences) {\n        this._type = type;\n        this._viewport = viewport;\n        this._display = display;\n        this._scripting = scripting;\n        this._preferences = preferences;\n    }\n    get type() {\n        return this._type;\n    }\n    get viewport() {\n        return this._viewport;\n    }\n    get display() {\n        return this._display;\n    }\n    get scripting() {\n        return this._scripting;\n    }\n    get preferences() {\n        return this._preferences.values();\n    }\n    preference(name) {\n        return this._preferences\n            .get(name)\n            .getOrElse(() => preference_1.Preference.unset(name));\n    }\n    equals(value) {\n        return (value instanceof Device &&\n            value._type === this._type &&\n            value._viewport.equals(this._viewport) &&\n            value._display.equals(this._display) &&\n            value._scripting.equals(this._scripting) &&\n            value._preferences.equals(this._preferences));\n    }\n    hash(hash) {\n        switch (this._type) {\n            case Device.Type.Print:\n                hash.writeUint8(1);\n                break;\n            case Device.Type.Screen:\n                hash.writeUint8(2);\n                break;\n            case Device.Type.Speech:\n                hash.writeUint8(3);\n        }\n        hash\n            .writeHashable(this._viewport)\n            .writeHashable(this._display)\n            .writeHashable(this._scripting)\n            .writeHashable(this._preferences);\n    }\n    toJSON() {\n        return {\n            type: this._type,\n            viewport: this._viewport.toJSON(),\n            display: this._display.toJSON(),\n            scripting: this._scripting.toJSON(),\n            preferences: [...this._preferences.values()].map((preferece) => preferece.toJSON()),\n        };\n    }\n}\nexports.Device = Device;\n/**\n * @public\n */\n(function (Device) {\n    let Type;\n    (function (Type) {\n        Type[\"Print\"] = \"print\";\n        Type[\"Screen\"] = \"screen\";\n        Type[\"Speech\"] = \"speech\";\n    })(Type = Device.Type || (Device.Type = {}));\n    function from(json) {\n        return Device.of(json.type, viewport_1.Viewport.from(json.viewport), display_1.Display.from(json.display), scripting_1.Scripting.from(json.scripting), json.preferences.map((json) => preference_1.Preference.from(json)));\n    }\n    Device.from = from;\n    function standard() {\n        return Device.of(Type.Screen, viewport_1.Viewport.standard(), display_1.Display.standard());\n    }\n    Device.standard = standard;\n})(Device || (exports.Device = Device = {}));\n//# sourceMappingURL=device.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-device/src/device.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-device/src/display.js":
/*!**************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-device/src/display.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Display = void 0;\n/**\n * @public\n */\nclass Display {\n    static of(resolution, scan = Display.Scan.Progressive) {\n        return new Display(resolution, scan);\n    }\n    constructor(resolution, scan) {\n        this._resolution = resolution;\n        this._scan = scan;\n    }\n    /**\n     * {@link https://www.w3.org/TR/mediaqueries/#resolution}\n     */\n    get resolution() {\n        return this._resolution;\n    }\n    /**\n     * {@link https://www.w3.org/TR/mediaqueries/#scan}\n     */\n    get scan() {\n        return this._scan;\n    }\n    equals(value) {\n        return (value instanceof Display &&\n            value._resolution === this._resolution &&\n            value._scan === this._scan);\n    }\n    hash(hash) {\n        hash.writeUint8(this._resolution);\n        switch (this._scan) {\n            case Display.Scan.Interlace:\n                hash.writeUint8(1);\n                break;\n            case Display.Scan.Progressive:\n                hash.writeUint8(2);\n        }\n    }\n    toJSON() {\n        return {\n            resolution: this._resolution,\n            scan: this._scan,\n        };\n    }\n}\nexports.Display = Display;\n/**\n * @public\n */\n(function (Display) {\n    let Scan;\n    (function (Scan) {\n        Scan[\"Interlace\"] = \"interlace\";\n        Scan[\"Progressive\"] = \"progressive\";\n    })(Scan = Display.Scan || (Display.Scan = {}));\n    function from(json) {\n        return Display.of(json.resolution, json.scan);\n    }\n    Display.from = from;\n    function standard() {\n        return Display.of(1, Scan.Progressive);\n    }\n    Display.standard = standard;\n})(Display || (exports.Display = Display = {}));\n//# sourceMappingURL=display.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-device/src/display.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-device/src/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-device/src/index.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./device */ \"./node_modules/@siteimprove/alfa-device/src/device.js\"), exports);\n__exportStar(__webpack_require__(/*! ./display */ \"./node_modules/@siteimprove/alfa-device/src/display.js\"), exports);\n__exportStar(__webpack_require__(/*! ./preference */ \"./node_modules/@siteimprove/alfa-device/src/preference.js\"), exports);\n__exportStar(__webpack_require__(/*! ./scripting */ \"./node_modules/@siteimprove/alfa-device/src/scripting.js\"), exports);\n__exportStar(__webpack_require__(/*! ./viewport */ \"./node_modules/@siteimprove/alfa-device/src/viewport.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-device/src/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-device/src/preference.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-device/src/preference.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Preference = void 0;\n/**\n * {@link https://drafts.csswg.org/mediaqueries-5/#mf-user-preferences}\n *\n * @public\n */\nclass Preference {\n    static of(name, value) {\n        return new Preference(name, value);\n    }\n    constructor(name, value) {\n        this._name = name;\n        this._value = value;\n    }\n    get name() {\n        return this._name;\n    }\n    get value() {\n        return this._value;\n    }\n    equals(value) {\n        return (value instanceof Preference &&\n            value._name === this._name &&\n            value._value === this._value);\n    }\n    hash(hash) {\n        hash.writeString(this._name).writeString(this._value);\n    }\n    toJSON() {\n        return {\n            name: this._name,\n            value: this._value,\n        };\n    }\n}\nexports.Preference = Preference;\n/**\n * @public\n */\n(function (Preference) {\n    function isPreference(value, name) {\n        return (value instanceof Preference && (name === undefined || value.name === name));\n    }\n    Preference.isPreference = isPreference;\n    function from(json) {\n        return Preference.of(json.name, json.value);\n    }\n    Preference.from = from;\n    function unset(name) {\n        function unset(name) {\n            switch (name) {\n                case \"forced-colors\":\n                case \"inverted\":\n                    return \"none\";\n                case \"prefers-color-scheme\":\n                case \"prefers-contrast\":\n                case \"prefers-reduced-motion\":\n                case \"prefers-reduced-transparency\":\n                    return \"no-preference\";\n            }\n        }\n        return unset(name);\n    }\n    Preference.unset = unset;\n})(Preference || (exports.Preference = Preference = {}));\n//# sourceMappingURL=preference.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-device/src/preference.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-device/src/scripting.js":
/*!****************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-device/src/scripting.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Scripting = void 0;\n/**\n * {@link https://drafts.csswg.org/mediaqueries-5/#mf-scripting}\n *\n * @remarks\n * As noted in Media Queries Level 5, a future level of CSS may extend the\n * scripting feature to allow fine-grained detection of which script is allowed\n * to run. While the `Scripting` class therefore currently seems very sparse, we\n * foresee a need to extend it in the future.\n *\n * @public\n */\nclass Scripting {\n    static of(enabled) {\n        return new Scripting(enabled);\n    }\n    constructor(enabled) {\n        this._enabled = enabled;\n    }\n    get enabled() {\n        return this._enabled;\n    }\n    equals(value) {\n        return value instanceof Scripting && value._enabled === this._enabled;\n    }\n    hash(hash) {\n        hash.writeBoolean(this._enabled);\n    }\n    toJSON() {\n        return {\n            enabled: this._enabled,\n        };\n    }\n}\nexports.Scripting = Scripting;\n/**\n * @public\n */\n(function (Scripting) {\n    function isScripting(value) {\n        return value instanceof Scripting;\n    }\n    Scripting.isScripting = isScripting;\n    function from(json) {\n        return Scripting.of(json.enabled);\n    }\n    Scripting.from = from;\n})(Scripting || (exports.Scripting = Scripting = {}));\n//# sourceMappingURL=scripting.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-device/src/scripting.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-device/src/viewport.js":
/*!***************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-device/src/viewport.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Viewport = void 0;\n/**\n * @public\n */\nclass Viewport {\n    static of(width, height = width / (16 / 9), orientation = Viewport.Orientation.Landscape) {\n        return new Viewport(width, height, orientation);\n    }\n    constructor(width, height, orientation) {\n        this._width = width;\n        this._height = height;\n        this._orientation = orientation;\n    }\n    /**\n     * {@link https://www.w3.org/TR/mediaqueries/#width}\n     */\n    get width() {\n        return this._width;\n    }\n    /**\n     * {@link https://www.w3.org/TR/mediaqueries/#height}\n     */\n    get height() {\n        return this._height;\n    }\n    /**\n     * {@link https://www.w3.org/TR/mediaqueries/#orientation}\n     */\n    get orientation() {\n        return this._orientation;\n    }\n    isLandscape() {\n        return this._orientation === Viewport.Orientation.Landscape;\n    }\n    isPortrait() {\n        return this._orientation === Viewport.Orientation.Portrait;\n    }\n    equals(value) {\n        return (value instanceof Viewport &&\n            value._width === this._width &&\n            value._height === this._height &&\n            value._orientation === this._orientation);\n    }\n    hash(hash) {\n        hash.writeUint32(this._width);\n        hash.writeUint32(this._height);\n        switch (this._orientation) {\n            case Viewport.Orientation.Landscape:\n                hash.writeUint8(1);\n                break;\n            case Viewport.Orientation.Portrait:\n                hash.writeUint8(2);\n        }\n    }\n    toJSON() {\n        return {\n            width: this._width,\n            height: this._height,\n            orientation: this._orientation,\n        };\n    }\n}\nexports.Viewport = Viewport;\n/**\n * @public\n */\n(function (Viewport) {\n    let Orientation;\n    (function (Orientation) {\n        Orientation[\"Portrait\"] = \"portrait\";\n        Orientation[\"Landscape\"] = \"landscape\";\n    })(Orientation = Viewport.Orientation || (Viewport.Orientation = {}));\n    function from(json) {\n        return Viewport.of(json.width, json.height, json.orientation);\n    }\n    Viewport.from = from;\n    function standard() {\n        return Viewport.of(1280, 720, Orientation.Landscape);\n    }\n    Viewport.standard = standard;\n})(Viewport || (exports.Viewport = Viewport = {}));\n//# sourceMappingURL=viewport.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-device/src/viewport.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/native.js":
/*!******************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/native.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./src/native */ \"./node_modules/@siteimprove/alfa-dom/src/native.js\"), exports);\n//# sourceMappingURL=native.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/native.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/node_modules/@siteimprove/alfa-sequence/src/cons.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/node_modules/@siteimprove/alfa-sequence/src/cons.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Cons = void 0;\nconst alfa_array_1 = __webpack_require__(/*! @siteimprove/alfa-array */ \"./node_modules/@siteimprove/alfa-array/src/index.js\");\nconst alfa_comparable_1 = __webpack_require__(/*! @siteimprove/alfa-comparable */ \"./node_modules/@siteimprove/alfa-comparable/src/index.js\");\nconst alfa_equatable_1 = __webpack_require__(/*! @siteimprove/alfa-equatable */ \"./node_modules/@siteimprove/alfa-equatable/src/index.js\");\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_json_1 = __webpack_require__(/*! @siteimprove/alfa-json */ \"./node_modules/@siteimprove/alfa-json/src/index.js\");\nconst alfa_lazy_1 = __webpack_require__(/*! @siteimprove/alfa-lazy */ \"./node_modules/@siteimprove/alfa-lazy/src/index.js\");\nconst alfa_map_1 = __webpack_require__(/*! @siteimprove/alfa-map */ \"./node_modules/@siteimprove/alfa-map/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_set_1 = __webpack_require__(/*! @siteimprove/alfa-set */ \"./node_modules/@siteimprove/alfa-set/src/index.js\");\nconst sequence_1 = __webpack_require__(/*! ./sequence */ \"./node_modules/@siteimprove/alfa-dom/node_modules/@siteimprove/alfa-sequence/src/sequence.js\");\nconst nil_1 = __webpack_require__(/*! ./nil */ \"./node_modules/@siteimprove/alfa-dom/node_modules/@siteimprove/alfa-sequence/src/nil.js\");\nconst { not, equals } = alfa_predicate_1.Predicate;\nconst { compareComparable } = alfa_comparable_1.Comparable;\n/**\n * @public\n */\nclass Cons {\n    static of(head, tail = alfa_lazy_1.Lazy.force(nil_1.Nil)) {\n        return new Cons(head, tail);\n    }\n    constructor(head, tail) {\n        this._head = head;\n        this._tail = tail;\n    }\n    get size() {\n        return alfa_iterable_1.Iterable.size(this);\n    }\n    isEmpty() {\n        return false;\n    }\n    forEach(callback) {\n        alfa_iterable_1.Iterable.forEach(this, callback);\n    }\n    map(mapper, index = 0) {\n        return new Cons(mapper(this._head, index), this._tail.map((tail) => Cons.isCons(tail) ? tail.map(mapper, index + 1) : nil_1.Nil));\n    }\n    apply(mapper) {\n        return mapper.flatMap((mapper) => this.map(mapper));\n    }\n    flatMap(mapper, index = 0) {\n        let next = this;\n        while (true) {\n            const head = mapper(next._head, index++);\n            if (Cons.isCons(head)) {\n                return new Cons(head._head, head._tail.map((left) => {\n                    const right = next._tail.force();\n                    return Cons.isCons(right)\n                        ? left.concat(right.flatMap(mapper, index))\n                        : left;\n                }));\n            }\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return nil_1.Nil;\n            }\n        }\n    }\n    flatten() {\n        return this.flatMap((sequence) => sequence);\n    }\n    reduce(reducer, accumulator) {\n        let next = this;\n        let index = 0;\n        while (true) {\n            accumulator = reducer(accumulator, next._head, index++);\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                break;\n            }\n        }\n        return accumulator;\n    }\n    reduceWhile(predicate, reducer, accumulator) {\n        let next = this;\n        let index = 0;\n        while (predicate(next._head, index)) {\n            accumulator = reducer(accumulator, next._head, index++);\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                break;\n            }\n        }\n        return accumulator;\n    }\n    reduceUntil(predicate, reducer, accumulator) {\n        return this.reduceWhile(not(predicate), reducer, accumulator);\n    }\n    filter(predicate, index = 0) {\n        let next = this;\n        while (true) {\n            if (predicate(next._head, index++)) {\n                return new Cons(next._head, next._tail.map((tail) => Cons.isCons(tail) ? tail.filter(predicate, index) : nil_1.Nil));\n            }\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return nil_1.Nil;\n            }\n        }\n    }\n    reject(predicate) {\n        return this.filter(not(predicate));\n    }\n    find(predicate) {\n        let next = this;\n        let index = 0;\n        while (true) {\n            const head = next._head;\n            if (predicate(head, index++)) {\n                return alfa_option_1.Option.of(head);\n            }\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return alfa_option_1.None;\n            }\n        }\n    }\n    includes(value) {\n        return this.some(equals(value));\n    }\n    collect(mapper, index = 0) {\n        let next = this;\n        while (true) {\n            const value = mapper(next._head, index++);\n            if (value.isSome()) {\n                return new Cons(value.get(), next._tail.map((tail) => Cons.isCons(tail) ? tail.collect(mapper, index) : nil_1.Nil));\n            }\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return nil_1.Nil;\n            }\n        }\n    }\n    collectFirst(mapper) {\n        let next = this;\n        let index = 0;\n        while (true) {\n            const value = mapper(next._head, index++);\n            if (value.isSome()) {\n                return value;\n            }\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return alfa_option_1.None;\n            }\n        }\n    }\n    some(predicate) {\n        let next = this;\n        let index = 0;\n        while (true) {\n            if (predicate(next._head, index++)) {\n                return true;\n            }\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return false;\n            }\n        }\n    }\n    none(predicate) {\n        return this.every(not(predicate));\n    }\n    every(predicate) {\n        let next = this;\n        let index = 0;\n        while (true) {\n            if (!predicate(next._head, index++)) {\n                return false;\n            }\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return true;\n            }\n        }\n    }\n    count(predicate) {\n        return this.reduce((count, value, index) => (predicate(value, index) ? count + 1 : count), 0);\n    }\n    distinct(seen = alfa_set_1.Set.empty()) {\n        let next = this;\n        while (true) {\n            if (seen.has(next._head)) {\n                const tail = next._tail.force();\n                if (Cons.isCons(tail)) {\n                    next = tail;\n                }\n                else {\n                    return nil_1.Nil;\n                }\n            }\n            else {\n                return Cons.of(next._head, next._tail.map((tail) => Cons.isCons(tail) ? tail.distinct(seen.add(next._head)) : nil_1.Nil));\n            }\n        }\n    }\n    get(index) {\n        return index < 0 ? alfa_option_1.None : this.skip(index).first();\n    }\n    has(index) {\n        return this.get(index).isSome();\n    }\n    set(index, value) {\n        if (index < 0) {\n            return this;\n        }\n        if (index === 0) {\n            if (alfa_equatable_1.Equatable.equals(value, this._head)) {\n                return this;\n            }\n            return new Cons(value, this._tail);\n        }\n        return new Cons(this._head, this._tail.map((tail) => tail.set(index - 1, value)));\n    }\n    insert(index, value) {\n        if (index < 0) {\n            return this;\n        }\n        if (index === 0) {\n            return new Cons(value, alfa_lazy_1.Lazy.force(this));\n        }\n        return new Cons(this._head, this._tail.map((tail) => tail.set(index - 1, value)));\n    }\n    append(value) {\n        return new Cons(this._head, this._tail.map((tail) => tail.append(value)));\n    }\n    prepend(value) {\n        return new Cons(value, alfa_lazy_1.Lazy.force(this));\n    }\n    concat(iterable) {\n        const sequence = sequence_1.Sequence.from(iterable);\n        if (Cons.isCons(sequence)) {\n            return new Cons(this._head, this._tail.map((tail) => tail.concat(sequence)));\n        }\n        return this;\n    }\n    subtract(iterable) {\n        return this.filter((value) => !alfa_iterable_1.Iterable.includes(iterable, value));\n    }\n    intersect(iterable) {\n        return this.filter((value) => alfa_iterable_1.Iterable.includes(iterable, value));\n    }\n    tee(callback, ...args) {\n        callback(this, ...args);\n        return this;\n    }\n    zip(iterable) {\n        const sequence = sequence_1.Sequence.from(iterable);\n        if (Cons.isCons(sequence)) {\n            return new Cons([this._head, sequence._head], this._tail.map((tail) => tail.zip(sequence.rest())));\n        }\n        return nil_1.Nil;\n    }\n    first() {\n        return alfa_option_1.Option.of(this._head);\n    }\n    last() {\n        let next = this;\n        while (true) {\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return alfa_option_1.Option.of(next._head);\n            }\n        }\n    }\n    take(count) {\n        if (count <= 0) {\n            return nil_1.Nil;\n        }\n        return new Cons(this._head, count === 1\n            ? alfa_lazy_1.Lazy.force(nil_1.Nil)\n            : this._tail.map((tail) => Cons.isCons(tail) ? tail.take(count - 1) : nil_1.Nil));\n    }\n    takeWhile(predicate) {\n        return this.takeUntil(not(predicate));\n    }\n    takeUntil(predicate, index = 0) {\n        if (predicate(this._head, index)) {\n            return nil_1.Nil;\n        }\n        return new Cons(this._head, this._tail.map((tail) => Cons.isCons(tail)\n            ? tail.takeUntil(predicate, index + 1)\n            : tail.takeUntil(predicate)));\n    }\n    takeLast(count) {\n        return this.skip(this.size - count);\n    }\n    takeLastWhile(predicate) {\n        return this.reverse().takeWhile(predicate).reverse();\n    }\n    takeLastUntil(predicate) {\n        return this.takeLastWhile(not(predicate));\n    }\n    skip(count) {\n        let next = this;\n        while (count-- > 0) {\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return nil_1.Nil;\n            }\n        }\n        return next;\n    }\n    skipWhile(predicate) {\n        let next = this;\n        let index = 0;\n        while (predicate(next._head, index++)) {\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return nil_1.Nil;\n            }\n        }\n        return next;\n    }\n    skipUntil(predicate) {\n        return this.skipWhile(not(predicate));\n    }\n    skipLast(count) {\n        return this.take(this.size - count);\n    }\n    skipLastWhile(predicate) {\n        return this.reverse().skipWhile(predicate).reverse();\n    }\n    skipLastUntil(predicate) {\n        return this.skipLastWhile(not(predicate));\n    }\n    trim(predicate) {\n        return this.trimLeading(predicate).trimTrailing(predicate);\n    }\n    trimLeading(predicate) {\n        return this.skipWhile(predicate);\n    }\n    trimTrailing(predicate) {\n        return this.skipLastWhile(predicate);\n    }\n    rest() {\n        return this._tail.force();\n    }\n    slice(start, end) {\n        let slice = this.skip(start);\n        if (end !== undefined) {\n            slice = slice.take(end - start);\n        }\n        return slice;\n    }\n    reverse() {\n        return this.reduce((reversed, value) => new Cons(value, alfa_lazy_1.Lazy.force(reversed)), nil_1.Nil);\n    }\n    join(separator) {\n        let result = `${this._head}`;\n        let next = this;\n        while (true) {\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                result += `${separator}${tail._head}`;\n                next = tail;\n            }\n            else {\n                return result;\n            }\n        }\n    }\n    sort() {\n        return this.sortWith(compareComparable);\n    }\n    sortWith(comparer) {\n        return sequence_1.Sequence.fromArray(alfa_array_1.Array.sortWith(this.toArray(), comparer));\n    }\n    compare(iterable) {\n        return this.compareWith(iterable, alfa_comparable_1.Comparable.compare);\n    }\n    compareWith(iterable, comparer) {\n        return alfa_iterable_1.Iterable.compareWith(this, iterable, comparer);\n    }\n    groupBy(grouper) {\n        return this.reduce((groups, value, index) => {\n            const group = grouper(value, index);\n            return groups.set(group, new Cons(value, alfa_lazy_1.Lazy.force(groups.get(group).getOrElse(() => nil_1.Nil))));\n        }, alfa_map_1.Map.empty()).map((group) => group.reverse());\n    }\n    equals(value) {\n        if (!Cons.isCons(value)) {\n            return false;\n        }\n        let a = this;\n        let b = value;\n        while (true) {\n            if (!alfa_equatable_1.Equatable.equals(a._head, b._head)) {\n                return false;\n            }\n            const ta = a._tail.force();\n            const tb = b._tail.force();\n            if (Cons.isCons(ta) && Cons.isCons(tb)) {\n                a = ta;\n                b = tb;\n            }\n            else {\n                return ta === nil_1.Nil && tb === nil_1.Nil;\n            }\n        }\n    }\n    hash(hash) {\n        let size = 0;\n        for (const value of this) {\n            hash.writeUnknown(value);\n            size++;\n        }\n        hash.writeUint32(size);\n    }\n    *iterator() {\n        let next = this;\n        while (true) {\n            yield next._head;\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                break;\n            }\n        }\n    }\n    [Symbol.iterator]() {\n        return this.iterator();\n    }\n    toArray() {\n        const array = [];\n        let next = this;\n        while (true) {\n            array.push(next._head);\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return array;\n            }\n        }\n    }\n    toJSON() {\n        const json = [];\n        let next = this;\n        while (true) {\n            json.push(alfa_json_1.Serializable.toJSON(next._head));\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return json;\n            }\n        }\n    }\n    toString() {\n        return `Sequence [ ${this.join(\", \")} ]`;\n    }\n}\nexports.Cons = Cons;\n/**\n * @public\n */\n(function (Cons) {\n    function isCons(value) {\n        return value instanceof Cons;\n    }\n    Cons.isCons = isCons;\n})(Cons || (exports.Cons = Cons = {}));\n//# sourceMappingURL=cons.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/node_modules/@siteimprove/alfa-sequence/src/cons.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/node_modules/@siteimprove/alfa-sequence/src/index.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/node_modules/@siteimprove/alfa-sequence/src/index.js ***!
  \*************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./cons */ \"./node_modules/@siteimprove/alfa-dom/node_modules/@siteimprove/alfa-sequence/src/cons.js\"), exports);\n__exportStar(__webpack_require__(/*! ./nil */ \"./node_modules/@siteimprove/alfa-dom/node_modules/@siteimprove/alfa-sequence/src/nil.js\"), exports);\n__exportStar(__webpack_require__(/*! ./sequence */ \"./node_modules/@siteimprove/alfa-dom/node_modules/@siteimprove/alfa-sequence/src/sequence.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/node_modules/@siteimprove/alfa-sequence/src/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/node_modules/@siteimprove/alfa-sequence/src/nil.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/node_modules/@siteimprove/alfa-sequence/src/nil.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Nil = void 0;\nconst alfa_comparable_1 = __webpack_require__(/*! @siteimprove/alfa-comparable */ \"./node_modules/@siteimprove/alfa-comparable/src/index.js\");\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_map_1 = __webpack_require__(/*! @siteimprove/alfa-map */ \"./node_modules/@siteimprove/alfa-map/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst sequence_1 = __webpack_require__(/*! ./sequence */ \"./node_modules/@siteimprove/alfa-dom/node_modules/@siteimprove/alfa-sequence/src/sequence.js\");\nconst cons_1 = __webpack_require__(/*! ./cons */ \"./node_modules/@siteimprove/alfa-dom/node_modules/@siteimprove/alfa-sequence/src/cons.js\");\n/**\n * @public\n */\nexports.Nil = new (class Nil {\n    get size() {\n        return 0;\n    }\n    isEmpty() {\n        return true;\n    }\n    forEach() { }\n    map() {\n        return this;\n    }\n    apply() {\n        return this;\n    }\n    flatMap() {\n        return this;\n    }\n    flatten() {\n        return this;\n    }\n    reduce(reducer, accumulator) {\n        return accumulator;\n    }\n    reduceWhile(predicate, reducer, accumulator) {\n        return accumulator;\n    }\n    reduceUntil(predicate, reducer, accumulator) {\n        return accumulator;\n    }\n    filter() {\n        return this;\n    }\n    reject() {\n        return this;\n    }\n    find() {\n        return alfa_option_1.None;\n    }\n    includes() {\n        return false;\n    }\n    collect() {\n        return this;\n    }\n    collectFirst() {\n        return alfa_option_1.None;\n    }\n    some() {\n        return false;\n    }\n    none() {\n        return true;\n    }\n    every() {\n        return true;\n    }\n    count() {\n        return 0;\n    }\n    distinct() {\n        return this;\n    }\n    get() {\n        return alfa_option_1.None;\n    }\n    has() {\n        return false;\n    }\n    set() {\n        return this;\n    }\n    insert(index, value) {\n        return index === 0 ? cons_1.Cons.of(value) : this;\n    }\n    append(value) {\n        return cons_1.Cons.of(value);\n    }\n    prepend(value) {\n        return cons_1.Cons.of(value);\n    }\n    concat(iterable) {\n        if (iterable === this) {\n            return this;\n        }\n        return sequence_1.Sequence.from(iterable);\n    }\n    subtract() {\n        return this;\n    }\n    intersect() {\n        return this;\n    }\n    tee(callback, ...args) {\n        callback(this, ...args);\n        return this;\n    }\n    zip() {\n        return this;\n    }\n    first() {\n        return alfa_option_1.None;\n    }\n    last() {\n        return alfa_option_1.None;\n    }\n    take() {\n        return this;\n    }\n    takeWhile() {\n        return this;\n    }\n    takeUntil() {\n        return this;\n    }\n    takeLast() {\n        return this;\n    }\n    takeLastWhile() {\n        return this;\n    }\n    takeLastUntil() {\n        return this;\n    }\n    skip() {\n        return this;\n    }\n    skipWhile() {\n        return this;\n    }\n    skipUntil() {\n        return this;\n    }\n    skipLast() {\n        return this;\n    }\n    skipLastWhile() {\n        return this;\n    }\n    skipLastUntil() {\n        return this;\n    }\n    trim() {\n        return this;\n    }\n    trimLeading() {\n        return this;\n    }\n    trimTrailing() {\n        return this;\n    }\n    rest() {\n        return this;\n    }\n    slice() {\n        return this;\n    }\n    reverse() {\n        return this;\n    }\n    join() {\n        return \"\";\n    }\n    sort() {\n        return this;\n    }\n    sortWith() {\n        return this;\n    }\n    compare(iterable) {\n        return this.compareWith(iterable, alfa_comparable_1.Comparable.compare);\n    }\n    compareWith(iterable, comparer) {\n        return alfa_iterable_1.Iterable.compareWith(this, iterable, comparer);\n    }\n    groupBy() {\n        return alfa_map_1.Map.empty();\n    }\n    equals(value) {\n        return value instanceof Nil;\n    }\n    hash(hash) {\n        hash.writeUint32(0);\n    }\n    *iterator() { }\n    [Symbol.iterator]() {\n        return this.iterator();\n    }\n    toArray() {\n        return [];\n    }\n    toJSON() {\n        return [];\n    }\n    toString() {\n        return \"Sequence []\";\n    }\n})();\n//# sourceMappingURL=nil.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/node_modules/@siteimprove/alfa-sequence/src/nil.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/node_modules/@siteimprove/alfa-sequence/src/sequence.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/node_modules/@siteimprove/alfa-sequence/src/sequence.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Sequence = void 0;\nconst alfa_array_1 = __webpack_require__(/*! @siteimprove/alfa-array */ \"./node_modules/@siteimprove/alfa-array/src/index.js\");\nconst alfa_lazy_1 = __webpack_require__(/*! @siteimprove/alfa-lazy */ \"./node_modules/@siteimprove/alfa-lazy/src/index.js\");\nconst cons_1 = __webpack_require__(/*! ./cons */ \"./node_modules/@siteimprove/alfa-dom/node_modules/@siteimprove/alfa-sequence/src/cons.js\");\nconst nil_1 = __webpack_require__(/*! ./nil */ \"./node_modules/@siteimprove/alfa-dom/node_modules/@siteimprove/alfa-sequence/src/nil.js\");\n/**\n * @public\n */\nvar Sequence;\n(function (Sequence) {\n    function isSequence(value) {\n        return isCons(value) || isNil(value);\n    }\n    Sequence.isSequence = isSequence;\n    function isCons(value) {\n        return cons_1.Cons.isCons(value);\n    }\n    Sequence.isCons = isCons;\n    function isNil(value) {\n        return value === nil_1.Nil;\n    }\n    Sequence.isNil = isNil;\n    function of(head, tail) {\n        return cons_1.Cons.of(head, tail);\n    }\n    Sequence.of = of;\n    function empty() {\n        return nil_1.Nil;\n    }\n    Sequence.empty = empty;\n    function from(iterable) {\n        if (isSequence(iterable)) {\n            return iterable;\n        }\n        if (alfa_array_1.Array.isArray(iterable)) {\n            return fromArray(iterable);\n        }\n        return fromIterable(iterable);\n    }\n    Sequence.from = from;\n    function fromArray(array) {\n        let i = 0;\n        const tail = () => {\n            if (i >= array.length) {\n                return empty();\n            }\n            return of(array[i++], alfa_lazy_1.Lazy.of(tail));\n        };\n        return tail();\n    }\n    Sequence.fromArray = fromArray;\n    function fromIterable(iterable) {\n        return fromIterator(iterable[Symbol.iterator]());\n    }\n    Sequence.fromIterable = fromIterable;\n    function fromIterator(iterator) {\n        const tail = () => {\n            const head = iterator.next();\n            if (head.done === true) {\n                return empty();\n            }\n            return of(head.value, alfa_lazy_1.Lazy.of(tail));\n        };\n        return tail();\n    }\n    Sequence.fromIterator = fromIterator;\n})(Sequence || (exports.Sequence = Sequence = {}));\n//# sourceMappingURL=sequence.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/node_modules/@siteimprove/alfa-sequence/src/sequence.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/src/h.js":
/*!*****************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/src/h.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.h = void 0;\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_device_1 = __webpack_require__(/*! @siteimprove/alfa-device */ \"./node_modules/@siteimprove/alfa-device/src/index.js\");\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst { entries } = Object;\nconst { nor } = alfa_predicate_1.Predicate;\n/**\n * @public\n */\nfunction h(name, attributes, children, style, box, device = alfa_device_1.Device.standard(), externalId, extraData) {\n    return h.element(name, attributes, children, style, undefined, box, device, externalId, extraData);\n}\nexports.h = h;\n/**\n * @public\n */\n(function (h) {\n    function element(name, attributes = [], children = [], style = [], namespace, box, device, externalId, extraData) {\n        attributes = Array.isArray(attributes)\n            ? attributes\n            : entries(attributes).reduce((attributes, [name, value]) => {\n                if (value === false) {\n                    return attributes;\n                }\n                return [\n                    ...attributes,\n                    h.attribute(hyphenate(name), value === true ? \"\" : value),\n                ];\n            }, []);\n        const block = h.block(style);\n        if (block.size > 0) {\n            attributes = [...attributes, h.attribute(\"style\", block.toString())];\n        }\n        namespace =\n            namespace ??\n                alfa_option_1.Option.from(attributes.find((attribute) => attribute.name === \"xmlns\"))\n                    .map((attribute) => attribute.value)\n                    .filter(_1.Namespace.isNamespace)\n                    .getOr(defaultNamespace(name));\n        const content = children.find(_1.Document.isDocument);\n        const shadow = children.find(_1.Shadow.isShadow);\n        const element = _1.Element.of(alfa_option_1.Option.of(namespace), alfa_option_1.None, name, attributes, children\n            .filter(nor(_1.Document.isDocument, _1.Shadow.isShadow))\n            .map((child) => (typeof child === \"string\" ? h.text(child) : child)), style.length === 0 ? alfa_option_1.None : alfa_option_1.Option.of(block), alfa_option_1.Option.from(box), alfa_option_1.Option.from(device), externalId, extraData);\n        if (content !== undefined) {\n            element._attachContent(content);\n        }\n        if (shadow !== undefined) {\n            element._attachShadow(shadow);\n        }\n        return element;\n    }\n    h.element = element;\n    function attribute(name, value, externalId, extraData) {\n        return _1.Attribute.of(alfa_option_1.None, alfa_option_1.None, name, value, externalId, extraData);\n    }\n    h.attribute = attribute;\n    function text(data, externalId, extraData) {\n        return _1.Text.of(data, externalId, extraData);\n    }\n    h.text = text;\n    function document(children, style, externalId, extraData) {\n        return _1.Document.of(children.map((child) => typeof child === \"string\" ? text(child) : child), style, externalId, extraData);\n    }\n    h.document = document;\n    function shadow(children, style, mode, externalId, extraData) {\n        return _1.Shadow.of(children.map((child) => typeof child === \"string\" ? text(child) : child), style, mode, externalId, extraData);\n    }\n    h.shadow = shadow;\n    function type(name, publicId, systemId, externalId, extraData) {\n        return _1.Type.of(name, alfa_option_1.Option.from(publicId), alfa_option_1.Option.from(systemId), externalId, extraData);\n    }\n    h.type = type;\n    function fragment(children, externalId, extraData) {\n        return _1.Fragment.of(children.map((child) => typeof child === \"string\" ? text(child) : child), externalId, extraData);\n    }\n    h.fragment = fragment;\n    function sheet(rules, disabled, condition) {\n        return _1.Sheet.of(rules, disabled, alfa_option_1.Option.from(condition));\n    }\n    h.sheet = sheet;\n    function block(declarations) {\n        return _1.Block.of(Array.isArray(declarations)\n            ? declarations\n            : entries(declarations).map(([name, value]) => {\n                const important = value.endsWith(\"!important\");\n                value = value.replace(/!important$/, \"\").trim();\n                // Hyphenate the declaration name unless it's the name of a custom\n                // property; these we keep as-is.\n                if (!name.startsWith(\"--\")) {\n                    name = hyphenate(name);\n                }\n                return _1.Declaration.of(name, value, important);\n            }));\n    }\n    h.block = block;\n    function declaration(name, value, important) {\n        return _1.Declaration.of(name, value, important);\n    }\n    h.declaration = declaration;\n    let rule;\n    (function (rule) {\n        function fontFace(declarations) {\n            return _1.FontFaceRule.of(block(declarations));\n        }\n        rule.fontFace = fontFace;\n        function importRule(url, sheet, condition) {\n            return _1.ImportRule.of(url, sheet, alfa_option_1.Option.from(condition));\n        }\n        rule.importRule = importRule;\n        function keyframe(key, declarations) {\n            return _1.KeyframeRule.of(key, block(declarations));\n        }\n        rule.keyframe = keyframe;\n        function keyframes(name, rules) {\n            return _1.KeyframesRule.of(name, rules);\n        }\n        rule.keyframes = keyframes;\n        function media(condition, rules) {\n            return _1.MediaRule.of(condition, rules);\n        }\n        rule.media = media;\n        function namespace(namespace, prefix) {\n            return _1.NamespaceRule.of(namespace, alfa_option_1.Option.from(prefix));\n        }\n        rule.namespace = namespace;\n        function page(selector, declarations) {\n            return _1.PageRule.of(selector, block(declarations));\n        }\n        rule.page = page;\n        function style(selector, declarations, hint) {\n            return _1.StyleRule.of(selector, block(declarations), hint);\n        }\n        rule.style = style;\n        function supports(condition, rules) {\n            return _1.SupportsRule.of(condition, rules);\n        }\n        rule.supports = supports;\n    })(rule = h.rule || (h.rule = {}));\n})(h || (exports.h = h = {}));\nfunction hyphenate(value) {\n    return value.replace(/[A-Z]/g, (letter) => `-${letter.toLowerCase()}`);\n}\nfunction defaultNamespace(name) {\n    switch (name) {\n        // The <a> element exists both in SVG and HTML namespaces.\n        // It is defaulted in the HTML namespace and must be explicitly built in\n        // the SVG one if needed.\n        case \"circle\":\n        case \"ellipse\":\n        case \"foreignObject\":\n        case \"g\":\n        case \"image\":\n        case \"line\":\n        case \"mesh\":\n        case \"path\":\n        case \"polygon\":\n        case \"polyline\":\n        case \"rect\":\n        case \"svg\":\n        case \"symbol\":\n        case \"text\":\n        case \"textPath\":\n        case \"use\":\n            return _1.Namespace.SVG;\n        case \"annotation\":\n        case \"annotation-xml\":\n        case \"maction\":\n        case \"math\":\n        case \"merror\":\n        case \"mfrac\":\n        case \"mi\":\n        case \"mmultiscripts\":\n        case \"mn\":\n        case \"mo\":\n        case \"mover\":\n        case \"mpadded\":\n        case \"mphantom\":\n        case \"mprescripts\":\n        case \"mroot\":\n        case \"mrow\":\n        case \"ms\":\n        case \"mspace\":\n        case \"msqrt\":\n        case \"mstyle\":\n        case \"msub\":\n        case \"msubsup\":\n        case \"msup\":\n        case \"mtable\":\n        case \"mtd\":\n        case \"mtext\":\n        case \"mtr\":\n        case \"munder\":\n        case \"munderover\":\n        case \"none\":\n        case \"semantics\":\n            return _1.Namespace.MathML;\n        default:\n            return _1.Namespace.HTML;\n    }\n}\n//# sourceMappingURL=h.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/src/h.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/src/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/src/index.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./namespace */ \"./node_modules/@siteimprove/alfa-dom/src/namespace.js\"), exports);\n__exportStar(__webpack_require__(/*! ./style/block */ \"./node_modules/@siteimprove/alfa-dom/src/style/block.js\"), exports);\n__exportStar(__webpack_require__(/*! ./style/declaration */ \"./node_modules/@siteimprove/alfa-dom/src/style/declaration.js\"), exports);\n__exportStar(__webpack_require__(/*! ./style/rule */ \"./node_modules/@siteimprove/alfa-dom/src/style/rule.js\"), exports);\n__exportStar(__webpack_require__(/*! ./style/rule/grouping */ \"./node_modules/@siteimprove/alfa-dom/src/style/rule/grouping.js\"), exports);\n__exportStar(__webpack_require__(/*! ./style/rule/condition */ \"./node_modules/@siteimprove/alfa-dom/src/style/rule/condition.js\"), exports);\n__exportStar(__webpack_require__(/*! ./style/rule/font-face */ \"./node_modules/@siteimprove/alfa-dom/src/style/rule/font-face.js\"), exports);\n__exportStar(__webpack_require__(/*! ./style/rule/import */ \"./node_modules/@siteimprove/alfa-dom/src/style/rule/import.js\"), exports);\n__exportStar(__webpack_require__(/*! ./style/rule/keyframe */ \"./node_modules/@siteimprove/alfa-dom/src/style/rule/keyframe.js\"), exports);\n__exportStar(__webpack_require__(/*! ./style/rule/keyframes */ \"./node_modules/@siteimprove/alfa-dom/src/style/rule/keyframes.js\"), exports);\n__exportStar(__webpack_require__(/*! ./style/rule/media */ \"./node_modules/@siteimprove/alfa-dom/src/style/rule/media.js\"), exports);\n__exportStar(__webpack_require__(/*! ./style/rule/namespace */ \"./node_modules/@siteimprove/alfa-dom/src/style/rule/namespace.js\"), exports);\n__exportStar(__webpack_require__(/*! ./style/rule/page */ \"./node_modules/@siteimprove/alfa-dom/src/style/rule/page.js\"), exports);\n__exportStar(__webpack_require__(/*! ./style/rule/style */ \"./node_modules/@siteimprove/alfa-dom/src/style/rule/style.js\"), exports);\n__exportStar(__webpack_require__(/*! ./style/rule/supports */ \"./node_modules/@siteimprove/alfa-dom/src/style/rule/supports.js\"), exports);\n__exportStar(__webpack_require__(/*! ./style/sheet */ \"./node_modules/@siteimprove/alfa-dom/src/style/sheet.js\"), exports);\n__exportStar(__webpack_require__(/*! ./node */ \"./node_modules/@siteimprove/alfa-dom/src/node.js\"), exports);\n__exportStar(__webpack_require__(/*! ./node/slot */ \"./node_modules/@siteimprove/alfa-dom/src/node/slot.js\"), exports);\n__exportStar(__webpack_require__(/*! ./node/slotable */ \"./node_modules/@siteimprove/alfa-dom/src/node/slotable.js\"), exports);\n__exportStar(__webpack_require__(/*! ./node/attribute */ \"./node_modules/@siteimprove/alfa-dom/src/node/attribute.js\"), exports);\n__exportStar(__webpack_require__(/*! ./node/comment */ \"./node_modules/@siteimprove/alfa-dom/src/node/comment.js\"), exports);\n__exportStar(__webpack_require__(/*! ./node/document */ \"./node_modules/@siteimprove/alfa-dom/src/node/document.js\"), exports);\n__exportStar(__webpack_require__(/*! ./node/element */ \"./node_modules/@siteimprove/alfa-dom/src/node/element.js\"), exports);\n__exportStar(__webpack_require__(/*! ./node/fragment */ \"./node_modules/@siteimprove/alfa-dom/src/node/fragment.js\"), exports);\n__exportStar(__webpack_require__(/*! ./node/shadow */ \"./node_modules/@siteimprove/alfa-dom/src/node/shadow.js\"), exports);\n__exportStar(__webpack_require__(/*! ./node/text */ \"./node_modules/@siteimprove/alfa-dom/src/node/text.js\"), exports);\n__exportStar(__webpack_require__(/*! ./node/type */ \"./node_modules/@siteimprove/alfa-dom/src/node/type.js\"), exports);\n__exportStar(__webpack_require__(/*! ./node/query */ \"./node_modules/@siteimprove/alfa-dom/src/node/query/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./h */ \"./node_modules/@siteimprove/alfa-dom/src/h.js\"), exports);\n__exportStar(__webpack_require__(/*! ./jsx */ \"./node_modules/@siteimprove/alfa-dom/src/jsx.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/src/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/src/jsx.js":
/*!*******************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/src/jsx.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.jsx = void 0;\nconst h_1 = __webpack_require__(/*! ./h */ \"./node_modules/@siteimprove/alfa-dom/src/h.js\");\nconst alfa_rectangle_1 = __webpack_require__(/*! @siteimprove/alfa-rectangle */ \"./node_modules/@siteimprove/alfa-rectangle/src/index.js\");\nconst { entries } = Object;\n/**\n * @public\n */\nfunction jsx(name, properties = null, ...children) {\n    const attributes = {};\n    const style = {};\n    let box = undefined;\n    let device = undefined;\n    let externalId = undefined;\n    for (const [name, value] of entries(properties ?? {})) {\n        if (value === null || value === undefined) {\n            continue;\n        }\n        switch (name) {\n            case \"style\":\n                for (const [propName, propValue] of entries(value)) {\n                    style[propName] = propValue;\n                }\n                continue;\n            case \"box\":\n                const deviceAndBox = value;\n                box = alfa_rectangle_1.Rectangle.from(deviceAndBox);\n                device = deviceAndBox.device;\n                continue;\n            case \"externalId\":\n                if (typeof value === \"string\") {\n                    externalId = value;\n                }\n                continue;\n            default:\n                attributes[name] = value === true ? value : `${value}`;\n        }\n    }\n    return (0, h_1.h)(name, attributes, children.flat(Infinity), style, box, device, externalId);\n}\nexports.jsx = jsx;\n//# sourceMappingURL=jsx.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/src/jsx.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/src/namespace.js":
/*!*************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/src/namespace.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Namespace = void 0;\n/**\n * {@link https://infra.spec.whatwg.org/#namespaces}\n *\n * @public\n */\nvar Namespace;\n(function (Namespace) {\n    /**\n     * {@link https://infra.spec.whatwg.org/#html-namespace}\n     */\n    Namespace[\"HTML\"] = \"http://www.w3.org/1999/xhtml\";\n    /**\n     * {@link https://infra.spec.whatwg.org/#mathml-namespace}\n     */\n    Namespace[\"MathML\"] = \"http://www.w3.org/1998/Math/MathML\";\n    /**\n     * {@link https://infra.spec.whatwg.org/#svg-namespace}\n     */\n    Namespace[\"SVG\"] = \"http://www.w3.org/2000/svg\";\n    /**\n     * {@link https://infra.spec.whatwg.org/#xlink-namespace}\n     */\n    Namespace[\"XLink\"] = \"http://www.w3.org/1999/xlink\";\n    /**\n     * {@link https://infra.spec.whatwg.org/#xml-namespace}\n     */\n    Namespace[\"XML\"] = \"http://www.w3.org/XML/1998/namespace\";\n    /**\n     * @remarks\n     * The trailing slash is not a typo! For some reason it snuck its way into the\n     * specification and whether or not it is strictly required is an awfully good\n     * question.\n     *\n     * {@link https://infra.spec.whatwg.org/#xmlns-namespace}\n     */\n    Namespace[\"XMLNS\"] = \"http://www.w3.org/2000/xmlns/\";\n})(Namespace || (exports.Namespace = Namespace = {}));\n/**\n * @public\n */\n(function (Namespace) {\n    function isNamespace(value) {\n        switch (value) {\n            case Namespace.HTML:\n            case Namespace.MathML:\n            case Namespace.SVG:\n            case Namespace.XLink:\n            case Namespace.XML:\n            case Namespace.XMLNS:\n                return true;\n            default:\n                return false;\n        }\n    }\n    Namespace.isNamespace = isNamespace;\n})(Namespace || (exports.Namespace = Namespace = {}));\n//# sourceMappingURL=namespace.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/src/namespace.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/src/native.js":
/*!**********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/src/native.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/// <reference lib=\"dom\" />\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Native = void 0;\n/**\n * @internal\n */\nvar Native;\n(function (Native) {\n    function fromNode(node) {\n        return toNode(node);\n        function toNode(node) {\n            switch (node.nodeType) {\n                case node.ELEMENT_NODE:\n                    return toElement(node);\n                case node.ATTRIBUTE_NODE:\n                    return toAttribute(node);\n                case node.TEXT_NODE:\n                    return toText(node);\n                case node.COMMENT_NODE:\n                    return toComment(node);\n                case node.DOCUMENT_NODE:\n                    return toDocument(node);\n                case node.DOCUMENT_TYPE_NODE:\n                    return toType(node);\n            }\n            throw new Error(`Unsupported node of type: ${node.nodeType}`);\n        }\n        function toElement(element) {\n            return {\n                type: \"element\",\n                namespace: element.namespaceURI,\n                prefix: element.prefix,\n                name: element.localName,\n                attributes: map(element.attributes, toAttribute),\n                style: \"style\" in element ? toBlock(element.style) : null,\n                children: map(element.childNodes, toNode),\n                shadow: element.shadowRoot !== null ? toShadow(element.shadowRoot) : null,\n                content: \"contentDocument\" in element && element.contentDocument !== null\n                    ? toDocument(element.contentDocument)\n                    : null,\n                box: toRectangle(element.getBoundingClientRect()),\n            };\n        }\n        function toAttribute(attribute) {\n            return {\n                type: \"attribute\",\n                namespace: attribute.namespaceURI,\n                prefix: attribute.prefix,\n                name: attribute.localName,\n                value: attribute.value,\n            };\n        }\n        function toText(text) {\n            return {\n                type: \"text\",\n                data: text.data,\n            };\n        }\n        function toComment(comment) {\n            return {\n                type: \"comment\",\n                data: comment.data,\n            };\n        }\n        function toDocument(document) {\n            return {\n                type: \"document\",\n                children: map(document.childNodes, toNode),\n                style: map(document.styleSheets, toSheet),\n            };\n        }\n        function toType(type) {\n            return {\n                type: \"type\",\n                name: type.name,\n                publicId: type.publicId === \"\" ? null : type.publicId,\n                systemId: type.systemId === \"\" ? null : type.systemId,\n            };\n        }\n        function toShadow(shadow) {\n            return {\n                type: \"shadow\",\n                mode: shadow.mode,\n                children: map(shadow.childNodes, toNode),\n                style: map(shadow.styleSheets, toSheet),\n            };\n        }\n        function toSheet(sheet) {\n            let rules;\n            try {\n                rules = map(sheet.cssRules, toRule);\n            }\n            catch {\n                rules = [];\n            }\n            return {\n                rules,\n                disabled: sheet.disabled,\n                condition: sheet.media.mediaText === \"\" ? null : sheet.media.mediaText,\n            };\n        }\n        function toRule(rule) {\n            switch (rule.type) {\n                case rule.STYLE_RULE:\n                    return toStyleRule(rule);\n                case rule.IMPORT_RULE:\n                    return toImportRule(rule);\n                case rule.MEDIA_RULE:\n                    return toMediaRule(rule);\n                case rule.FONT_FACE_RULE:\n                    return toFontFaceRule(rule);\n                case rule.PAGE_RULE:\n                    return toPageRule(rule);\n                case rule.KEYFRAMES_RULE:\n                    return toKeyframesRule(rule);\n                case rule.KEYFRAME_RULE:\n                    return toKeyframeRule(rule);\n                case rule.NAMESPACE_RULE:\n                    return toNamespaceRule(rule);\n                case rule.SUPPORTS_RULE:\n                    return toSupportsRule(rule);\n            }\n            throw new Error(`Unsupported rule of type: ${rule.type}`);\n        }\n        function toStyleRule(styleRule) {\n            return {\n                type: \"style\",\n                selector: styleRule.selectorText,\n                style: toBlock(styleRule.style),\n            };\n        }\n        function toImportRule(rule) {\n            return {\n                type: \"import\",\n                rules: rule.styleSheet === null ? [] : toSheet(rule.styleSheet).rules,\n                condition: rule.media.mediaText === \"\" ? \"all\" : rule.media.mediaText,\n                href: rule.href,\n            };\n        }\n        function toMediaRule(rule) {\n            let rules;\n            try {\n                rules = map(rule.cssRules, toRule);\n            }\n            catch {\n                rules = [];\n            }\n            return {\n                type: \"media\",\n                condition: rule.conditionText,\n                rules,\n            };\n        }\n        function toFontFaceRule(rule) {\n            return {\n                type: \"font-face\",\n                style: toBlock(rule.style),\n            };\n        }\n        function toPageRule(rule) {\n            return {\n                type: \"page\",\n                selector: rule.selectorText,\n                style: toBlock(rule.style),\n            };\n        }\n        function toKeyframesRule(rule) {\n            let rules;\n            try {\n                rules = map(rule.cssRules, toRule);\n            }\n            catch {\n                rules = [];\n            }\n            return {\n                type: \"keyframes\",\n                rules,\n                name: rule.name,\n            };\n        }\n        function toKeyframeRule(rule) {\n            return {\n                type: \"keyframe\",\n                key: rule.keyText,\n                style: toBlock(rule.style),\n            };\n        }\n        function toNamespaceRule(rule) {\n            return {\n                type: \"namespace\",\n                namespace: rule.namespaceURI,\n                prefix: rule.prefix,\n            };\n        }\n        function toSupportsRule(rule) {\n            let rules;\n            try {\n                rules = map(rule.cssRules, toRule);\n            }\n            catch {\n                rules = [];\n            }\n            return {\n                type: \"supports\",\n                condition: rule.conditionText,\n                rules,\n            };\n        }\n        function toBlock(block) {\n            return map(block, (name) => {\n                return {\n                    name,\n                    value: block.getPropertyValue(name),\n                    important: block.getPropertyPriority(name) === \"important\",\n                };\n            });\n        }\n        function toRectangle(domRect) {\n            return {\n                type: \"rectangle\",\n                x: domRect.x,\n                y: domRect.y,\n                width: domRect.width,\n                height: domRect.height,\n            };\n        }\n        function map(arrayLike, mapper) {\n            const result = new Array(arrayLike.length);\n            for (let i = 0, n = arrayLike.length; i < n; i++) {\n                result[i] = mapper(arrayLike[i]);\n            }\n            return result;\n        }\n    }\n    Native.fromNode = fromNode;\n})(Native || (exports.Native = Native = {}));\n//# sourceMappingURL=native.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/src/native.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/src/node.js":
/*!********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/src/node.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Node = void 0;\nconst alfa_flags_1 = __webpack_require__(/*! @siteimprove/alfa-flags */ \"./node_modules/@siteimprove/alfa-flags/src/index.js\");\nconst alfa_lazy_1 = __webpack_require__(/*! @siteimprove/alfa-lazy */ \"./node_modules/@siteimprove/alfa-lazy/src/index.js\");\nconst alfa_selective_1 = __webpack_require__(/*! @siteimprove/alfa-selective */ \"./node_modules/@siteimprove/alfa-selective/src/index.js\");\nconst alfa_sequence_1 = __webpack_require__(/*! @siteimprove/alfa-sequence */ \"./node_modules/@siteimprove/alfa-dom/node_modules/@siteimprove/alfa-sequence/src/index.js\");\nconst tree = __webpack_require__(/*! @siteimprove/alfa-tree */ \"./node_modules/@siteimprove/alfa-tree/src/index.js\");\nconst _1 = __webpack_require__(/*! . */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst predicate = __webpack_require__(/*! ./node/predicate */ \"./node_modules/@siteimprove/alfa-dom/src/node/predicate.js\");\nconst traversal = __webpack_require__(/*! ./node/traversal */ \"./node_modules/@siteimprove/alfa-dom/src/node/traversal.js\");\n/**\n * @public\n */\nclass Node extends tree.Node {\n    constructor(children, type, externalId, extraData) {\n        super(children, type, externalId, extraData);\n        this._path = [];\n    }\n    /**\n     * {@link https://dom.spec.whatwg.org/#concept-descendant-text-content}\n     */\n    textContent(options = Node.Traversal.empty) {\n        return this.descendants(options).filter(_1.Text.isText).join(\"\");\n    }\n    /**\n     * Construct a sequence of descendants of this node sorted by tab index. Only\n     * nodes with a non-negative tab index are included in the sequence.\n     *\n     * {@link https://html.spec.whatwg.org/#tabindex-value}\n     */\n    tabOrder() {\n        const candidates = (node) => {\n            if (_1.Element.isElement(node)) {\n                const element = node;\n                const tabIndex = element.tabIndex();\n                if (element.shadow.isSome()) {\n                    // If the element has a negative tab index and is a shadow host then\n                    // none of its descendants will be part of the tab order.\n                    if (tabIndex.some((i) => i < 0)) {\n                        return alfa_sequence_1.Sequence.empty();\n                    }\n                    else {\n                        return alfa_sequence_1.Sequence.of(element);\n                    }\n                }\n                if (element.content.isSome()) {\n                    return alfa_sequence_1.Sequence.of(element);\n                }\n                if (_1.Slot.isSlot(element)) {\n                    return alfa_sequence_1.Sequence.from(element.assignedNodes()).filter(_1.Element.isElement);\n                }\n                if (tabIndex.some((i) => i >= 0)) {\n                    return alfa_sequence_1.Sequence.of(element, alfa_lazy_1.Lazy.of(() => element.children().flatMap(candidates)));\n                }\n            }\n            return node.children().flatMap(candidates);\n        };\n        return candidates(this)\n            .sortWith((a, b) => a.tabIndex().compareWith(b.tabIndex(), (a, b) => {\n            if (a === 0) {\n                return b === 0 ? 0 : 1;\n            }\n            if (b === 0) {\n                return -1;\n            }\n            return a < b ? -1 : a > b ? 1 : 0;\n        }))\n            .flatMap((element) => {\n            const tabIndex = element.tabIndex();\n            for (const shadow of element.shadow) {\n                if (tabIndex.some((i) => i >= 0)) {\n                    return alfa_sequence_1.Sequence.of(element, alfa_lazy_1.Lazy.of(() => shadow.tabOrder()));\n                }\n                else {\n                    return shadow.tabOrder();\n                }\n            }\n            for (const content of element.content) {\n                return content.tabOrder();\n            }\n            return alfa_sequence_1.Sequence.of(element);\n        });\n    }\n    /**\n     * @internal\n     */\n    _internalPath(options) {\n        let path = this.parent(options)\n            .map((parent) => parent.path(options))\n            .getOr(\"/\");\n        path += path === \"/\" ? \"\" : \"/\";\n        path += \"node()\";\n        path += `[${this.index(options) + 1}]`;\n        return path;\n    }\n    /**\n     * Get an XPath that uniquely identifies the node across descendants of its\n     * root.\n     */\n    // path may change if the subtree is attached to a parent, so we shouldn't\n    // cache it.\n    // However, path is a fairly \"final\" serialisation operation that makes\n    // little sense in the context of an incomplete tree.\n    // For the sake of simplicity, and until we encounter errors due to this,\n    // we accept the risk of caching the value assuming that it will only be\n    // computed on fully frozen trees.\n    path(options = Node.Traversal.empty) {\n        if (this._path[options.value] !== undefined) {\n            return this._path[options.value];\n        }\n        else {\n            this._path[options.value] = this._internalPath(options);\n            return this._internalPath(options);\n        }\n    }\n    equals(value) {\n        return value === this;\n    }\n    toEARL() {\n        return {\n            \"@context\": {\n                ptr: \"http://www.w3.org/2009/pointers#\",\n            },\n            \"@type\": [\n                \"ptr:Pointer\",\n                \"ptr:SinglePointer\",\n                \"ptr:ExpressionPointer\",\n                \"ptr:XPathPointer\",\n            ],\n            \"ptr:expression\": this.path(),\n        };\n    }\n    toSARIF() {\n        return {\n            logicalLocations: [\n                {\n                    fullyQualifiedName: this.path(),\n                },\n            ],\n        };\n    }\n}\nexports.Node = Node;\n/**\n * @public\n */\n(function (Node) {\n    function isNode(value) {\n        return value instanceof Node;\n    }\n    Node.isNode = isNode;\n    class Traversal extends alfa_flags_1.Flags {\n        static of(...flags) {\n            return new Traversal(alfa_flags_1.Flags._reduce(...flags));\n        }\n    }\n    Node.Traversal = Traversal;\n    (function (Traversal) {\n        Traversal.none = 0;\n        /**\n         * When set, traverse the node in shadow-including tree order.\n         *\n         * {@link https://dom.spec.whatwg.org/#concept-shadow-including-tree-order}\n         */\n        Traversal.composed = (1 << 0);\n        /**\n         * When set, traverse the flattened element tree rooted at the node.\n         *\n         * {@link https://drafts.csswg.org/css-scoping/#flat-tree}\n         */\n        Traversal.flattened = (1 << 1);\n        /**\n         * When set, traverse all nested browsing contexts encountered.\n         *\n         * {@link https://html.spec.whatwg.org/#nested-browsing-context}\n         */\n        Traversal.nested = (1 << 2);\n        Traversal.empty = Traversal.of(Traversal.none);\n    })(Traversal = Node.Traversal || (Node.Traversal = {}));\n    /**\n     * Traversal options to traverse the flat tree.\n     *\n     * {@link https://drafts.csswg.org/css-scoping-1/#flattening}\n     */\n    Node.flatTree = Traversal.of(Traversal.flattened);\n    /**\n     * Traversal options to traverse all relevant nodes (flat tree and inside\n     * nested browsing container), a very frequent use case.\n     */\n    Node.fullTree = Traversal.of(Traversal.flattened, Traversal.nested);\n    /**\n     * Traversal options to traverse in shadow-including tree order and inside\n     * nested browsing context container, a common use case.\n     */\n    Node.composedNested = Traversal.of(Traversal.composed, Traversal.nested);\n    function from(json, device) {\n        return fromNode(json, device).run();\n    }\n    Node.from = from;\n    /**\n     * @internal\n     */\n    function fromNode(json, device) {\n        switch (json.type) {\n            case \"element\":\n                return _1.Element.fromElement(json, device);\n            case \"attribute\":\n                return _1.Attribute.fromAttribute(json);\n            case \"text\":\n                return _1.Text.fromText(json);\n            case \"comment\":\n                return _1.Comment.fromComment(json);\n            case \"document\":\n                return _1.Document.fromDocument(json, device);\n            case \"type\":\n                return _1.Type.fromType(json);\n            case \"fragment\":\n                return _1.Fragment.fromFragment(json, device);\n            default:\n                throw new Error(`Unexpected node of type: ${json.type}`);\n        }\n    }\n    Node.fromNode = fromNode;\n    function clone(node, options, device) {\n        return cloneNode(node, options, device).run();\n    }\n    Node.clone = clone;\n    /**\n     * @internal\n     */\n    function cloneNode(node, options = {\n        predicate: () => false,\n        newElements: [],\n    }, device) {\n        return alfa_selective_1.Selective.of(node)\n            .if(_1.Element.isElement, _1.Element.cloneElement(options, device))\n            .if(_1.Attribute.isAttribute, _1.Attribute.cloneAttribute)\n            .if(_1.Text.isText, _1.Text.cloneText)\n            .if(_1.Comment.isComment, _1.Comment.cloneComment)\n            .if(_1.Document.isDocument, _1.Document.cloneDocument(options, device))\n            .if(_1.Type.isType, _1.Type.cloneType)\n            .if(_1.Fragment.isFragment, _1.Fragment.cloneFragment(options, device))\n            .if(_1.Shadow.isShadow, _1.Shadow.cloneShadow(options, device))\n            .else(() => {\n            throw new Error(`Unexpected node of type: ${node.type}`);\n        })\n            .get();\n    }\n    Node.cloneNode = cloneNode;\n    Node.getNodesBetween = traversal.getNodesBetween;\n    Node.hasChild = predicate.hasChild, Node.hasDescendant = predicate.hasDescendant, Node.hasInclusiveDescendant = predicate.hasInclusiveDescendant, Node.hasTextContent = predicate.hasTextContent, Node.isRoot = predicate.isRoot;\n})(Node || (exports.Node = Node = {}));\n//# sourceMappingURL=node.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/src/node.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/src/node/attribute.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/src/node/attribute.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Attribute = void 0;\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_sequence_1 = __webpack_require__(/*! @siteimprove/alfa-sequence */ \"./node_modules/@siteimprove/alfa-dom/node_modules/@siteimprove/alfa-sequence/src/index.js\");\nconst alfa_trampoline_1 = __webpack_require__(/*! @siteimprove/alfa-trampoline */ \"./node_modules/@siteimprove/alfa-trampoline/src/index.js\");\nconst namespace_1 = __webpack_require__(/*! ../namespace */ \"./node_modules/@siteimprove/alfa-dom/src/namespace.js\");\nconst node_1 = __webpack_require__(/*! ../node */ \"./node_modules/@siteimprove/alfa-dom/src/node.js\");\nconst predicate = __webpack_require__(/*! ./attribute/predicate */ \"./node_modules/@siteimprove/alfa-dom/src/node/attribute/predicate.js\");\nconst { isEmpty } = alfa_iterable_1.Iterable;\nconst { equals, not } = alfa_predicate_1.Predicate;\n/**\n * @public\n */\nclass Attribute extends node_1.Node {\n    static of(namespace, prefix, name, value, externalId, extraData) {\n        return new Attribute(namespace, prefix, name, value, externalId, extraData);\n    }\n    constructor(namespace, prefix, name, value, externalId, extraData) {\n        super([], \"attribute\", externalId, extraData);\n        this._owner = alfa_option_1.None;\n        this._namespace = namespace;\n        this._prefix = prefix;\n        this._name = name;\n        this._value = value;\n    }\n    get namespace() {\n        return this._namespace;\n    }\n    get prefix() {\n        return this._prefix;\n    }\n    get name() {\n        return Attribute.foldCase(this._name, this._owner);\n    }\n    get qualifiedName() {\n        return this._prefix.reduce((name, prefix) => `${prefix}:${name}`, this._name);\n    }\n    get value() {\n        return this._value;\n    }\n    get owner() {\n        return this._owner;\n    }\n    /**\n     * {@link https://html.spec.whatwg.org/#boolean-attribute}\n     */\n    isBoolean() {\n        switch (this.name) {\n            case \"allowfullscreen\":\n            case \"allowpaymentrequest\":\n            case \"async\":\n            case \"autofocus\":\n            case \"autoplay\":\n            case \"checked\":\n            case \"controls\":\n            case \"default\":\n                return true;\n            default:\n                return false;\n        }\n    }\n    /**\n     * @internal\n     **/\n    _internalPath(options) {\n        let path = this.owner.map((owner) => owner.path(options)).getOr(\"/\");\n        path += path === \"/\" ? \"\" : \"/\";\n        path += `@${this.name}`;\n        return path;\n    }\n    /**\n     * {@link https://html.spec.whatwg.org/#space-separated-tokens}\n     */\n    tokens(separator = /\\s+/) {\n        return alfa_sequence_1.Sequence.from(this._value.trim().split(separator).filter(not(isEmpty)));\n    }\n    enumerate(...valid) {\n        const value = this._value.toLowerCase();\n        return valid.length === 0 || valid.includes(value)\n            ? alfa_option_1.Option.of(value)\n            : alfa_option_1.None;\n    }\n    toJSON() {\n        let result = {\n            ...super.toJSON(),\n            namespace: this._namespace.getOr(null),\n            prefix: this._prefix.getOr(null),\n            name: this._name,\n            value: this._value,\n        };\n        delete result.children;\n        return result;\n    }\n    toString() {\n        const name = this.qualifiedName;\n        if (this.isBoolean()) {\n            return name;\n        }\n        return `${name}=\"${this._value.replace(/\"/g, \"&quot;\")}\"`;\n    }\n    /**\n     * @internal\n     */\n    _attachParent() {\n        return false;\n    }\n    /**\n     * @internal\n     */\n    _attachOwner(owner) {\n        if (this._frozen || this._owner.isSome()) {\n            return false;\n        }\n        this._owner = alfa_option_1.Option.of(owner);\n        this._frozen = true;\n        return true;\n    }\n}\nexports.Attribute = Attribute;\n/**\n * @public\n */\n(function (Attribute) {\n    function isAttribute(value) {\n        return value instanceof Attribute;\n    }\n    Attribute.isAttribute = isAttribute;\n    /**\n     * @internal\n     */\n    function fromAttribute(attribute) {\n        return alfa_trampoline_1.Trampoline.done(Attribute.of(alfa_option_1.Option.from(attribute.namespace), alfa_option_1.Option.from(attribute.prefix), attribute.name, attribute.value));\n    }\n    Attribute.fromAttribute = fromAttribute;\n    /**\n     * @internal\n     */\n    function cloneAttribute(attribute) {\n        return alfa_trampoline_1.Trampoline.done(Attribute.of(attribute.namespace, attribute.prefix, attribute.name, attribute.value, attribute.externalId));\n    }\n    Attribute.cloneAttribute = cloneAttribute;\n    /**\n     * Conditionally fold the case of an attribute name based on its owner; HTML\n     * attributes are case insensitive while attributes in other namespaces aren't.\n     *\n     * @internal\n     */\n    function foldCase(name, owner) {\n        return owner.some((owner) => owner.namespace.some(equals(namespace_1.Namespace.HTML)))\n            ? name.toLowerCase()\n            : name;\n    }\n    Attribute.foldCase = foldCase;\n    Attribute.hasName = predicate.hasName;\n})(Attribute || (exports.Attribute = Attribute = {}));\n//# sourceMappingURL=attribute.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/src/node/attribute.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/src/node/attribute/predicate.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/src/node/attribute/predicate.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./predicate/has-name */ \"./node_modules/@siteimprove/alfa-dom/src/node/attribute/predicate/has-name.js\"), exports);\n//# sourceMappingURL=predicate.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/src/node/attribute/predicate.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/src/node/attribute/predicate/has-name.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/src/node/attribute/predicate/has-name.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.hasName = void 0;\nconst attribute_1 = __webpack_require__(/*! ../../attribute */ \"./node_modules/@siteimprove/alfa-dom/src/node/attribute.js\");\nfunction hasName(nameOrPredicate, ...names) {\n    let predicate;\n    if (typeof nameOrPredicate === \"function\") {\n        predicate = nameOrPredicate;\n    }\n    else {\n        names.unshift(nameOrPredicate);\n        predicate = (name, attribute) => names.some((candidate) => attribute_1.Attribute.foldCase(candidate, attribute.owner) === name);\n    }\n    return (attribute) => predicate(attribute.name, attribute);\n}\nexports.hasName = hasName;\n//# sourceMappingURL=has-name.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/src/node/attribute/predicate/has-name.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/src/node/comment.js":
/*!****************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/src/node/comment.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Comment = void 0;\nconst alfa_trampoline_1 = __webpack_require__(/*! @siteimprove/alfa-trampoline */ \"./node_modules/@siteimprove/alfa-trampoline/src/index.js\");\nconst node_1 = __webpack_require__(/*! ../node */ \"./node_modules/@siteimprove/alfa-dom/src/node.js\");\n/**\n * @public\n */\nclass Comment extends node_1.Node {\n    static of(data, externalId, extraData) {\n        return new Comment(data, externalId, extraData);\n    }\n    static empty() {\n        return new Comment(\"\");\n    }\n    constructor(data, externalId, extraData) {\n        super([], \"comment\", externalId, extraData);\n        this._data = data;\n    }\n    get data() {\n        return this._data;\n    }\n    /**\n     * @internal\n     **/\n    _internalPath(options) {\n        let path = this.parent(options)\n            .map((parent) => parent.path(options))\n            .getOr(\"/\");\n        path += path === \"/\" ? \"\" : \"/\";\n        path += \"comment()\";\n        const index = this.preceding(options).count(Comment.isComment);\n        path += `[${index + 1}]`;\n        return path;\n    }\n    toJSON() {\n        const result = {\n            ...super.toJSON(),\n            data: this._data,\n        };\n        delete result.children;\n        return result;\n    }\n    toString() {\n        return `<!--${this._data}-->`;\n    }\n}\nexports.Comment = Comment;\n/**\n * @public\n */\n(function (Comment) {\n    function isComment(value) {\n        return value instanceof Comment;\n    }\n    Comment.isComment = isComment;\n    /**\n     * @internal\n     */\n    function fromComment(json) {\n        return alfa_trampoline_1.Trampoline.done(Comment.of(json.data));\n    }\n    Comment.fromComment = fromComment;\n    /**\n     * @internal\n     */\n    function cloneComment(comment) {\n        return alfa_trampoline_1.Trampoline.done(Comment.of(comment.data, comment.externalId));\n    }\n    Comment.cloneComment = cloneComment;\n})(Comment || (exports.Comment = Comment = {}));\n//# sourceMappingURL=comment.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/src/node/comment.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/src/node/document.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/src/node/document.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Document = void 0;\nconst alfa_array_1 = __webpack_require__(/*! @siteimprove/alfa-array */ \"./node_modules/@siteimprove/alfa-array/src/index.js\");\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_trampoline_1 = __webpack_require__(/*! @siteimprove/alfa-trampoline */ \"./node_modules/@siteimprove/alfa-trampoline/src/index.js\");\nconst node_1 = __webpack_require__(/*! ../node */ \"./node_modules/@siteimprove/alfa-dom/src/node.js\");\nconst sheet_1 = __webpack_require__(/*! ../style/sheet */ \"./node_modules/@siteimprove/alfa-dom/src/style/sheet.js\");\nconst element_1 = __webpack_require__(/*! ./element */ \"./node_modules/@siteimprove/alfa-dom/src/node/element.js\");\n/**\n * @public\n */\nclass Document extends node_1.Node {\n    static of(children, style = [], externalId, extraData) {\n        return new Document(alfa_array_1.Array.from(children), style, externalId, extraData);\n    }\n    static empty() {\n        return new Document([], []);\n    }\n    constructor(children, style, externalId, extraData) {\n        super(children, \"document\", externalId, extraData);\n        this._frame = alfa_option_1.None;\n        this._style = alfa_array_1.Array.from(style);\n    }\n    get style() {\n        return this._style;\n    }\n    get frame() {\n        return this._frame;\n    }\n    parent(options = node_1.Node.Traversal.empty) {\n        return options.isSet(node_1.Node.Traversal.nested)\n            ? this.frame\n            : super.parent(options);\n    }\n    /**\n     * @internal\n     **/\n    _internalPath(options = node_1.Node.Traversal.empty) {\n        if (options.isSet(node_1.Node.Traversal.nested)) {\n            return this._frame\n                .map((frame) => frame.path(options) + \"/document-node()\")\n                .getOr(\"/\");\n        }\n        return \"/\";\n    }\n    toJSON(options) {\n        return {\n            ...super.toJSON(options),\n            style: this._style.map((sheet) => sheet.toJSON()),\n        };\n    }\n    toString() {\n        const children = this._children\n            .map((child) => indent(child.toString()))\n            .join(\"\\n\");\n        return `#document${children === \"\" ? \"\" : `\\n${children}`}`;\n    }\n    /**\n     * @internal\n     */\n    _attachParent() {\n        return false;\n    }\n    /**\n     * @internal\n     */\n    _attachFrame(frame) {\n        if (this._frozen || this._frame.isSome()) {\n            return false;\n        }\n        this._frame = alfa_option_1.Option.of(frame);\n        this._frozen = true;\n        return true;\n    }\n}\nexports.Document = Document;\n/**\n * @public\n */\n(function (Document) {\n    function isDocument(value) {\n        return value instanceof Document;\n    }\n    Document.isDocument = isDocument;\n    /**\n     * @internal\n     */\n    function fromDocument(json, device) {\n        return alfa_trampoline_1.Trampoline.traverse(json.children ?? [], (child) => node_1.Node.fromNode(child, device)).map((children) => Document.of(children, json.style.map(sheet_1.Sheet.from)));\n    }\n    Document.fromDocument = fromDocument;\n    /**\n     * @internal\n     */\n    function cloneDocument(options, device) {\n        return (document) => alfa_trampoline_1.Trampoline.traverse(document.children(), (child) => {\n            if (element_1.Element.isElement(child) && options.predicate(child)) {\n                return alfa_trampoline_1.Trampoline.done(alfa_array_1.Array.from(options.newElements));\n            }\n            return node_1.Node.cloneNode(child, options, device).map((node) => [node]);\n        }).map((children) => {\n            return Document.of(alfa_iterable_1.Iterable.flatten(children), document.style, document.externalId);\n        });\n    }\n    Document.cloneDocument = cloneDocument;\n})(Document || (exports.Document = Document = {}));\nfunction indent(input) {\n    return input.replace(/^/gm, \"  \");\n}\n//# sourceMappingURL=document.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/src/node/document.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/src/node/element.js":
/*!****************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/src/node/element.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Element = void 0;\nconst alfa_cache_1 = __webpack_require__(/*! @siteimprove/alfa-cache */ \"./node_modules/@siteimprove/alfa-cache/src/index.js\");\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_rectangle_1 = __webpack_require__(/*! @siteimprove/alfa-rectangle */ \"./node_modules/@siteimprove/alfa-rectangle/src/index.js\");\nconst alfa_sequence_1 = __webpack_require__(/*! @siteimprove/alfa-sequence */ \"./node_modules/@siteimprove/alfa-dom/node_modules/@siteimprove/alfa-sequence/src/index.js\");\nconst alfa_trampoline_1 = __webpack_require__(/*! @siteimprove/alfa-trampoline */ \"./node_modules/@siteimprove/alfa-trampoline/src/index.js\");\nconst node_1 = __webpack_require__(/*! ../node */ \"./node_modules/@siteimprove/alfa-dom/src/node.js\");\nconst block_1 = __webpack_require__(/*! ../style/block */ \"./node_modules/@siteimprove/alfa-dom/src/style/block.js\");\nconst attribute_1 = __webpack_require__(/*! ./attribute */ \"./node_modules/@siteimprove/alfa-dom/src/node/attribute.js\");\nconst document_1 = __webpack_require__(/*! ./document */ \"./node_modules/@siteimprove/alfa-dom/src/node/document.js\");\nconst shadow_1 = __webpack_require__(/*! ./shadow */ \"./node_modules/@siteimprove/alfa-dom/src/node/shadow.js\");\nconst slot_1 = __webpack_require__(/*! ./slot */ \"./node_modules/@siteimprove/alfa-dom/src/node/slot.js\");\nconst slotable_1 = __webpack_require__(/*! ./slotable */ \"./node_modules/@siteimprove/alfa-dom/src/node/slotable.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst helpers = __webpack_require__(/*! ./element/input-type */ \"./node_modules/@siteimprove/alfa-dom/src/node/element/input-type.js\");\nconst predicate = __webpack_require__(/*! ./element/predicate */ \"./node_modules/@siteimprove/alfa-dom/src/node/element/predicate.js\");\nconst { isEmpty } = alfa_iterable_1.Iterable;\nconst { not } = alfa_predicate_1.Predicate;\n/**\n * @public\n */\nclass Element extends node_1.Node {\n    static of(namespace, prefix, name, attributes = [], children = [], style = alfa_option_1.None, box = alfa_option_1.None, device = alfa_option_1.None, externalId, extraData) {\n        return new Element(namespace, prefix, name, Array.from(attributes), Array.from(children), style, box, device, externalId, extraData);\n    }\n    constructor(namespace, prefix, name, attributes, children, style, box, device, externalId, extraData) {\n        super(children, \"element\", externalId, extraData);\n        this._shadow = alfa_option_1.None;\n        this._content = alfa_option_1.None;\n        this._namespace = namespace;\n        this._prefix = prefix;\n        this._name = name;\n        this._attributes = new Map(attributes\n            .filter((attribute) => attribute._attachOwner(this))\n            .map((attribute) => [attribute.qualifiedName, attribute]));\n        style.forEach((block) => alfa_iterable_1.Iterable.forEach(block, (declaration) => declaration._attachOwner(this)));\n        this._style = style;\n        this._id = this.attribute(\"id\").map((attr) => attr.value);\n        this._classes = this.attribute(\"class\")\n            .map((attr) => attr.value.trim().split(/\\s+/))\n            .getOr([]);\n        this._boxes = alfa_cache_1.Cache.from(device.isSome() && box.isSome() ? [[device.get(), box.get()]] : []);\n    }\n    get namespace() {\n        return this._namespace;\n    }\n    get prefix() {\n        return this._prefix;\n    }\n    get name() {\n        return this._name;\n    }\n    get qualifiedName() {\n        return this._prefix.reduce((name, prefix) => `${prefix}:${name}`, this._name);\n    }\n    get attributes() {\n        return alfa_sequence_1.Sequence.from(this._attributes.values());\n    }\n    get style() {\n        return this._style;\n    }\n    get shadow() {\n        return this._shadow;\n    }\n    get content() {\n        return this._content;\n    }\n    /**\n     * {@link https://dom.spec.whatwg.org/#concept-id}\n     */\n    get id() {\n        return this._id;\n    }\n    /**\n     * {@link https://dom.spec.whatwg.org/#concept-class}\n     */\n    get classes() {\n        return alfa_sequence_1.Sequence.from(this._classes);\n    }\n    getBoundingBox(device) {\n        return this._boxes.get(device);\n    }\n    parent(options = node_1.Node.Traversal.empty) {\n        const parent = this._parent;\n        if (options.isSet(node_1.Node.Traversal.flattened)) {\n            return parent.flatMap((parent) => {\n                if (shadow_1.Shadow.isShadow(parent)) {\n                    return parent.host;\n                }\n                if (Element.isElement(parent) && parent.shadow.isSome()) {\n                    return this.assignedSlot().flatMap((slot) => slot.parent(options));\n                }\n                return alfa_option_1.Option.of(parent);\n            });\n        }\n        return parent;\n    }\n    children(options = node_1.Node.Traversal.empty) {\n        const treeChildren = this._children;\n        const children = [];\n        if (options.isSet(node_1.Node.Traversal.flattened)) {\n            if (this._shadow.isSome()) {\n                return this._shadow.get().children(options);\n            }\n            if (slot_1.Slot.isSlot(this)) {\n                return alfa_sequence_1.Sequence.from(this.assignedNodes());\n            }\n            for (const child of treeChildren) {\n                if (slot_1.Slot.isSlot(child)) {\n                    children.push(...child.children(options));\n                }\n                else {\n                    children.push(child);\n                }\n            }\n        }\n        else {\n            if (options.isSet(node_1.Node.Traversal.composed) && this._shadow.isSome()) {\n                children.push(this._shadow.get());\n            }\n            children.push(...treeChildren);\n        }\n        if (options.isSet(node_1.Node.Traversal.nested) && this._content.isSome()) {\n            children.push(this._content.get());\n        }\n        return alfa_sequence_1.Sequence.from(children);\n    }\n    attribute(nameOrPredicate) {\n        if (typeof nameOrPredicate === \"string\") {\n            return alfa_option_1.Option.from(this._attributes.get(nameOrPredicate));\n        }\n        else {\n            return alfa_iterable_1.Iterable.find(this._attributes.values(), nameOrPredicate);\n        }\n    }\n    /**\n     * {@link https://html.spec.whatwg.org/#void-elements}\n     */\n    isVoid() {\n        switch (this._name) {\n            case \"area\":\n            case \"base\":\n            case \"basefont\":\n            case \"bgsound\":\n            case \"br\":\n            case \"col\":\n            case \"embed\":\n            case \"frame\":\n            case \"hr\":\n            case \"img\":\n            case \"input\":\n            case \"link\":\n            case \"meta\":\n            case \"param\":\n            case \"source\":\n            case \"track\":\n            case \"wbr\":\n                return true;\n            default:\n                return false;\n        }\n    }\n    /**\n     * {@link https://html.spec.whatwg.org/#dom-tabindex}\n     */\n    tabIndex() {\n        for (const tabIndex of this.attribute(\"tabindex\")) {\n            const number = parseInt(tabIndex.value, 10);\n            //Checking if tabindex isn't NaN, undefined, null, Infinity\n            if (number === number && number === (number | 0)) {\n                return alfa_option_1.Some.of(number);\n            }\n        }\n        if (Element.isSuggestedFocusable(this)) {\n            return alfa_option_1.Some.of(0);\n        }\n        return alfa_option_1.None;\n    }\n    /**\n     * {@link https://dom.spec.whatwg.org/#dom-slotable-assignedslot}\n     */\n    assignedSlot() {\n        return slotable_1.Slotable.findSlot(this);\n    }\n    /**\n     * {@link https://html.spec.whatwg.org/#dom-slot-assignednodes}\n     */\n    assignedNodes() {\n        return slot_1.Slot.findSlotables(this);\n    }\n    /**\n     * @internal\n     **/\n    _internalPath(options) {\n        let path = this.parent(options)\n            .map((parent) => parent.path(options))\n            .getOr(\"/\");\n        path += path === \"/\" ? \"\" : \"/\";\n        path += this._name;\n        const index = this.preceding(options)\n            .filter(Element.isElement)\n            .count((element) => element._name === this._name);\n        path += `[${index + 1}]`;\n        return path;\n    }\n    toJSON(options) {\n        return {\n            ...super.toJSON(),\n            namespace: this._namespace.getOr(null),\n            prefix: this._prefix.getOr(null),\n            name: this._name,\n            attributes: [...this._attributes.values()].map((attribute) => attribute.toJSON()),\n            style: this._style.map((style) => style.toJSON()).getOr(null),\n            shadow: this._shadow.map((shadow) => shadow.toJSON()).getOr(null),\n            content: this._content.map((content) => content.toJSON()).getOr(null),\n            box: options?.device === undefined\n                ? null\n                : this._boxes\n                    .get(options.device)\n                    .map((box) => box.toJSON())\n                    .getOr(null),\n        };\n    }\n    toString() {\n        const name = this.qualifiedName;\n        const attributes = [...this._attributes.values()]\n            .map((attribute) => ` ${attribute.toString()}`)\n            .join(\"\");\n        if (this.isVoid()) {\n            return `<${name}${attributes}>`;\n        }\n        const children = [...this._shadow, ...this._children, ...this._content]\n            .map((child) => child.toString().trim())\n            .filter(not(isEmpty))\n            .map(indent)\n            .join(\"\\n\");\n        return `<${name}${attributes}>${children === \"\" ? \"\" : `\\n${children}\\n`}</${name}>`;\n    }\n    /**\n     * @internal\n     */\n    _attachShadow(shadow) {\n        if (this._frozen || this._shadow.isSome() || !shadow._attachHost(this)) {\n            return false;\n        }\n        this._shadow = alfa_option_1.Option.of(shadow);\n        return true;\n    }\n    /**\n     * @internal\n     */\n    _attachContent(document) {\n        if (this._frozen ||\n            this._content.isSome() ||\n            !document._attachFrame(this)) {\n            return false;\n        }\n        this._content = alfa_option_1.Option.of(document);\n        return true;\n    }\n}\nexports.Element = Element;\n/**\n * @public\n */\n(function (Element) {\n    function isElement(value) {\n        return value instanceof Element;\n    }\n    Element.isElement = isElement;\n    /**\n     * @internal\n     */\n    function fromElement(json, device) {\n        return alfa_trampoline_1.Trampoline.traverse(json.children ?? [], (child) => node_1.Node.fromNode(child, device)).map((children) => {\n            const element = Element.of(alfa_option_1.Option.from(json.namespace), alfa_option_1.Option.from(json.prefix), json.name, json.attributes.map((attribute) => attribute_1.Attribute.fromAttribute(attribute).run()), children, json.style?.length === 0\n                ? alfa_option_1.None\n                : alfa_option_1.Option.from(json.style).map(block_1.Block.from), alfa_option_1.Option.from(json.box).map(alfa_rectangle_1.Rectangle.from), alfa_option_1.Option.from(device));\n            if (json.shadow !== null) {\n                element._attachShadow(shadow_1.Shadow.fromShadow(json.shadow, device).run());\n            }\n            if (json.content !== null) {\n                element._attachContent(document_1.Document.fromDocument(json.content, device).run());\n            }\n            return element;\n        });\n    }\n    Element.fromElement = fromElement;\n    /**\n     * @internal\n     */\n    function cloneElement(options, device) {\n        return (element) => alfa_trampoline_1.Trampoline.traverse(element.children(), (child) => {\n            if (Element.isElement(child) && options.predicate(child)) {\n                return alfa_trampoline_1.Trampoline.done(Array.from(options.newElements));\n            }\n            return node_1.Node.cloneNode(child, options, device).map((node) => [node]);\n        }).map((children) => {\n            const deviceOption = alfa_option_1.Option.from(device);\n            const clonedElement = Element.of(element.namespace, element.prefix, element.name, element.attributes.map((attribute) => attribute_1.Attribute.clone(attribute, options, device)), alfa_iterable_1.Iterable.flatten(children), element.style.map((block) => {\n                return block_1.Block.of(alfa_iterable_1.Iterable.map(block.declarations, (declaration) => alfa_dom_1.Declaration.of(declaration.name, declaration.value, declaration.important)));\n            }), deviceOption.flatMap((d) => element.getBoundingBox(d)), deviceOption, element.externalId);\n            if (element.shadow.isSome()) {\n                clonedElement._attachShadow(shadow_1.Shadow.clone(element.shadow.get(), options, device));\n            }\n            if (element.content.isSome()) {\n                clonedElement._attachContent(document_1.Document.clone(element.content.get(), options, device));\n            }\n            return clonedElement;\n        });\n    }\n    Element.cloneElement = cloneElement;\n    Element.hasAttribute = predicate.hasAttribute, Element.hasBox = predicate.hasBox, Element.hasDisplaySize = predicate.hasDisplaySize, Element.hasId = predicate.hasId, Element.hasInputType = predicate.hasInputType, Element.hasName = predicate.hasName, Element.hasNamespace = predicate.hasNamespace, Element.hasTabIndex = predicate.hasTabIndex, Element.hasUniqueId = predicate.hasUniqueId, Element.isBrowsingContextContainer = predicate.isBrowsingContextContainer, Element.isContent = predicate.isContent, Element.isActuallyDisabled = predicate.isActuallyDisabled, Element.isDocumentElement = predicate.isDocumentElement, Element.isDraggable = predicate.isDraggable, Element.isEditingHost = predicate.isEditingHost, Element.isFallback = predicate.isFallback, Element.isScopedTo = predicate.isScopedTo, Element.isSuggestedFocusable = predicate.isSuggestedFocusable, Element.isReplaced = predicate.isReplaced;\n    Element.inputType = helpers.inputType;\n})(Element || (exports.Element = Element = {}));\nfunction indent(input) {\n    return input.replace(/^/gm, \"  \");\n}\n//# sourceMappingURL=element.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/src/node/element.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/src/node/element/input-type.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/src/node/element/input-type.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.inputType = void 0;\n/**\n * @public\n */\nfunction inputType(element) {\n    return element\n        .attribute(\"type\")\n        .flatMap((attribute) => attribute.enumerate(\"hidden\", \"search\", \"tel\", \"url\", \"email\", \"password\", \"date\", \"month\", \"week\", \"time\", \"datetime-local\", \"number\", \"range\", \"color\", \"checkbox\", \"radio\", \"file\", \"submit\", \"image\", \"reset\", \"button\", \"text\"))\n        .getOr(\"text\");\n}\nexports.inputType = inputType;\n//# sourceMappingURL=input-type.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/src/node/element/input-type.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/src/node/element/predicate.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/src/node/element/predicate.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./predicate/has-attribute */ \"./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/has-attribute.js\"), exports);\n__exportStar(__webpack_require__(/*! ./predicate/has-box */ \"./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/has-box.js\"), exports);\n__exportStar(__webpack_require__(/*! ./predicate/has-display-size */ \"./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/has-display-size.js\"), exports);\n__exportStar(__webpack_require__(/*! ./predicate/has-id */ \"./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/has-id.js\"), exports);\n__exportStar(__webpack_require__(/*! ./predicate/has-input-type */ \"./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/has-input-type.js\"), exports);\n__exportStar(__webpack_require__(/*! ./predicate/has-name */ \"./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/has-name.js\"), exports);\n__exportStar(__webpack_require__(/*! ./predicate/has-namespace */ \"./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/has-namespace.js\"), exports);\n__exportStar(__webpack_require__(/*! ./predicate/has-tab-index */ \"./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/has-tab-index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./predicate/has-unique-id */ \"./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/has-unique-id.js\"), exports);\n__exportStar(__webpack_require__(/*! ./predicate/is-browsing-context-container */ \"./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/is-browsing-context-container.js\"), exports);\n__exportStar(__webpack_require__(/*! ./predicate/is-content */ \"./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/is-content.js\"), exports);\n__exportStar(__webpack_require__(/*! ./predicate/is-actually-disabled */ \"./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/is-actually-disabled.js\"), exports);\n__exportStar(__webpack_require__(/*! ./predicate/is-document-element */ \"./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/is-document-element.js\"), exports);\n__exportStar(__webpack_require__(/*! ./predicate/is-draggable */ \"./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/is-draggable.js\"), exports);\n__exportStar(__webpack_require__(/*! ./predicate/is-editing-host */ \"./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/is-editing-host.js\"), exports);\n__exportStar(__webpack_require__(/*! ./predicate/is-fallback */ \"./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/is-fallback.js\"), exports);\n__exportStar(__webpack_require__(/*! ./predicate/is-scoped-to */ \"./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/is-scoped-to.js\"), exports);\n__exportStar(__webpack_require__(/*! ./predicate/is-suggested-focusable */ \"./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/is-suggested-focusable.js\"), exports);\n__exportStar(__webpack_require__(/*! ./predicate/is-replaced */ \"./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/is-replaced.js\"), exports);\n//# sourceMappingURL=predicate.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/src/node/element/predicate.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/has-attribute.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/has-attribute.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.hasAttribute = void 0;\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst { property } = alfa_predicate_1.Predicate;\nfunction hasAttribute(nameOrPredicate, value = () => true) {\n    if (typeof nameOrPredicate === \"function\") {\n        return (element) => element.attribute(nameOrPredicate).isSome();\n    }\n    const name = nameOrPredicate;\n    const predicate = property(\"value\", value);\n    return (element) => element.attribute(name).some(predicate);\n}\nexports.hasAttribute = hasAttribute;\n//# sourceMappingURL=has-attribute.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/has-attribute.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/has-box.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/has-box.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.hasBox = void 0;\n/**\n * @public\n */\nfunction hasBox(predicate = () => true, device) {\n    return (element) => element.getBoundingBox(device).some(predicate);\n}\nexports.hasBox = hasBox;\n//# sourceMappingURL=has-box.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/has-box.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/has-display-size.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/has-display-size.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.hasDisplaySize = void 0;\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\n/**\n * @public\n */\nfunction hasDisplaySize(valueOrPredicate) {\n    const predicate = typeof valueOrPredicate === \"function\"\n        ? valueOrPredicate\n        : (size) => valueOrPredicate === size;\n    return (element) => {\n        const displaySize = element\n            .attribute(\"size\")\n            .flatMap((size) => {\n            const sizeValue = parseInt(size.value, 10);\n            if (sizeValue === sizeValue && sizeValue === (sizeValue | 0)) {\n                return alfa_option_1.Option.of(sizeValue);\n            }\n            else {\n                return alfa_option_1.None;\n            }\n        })\n            .getOrElse(() => element\n            .attribute(\"multiple\")\n            .map(() => 4)\n            .getOr(1));\n        return predicate(displaySize);\n    };\n}\nexports.hasDisplaySize = hasDisplaySize;\n//# sourceMappingURL=has-display-size.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/has-display-size.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/has-id.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/has-id.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.hasId = void 0;\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst { equals } = alfa_predicate_1.Predicate;\nfunction hasId(idOrPredicate = () => true, ...ids) {\n    let predicate;\n    if (typeof idOrPredicate === \"function\") {\n        predicate = idOrPredicate;\n    }\n    else if (typeof idOrPredicate === \"string\") {\n        predicate = equals(idOrPredicate, ...ids);\n    }\n    else {\n        predicate = (value) => alfa_iterable_1.Iterable.includes(ids, value);\n    }\n    return (element) => element.id.some(predicate);\n}\nexports.hasId = hasId;\n//# sourceMappingURL=has-id.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/has-id.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/has-input-type.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/has-input-type.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.hasInputType = void 0;\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_refinement_1 = __webpack_require__(/*! @siteimprove/alfa-refinement */ \"./node_modules/@siteimprove/alfa-refinement/src/index.js\");\nconst input_type_1 = __webpack_require__(/*! ../input-type */ \"./node_modules/@siteimprove/alfa-dom/src/node/element/input-type.js\");\nconst has_name_1 = __webpack_require__(/*! ./has-name */ \"./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/has-name.js\");\nconst { equals, test } = alfa_predicate_1.Predicate;\nconst { and } = alfa_refinement_1.Refinement;\nfunction hasInputType(inputTypeOrPredicate, ...inputTypes) {\n    let predicate;\n    if (typeof inputTypeOrPredicate === \"function\") {\n        predicate = inputTypeOrPredicate;\n    }\n    else {\n        predicate = equals(inputTypeOrPredicate, ...inputTypes);\n    }\n    return and((0, has_name_1.hasName)(\"input\"), (element) => test(predicate, (0, input_type_1.inputType)(element)));\n}\nexports.hasInputType = hasInputType;\n//# sourceMappingURL=has-input-type.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/has-input-type.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/has-name.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/has-name.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.hasName = void 0;\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst { equals } = alfa_predicate_1.Predicate;\nfunction hasName(nameOrPredicate, ...names) {\n    let predicate;\n    if (typeof nameOrPredicate === \"function\") {\n        predicate = nameOrPredicate;\n    }\n    else {\n        predicate = equals(nameOrPredicate, ...names);\n    }\n    return (element) => predicate(element.name);\n}\nexports.hasName = hasName;\n//# sourceMappingURL=has-name.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/has-name.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/has-namespace.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/has-namespace.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.hasNamespace = void 0;\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst { equals } = alfa_predicate_1.Predicate;\nfunction hasNamespace(namespaceOrPredicate, ...namespaces) {\n    let predicate;\n    if (typeof namespaceOrPredicate === \"function\") {\n        predicate = namespaceOrPredicate;\n    }\n    else {\n        predicate = equals(namespaceOrPredicate, ...namespaces);\n    }\n    return (element) => element.namespace.some(predicate);\n}\nexports.hasNamespace = hasNamespace;\n//# sourceMappingURL=has-namespace.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/has-namespace.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/has-tab-index.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/has-tab-index.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.hasTabIndex = void 0;\nconst alfa_array_1 = __webpack_require__(/*! @siteimprove/alfa-array */ \"./node_modules/@siteimprove/alfa-array/src/index.js\");\n/**\n * @public\n */\nfunction hasTabIndex(predicateOrNumber = () => true, ...rest) {\n    const predicate = typeof predicateOrNumber === \"number\"\n        ? (n) => alfa_array_1.Array.append(rest, predicateOrNumber).includes(n)\n        : predicateOrNumber;\n    return (element) => element.tabIndex().some(predicate);\n}\nexports.hasTabIndex = hasTabIndex;\n//# sourceMappingURL=has-tab-index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/has-tab-index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/has-unique-id.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/has-unique-id.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.hasUniqueId = void 0;\nconst alfa_cache_1 = __webpack_require__(/*! @siteimprove/alfa-cache */ \"./node_modules/@siteimprove/alfa-cache/src/index.js\");\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst element_1 = __webpack_require__(/*! ../../element */ \"./node_modules/@siteimprove/alfa-dom/src/node/element.js\");\nconst has_id_1 = __webpack_require__(/*! ./has-id */ \"./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/has-id.js\");\nconst { and } = alfa_predicate_1.Predicate;\nconst uniques = alfa_cache_1.Cache.empty();\n/**\n * @public\n */\nexports.hasUniqueId = and((0, has_id_1.hasId)(), (element) => uniques\n    .get(element.root(), () => {\n    const counts = new Map();\n    for (const node of element.root().descendants()) {\n        if (element_1.Element.isElement(node) && node.id.isSome()) {\n            const id = node.id.get();\n            const count = counts.get(id);\n            if (count === undefined) {\n                counts.set(id, 1);\n            }\n            else {\n                counts.set(id, 1 + count);\n            }\n        }\n    }\n    return new Set(alfa_iterable_1.Iterable.map(alfa_iterable_1.Iterable.filter(counts, ([, count]) => count === 1), ([id]) => id));\n})\n    // The initial hasId in the conjunction guarantee that there is one.\n    // Still defaulting to an impossible one.\n    .has(element.id.getOr(\"impossible id due to spaces\")));\n//# sourceMappingURL=has-unique-id.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/has-unique-id.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/is-actually-disabled.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/is-actually-disabled.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isActuallyDisabled = void 0;\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst element_1 = __webpack_require__(/*! ../../element */ \"./node_modules/@siteimprove/alfa-dom/src/node/element.js\");\nconst { equals } = alfa_predicate_1.Predicate;\n/**\n * {@link https://html.spec.whatwg.org/multipage#concept-element-disabled}\n *\n * @public\n */\nfunction isActuallyDisabled(element) {\n    switch (element.name) {\n        // https://html.spec.whatwg.org/multipage#concept-fe-disabled\n        case \"button\":\n        case \"input\":\n        case \"select\":\n        case \"textarea\":\n        // https://html.spec.whatwg.org/#attr-optgroup-disabled\n        case \"optgroup\":\n            return element.attribute(\"disabled\").isSome();\n        // https://html.spec.whatwg.org/multipage#concept-fieldset-disabled\n        case \"fieldset\":\n            if (element.attribute(\"disabled\").isSome()) {\n                return true;\n            }\n            return element\n                .ancestors()\n                .filter(element_1.Element.isElement)\n                .find(element_1.Element.hasName(\"fieldset\"))\n                .reject(isActuallyDisabled)\n                .flatMap((fieldset) => fieldset\n                .descendants()\n                .filter(element_1.Element.isElement)\n                .find(element_1.Element.hasName(\"legend\")))\n                .some((legend) => legend.descendants().some(equals(element)));\n        // https://html.spec.whatwg.org/multipage#concept-option-disabled\n        case \"option\":\n            if (element.attribute(\"disabled\").isSome()) {\n                return true;\n            }\n            return element\n                .inclusiveAncestors()\n                .filter(element_1.Element.isElement)\n                .find(element_1.Element.hasName(\"optgroup\"))\n                .some(isActuallyDisabled);\n    }\n    return false;\n}\nexports.isActuallyDisabled = isActuallyDisabled;\n//# sourceMappingURL=is-actually-disabled.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/is-actually-disabled.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/is-browsing-context-container.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/is-browsing-context-container.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isBrowsingContextContainer = void 0;\n/**\n * {@link https://html.spec.whatwg.org/#browsing-context-container}\n *\n * @public\n */\nfunction isBrowsingContextContainer(element) {\n    switch (element.name) {\n        // <iframe> elements are _always_ browsing context containers as they will\n        // _always_ have a content document, although it might be empty.\n        case \"iframe\":\n            return true;\n        // <object> elements are only browsing context containers if they have a\n        // content document.\n        case \"object\":\n            return element.content.isSome();\n        default:\n            return false;\n    }\n}\nexports.isBrowsingContextContainer = isBrowsingContextContainer;\n//# sourceMappingURL=is-browsing-context-container.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/is-browsing-context-container.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/is-content.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/is-content.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isContent = void 0;\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_refinement_1 = __webpack_require__(/*! @siteimprove/alfa-refinement */ \"./node_modules/@siteimprove/alfa-refinement/src/index.js\");\nconst element_1 = __webpack_require__(/*! ../../element */ \"./node_modules/@siteimprove/alfa-dom/src/node/element.js\");\nconst node_1 = __webpack_require__(/*! ../../../node */ \"./node_modules/@siteimprove/alfa-dom/src/node.js\");\nconst is_replaced_1 = __webpack_require__(/*! ./is-replaced */ \"./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/is-replaced.js\");\nconst { or } = alfa_predicate_1.Predicate;\nconst { and } = alfa_refinement_1.Refinement;\n/**\n * A node is actual content (not just a container) if it has no children,\n * or if it is a replaced element (assumed to be replaced by actual content).\n *\n * @public\n */\nfunction isContent(options = node_1.Node.Traversal.empty) {\n    return or((node) => node.children(options).isEmpty(), and(element_1.Element.isElement, is_replaced_1.isReplaced));\n}\nexports.isContent = isContent;\n//# sourceMappingURL=is-content.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/is-content.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/is-document-element.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/is-document-element.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isDocumentElement = void 0;\nconst alfa_refinement_1 = __webpack_require__(/*! @siteimprove/alfa-refinement */ \"./node_modules/@siteimprove/alfa-refinement/src/index.js\");\nconst element_1 = __webpack_require__(/*! ../../element */ \"./node_modules/@siteimprove/alfa-dom/src/node/element.js\");\nconst namespace_1 = __webpack_require__(/*! ../../../namespace */ \"./node_modules/@siteimprove/alfa-dom/src/namespace.js\");\nconst has_name_1 = __webpack_require__(/*! ./has-name */ \"./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/has-name.js\");\nconst has_namespace_1 = __webpack_require__(/*! ./has-namespace */ \"./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/has-namespace.js\");\nconst { and, test } = alfa_refinement_1.Refinement;\n/**\n * @public\n */\nfunction isDocumentElement(value) {\n    return test(and(element_1.Element.isElement, and((0, has_name_1.hasName)(\"html\"), (0, has_namespace_1.hasNamespace)(namespace_1.Namespace.HTML))), value);\n}\nexports.isDocumentElement = isDocumentElement;\n//# sourceMappingURL=is-document-element.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/is-document-element.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/is-draggable.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/is-draggable.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isDraggable = void 0;\n/**\n * {@link https://html.spec.whatwg.org/#dom-draggable}\n *\n * @public\n */\nfunction isDraggable(element) {\n    return element\n        .attribute(\"draggable\")\n        .map((attribute) => attribute.enumerate(\"true\", \"false\", \"auto\").getOr(\"auto\"))\n        .some((draggable) => {\n        switch (draggable) {\n            case \"true\":\n                return true;\n            case \"false\":\n                return false;\n            case \"auto\":\n                switch (element.name) {\n                    case \"img\":\n                        return true;\n                    case \"a\":\n                        return element.attribute(\"href\").isSome();\n                    default:\n                        return false;\n                }\n        }\n    });\n}\nexports.isDraggable = isDraggable;\n//# sourceMappingURL=is-draggable.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/is-draggable.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/is-editing-host.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/is-editing-host.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isEditingHost = void 0;\n/**\n * {@link https://html.spec.whatwg.org/#editing-host}\n *\n * @public\n */\nfunction isEditingHost(element) {\n    return element\n        .attribute(\"contenteditable\")\n        .flatMap((attribute) => attribute.enumerate(\"\", \"true\", \"false\"))\n        .some((contenteditable) => {\n        switch (contenteditable) {\n            case \"\":\n            case \"true\":\n                return true;\n            case \"false\":\n                return false;\n        }\n    });\n}\nexports.isEditingHost = isEditingHost;\n//# sourceMappingURL=is-editing-host.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/is-editing-host.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/is-fallback.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/is-fallback.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isFallback = void 0;\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_refinement_1 = __webpack_require__(/*! @siteimprove/alfa-refinement */ \"./node_modules/@siteimprove/alfa-refinement/src/index.js\");\nconst element_1 = __webpack_require__(/*! ../../element */ \"./node_modules/@siteimprove/alfa-dom/src/node/element.js\");\nconst has_name_1 = __webpack_require__(/*! ./has-name */ \"./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/has-name.js\");\nconst { not, or, test } = alfa_predicate_1.Predicate;\nconst { and } = alfa_refinement_1.Refinement;\n/**\n * Children of <iframe>, <audio>, <video> elements act as fallback content in\n * legacy user agents.\n *\n * <track> and <source> children of audio and video are allowed by the content\n * model of both. Thus, they will be not act as fallback\n *\n * {@link https://html.spec.whatwg.org/multipage/#the-video-element}\n * {@link https://html.spec.whatwg.org/multipage/#the-audio-element}\n *\n * @public\n */\nfunction isFallback(node) {\n    return test(or(hasParentName(\"iframe\"), and(hasParentName(\"audio\", \"video\"), not(and(element_1.Element.isElement, (0, has_name_1.hasName)(\"track\", \"source\"))))), node);\n}\nexports.isFallback = isFallback;\nfunction hasParentName(name, ...names) {\n    return (node) => node\n        .parent()\n        .filter(element_1.Element.isElement)\n        .some((0, has_name_1.hasName)(name, ...names));\n}\n//# sourceMappingURL=is-fallback.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/is-fallback.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/is-replaced.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/is-replaced.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isReplaced = void 0;\nconst refinement_1 = __webpack_require__(/*! @siteimprove/alfa-refinement/src/refinement */ \"./node_modules/@siteimprove/alfa-refinement/src/refinement.js\");\nconst has_name_1 = __webpack_require__(/*! ./has-name */ \"./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/has-name.js\");\nconst { test } = refinement_1.Refinement;\n// For some reason, type inference by \"yarn document\" seems to depend on\n// machine (?) and returns the list of elements' names in different orders.\n// This notably breaks the CI if \"yarn document\" there builds a different type\n// than on local machine. Using a function with explicit type seems to stabilize\n// things.\n/**\n * {@link https://html.spec.whatwg.org/#replaced-elements}\n *\n * @public\n */\nfunction isReplaced(element) {\n    return test((0, has_name_1.hasName)(\"audio\", \"canvas\", \"embed\", \"iframe\", \"img\", \"input\", \"object\", \"video\"), element);\n}\nexports.isReplaced = isReplaced;\n//# sourceMappingURL=is-replaced.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/is-replaced.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/is-scoped-to.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/is-scoped-to.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isScopedTo = void 0;\nconst element_1 = __webpack_require__(/*! ../../element */ \"./node_modules/@siteimprove/alfa-dom/src/node/element.js\");\n/**\n * @public\n */\nfunction isScopedTo(name, ...rest) {\n    return (element) => element\n        .ancestors()\n        .filter(element_1.Element.isElement)\n        .some(element_1.Element.hasName(name, ...rest));\n}\nexports.isScopedTo = isScopedTo;\n//# sourceMappingURL=is-scoped-to.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/is-scoped-to.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/is-suggested-focusable.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/is-suggested-focusable.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isSuggestedFocusable = void 0;\nconst element_1 = __webpack_require__(/*! ../../element */ \"./node_modules/@siteimprove/alfa-dom/src/node/element.js\");\n/**\n * {@link https://html.spec.whatwg.org/#tabindex-value}\n *\n * @remarks\n * Draggable elements for which the user agent supports drag operations without\n * a pointer device are also suggested focusable. However, we're not aware of\n * any such cases and therefore don't suggest making draggable elements\n * focusable.\n *\n * @public\n */\nfunction isSuggestedFocusable(element) {\n    switch (element.name) {\n        case \"a\":\n        case \"link\":\n            return element.attribute(\"href\").isSome();\n        case \"input\":\n            return element\n                .attribute(\"type\")\n                .flatMap((attribute) => attribute.enumerate(\"hidden\"))\n                .isNone();\n        case \"audio\":\n        case \"video\":\n            return element.attribute(\"controls\").isSome();\n        case \"button\":\n        case \"select\":\n        case \"textarea\":\n            return true;\n        case \"summary\":\n            return element\n                .parent()\n                .filter(element_1.Element.isElement)\n                .some((parent) => parent.name === \"details\" &&\n                // Checking that element is the first <summary> child of parent.\n                parent\n                    .children()\n                    .filter(element_1.Element.isElement)\n                    // Switching on element.name does not narrow the type, so we must\n                    // keep it as Element<string>.\n                    .find(element_1.Element.hasName(\"summary\"))\n                    .includes(element));\n    }\n    return (element_1.Element.isEditingHost(element) ||\n        element_1.Element.isBrowsingContextContainer(element));\n}\nexports.isSuggestedFocusable = isSuggestedFocusable;\n//# sourceMappingURL=is-suggested-focusable.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/src/node/element/predicate/is-suggested-focusable.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/src/node/fragment.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/src/node/fragment.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Fragment = void 0;\nconst alfa_trampoline_1 = __webpack_require__(/*! @siteimprove/alfa-trampoline */ \"./node_modules/@siteimprove/alfa-trampoline/src/index.js\");\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst node_1 = __webpack_require__(/*! ../node */ \"./node_modules/@siteimprove/alfa-dom/src/node.js\");\nconst element_1 = __webpack_require__(/*! ./element */ \"./node_modules/@siteimprove/alfa-dom/src/node/element.js\");\n/**\n * @public\n */\nclass Fragment extends node_1.Node {\n    static of(children, externalId, extraData) {\n        return new Fragment(Array.from(children), externalId, extraData);\n    }\n    static empty() {\n        return new Fragment([]);\n    }\n    constructor(children, externalId, extraData) {\n        super(children, \"fragment\", externalId, extraData);\n    }\n    /**\n     * @internal\n     **/\n    _internalPath() {\n        return \"/\";\n    }\n    toString() {\n        const children = this._children\n            .map((child) => indent(child.toString()))\n            .join(\"\\n\");\n        return `#document-fragment${children === \"\" ? \"\" : `\\n${children}`}`;\n    }\n    /**\n     * @internal\n     */\n    _attachParent() {\n        return false;\n    }\n}\nexports.Fragment = Fragment;\n/**\n * @public\n */\n(function (Fragment) {\n    function isFragment(value) {\n        return value instanceof Fragment;\n    }\n    Fragment.isFragment = isFragment;\n    /**\n     * @internal\n     */\n    function fromFragment(json, device) {\n        return alfa_trampoline_1.Trampoline.traverse(json.children ?? [], (child) => node_1.Node.fromNode(child, device)).map((children) => Fragment.of(children));\n    }\n    Fragment.fromFragment = fromFragment;\n    /**\n     * @internal\n     */\n    function cloneFragment(options, device) {\n        return (fragment) => alfa_trampoline_1.Trampoline.traverse(fragment.children(), (child) => {\n            if (element_1.Element.isElement(child) && options.predicate(child)) {\n                return alfa_trampoline_1.Trampoline.done(Array.from(options.newElements));\n            }\n            return node_1.Node.cloneNode(child, options, device).map((node) => [node]);\n        }).map((children) => {\n            return Fragment.of(alfa_iterable_1.Iterable.flatten(children), fragment.externalId);\n        });\n    }\n    Fragment.cloneFragment = cloneFragment;\n})(Fragment || (exports.Fragment = Fragment = {}));\nfunction indent(input) {\n    return input.replace(/^/gm, \"  \");\n}\n//# sourceMappingURL=fragment.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/src/node/fragment.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/src/node/predicate.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/src/node/predicate.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./predicate/has-child */ \"./node_modules/@siteimprove/alfa-dom/src/node/predicate/has-child.js\"), exports);\n__exportStar(__webpack_require__(/*! ./predicate/has-descendant */ \"./node_modules/@siteimprove/alfa-dom/src/node/predicate/has-descendant.js\"), exports);\n__exportStar(__webpack_require__(/*! ./predicate/has-inclusive-descendant */ \"./node_modules/@siteimprove/alfa-dom/src/node/predicate/has-inclusive-descendant.js\"), exports);\n__exportStar(__webpack_require__(/*! ./predicate/has-text-content */ \"./node_modules/@siteimprove/alfa-dom/src/node/predicate/has-text-content.js\"), exports);\n__exportStar(__webpack_require__(/*! ./predicate/is-root */ \"./node_modules/@siteimprove/alfa-dom/src/node/predicate/is-root.js\"), exports);\n//# sourceMappingURL=predicate.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/src/node/predicate.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/src/node/predicate/has-child.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/src/node/predicate/has-child.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.hasChild = void 0;\nconst node_1 = __webpack_require__(/*! ../../node */ \"./node_modules/@siteimprove/alfa-dom/src/node.js\");\n/**\n * @public\n */\nfunction hasChild(predicate, options = node_1.Node.Traversal.empty) {\n    return (node) => node.children(options).some(predicate);\n}\nexports.hasChild = hasChild;\n//# sourceMappingURL=has-child.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/src/node/predicate/has-child.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/src/node/predicate/has-descendant.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/src/node/predicate/has-descendant.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.hasDescendant = void 0;\nconst node_1 = __webpack_require__(/*! ../../node */ \"./node_modules/@siteimprove/alfa-dom/src/node.js\");\n/**\n * @public\n */\nfunction hasDescendant(predicate, options = node_1.Node.Traversal.empty) {\n    return (node) => node.descendants(options).some(predicate);\n}\nexports.hasDescendant = hasDescendant;\n//# sourceMappingURL=has-descendant.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/src/node/predicate/has-descendant.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/src/node/predicate/has-inclusive-descendant.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/src/node/predicate/has-inclusive-descendant.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.hasInclusiveDescendant = void 0;\nconst node_1 = __webpack_require__(/*! ../../node */ \"./node_modules/@siteimprove/alfa-dom/src/node.js\");\n/**\n * @public\n */\nfunction hasInclusiveDescendant(predicate, options = node_1.Node.Traversal.empty) {\n    return (node) => node.inclusiveDescendants(options).some(predicate);\n}\nexports.hasInclusiveDescendant = hasInclusiveDescendant;\n//# sourceMappingURL=has-inclusive-descendant.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/src/node/predicate/has-inclusive-descendant.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/src/node/predicate/has-text-content.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/src/node/predicate/has-text-content.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.hasTextContent = void 0;\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst node_1 = __webpack_require__(/*! ../../node */ \"./node_modules/@siteimprove/alfa-dom/src/node.js\");\nconst { isEmpty } = alfa_iterable_1.Iterable;\nconst { not } = alfa_predicate_1.Predicate;\n/**\n * @public\n */\nfunction hasTextContent(predicate = not(isEmpty), options = node_1.Node.Traversal.empty) {\n    return (node) => predicate(node.textContent(options));\n}\nexports.hasTextContent = hasTextContent;\n//# sourceMappingURL=has-text-content.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/src/node/predicate/has-text-content.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/src/node/predicate/is-root.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/src/node/predicate/is-root.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isRoot = void 0;\n/**\n * @public\n */\nfunction isRoot(options) {\n    return (node) => node.parent(options).isNone();\n}\nexports.isRoot = isRoot;\n//# sourceMappingURL=is-root.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/src/node/predicate/is-root.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/src/node/query/element-descendants.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/src/node/query/element-descendants.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getElementDescendants = void 0;\nconst alfa_cache_1 = __webpack_require__(/*! @siteimprove/alfa-cache */ \"./node_modules/@siteimprove/alfa-cache/src/index.js\");\nconst node_1 = __webpack_require__(/*! ../../node */ \"./node_modules/@siteimprove/alfa-dom/src/node.js\");\nconst element_1 = __webpack_require__(/*! ../element */ \"./node_modules/@siteimprove/alfa-dom/src/node/element.js\");\nconst _elementDescendantsCache = alfa_cache_1.Cache.empty();\n/**\n * @public\n */\nfunction getElementDescendants(node, options = node_1.Node.Traversal.empty) {\n    const optionsMap = _elementDescendantsCache.get(node, () => []);\n    if (optionsMap[options.value] === undefined) {\n        optionsMap[options.value] = node\n            .descendants(options)\n            .filter(element_1.Element.isElement);\n    }\n    return optionsMap[options.value];\n}\nexports.getElementDescendants = getElementDescendants;\n//# sourceMappingURL=element-descendants.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/src/node/query/element-descendants.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/src/node/query/element-id-map.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/src/node/query/element-id-map.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getElementIdMap = void 0;\nconst alfa_cache_1 = __webpack_require__(/*! @siteimprove/alfa-cache */ \"./node_modules/@siteimprove/alfa-cache/src/index.js\");\nconst alfa_map_1 = __webpack_require__(/*! @siteimprove/alfa-map */ \"./node_modules/@siteimprove/alfa-map/src/index.js\");\nconst document_1 = __webpack_require__(/*! ../document */ \"./node_modules/@siteimprove/alfa-dom/src/node/document.js\");\nconst element_descendants_1 = __webpack_require__(/*! ./element-descendants */ \"./node_modules/@siteimprove/alfa-dom/src/node/query/element-descendants.js\");\nconst elementMapCache = alfa_cache_1.Cache.empty();\n/**\n * Returns a map from id to elements, in the subtree rooted at a given node.\n *\n * @privateRemarks\n * Since `id` are scoped to trees, and do not cross shadow or content boundaries,\n * we never need traversal options.\n *\n * @public\n */\nfunction getElementIdMap(node) {\n    if (document_1.Document.isDocument(node)) {\n        return elementMapCache.get(node, () => buildElementIdMap(node));\n    }\n    return buildElementIdMap(node);\n}\nexports.getElementIdMap = getElementIdMap;\nfunction buildElementIdMap(node) {\n    // Build a map from ID -> element to allow fast resolution of ID references.\n    // The collected references are added to the map in reverse order to ensure\n    // that the first occurrence of a given ID is what ends up in the map in\n    // event of duplicates.\n    return alfa_map_1.Map.from((0, element_descendants_1.getElementDescendants)(node)\n        .collect((element) => element.id.map((id) => [id, element]))\n        .reverse());\n}\n//# sourceMappingURL=element-id-map.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/src/node/query/element-id-map.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/src/node/query/index.js":
/*!********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/src/node/query/index.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Query = void 0;\nconst elementDescendants = __webpack_require__(/*! ./element-descendants */ \"./node_modules/@siteimprove/alfa-dom/src/node/query/element-descendants.js\");\nconst elementIdMap = __webpack_require__(/*! ./element-id-map */ \"./node_modules/@siteimprove/alfa-dom/src/node/query/element-id-map.js\");\n/**\n * @public\n */\nvar Query;\n(function (Query) {\n    Query.getElementDescendants = elementDescendants.getElementDescendants;\n    Query.getElementIdMap = elementIdMap.getElementIdMap;\n})(Query || (exports.Query = Query = {}));\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/src/node/query/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/src/node/shadow.js":
/*!***************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/src/node/shadow.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Shadow = void 0;\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_trampoline_1 = __webpack_require__(/*! @siteimprove/alfa-trampoline */ \"./node_modules/@siteimprove/alfa-trampoline/src/index.js\");\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst node_1 = __webpack_require__(/*! ../node */ \"./node_modules/@siteimprove/alfa-dom/src/node.js\");\nconst sheet_1 = __webpack_require__(/*! ../style/sheet */ \"./node_modules/@siteimprove/alfa-dom/src/style/sheet.js\");\nconst element_1 = __webpack_require__(/*! ./element */ \"./node_modules/@siteimprove/alfa-dom/src/node/element.js\");\n/**\n * @public\n */\nclass Shadow extends node_1.Node {\n    static of(children, style = [], mode = Shadow.Mode.Open, externalId, extraData) {\n        return new Shadow(Array.from(children), Array.from(style), mode, externalId, extraData);\n    }\n    static empty() {\n        return new Shadow([], [], Shadow.Mode.Open);\n    }\n    constructor(children, style, mode, externalId, extraData) {\n        super(children, \"shadow\", externalId, extraData);\n        this._host = alfa_option_1.None;\n        this._mode = mode;\n        this._style = style;\n    }\n    get mode() {\n        return this._mode;\n    }\n    get host() {\n        return this._host;\n    }\n    get style() {\n        return this._style;\n    }\n    parent(options = node_1.Node.Traversal.empty) {\n        if (options.isSet(node_1.Node.Traversal.composed)) {\n            return this._host;\n        }\n        return alfa_option_1.None;\n    }\n    /**\n     * @internal\n     **/\n    _internalPath(options = node_1.Node.Traversal.empty) {\n        if (options.isSet(node_1.Node.Traversal.composed)) {\n            return (this._host.map((host) => host.path(options)).getOr(\"\") +\n                \"/shadow-root()\");\n        }\n        if (options.isSet(node_1.Node.Traversal.flattened)) {\n            return this._host.map((host) => host.path(options)).getOr(\"/\");\n        }\n        return \"/\";\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            mode: this._mode,\n            style: this._style.map((sheet) => sheet.toJSON()),\n        };\n    }\n    toString() {\n        const children = this._children\n            .map((child) => indent(child.toString()))\n            .join(\"\\n\");\n        return `#shadow-root (${this._mode})${children === \"\" ? \"\" : `\\n${children}`}`;\n    }\n    /**\n     * @internal\n     */\n    _attachParent() {\n        return false;\n    }\n    /**\n     * @internal\n     */\n    _attachHost(host) {\n        if (this._frozen || this._host.isSome()) {\n            return false;\n        }\n        this._host = alfa_option_1.Option.of(host);\n        this._frozen = true;\n        return true;\n    }\n}\nexports.Shadow = Shadow;\n/**\n * @public\n */\n(function (Shadow) {\n    let Mode;\n    (function (Mode) {\n        Mode[\"Open\"] = \"open\";\n        Mode[\"Closed\"] = \"closed\";\n    })(Mode = Shadow.Mode || (Shadow.Mode = {}));\n    function isShadow(value) {\n        return value instanceof Shadow;\n    }\n    Shadow.isShadow = isShadow;\n    /**\n     * @internal\n     */\n    function fromShadow(json, device) {\n        return alfa_trampoline_1.Trampoline.traverse(json.children ?? [], (child) => node_1.Node.fromNode(child, device)).map((children) => Shadow.of(children, json.style.map(sheet_1.Sheet.from), json.mode));\n    }\n    Shadow.fromShadow = fromShadow;\n    /**\n     * @internal\n     */\n    function cloneShadow(options, device) {\n        return (shadow) => alfa_trampoline_1.Trampoline.traverse(shadow.children(), (child) => {\n            if (element_1.Element.isElement(child) && options.predicate(child)) {\n                return alfa_trampoline_1.Trampoline.done(Array.from(options.newElements));\n            }\n            return node_1.Node.cloneNode(child, options, device).map((node) => [node]);\n        }).map((children) => {\n            return Shadow.of(alfa_iterable_1.Iterable.flatten(children), shadow.style, shadow.mode, shadow.externalId);\n        });\n    }\n    Shadow.cloneShadow = cloneShadow;\n})(Shadow || (exports.Shadow = Shadow = {}));\nfunction indent(input) {\n    return input.replace(/^/gm, \"  \");\n}\n//# sourceMappingURL=shadow.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/src/node/shadow.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/src/node/slot.js":
/*!*************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/src/node/slot.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Slot = void 0;\nconst element_1 = __webpack_require__(/*! ./element */ \"./node_modules/@siteimprove/alfa-dom/src/node/element.js\");\nconst shadow_1 = __webpack_require__(/*! ./shadow */ \"./node_modules/@siteimprove/alfa-dom/src/node/shadow.js\");\nconst slotable_1 = __webpack_require__(/*! ./slotable */ \"./node_modules/@siteimprove/alfa-dom/src/node/slotable.js\");\n/**\n * @public\n */\nvar Slot;\n(function (Slot) {\n    function isSlot(value) {\n        return element_1.Element.isElement(value) && value.name === \"slot\";\n    }\n    Slot.isSlot = isSlot;\n    /**\n     * {@link https://dom.spec.whatwg.org/#slot-name}\n     */\n    function name(slot) {\n        return slot\n            .attribute(\"name\")\n            .map((name) => name.value)\n            .getOr(\"\");\n    }\n    Slot.name = name;\n    /**\n     * {@link https://dom.spec.whatwg.org/#find-slotables}\n     */\n    function* findSlotables(slot) {\n        const root = slot.root();\n        if (shadow_1.Shadow.isShadow(root)) {\n            for (const host of root.host) {\n                for (const child of host.children()) {\n                    if (slotable_1.Slotable.isSlotable(child) &&\n                        child.assignedSlot().includes(slot)) {\n                        yield child;\n                    }\n                }\n            }\n        }\n    }\n    Slot.findSlotables = findSlotables;\n})(Slot || (exports.Slot = Slot = {}));\n//# sourceMappingURL=slot.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/src/node/slot.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/src/node/slotable.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/src/node/slotable.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Slotable = void 0;\nconst element_1 = __webpack_require__(/*! ./element */ \"./node_modules/@siteimprove/alfa-dom/src/node/element.js\");\nconst slot_1 = __webpack_require__(/*! ./slot */ \"./node_modules/@siteimprove/alfa-dom/src/node/slot.js\");\nconst text_1 = __webpack_require__(/*! ./text */ \"./node_modules/@siteimprove/alfa-dom/src/node/text.js\");\n/**\n * @public\n */\nvar Slotable;\n(function (Slotable) {\n    function isSlotable(value) {\n        return element_1.Element.isElement(value) || text_1.Text.isText(value);\n    }\n    Slotable.isSlotable = isSlotable;\n    /**\n     * {@link https://dom.spec.whatwg.org/#slotable-name}\n     */\n    function name(slotable) {\n        return element_1.Element.isElement(slotable)\n            ? slotable\n                .attribute(\"slot\")\n                .map((slot) => slot.value)\n                .getOr(\"\")\n            : \"\";\n    }\n    Slotable.name = name;\n    /**\n     * {@link https://dom.spec.whatwg.org/#find-a-slot}\n     */\n    function findSlot(slotable) {\n        const name = Slotable.name(slotable);\n        return slotable\n            .parent()\n            .filter(element_1.Element.isElement)\n            .flatMap((parent) => parent.shadow.flatMap((shadow) => shadow\n            .descendants()\n            .filter(slot_1.Slot.isSlot)\n            .find((slot) => slot_1.Slot.name(slot) === name)));\n    }\n    Slotable.findSlot = findSlot;\n})(Slotable || (exports.Slotable = Slotable = {}));\n//# sourceMappingURL=slotable.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/src/node/slotable.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/src/node/text.js":
/*!*************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/src/node/text.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Text = void 0;\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_trampoline_1 = __webpack_require__(/*! @siteimprove/alfa-trampoline */ \"./node_modules/@siteimprove/alfa-trampoline/src/index.js\");\nconst node_1 = __webpack_require__(/*! ../node */ \"./node_modules/@siteimprove/alfa-dom/src/node.js\");\nconst element_1 = __webpack_require__(/*! ./element */ \"./node_modules/@siteimprove/alfa-dom/src/node/element.js\");\nconst shadow_1 = __webpack_require__(/*! ./shadow */ \"./node_modules/@siteimprove/alfa-dom/src/node/shadow.js\");\nconst slotable_1 = __webpack_require__(/*! ./slotable */ \"./node_modules/@siteimprove/alfa-dom/src/node/slotable.js\");\n/**\n * @public\n */\nclass Text extends node_1.Node {\n    static of(data, externalId, extraData) {\n        return new Text(data, externalId, extraData);\n    }\n    static empty() {\n        return new Text(\"\");\n    }\n    constructor(data, externalId, extraData) {\n        super([], \"text\", externalId, extraData);\n        this._data = data;\n    }\n    get data() {\n        return this._data;\n    }\n    parent(options = node_1.Node.Traversal.empty) {\n        const parent = this._parent;\n        if (options.isSet(node_1.Node.Traversal.flattened)) {\n            return parent.flatMap((parent) => {\n                if (shadow_1.Shadow.isShadow(parent)) {\n                    return parent.host;\n                }\n                if (element_1.Element.isElement(parent) && parent.shadow.isSome()) {\n                    return this.assignedSlot().flatMap((slot) => slot.parent(options));\n                }\n                return alfa_option_1.Option.of(parent);\n            });\n        }\n        return parent;\n    }\n    assignedSlot() {\n        return slotable_1.Slotable.findSlot(this);\n    }\n    /**\n     * @internal\n     **/\n    _internalPath(options) {\n        let path = this.parent(options)\n            .map((parent) => parent.path(options))\n            .getOr(\"/\");\n        path += path === \"/\" ? \"\" : \"/\";\n        path += \"text()\";\n        const index = this.preceding(options).count(Text.isText);\n        path += `[${index + 1}]`;\n        return path;\n    }\n    toJSON() {\n        const result = {\n            ...super.toJSON(),\n            data: this.data,\n        };\n        delete result.children;\n        return result;\n    }\n    toString() {\n        return this.data.trim();\n    }\n}\nexports.Text = Text;\n/**\n * @public\n */\n(function (Text) {\n    function isText(value) {\n        return value instanceof Text;\n    }\n    Text.isText = isText;\n    /**\n     * @internal\n     */\n    function fromText(json) {\n        return alfa_trampoline_1.Trampoline.done(Text.of(json.data));\n    }\n    Text.fromText = fromText;\n    /**\n     * @internal\n     */\n    function cloneText(text) {\n        return alfa_trampoline_1.Trampoline.done(Text.of(text.data, text.externalId));\n    }\n    Text.cloneText = cloneText;\n})(Text || (exports.Text = Text = {}));\n//# sourceMappingURL=text.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/src/node/text.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/src/node/traversal.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/src/node/traversal.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./traversal/get-nodes-between */ \"./node_modules/@siteimprove/alfa-dom/src/node/traversal/get-nodes-between.js\"), exports);\n//# sourceMappingURL=traversal.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/src/node/traversal.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/src/node/traversal/get-nodes-between.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/src/node/traversal/get-nodes-between.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getNodesBetween = void 0;\nconst __1 = __webpack_require__(/*! ../.. */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_sequence_1 = __webpack_require__(/*! @siteimprove/alfa-sequence */ \"./node_modules/@siteimprove/alfa-dom/node_modules/@siteimprove/alfa-sequence/src/index.js\");\nconst lowest_common_ancestor_1 = __webpack_require__(/*! ./lowest-common-ancestor */ \"./node_modules/@siteimprove/alfa-dom/src/node/traversal/lowest-common-ancestor.js\");\nconst { equals, or } = alfa_predicate_1.Predicate;\n/**\n * Get content between two nodes. The relative order of the nodes is unknown.\n * Options let it choose whether the first or second node (in tree order)\n * should be included. By default, exclude both.\n *\n * When the first node is not included, all its subtree is skipped, that is we\n * start looking after the closing tag, not after the opening one.\n *\n * Returns empty sequence in the corner case where both nodes are the same and\n * at least one is excluded (i.e. considers that [X,X[ and ]X,X] are empty).\n *\n * Complexity: the size of the subtree anchored at the lowest common ancestor.\n *\n * @public\n */\nfunction getNodesBetween(node1, node2, includeOptions = { includeFirst: false, includeSecond: false }, treeOptions = __1.Node.fullTree) {\n    let between = getNodesInclusivelyBetween(node1, node2, treeOptions);\n    // If somehow there is nothing between them, escape now\n    if (between.isEmpty()) {\n        return between;\n    }\n    // Do we keep the first node or skip its subtree?\n    if (!includeOptions.includeFirst) {\n        // By previous test, between is not empty\n        const first = between.first().getUnsafe();\n        // The 'first node after the subtree rooted at first' is the next sibling\n        // of the closest ancestor having one.\n        between = first\n            // Closest ancestor with a next sibling.\n            .closest((ancestor) => ancestor.next(treeOptions).isSome())\n            // Get that sibling.\n            .flatMap((node) => node.next(treeOptions))\n            // Skip everything until next.\n            .map((next) => between.skipUntil((node) => node.equals(next)))\n            // If nothing after the subtree at first, just escape.\n            .getOrElse(alfa_sequence_1.Sequence.empty);\n    }\n    // Do we keep the second node or remove it?\n    between =\n        includeOptions.includeSecond || between.isEmpty()\n            ? between\n            : between.skipLast(1);\n    return between;\n}\nexports.getNodesBetween = getNodesBetween;\n/**\n * Get all nodes between node1 and node2, included.\n */\nfunction getNodesInclusivelyBetween(node1, node2, treeOptions) {\n    const isFrontier = or(equals(node1), equals(node2));\n    // Get descendants of the LCA, and skip everything before and after both nodes.\n    return (0, lowest_common_ancestor_1.lowestCommonAncestor)(node1, node2, treeOptions)\n        .map((context) => context\n        .inclusiveDescendants(treeOptions)\n        .skipUntil(isFrontier)\n        .skipLastUntil(isFrontier))\n        .getOrElse(alfa_sequence_1.Sequence.empty);\n}\n//# sourceMappingURL=get-nodes-between.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/src/node/traversal/get-nodes-between.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/src/node/traversal/lowest-common-ancestor.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/src/node/traversal/lowest-common-ancestor.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.lowestCommonAncestor = void 0;\nconst __1 = __webpack_require__(/*! ../.. */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\n/**\n * Find the lowest common ancestor of two nodes:\n * * get the ancestors chain of both\n * * go down the chain, from root to nodes, as long as it is the same node\n *\n * Complexity: linear in the depth of the nodes.\n *\n * @internal\n */\nfunction lowestCommonAncestor(node1, node2, options = __1.Node.Traversal.empty) {\n    return node1\n        .inclusiveAncestors(options)\n        .reverse()\n        .zip(node2.inclusiveAncestors(options).reverse())\n        .reduceWhile(([first1, first2]) => first1.equals(first2), (_, [node]) => alfa_option_1.Option.of(node), alfa_option_1.None);\n}\nexports.lowestCommonAncestor = lowestCommonAncestor;\n//# sourceMappingURL=lowest-common-ancestor.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/src/node/traversal/lowest-common-ancestor.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/src/node/type.js":
/*!*************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/src/node/type.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Type = void 0;\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_trampoline_1 = __webpack_require__(/*! @siteimprove/alfa-trampoline */ \"./node_modules/@siteimprove/alfa-trampoline/src/index.js\");\nconst node_1 = __webpack_require__(/*! ../node */ \"./node_modules/@siteimprove/alfa-dom/src/node.js\");\n/**\n * @public\n */\nclass Type extends node_1.Node {\n    static of(name, publicId = alfa_option_1.None, systemId = alfa_option_1.None, externalId, extraData) {\n        return new Type(name, publicId, systemId, externalId, extraData);\n    }\n    static empty() {\n        return new Type(\"html\", alfa_option_1.None, alfa_option_1.None);\n    }\n    constructor(name, publicId, systemId, externalId, extraData) {\n        super([], \"type\", externalId, extraData);\n        this._name = name;\n        this._publicId = publicId;\n        this._systemId = systemId;\n    }\n    get name() {\n        return this._name;\n    }\n    get publicId() {\n        return this._publicId;\n    }\n    get systemId() {\n        return this._systemId;\n    }\n    toJSON() {\n        const result = {\n            ...super.toJSON(),\n            name: this._name,\n            publicId: this._publicId.getOr(null),\n            systemId: this._systemId.getOr(null),\n        };\n        delete result.children;\n        return result;\n    }\n    toString() {\n        return `<!doctype ${this._name}>`;\n    }\n}\nexports.Type = Type;\n/**\n * @public\n */\n(function (Type) {\n    function isType(value) {\n        return value instanceof Type;\n    }\n    Type.isType = isType;\n    /**\n     * @internal\n     */\n    function fromType(json) {\n        return alfa_trampoline_1.Trampoline.done(Type.of(json.name, alfa_option_1.Option.from(json.publicId), alfa_option_1.Option.from(json.systemId)));\n    }\n    Type.fromType = fromType;\n    /**\n     * @internal\n     */\n    function cloneType(type) {\n        return alfa_trampoline_1.Trampoline.done(Type.of(type.name, type.publicId, type.systemId, type.externalId));\n    }\n    Type.cloneType = cloneType;\n})(Type || (exports.Type = Type = {}));\n//# sourceMappingURL=type.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/src/node/type.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/src/style/block.js":
/*!***************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/src/style/block.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Block = void 0;\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst declaration_1 = __webpack_require__(/*! ./declaration */ \"./node_modules/@siteimprove/alfa-dom/src/style/declaration.js\");\n/**\n * @public\n */\nclass Block {\n    static of(declarations) {\n        return new Block(Array.from(declarations));\n    }\n    constructor(declarations) {\n        this._declarations = declarations;\n    }\n    get declarations() {\n        return this._declarations;\n    }\n    get size() {\n        return this._declarations.length;\n    }\n    isEmpty() {\n        return this._declarations.length === 0;\n    }\n    declaration(predicate) {\n        return alfa_option_1.Option.from(this._declarations.find(typeof predicate === \"string\"\n            ? (declaration) => declaration.name === predicate\n            : predicate));\n    }\n    equals(value) {\n        return (value instanceof Block &&\n            value._declarations.length === this._declarations.length &&\n            value._declarations.every((declaration, i) => declaration.equals(this._declarations[i])));\n    }\n    *[Symbol.iterator]() {\n        yield* this._declarations;\n    }\n    toJSON() {\n        return this._declarations.map((declaration) => declaration.toJSON());\n    }\n    toString() {\n        return this._declarations.join(\";\\n\");\n    }\n}\nexports.Block = Block;\n/**\n * @public\n */\n(function (Block) {\n    function from(json) {\n        return Block.of(json.map(declaration_1.Declaration.from));\n    }\n    Block.from = from;\n})(Block || (exports.Block = Block = {}));\n//# sourceMappingURL=block.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/src/style/block.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/src/style/declaration.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/src/style/declaration.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Declaration = void 0;\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\n/**\n * @public\n */\nclass Declaration {\n    static of(name, value, important = false) {\n        return new Declaration(name, value, important);\n    }\n    constructor(name, value, important) {\n        /**\n         * @remarks\n         * If the declaration is in a style rule, point to it\n         */\n        this._parent = alfa_option_1.None;\n        /**\n         * @remarks\n         * If the declaration is in a style attribute on an element, point to it\n         *\n         * @remarks\n         * \"owner\" use the same vocabulary as attribute's owner\n         *\n         * @remarks\n         * Only one of _parent and _owner should be Some.\n         */\n        this._owner = alfa_option_1.None;\n        this._name = name;\n        this._value = value;\n        this._important = important;\n    }\n    get name() {\n        return this._name;\n    }\n    get value() {\n        return this._value;\n    }\n    get important() {\n        return this._important;\n    }\n    get parent() {\n        return this._parent;\n    }\n    get owner() {\n        return this._owner;\n    }\n    *ancestors() {\n        for (const parent of this._parent) {\n            yield parent;\n            yield* parent.ancestors();\n        }\n    }\n    /**\n     * Parent rule or owner element are ignored for declaration equality.\n     */\n    equals(value) {\n        return (value instanceof Declaration &&\n            value._name === this._name &&\n            value._value === this._value &&\n            value._important === this._important);\n    }\n    toJSON() {\n        return {\n            name: this._name,\n            value: this._value,\n            important: this._important,\n        };\n    }\n    toString() {\n        return `${this._name}: ${this._value}${this._important ? \" !important\" : \"\"}`;\n    }\n    /**\n     * @internal\n     */\n    _attachParent(parent) {\n        if (this._parent.isSome() || this._owner.isSome()) {\n            return false;\n        }\n        this._parent = alfa_option_1.Option.of(parent);\n        return true;\n    }\n    /**\n     * @internal\n     */\n    _attachOwner(owner) {\n        if (this._parent.isSome() || this._owner.isSome()) {\n            return false;\n        }\n        this._owner = alfa_option_1.Option.of(owner);\n        return true;\n    }\n}\nexports.Declaration = Declaration;\n/**\n * @public\n */\n(function (Declaration) {\n    function from(json) {\n        return Declaration.of(json.name, json.value, json.important);\n    }\n    Declaration.from = from;\n})(Declaration || (exports.Declaration = Declaration = {}));\n//# sourceMappingURL=declaration.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/src/style/declaration.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/src/style/rule.js":
/*!**************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/src/style/rule.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Rule = void 0;\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst __1 = __webpack_require__(/*! .. */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\n/**\n * @public\n */\nclass Rule {\n    constructor(type) {\n        this._owner = alfa_option_1.None;\n        this._parent = alfa_option_1.None;\n        this._type = type;\n    }\n    get type() {\n        return this._type;\n    }\n    get owner() {\n        return this._owner;\n    }\n    get parent() {\n        return this._parent;\n    }\n    *children() { }\n    *descendants() {\n        for (const child of this.children()) {\n            yield child;\n            yield* child.descendants();\n        }\n    }\n    *ancestors() {\n        for (const parent of this._parent) {\n            yield parent;\n            yield* parent.ancestors();\n        }\n    }\n    *inclusiveAncestors() {\n        yield this;\n        yield* this.ancestors();\n    }\n    equals(value) {\n        return value === this;\n    }\n    toJSON() {\n        return { type: this._type };\n    }\n    /**\n     * @internal\n     */\n    _attachOwner(owner) {\n        if (this._owner.isSome()) {\n            return false;\n        }\n        this._owner = alfa_option_1.Option.of(owner);\n        return true;\n    }\n    /**\n     * @internal\n     */\n    _attachParent(parent) {\n        if (this._parent.isSome()) {\n            return false;\n        }\n        this._parent = alfa_option_1.Option.of(parent);\n        return true;\n    }\n}\nexports.Rule = Rule;\n/**\n * @public\n */\n(function (Rule) {\n    function from(json) {\n        return fromRule(json).run();\n    }\n    Rule.from = from;\n    /**\n     * @internal\n     */\n    function fromRule(json) {\n        switch (json.type) {\n            case \"style\":\n                return __1.StyleRule.fromStyleRule(json);\n            case \"import\":\n                return __1.ImportRule.fromImportRule(json);\n            case \"media\":\n                return __1.MediaRule.fromMediaRule(json);\n            case \"font-face\":\n                return __1.FontFaceRule.fromFontFaceRule(json);\n            case \"page\":\n                return __1.PageRule.fromPageRule(json);\n            case \"keyframe\":\n                return __1.KeyframeRule.fromKeyframeRule(json);\n            case \"keyframes\":\n                return __1.KeyframesRule.fromKeyframesRule(json);\n            case \"namespace\":\n                return __1.NamespaceRule.fromNamespaceRule(json);\n            case \"supports\":\n                return __1.SupportsRule.fromSupportsRule(json);\n            default:\n                throw new Error(`Unexpected rule of type: ${json.type}`);\n        }\n    }\n    Rule.fromRule = fromRule;\n})(Rule || (exports.Rule = Rule = {}));\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/src/style/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/src/style/rule/condition.js":
/*!************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/src/style/rule/condition.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ConditionRule = void 0;\nconst grouping_1 = __webpack_require__(/*! ./grouping */ \"./node_modules/@siteimprove/alfa-dom/src/style/rule/grouping.js\");\n/**\n * @public\n */\nclass ConditionRule extends grouping_1.GroupingRule {\n    constructor(type, condition, rules) {\n        super(type, rules);\n        this._condition = condition;\n    }\n    get condition() {\n        return this._condition;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            condition: this._condition,\n        };\n    }\n}\nexports.ConditionRule = ConditionRule;\n/**\n * @public\n */\n(function (ConditionRule) {\n    function isConditionRule(value) {\n        return value instanceof ConditionRule;\n    }\n    ConditionRule.isConditionRule = isConditionRule;\n})(ConditionRule || (exports.ConditionRule = ConditionRule = {}));\n//# sourceMappingURL=condition.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/src/style/rule/condition.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/src/style/rule/font-face.js":
/*!************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/src/style/rule/font-face.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FontFaceRule = void 0;\nconst alfa_trampoline_1 = __webpack_require__(/*! @siteimprove/alfa-trampoline */ \"./node_modules/@siteimprove/alfa-trampoline/src/index.js\");\nconst block_1 = __webpack_require__(/*! ../block */ \"./node_modules/@siteimprove/alfa-dom/src/style/block.js\");\nconst declaration_1 = __webpack_require__(/*! ../declaration */ \"./node_modules/@siteimprove/alfa-dom/src/style/declaration.js\");\nconst rule_1 = __webpack_require__(/*! ../rule */ \"./node_modules/@siteimprove/alfa-dom/src/style/rule.js\");\n/**\n * @public\n */\nclass FontFaceRule extends rule_1.Rule {\n    static of(declarations) {\n        return new FontFaceRule(Array.from(declarations));\n    }\n    constructor(declarations) {\n        super(\"font-face\");\n        this._style = block_1.Block.of(declarations.filter((declaration) => declaration._attachParent(this)));\n    }\n    get style() {\n        return this._style;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            style: this._style.toJSON(),\n        };\n    }\n    toString() {\n        const style = this._style.toString();\n        return `@font-face {${style === \"\" ? \"\" : `\\n${indent(style)}\\n`}}`;\n    }\n}\nexports.FontFaceRule = FontFaceRule;\n/**\n * @public\n */\n(function (FontFaceRule) {\n    function isFontFaceRule(value) {\n        return value instanceof FontFaceRule;\n    }\n    FontFaceRule.isFontFaceRule = isFontFaceRule;\n    /**\n     * @internal\n     */\n    function fromFontFaceRule(json) {\n        return alfa_trampoline_1.Trampoline.done(FontFaceRule.of(json.style.map(declaration_1.Declaration.from)));\n    }\n    FontFaceRule.fromFontFaceRule = fromFontFaceRule;\n})(FontFaceRule || (exports.FontFaceRule = FontFaceRule = {}));\nfunction indent(input) {\n    return input.replace(/^/gm, \"  \");\n}\n//# sourceMappingURL=font-face.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/src/style/rule/font-face.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/src/style/rule/grouping.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/src/style/rule/grouping.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.GroupingRule = void 0;\nconst alfa_array_1 = __webpack_require__(/*! @siteimprove/alfa-array */ \"./node_modules/@siteimprove/alfa-array/src/index.js\");\nconst rule_1 = __webpack_require__(/*! ../rule */ \"./node_modules/@siteimprove/alfa-dom/src/style/rule.js\");\n/**\n * @public\n */\nclass GroupingRule extends rule_1.Rule {\n    constructor(type, rules) {\n        super(type);\n        this._rules = rules.filter((rule) => rule._attachParent(this));\n    }\n    get rules() {\n        return this._rules;\n    }\n    *children() {\n        yield* this._rules;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            rules: alfa_array_1.Array.toJSON(this._rules),\n        };\n    }\n}\nexports.GroupingRule = GroupingRule;\n/**\n * @public\n */\n(function (GroupingRule) {\n    function isGroupingRule(value) {\n        return value instanceof GroupingRule;\n    }\n    GroupingRule.isGroupingRule = isGroupingRule;\n})(GroupingRule || (exports.GroupingRule = GroupingRule = {}));\n//# sourceMappingURL=grouping.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/src/style/rule/grouping.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/src/style/rule/import.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/src/style/rule/import.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ImportRule = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_css_feature_1 = __webpack_require__(/*! @siteimprove/alfa-css-feature */ \"./node_modules/@siteimprove/alfa-css-feature/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_trampoline_1 = __webpack_require__(/*! @siteimprove/alfa-trampoline */ \"./node_modules/@siteimprove/alfa-trampoline/src/index.js\");\nconst rule_1 = __webpack_require__(/*! ../rule */ \"./node_modules/@siteimprove/alfa-dom/src/style/rule.js\");\nconst sheet_1 = __webpack_require__(/*! ../sheet */ \"./node_modules/@siteimprove/alfa-dom/src/style/sheet.js\");\nconst condition_1 = __webpack_require__(/*! ./condition */ \"./node_modules/@siteimprove/alfa-dom/src/style/rule/condition.js\");\n/**\n * @public\n */\nclass ImportRule extends condition_1.ConditionRule {\n    static of(href, sheet, condition = alfa_option_1.None) {\n        return new ImportRule(href, sheet, condition);\n    }\n    constructor(href, sheet, condition) {\n        super(\"import\", condition.getOr(\"all\"), []);\n        this._href = href;\n        this._sheet = sheet;\n        this._queries = condition\n            .flatMap((condition) => alfa_css_feature_1.Feature.parseMediaQuery(alfa_css_1.Lexer.lex(condition)).ok())\n            .map(([, queries]) => queries)\n            .getOr(alfa_css_feature_1.Feature.Media.List.of([]));\n    }\n    get queries() {\n        return this._queries;\n    }\n    get rules() {\n        return this._sheet.rules;\n    }\n    get href() {\n        return this._href;\n    }\n    get sheet() {\n        return this._sheet;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            href: this._href,\n        };\n    }\n    toString() {\n        return `@import url(${this._href}) ${this._condition}`;\n    }\n}\nexports.ImportRule = ImportRule;\n/**\n * @public\n */\n(function (ImportRule) {\n    function isImportRule(value) {\n        return value instanceof ImportRule;\n    }\n    ImportRule.isImportRule = isImportRule;\n    /**\n     * @internal\n     */\n    function fromImportRule(json) {\n        return alfa_trampoline_1.Trampoline.traverse(json.rules, rule_1.Rule.fromRule).map((rules) => ImportRule.of(json.href, sheet_1.Sheet.of(rules), alfa_option_1.Option.of(json.condition)));\n    }\n    ImportRule.fromImportRule = fromImportRule;\n})(ImportRule || (exports.ImportRule = ImportRule = {}));\n//# sourceMappingURL=import.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/src/style/rule/import.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/src/style/rule/keyframe.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/src/style/rule/keyframe.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KeyframeRule = void 0;\nconst alfa_trampoline_1 = __webpack_require__(/*! @siteimprove/alfa-trampoline */ \"./node_modules/@siteimprove/alfa-trampoline/src/index.js\");\nconst block_1 = __webpack_require__(/*! ../block */ \"./node_modules/@siteimprove/alfa-dom/src/style/block.js\");\nconst declaration_1 = __webpack_require__(/*! ../declaration */ \"./node_modules/@siteimprove/alfa-dom/src/style/declaration.js\");\nconst rule_1 = __webpack_require__(/*! ../rule */ \"./node_modules/@siteimprove/alfa-dom/src/style/rule.js\");\n/**\n * @public\n */\nclass KeyframeRule extends rule_1.Rule {\n    static of(key, declarations) {\n        return new KeyframeRule(key, Array.from(declarations));\n    }\n    constructor(key, declarations) {\n        super(\"keyframe\");\n        this._key = key;\n        this._style = block_1.Block.of(declarations.filter((declaration) => declaration._attachParent(this)));\n    }\n    get key() {\n        return this._key;\n    }\n    get style() {\n        return this._style;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            key: this._key,\n            style: this._style.toJSON(),\n        };\n    }\n    toString() {\n        const style = this._style.toString();\n        return `@keyframe ${this._key} {${style === \"\" ? \"\" : `\\n${indent(style)}\\n`}}`;\n    }\n}\nexports.KeyframeRule = KeyframeRule;\n/**\n * @public\n */\n(function (KeyframeRule) {\n    function isKeyframeRule(value) {\n        return value instanceof KeyframeRule;\n    }\n    KeyframeRule.isKeyframeRule = isKeyframeRule;\n    /**\n     * @internal\n     */\n    function fromKeyframeRule(json) {\n        return alfa_trampoline_1.Trampoline.done(KeyframeRule.of(json.key, json.style.map(declaration_1.Declaration.from)));\n    }\n    KeyframeRule.fromKeyframeRule = fromKeyframeRule;\n})(KeyframeRule || (exports.KeyframeRule = KeyframeRule = {}));\nfunction indent(input) {\n    return input.replace(/^/gm, \"  \");\n}\n//# sourceMappingURL=keyframe.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/src/style/rule/keyframe.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/src/style/rule/keyframes.js":
/*!************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/src/style/rule/keyframes.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KeyframesRule = void 0;\nconst alfa_trampoline_1 = __webpack_require__(/*! @siteimprove/alfa-trampoline */ \"./node_modules/@siteimprove/alfa-trampoline/src/index.js\");\nconst rule_1 = __webpack_require__(/*! ../rule */ \"./node_modules/@siteimprove/alfa-dom/src/style/rule.js\");\nconst grouping_1 = __webpack_require__(/*! ./grouping */ \"./node_modules/@siteimprove/alfa-dom/src/style/rule/grouping.js\");\n/**\n * @public\n */\nclass KeyframesRule extends grouping_1.GroupingRule {\n    static of(name, rules) {\n        return new KeyframesRule(name, Array.from(rules));\n    }\n    constructor(name, rules) {\n        super(\"keyframes\", rules);\n        this._name = name;\n    }\n    get name() {\n        return this._name;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            name: this._name,\n        };\n    }\n    toString() {\n        const rules = this._rules\n            .map((rule) => indent(rule.toString()))\n            .join(\"\\n\\n\");\n        return `@keyframes ${this._name} {${rules === \"\" ? \"\" : `\\n${rules}\\n`}}`;\n    }\n}\nexports.KeyframesRule = KeyframesRule;\n/**\n * @public\n */\n(function (KeyframesRule) {\n    function isKeyframesRule(value) {\n        return value instanceof KeyframesRule;\n    }\n    KeyframesRule.isKeyframesRule = isKeyframesRule;\n    /**\n     * @internal\n     */\n    function fromKeyframesRule(json) {\n        return alfa_trampoline_1.Trampoline.traverse(json.rules, rule_1.Rule.fromRule).map((rules) => KeyframesRule.of(json.name, rules));\n    }\n    KeyframesRule.fromKeyframesRule = fromKeyframesRule;\n})(KeyframesRule || (exports.KeyframesRule = KeyframesRule = {}));\nfunction indent(input) {\n    return input.replace(/^/gm, \"  \");\n}\n//# sourceMappingURL=keyframes.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/src/style/rule/keyframes.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/src/style/rule/media.js":
/*!********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/src/style/rule/media.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MediaRule = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_css_feature_1 = __webpack_require__(/*! @siteimprove/alfa-css-feature */ \"./node_modules/@siteimprove/alfa-css-feature/src/index.js\");\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_trampoline_1 = __webpack_require__(/*! @siteimprove/alfa-trampoline */ \"./node_modules/@siteimprove/alfa-trampoline/src/index.js\");\nconst rule_1 = __webpack_require__(/*! ../rule */ \"./node_modules/@siteimprove/alfa-dom/src/style/rule.js\");\nconst condition_1 = __webpack_require__(/*! ./condition */ \"./node_modules/@siteimprove/alfa-dom/src/style/rule/condition.js\");\nconst { map, join } = alfa_iterable_1.Iterable;\n/**\n * @public\n */\nclass MediaRule extends condition_1.ConditionRule {\n    static of(condition, rules) {\n        return new MediaRule(condition, Array.from(rules));\n    }\n    constructor(condition, rules) {\n        super(\"media\", condition, rules);\n        this._queries = alfa_css_feature_1.Feature.parseMediaQuery(alfa_css_1.Lexer.lex(condition))\n            .map(([, queries]) => queries)\n            .getOr(alfa_css_feature_1.Feature.Media.List.of([]));\n    }\n    get queries() {\n        return this._queries;\n    }\n    toJSON() {\n        return super.toJSON();\n    }\n    toString() {\n        const rules = join(map(this._rules, (rule) => indent(rule.toString())), \"\\n\\n\");\n        return `@media ${this._condition} {${rules === \"\" ? \"\" : `\\n${rules}\\n`}}`;\n    }\n}\nexports.MediaRule = MediaRule;\n/**\n * @public\n */\n(function (MediaRule) {\n    function isMediaRule(value) {\n        return value instanceof MediaRule;\n    }\n    MediaRule.isMediaRule = isMediaRule;\n    /**\n     * @internal\n     */\n    function fromMediaRule(json) {\n        return alfa_trampoline_1.Trampoline.traverse(json.rules, rule_1.Rule.fromRule).map((rules) => MediaRule.of(json.condition, rules));\n    }\n    MediaRule.fromMediaRule = fromMediaRule;\n})(MediaRule || (exports.MediaRule = MediaRule = {}));\nfunction indent(input) {\n    return input.replace(/^/gm, \"  \");\n}\n//# sourceMappingURL=media.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/src/style/rule/media.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/src/style/rule/namespace.js":
/*!************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/src/style/rule/namespace.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.NamespaceRule = void 0;\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_trampoline_1 = __webpack_require__(/*! @siteimprove/alfa-trampoline */ \"./node_modules/@siteimprove/alfa-trampoline/src/index.js\");\nconst rule_1 = __webpack_require__(/*! ../rule */ \"./node_modules/@siteimprove/alfa-dom/src/style/rule.js\");\n/**\n * @public\n */\nclass NamespaceRule extends rule_1.Rule {\n    static of(namespace, prefix) {\n        return new NamespaceRule(namespace, prefix);\n    }\n    constructor(namespace, prefix) {\n        super(\"namespace\");\n        this._namespace = namespace;\n        this._prefix = prefix;\n    }\n    get namespace() {\n        return this._namespace;\n    }\n    get prefix() {\n        return this._prefix;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            namespace: this._namespace,\n            prefix: this._prefix.getOr(null),\n        };\n    }\n    toString() {\n        const prefix = this._prefix.map((prefix) => ` ${prefix}`).getOr(\"\");\n        return `@namespace ${prefix}url(${this._namespace})`;\n    }\n}\nexports.NamespaceRule = NamespaceRule;\n/**\n * @public\n */\n(function (NamespaceRule) {\n    function isNamespaceRule(value) {\n        return value instanceof NamespaceRule;\n    }\n    NamespaceRule.isNamespaceRule = isNamespaceRule;\n    /**\n     * @internal\n     */\n    function fromNamespaceRule(json) {\n        return alfa_trampoline_1.Trampoline.done(NamespaceRule.of(json.namespace, alfa_option_1.Option.from(json.prefix)));\n    }\n    NamespaceRule.fromNamespaceRule = fromNamespaceRule;\n})(NamespaceRule || (exports.NamespaceRule = NamespaceRule = {}));\n//# sourceMappingURL=namespace.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/src/style/rule/namespace.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/src/style/rule/page.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/src/style/rule/page.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PageRule = void 0;\nconst alfa_trampoline_1 = __webpack_require__(/*! @siteimprove/alfa-trampoline */ \"./node_modules/@siteimprove/alfa-trampoline/src/index.js\");\nconst block_1 = __webpack_require__(/*! ../block */ \"./node_modules/@siteimprove/alfa-dom/src/style/block.js\");\nconst declaration_1 = __webpack_require__(/*! ../declaration */ \"./node_modules/@siteimprove/alfa-dom/src/style/declaration.js\");\nconst rule_1 = __webpack_require__(/*! ../rule */ \"./node_modules/@siteimprove/alfa-dom/src/style/rule.js\");\n/**\n * @public\n */\nclass PageRule extends rule_1.Rule {\n    static of(selector, declarations) {\n        return new PageRule(selector, Array.from(declarations));\n    }\n    constructor(selector, declarations) {\n        super(\"page\");\n        this._selector = selector;\n        this._style = block_1.Block.of(declarations.filter((declaration) => declaration._attachParent(this)));\n    }\n    get selector() {\n        return this._selector;\n    }\n    get style() {\n        return this._style;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            selector: this._selector,\n            style: this._style.toJSON(),\n        };\n    }\n    toString() {\n        const style = this._style.toString();\n        return `@page ${this._selector} {${style === \"\" ? \"\" : `\\n${indent(style)}\\n`}}`;\n    }\n}\nexports.PageRule = PageRule;\n/**\n * @public\n */\n(function (PageRule) {\n    function isPageRule(value) {\n        return value instanceof PageRule;\n    }\n    PageRule.isPageRule = isPageRule;\n    /**\n     * @internal\n     */\n    function fromPageRule(json) {\n        return alfa_trampoline_1.Trampoline.done(PageRule.of(json.selector, json.style.map(declaration_1.Declaration.from)));\n    }\n    PageRule.fromPageRule = fromPageRule;\n})(PageRule || (exports.PageRule = PageRule = {}));\nfunction indent(input) {\n    return input.replace(/^/gm, \"  \");\n}\n//# sourceMappingURL=page.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/src/style/rule/page.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/src/style/rule/style.js":
/*!********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/src/style/rule/style.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.StyleRule = void 0;\nconst alfa_trampoline_1 = __webpack_require__(/*! @siteimprove/alfa-trampoline */ \"./node_modules/@siteimprove/alfa-trampoline/src/index.js\");\nconst block_1 = __webpack_require__(/*! ../block */ \"./node_modules/@siteimprove/alfa-dom/src/style/block.js\");\nconst declaration_1 = __webpack_require__(/*! ../declaration */ \"./node_modules/@siteimprove/alfa-dom/src/style/declaration.js\");\nconst rule_1 = __webpack_require__(/*! ../rule */ \"./node_modules/@siteimprove/alfa-dom/src/style/rule.js\");\n/**\n * @public\n */\nclass StyleRule extends rule_1.Rule {\n    static of(selector, declarations, hint = false) {\n        return new StyleRule(selector, Array.from(declarations), hint);\n    }\n    constructor(selector, declarations, hint) {\n        super(\"style\");\n        this._selector = selector;\n        this._style = block_1.Block.of(declarations.filter((declaration) => declaration._attachParent(this)));\n        this._hint = hint;\n    }\n    get selector() {\n        return this._selector;\n    }\n    get style() {\n        return this._style;\n    }\n    get hint() {\n        return this._hint;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            selector: this._selector,\n            style: this._style.toJSON(),\n        };\n    }\n    toString() {\n        const style = this._style.toString();\n        return `${this._selector} {${style === \"\" ? \"\" : `\\n${indent(style)}\\n`}}`;\n    }\n}\nexports.StyleRule = StyleRule;\n/**\n * @public\n */\n(function (StyleRule) {\n    function isStyleRule(value) {\n        return value instanceof StyleRule;\n    }\n    StyleRule.isStyleRule = isStyleRule;\n    /**\n     * @internal\n     */\n    function fromStyleRule(json) {\n        return alfa_trampoline_1.Trampoline.done(StyleRule.of(json.selector, json.style.map(declaration_1.Declaration.from)));\n    }\n    StyleRule.fromStyleRule = fromStyleRule;\n})(StyleRule || (exports.StyleRule = StyleRule = {}));\nfunction indent(input) {\n    return input.replace(/^/gm, \"  \");\n}\n//# sourceMappingURL=style.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/src/style/rule/style.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/src/style/rule/supports.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/src/style/rule/supports.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SupportsRule = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_css_feature_1 = __webpack_require__(/*! @siteimprove/alfa-css-feature */ \"./node_modules/@siteimprove/alfa-css-feature/src/index.js\");\nconst alfa_trampoline_1 = __webpack_require__(/*! @siteimprove/alfa-trampoline */ \"./node_modules/@siteimprove/alfa-trampoline/src/index.js\");\nconst rule_1 = __webpack_require__(/*! ../rule */ \"./node_modules/@siteimprove/alfa-dom/src/style/rule.js\");\nconst condition_1 = __webpack_require__(/*! ./condition */ \"./node_modules/@siteimprove/alfa-dom/src/style/rule/condition.js\");\n/**\n * @public\n */\nclass SupportsRule extends condition_1.ConditionRule {\n    static of(condition, rules) {\n        return new SupportsRule(condition, Array.from(rules));\n    }\n    constructor(condition, rules) {\n        super(\"supports\", condition, rules);\n        this._query = alfa_css_feature_1.Feature.parseSupportsQuery(alfa_css_1.Lexer.lex(condition))\n            .map(([, query]) => query)\n            .ok();\n    }\n    get query() {\n        return this._query;\n    }\n    toJSON() {\n        return super.toJSON();\n    }\n    toString() {\n        const rules = this._rules\n            .map((rule) => indent(rule.toString()))\n            .join(\"\\n\\n\");\n        return `@supports ${this._condition} {${rules === \"\" ? \"\" : `\\n${rules}\\n`}}`;\n    }\n}\nexports.SupportsRule = SupportsRule;\n/**\n * @public\n */\n(function (SupportsRule) {\n    function isSupportsRule(value) {\n        return value instanceof SupportsRule;\n    }\n    SupportsRule.isSupportsRule = isSupportsRule;\n    /**\n     * @internal\n     */\n    function fromSupportsRule(json) {\n        return alfa_trampoline_1.Trampoline.traverse(json.rules, rule_1.Rule.fromRule).map((rules) => SupportsRule.of(json.condition, rules));\n    }\n    SupportsRule.fromSupportsRule = fromSupportsRule;\n})(SupportsRule || (exports.SupportsRule = SupportsRule = {}));\nfunction indent(input) {\n    return input.replace(/^/gm, \"  \");\n}\n//# sourceMappingURL=supports.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/src/style/rule/supports.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-dom/src/style/sheet.js":
/*!***************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-dom/src/style/sheet.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Sheet = void 0;\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst rule_1 = __webpack_require__(/*! ./rule */ \"./node_modules/@siteimprove/alfa-dom/src/style/rule.js\");\n/**\n * @public\n */\nclass Sheet {\n    static of(rules, disabled = false, condition = alfa_option_1.None) {\n        return new Sheet(Array.from(rules), disabled, condition);\n    }\n    static empty() {\n        return new Sheet([], false, alfa_option_1.None);\n    }\n    constructor(rules, disabled, condition) {\n        this._rules = rules.filter((rule) => rule._attachOwner(this));\n        this._disabled = disabled;\n        this._condition = condition;\n    }\n    get rules() {\n        return this._rules;\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    get condition() {\n        return this._condition;\n    }\n    *children() {\n        yield* this._rules;\n    }\n    *descendants() {\n        for (const child of this.children()) {\n            yield child;\n            yield* child.descendants();\n        }\n    }\n    equals(value) {\n        return (value instanceof Sheet &&\n            value._disabled === this._disabled &&\n            value._condition.equals(this._condition) &&\n            value._rules.length === this._rules.length &&\n            value._rules.every((rule, i) => rule.equals(this._rules[i])));\n    }\n    toJSON() {\n        return {\n            rules: [...this._rules].map((rule) => rule.toJSON()),\n            disabled: this._disabled,\n            condition: this._condition.getOr(null),\n        };\n    }\n    toString() {\n        return this._rules.join(\"\\n\");\n    }\n}\nexports.Sheet = Sheet;\n/**\n * @public\n */\n(function (Sheet) {\n    function from(json) {\n        return Sheet.of(json.rules.map(rule_1.Rule.from), json.disabled, alfa_option_1.Option.from(json.condition));\n    }\n    Sheet.from = from;\n})(Sheet || (exports.Sheet = Sheet = {}));\n//# sourceMappingURL=sheet.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-dom/src/style/sheet.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-earl/src/earl.js":
/*!*********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-earl/src/earl.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=earl.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-earl/src/earl.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-earl/src/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-earl/src/index.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./earl */ \"./node_modules/@siteimprove/alfa-earl/src/earl.js\"), exports);\n__exportStar(__webpack_require__(/*! ./serializable */ \"./node_modules/@siteimprove/alfa-earl/src/serializable.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-earl/src/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-earl/src/serializable.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-earl/src/serializable.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Serializable = void 0;\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_refinement_1 = __webpack_require__(/*! @siteimprove/alfa-refinement */ \"./node_modules/@siteimprove/alfa-refinement/src/index.js\");\nconst { isFunction, isObject } = alfa_refinement_1.Refinement;\n/**\n * @public\n */\nvar Serializable;\n(function (Serializable) {\n    function isSerializable(value) {\n        return isObject(value) && isFunction(value.toEARL);\n    }\n    Serializable.isSerializable = isSerializable;\n    function toEARL(value) {\n        if (isSerializable(value)) {\n            return alfa_option_1.Some.of(value.toEARL());\n        }\n        return alfa_option_1.None;\n    }\n    Serializable.toEARL = toEARL;\n})(Serializable || (exports.Serializable = Serializable = {}));\n//# sourceMappingURL=serializable.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-earl/src/serializable.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-either/src/either.js":
/*!*************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-either/src/either.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Either = void 0;\nconst left_1 = __webpack_require__(/*! ./left */ \"./node_modules/@siteimprove/alfa-either/src/left.js\");\nconst right_1 = __webpack_require__(/*! ./right */ \"./node_modules/@siteimprove/alfa-either/src/right.js\");\n/**\n * @public\n */\nvar Either;\n(function (Either) {\n    function isEither(value) {\n        return isLeft(value) || isRight(value);\n    }\n    Either.isEither = isEither;\n    function isLeft(value) {\n        return left_1.Left.isLeft(value);\n    }\n    Either.isLeft = isLeft;\n    function isRight(value) {\n        return right_1.Right.isRight(value);\n    }\n    Either.isRight = isRight;\n    function left(value) {\n        return left_1.Left.of(value);\n    }\n    Either.left = left;\n    function right(value) {\n        return right_1.Right.of(value);\n    }\n    Either.right = right;\n})(Either || (exports.Either = Either = {}));\n//# sourceMappingURL=either.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-either/src/either.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-either/src/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-either/src/index.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./either */ \"./node_modules/@siteimprove/alfa-either/src/either.js\"), exports);\n__exportStar(__webpack_require__(/*! ./left */ \"./node_modules/@siteimprove/alfa-either/src/left.js\"), exports);\n__exportStar(__webpack_require__(/*! ./right */ \"./node_modules/@siteimprove/alfa-either/src/right.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-either/src/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-either/src/left.js":
/*!***********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-either/src/left.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Left = void 0;\nconst alfa_equatable_1 = __webpack_require__(/*! @siteimprove/alfa-equatable */ \"./node_modules/@siteimprove/alfa-equatable/src/index.js\");\nconst alfa_json_1 = __webpack_require__(/*! @siteimprove/alfa-json */ \"./node_modules/@siteimprove/alfa-json/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\n/**\n * @public\n */\nclass Left {\n    static of(value) {\n        return new Left(value);\n    }\n    constructor(value) {\n        this._value = value;\n    }\n    isLeft() {\n        return true;\n    }\n    isRight() {\n        return false;\n    }\n    map() {\n        return this;\n    }\n    apply() {\n        return this;\n    }\n    flatMap() {\n        return this;\n    }\n    flatten() {\n        return this;\n    }\n    reduce(reducer, accumulator) {\n        return accumulator;\n    }\n    either(left) {\n        return left(this._value);\n    }\n    get() {\n        return this._value;\n    }\n    left() {\n        return alfa_option_1.Option.of(this._value);\n    }\n    right() {\n        return alfa_option_1.None;\n    }\n    teeLeft(callback) {\n        callback(this._value);\n        return this;\n    }\n    teeRight() {\n        return this;\n    }\n    equals(value) {\n        return value instanceof Left && alfa_equatable_1.Equatable.equals(value._value, this._value);\n    }\n    hash(hash) {\n        hash.writeBoolean(false).writeUnknown(this._value);\n    }\n    *[Symbol.iterator]() {\n        yield this._value;\n    }\n    toJSON() {\n        return {\n            type: \"left\",\n            value: alfa_json_1.Serializable.toJSON(this._value),\n        };\n    }\n    toString() {\n        return `Left { ${this._value} }`;\n    }\n}\nexports.Left = Left;\n/**\n * @public\n */\n(function (Left) {\n    function isLeft(value) {\n        return value instanceof Left;\n    }\n    Left.isLeft = isLeft;\n})(Left || (exports.Left = Left = {}));\n//# sourceMappingURL=left.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-either/src/left.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-either/src/right.js":
/*!************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-either/src/right.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Right = void 0;\nconst alfa_equatable_1 = __webpack_require__(/*! @siteimprove/alfa-equatable */ \"./node_modules/@siteimprove/alfa-equatable/src/index.js\");\nconst alfa_json_1 = __webpack_require__(/*! @siteimprove/alfa-json */ \"./node_modules/@siteimprove/alfa-json/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\n/**\n * @public\n */\nclass Right {\n    static of(value) {\n        return new Right(value);\n    }\n    constructor(value) {\n        this._value = value;\n    }\n    isLeft() {\n        return false;\n    }\n    isRight() {\n        return true;\n    }\n    map(mapper) {\n        return new Right(mapper(this._value));\n    }\n    apply(mapper) {\n        return mapper.map((mapper) => mapper(this._value));\n    }\n    flatMap(mapper) {\n        return mapper(this._value);\n    }\n    flatten() {\n        return this._value;\n    }\n    reduce(reducer, accumulator) {\n        return reducer(accumulator, this._value);\n    }\n    either(left, right) {\n        return right(this._value);\n    }\n    get() {\n        return this._value;\n    }\n    left() {\n        return alfa_option_1.None;\n    }\n    right() {\n        return alfa_option_1.Option.of(this._value);\n    }\n    teeLeft() {\n        return this;\n    }\n    teeRight(callback) {\n        callback(this._value);\n        return this;\n    }\n    equals(value) {\n        return (value instanceof Right && alfa_equatable_1.Equatable.equals(value._value, this._value));\n    }\n    hash(hash) {\n        hash.writeBoolean(true).writeUnknown(this._value);\n    }\n    *[Symbol.iterator]() {\n        yield this._value;\n    }\n    toJSON() {\n        return {\n            type: \"right\",\n            value: alfa_json_1.Serializable.toJSON(this._value),\n        };\n    }\n    toString() {\n        return `Right { ${this._value} }`;\n    }\n}\nexports.Right = Right;\n/**\n * @public\n */\n(function (Right) {\n    function isRight(value) {\n        return value instanceof Right;\n    }\n    Right.isRight = isRight;\n})(Right || (exports.Right = Right = {}));\n//# sourceMappingURL=right.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-either/src/right.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-encoding/src/decoder.js":
/*!****************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-encoding/src/decoder.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Decoder = void 0;\n/**\n * {@link https://encoding.spec.whatwg.org/#textdecoder}\n *\n * @public\n */\nvar Decoder;\n(function (Decoder) {\n    /**\n     * {@link https://encoding.spec.whatwg.org/#dom-textdecoder-decode}\n     * {@link https://encoding.spec.whatwg.org/#utf-8-decoder}\n     */\n    function decode(input) {\n        let output = \"\";\n        let i = 0;\n        while (i < input.length) {\n            let byte = input[i];\n            let bytesNeeded = 0;\n            let codePoint = 0;\n            if (byte <= 0x7f) {\n                bytesNeeded = 0;\n                codePoint = byte & 0xff;\n            }\n            else if (byte <= 0xdf) {\n                bytesNeeded = 1;\n                codePoint = byte & 0x1f;\n            }\n            else if (byte <= 0xef) {\n                bytesNeeded = 2;\n                codePoint = byte & 0x0f;\n            }\n            else if (byte <= 0xf4) {\n                bytesNeeded = 3;\n                codePoint = byte & 0x07;\n            }\n            if (input.length - i - bytesNeeded > 0) {\n                let k = 0;\n                while (k < bytesNeeded) {\n                    byte = input[i + k + 1];\n                    codePoint = (codePoint << 6) | (byte & 0x3f);\n                    k += 1;\n                }\n            }\n            else {\n                codePoint = 0xfffd;\n                bytesNeeded = input.length - i;\n            }\n            output += String.fromCodePoint(codePoint);\n            i += bytesNeeded + 1;\n        }\n        return output;\n    }\n    Decoder.decode = decode;\n})(Decoder || (exports.Decoder = Decoder = {}));\n//# sourceMappingURL=decoder.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-encoding/src/decoder.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-encoding/src/encoder.js":
/*!****************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-encoding/src/encoder.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Encoder = void 0;\n/**\n * {@link https://encoding.spec.whatwg.org/#textencoder}\n *\n * @public\n */\nvar Encoder;\n(function (Encoder) {\n    /**\n     * {@link https://encoding.spec.whatwg.org/#dom-textencoder-encode}\n     * {@link https://encoding.spec.whatwg.org/#utf-8-encoder}\n     */\n    function encode(input) {\n        const output = [];\n        const length = input.length;\n        let i = 0;\n        while (i < length) {\n            const codePoint = input.codePointAt(i);\n            let count = 0;\n            let bits = 0;\n            if (codePoint <= 0x7f) {\n                count = 0;\n                bits = 0x00;\n            }\n            else if (codePoint <= 0x7ff) {\n                count = 6;\n                bits = 0xc0;\n            }\n            else if (codePoint <= 0xffff) {\n                count = 12;\n                bits = 0xe0;\n            }\n            else if (codePoint <= 0x1fffff) {\n                count = 18;\n                bits = 0xf0;\n            }\n            output.push(bits | (codePoint >> count));\n            count -= 6;\n            while (count >= 0) {\n                output.push(0x80 | ((codePoint >> count) & 0x3f));\n                count -= 6;\n            }\n            i += codePoint >= 0x10000 ? 2 : 1;\n        }\n        return new Uint8Array(output);\n    }\n    Encoder.encode = encode;\n})(Encoder || (exports.Encoder = Encoder = {}));\n//# sourceMappingURL=encoder.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-encoding/src/encoder.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-encoding/src/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-encoding/src/index.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./decoder */ \"./node_modules/@siteimprove/alfa-encoding/src/decoder.js\"), exports);\n__exportStar(__webpack_require__(/*! ./encoder */ \"./node_modules/@siteimprove/alfa-encoding/src/encoder.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-encoding/src/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-equatable/src/equatable.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-equatable/src/equatable.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Equatable = void 0;\n/**\n * This namespace provides additional types and functions for the\n * {@link (Equatable:interface)} interface.\n *\n * @public\n */\nvar Equatable;\n(function (Equatable) {\n    // The following two type guards have been inlined from the\n    // @siteimprove/alfa-refinement package to avoid creating a circular\n    // dependency.\n    function isFunction(value) {\n        return typeof value === \"function\";\n    }\n    function isObject(value) {\n        return typeof value === \"object\" && value !== null;\n    }\n    /**\n     * Check if an unknown value implements the {@link (Equatable:interface)}\n     * interface.\n     */\n    function isEquatable(value) {\n        return isObject(value) && isFunction(value.equals);\n    }\n    Equatable.isEquatable = isEquatable;\n    /**\n     * Check if two unknown values are equal.\n     *\n     * @remarks\n     * If either of the given values implement the {@link (Equatable:interface)}\n     * interface, the equivalence constraints of the value will be used. If not,\n     * strict equality will be used with the additional constraint that `NaN` is\n     * equal to itself.\n     */\n    function equals(a, b) {\n        if (a === b ||\n            // `NaN` is the only value in JavaScript that is not equal to itself.\n            (a !== a && b !== b)) {\n            return true;\n        }\n        if (isEquatable(a)) {\n            return a.equals(b);\n        }\n        if (isEquatable(b)) {\n            return b.equals(a);\n        }\n        return false;\n    }\n    Equatable.equals = equals;\n})(Equatable || (exports.Equatable = Equatable = {}));\n//# sourceMappingURL=equatable.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-equatable/src/equatable.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-equatable/src/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-equatable/src/index.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./equatable */ \"./node_modules/@siteimprove/alfa-equatable/src/equatable.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-equatable/src/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-flags/src/flags.js":
/*!***********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-flags/src/flags.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Flags = void 0;\nconst alfa_array_1 = __webpack_require__(/*! @siteimprove/alfa-array */ \"./node_modules/@siteimprove/alfa-array/src/index.js\");\n/**\n * Class for modelling set of boolean flags.\n * Flags are stored as bits in a single number. Due to Javascript limitation\n * on bitwise operations, this means that a maximum of 32 flags can be handled.\n * We currently limit the class at a maximum of 8 flags since it fits our needs.\n *\n * @public\n */\nclass Flags {\n    constructor(value) {\n        /**\n         * Test whether a given flag is present (or set) in the set of flags\n         */\n        this.isSet = this.has;\n        /**\n         * Adds a list of flags to the set (aka sets the flags), and return a new one.\n         */\n        this.set = this.add;\n        /**\n         * Removes a list of flags to the set (aka unsets the flags), and return a new one.\n         */\n        this.unset = this.remove;\n        this._value = value;\n    }\n    /**\n     * A compact representation of the set of flags as a number\n     */\n    get value() {\n        return this._value;\n    }\n    /**\n     * Test whether a given flag is present (or set) in the set of flags\n     */\n    has(flag) {\n        return (this._value & flag) === flag;\n    }\n    /**\n     * Adds a list of flags to the set, and return a new one.\n     */\n    add(...flags) {\n        return new this.constructor(this._value | Flags._reduce(...flags));\n    }\n    /**\n     * Removes a list of flags from the set, and return a new one.\n     */\n    remove(...flags) {\n        return new this.constructor(this._value & ~Flags._reduce(...flags));\n    }\n    /**\n     * Reduces a list of flags into a single number representing all of them\n     * (with only the corresponding bits set to 1).\n     */\n    static _reduce(...flags) {\n        return alfa_array_1.Array.reduce(flags, (prev, cur) => prev | cur, 0);\n    }\n    equals(value) {\n        return value instanceof Flags && this._value === value._value;\n    }\n    toJSON() {\n        return {};\n    }\n}\nexports.Flags = Flags;\n//# sourceMappingURL=flags.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-flags/src/flags.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-flags/src/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-flags/src/index.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./flags */ \"./node_modules/@siteimprove/alfa-flags/src/flags.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-flags/src/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-fnv/src/fnv.js":
/*!*******************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-fnv/src/fnv.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FNV = void 0;\nconst alfa_hash_1 = __webpack_require__(/*! @siteimprove/alfa-hash */ \"./node_modules/@siteimprove/alfa-hash/src/index.js\");\n/**\n * @public\n */\nclass FNV extends alfa_hash_1.Hash {\n    static empty() {\n        return new FNV();\n    }\n    constructor() {\n        super();\n        this._hash = 2166136261;\n    }\n    finish() {\n        return this._hash >>> 0; // Convert to unsigned 32-bit integer\n    }\n    write(data) {\n        let hash = this._hash;\n        for (const octet of data) {\n            hash ^= octet;\n            hash +=\n                (hash << 1) + (hash << 4) + (hash << 7) + (hash << 8) + (hash << 24);\n        }\n        this._hash = hash;\n        return this;\n    }\n    equals(value) {\n        return value instanceof FNV && value._hash === this._hash;\n    }\n}\nexports.FNV = FNV;\n//# sourceMappingURL=fnv.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-fnv/src/fnv.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-fnv/src/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-fnv/src/index.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./fnv */ \"./node_modules/@siteimprove/alfa-fnv/src/fnv.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-fnv/src/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-future/src/future.js":
/*!*************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-future/src/future.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Future = void 0;\nconst alfa_array_1 = __webpack_require__(/*! @siteimprove/alfa-array */ \"./node_modules/@siteimprove/alfa-array/src/index.js\");\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\n/**\n * {@link http://blog.higher-order.com/assets/trampolines.pdf}\n *\n * @public\n */\nclass Future {\n    then(callback) {\n        let step = this;\n        while (true) {\n            const next = step.step();\n            if (step !== next) {\n                step = next;\n            }\n            else {\n                return next.then(callback);\n            }\n        }\n    }\n    get() {\n        let step = this;\n        while (true) {\n            const next = step.step();\n            if (step !== next) {\n                step = next;\n            }\n            else {\n                return next.get();\n            }\n        }\n    }\n    map(mapper) {\n        return this.flatMap((value) => Now.of(mapper(value)));\n    }\n    apply(mapper) {\n        return mapper.flatMap((mapper) => this.map(mapper));\n    }\n    flatten() {\n        return this.flatMap((future) => future);\n    }\n    tee(callback) {\n        return this.map((value) => {\n            callback(value);\n            return value;\n        });\n    }\n    async *asyncIterator() {\n        yield this.toPromise();\n    }\n    [Symbol.asyncIterator]() {\n        return this.asyncIterator();\n    }\n    toPromise() {\n        return new Promise((resolve) => this.then(resolve));\n    }\n}\nexports.Future = Future;\n/**\n * @public\n */\n(function (Future) {\n    function isFuture(value) {\n        return value instanceof Future;\n    }\n    Future.isFuture = isFuture;\n    function empty() {\n        return now(undefined);\n    }\n    Future.empty = empty;\n    function now(value) {\n        return Now.of(value);\n    }\n    Future.now = now;\n    function defer(continuation) {\n        return Defer.of(continuation);\n    }\n    Future.defer = defer;\n    function suspend(thunk) {\n        return Suspend.of(thunk);\n    }\n    Future.suspend = suspend;\n    function delay(thunk) {\n        return suspend(() => now(thunk()));\n    }\n    Future.delay = delay;\n    function from(promise) {\n        return Future.defer((callback) => (typeof promise === \"function\" ? promise() : promise).then(callback));\n    }\n    Future.from = from;\n    function traverse(values, mapper) {\n        return alfa_iterable_1.Iterable.reduce(values, (values, value, i) => values.flatMap((values) => mapper(value, i).map((value) => alfa_array_1.Array.append(values, value))), now(alfa_array_1.Array.empty()));\n    }\n    Future.traverse = traverse;\n    function sequence(futures) {\n        return traverse(futures, (value) => value);\n    }\n    Future.sequence = sequence;\n})(Future || (exports.Future = Future = {}));\nclass Now extends Future {\n    static of(value) {\n        return new Now(value);\n    }\n    constructor(value) {\n        super();\n        this._value = value;\n    }\n    step() {\n        return this;\n    }\n    then(callback) {\n        callback(this._value);\n    }\n    get() {\n        return this._value;\n    }\n    isNow() {\n        return true;\n    }\n    isDeferred() {\n        return false;\n    }\n    isSuspended() {\n        return false;\n    }\n    map(mapper) {\n        return new Now(mapper(this._value));\n    }\n    flatMap(mapper) {\n        return Suspend.of(() => mapper(this._value));\n    }\n}\nclass Defer extends Future {\n    static of(continuation) {\n        return new Defer(continuation);\n    }\n    constructor(continuation) {\n        super();\n        this._continuation = continuation;\n    }\n    step() {\n        return this;\n    }\n    then(callback) {\n        this._continuation((value) => defer(() => callback(value)));\n    }\n    get() {\n        throw new Error(\"Attempted to .get() from deferred future\");\n    }\n    isNow() {\n        return false;\n    }\n    isDeferred() {\n        return true;\n    }\n    isSuspended() {\n        return false;\n    }\n    flatMap(mapper) {\n        return Defer.Bind.of(this._continuation, mapper);\n    }\n}\n(function (Defer) {\n    class Bind extends Future {\n        static of(continuation, mapper) {\n            return new Bind(continuation, mapper);\n        }\n        constructor(continuation, mapper) {\n            super();\n            this._continuation = continuation;\n            this._mapper = mapper;\n        }\n        step() {\n            return this;\n        }\n        then(callback) {\n            this._continuation((value) => defer(() => this._mapper(value).then(callback)));\n        }\n        get() {\n            throw new Error(\"Attempted to .get() from deferred future\");\n        }\n        isNow() {\n            return false;\n        }\n        isDeferred() {\n            return true;\n        }\n        isSuspended() {\n            return false;\n        }\n        flatMap(mapper) {\n            return Suspend.of(() => Bind.of(this._continuation, (value) => this._mapper(value).flatMap(mapper)));\n        }\n    }\n    Defer.Bind = Bind;\n})(Defer || (Defer = {}));\nclass Suspend extends Future {\n    static of(thunk) {\n        return new Suspend(thunk);\n    }\n    constructor(thunk) {\n        super();\n        this._thunk = thunk;\n    }\n    step() {\n        return this._thunk();\n    }\n    isNow() {\n        return false;\n    }\n    isDeferred() {\n        return false;\n    }\n    isSuspended() {\n        return true;\n    }\n    flatMap(mapper) {\n        return Suspend.Bind.of(this._thunk, mapper);\n    }\n}\n(function (Suspend) {\n    class Bind extends Future {\n        static of(thunk, mapper) {\n            return new Bind(thunk, mapper);\n        }\n        constructor(thunk, mapper) {\n            super();\n            this._thunk = thunk;\n            this._mapper = mapper;\n        }\n        step() {\n            return this._thunk().flatMap(this._mapper);\n        }\n        isNow() {\n            return false;\n        }\n        isDeferred() {\n            return false;\n        }\n        isSuspended() {\n            return true;\n        }\n        flatMap(mapper) {\n            return Suspend.of(() => Bind.of(this._thunk, (value) => this._mapper(value).flatMap(mapper)));\n        }\n    }\n    Suspend.Bind = Bind;\n})(Suspend || (Suspend = {}));\nasync function defer(thunk) {\n    return Promise.resolve().then(thunk);\n}\n//# sourceMappingURL=future.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-future/src/future.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-future/src/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-future/src/index.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./future */ \"./node_modules/@siteimprove/alfa-future/src/future.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-future/src/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-graph/node_modules/@siteimprove/alfa-sequence/src/cons.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-graph/node_modules/@siteimprove/alfa-sequence/src/cons.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Cons = void 0;\nconst alfa_array_1 = __webpack_require__(/*! @siteimprove/alfa-array */ \"./node_modules/@siteimprove/alfa-array/src/index.js\");\nconst alfa_comparable_1 = __webpack_require__(/*! @siteimprove/alfa-comparable */ \"./node_modules/@siteimprove/alfa-comparable/src/index.js\");\nconst alfa_equatable_1 = __webpack_require__(/*! @siteimprove/alfa-equatable */ \"./node_modules/@siteimprove/alfa-equatable/src/index.js\");\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_json_1 = __webpack_require__(/*! @siteimprove/alfa-json */ \"./node_modules/@siteimprove/alfa-json/src/index.js\");\nconst alfa_lazy_1 = __webpack_require__(/*! @siteimprove/alfa-lazy */ \"./node_modules/@siteimprove/alfa-lazy/src/index.js\");\nconst alfa_map_1 = __webpack_require__(/*! @siteimprove/alfa-map */ \"./node_modules/@siteimprove/alfa-map/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_set_1 = __webpack_require__(/*! @siteimprove/alfa-set */ \"./node_modules/@siteimprove/alfa-set/src/index.js\");\nconst sequence_1 = __webpack_require__(/*! ./sequence */ \"./node_modules/@siteimprove/alfa-graph/node_modules/@siteimprove/alfa-sequence/src/sequence.js\");\nconst nil_1 = __webpack_require__(/*! ./nil */ \"./node_modules/@siteimprove/alfa-graph/node_modules/@siteimprove/alfa-sequence/src/nil.js\");\nconst { not, equals } = alfa_predicate_1.Predicate;\nconst { compareComparable } = alfa_comparable_1.Comparable;\n/**\n * @public\n */\nclass Cons {\n    static of(head, tail = alfa_lazy_1.Lazy.force(nil_1.Nil)) {\n        return new Cons(head, tail);\n    }\n    constructor(head, tail) {\n        this._head = head;\n        this._tail = tail;\n    }\n    get size() {\n        return alfa_iterable_1.Iterable.size(this);\n    }\n    isEmpty() {\n        return false;\n    }\n    forEach(callback) {\n        alfa_iterable_1.Iterable.forEach(this, callback);\n    }\n    map(mapper, index = 0) {\n        return new Cons(mapper(this._head, index), this._tail.map((tail) => Cons.isCons(tail) ? tail.map(mapper, index + 1) : nil_1.Nil));\n    }\n    apply(mapper) {\n        return mapper.flatMap((mapper) => this.map(mapper));\n    }\n    flatMap(mapper, index = 0) {\n        let next = this;\n        while (true) {\n            const head = mapper(next._head, index++);\n            if (Cons.isCons(head)) {\n                return new Cons(head._head, head._tail.map((left) => {\n                    const right = next._tail.force();\n                    return Cons.isCons(right)\n                        ? left.concat(right.flatMap(mapper, index))\n                        : left;\n                }));\n            }\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return nil_1.Nil;\n            }\n        }\n    }\n    flatten() {\n        return this.flatMap((sequence) => sequence);\n    }\n    reduce(reducer, accumulator) {\n        let next = this;\n        let index = 0;\n        while (true) {\n            accumulator = reducer(accumulator, next._head, index++);\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                break;\n            }\n        }\n        return accumulator;\n    }\n    reduceWhile(predicate, reducer, accumulator) {\n        let next = this;\n        let index = 0;\n        while (predicate(next._head, index)) {\n            accumulator = reducer(accumulator, next._head, index++);\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                break;\n            }\n        }\n        return accumulator;\n    }\n    reduceUntil(predicate, reducer, accumulator) {\n        return this.reduceWhile(not(predicate), reducer, accumulator);\n    }\n    filter(predicate, index = 0) {\n        let next = this;\n        while (true) {\n            if (predicate(next._head, index++)) {\n                return new Cons(next._head, next._tail.map((tail) => Cons.isCons(tail) ? tail.filter(predicate, index) : nil_1.Nil));\n            }\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return nil_1.Nil;\n            }\n        }\n    }\n    reject(predicate) {\n        return this.filter(not(predicate));\n    }\n    find(predicate) {\n        let next = this;\n        let index = 0;\n        while (true) {\n            const head = next._head;\n            if (predicate(head, index++)) {\n                return alfa_option_1.Option.of(head);\n            }\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return alfa_option_1.None;\n            }\n        }\n    }\n    includes(value) {\n        return this.some(equals(value));\n    }\n    collect(mapper, index = 0) {\n        let next = this;\n        while (true) {\n            const value = mapper(next._head, index++);\n            if (value.isSome()) {\n                return new Cons(value.get(), next._tail.map((tail) => Cons.isCons(tail) ? tail.collect(mapper, index) : nil_1.Nil));\n            }\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return nil_1.Nil;\n            }\n        }\n    }\n    collectFirst(mapper) {\n        let next = this;\n        let index = 0;\n        while (true) {\n            const value = mapper(next._head, index++);\n            if (value.isSome()) {\n                return value;\n            }\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return alfa_option_1.None;\n            }\n        }\n    }\n    some(predicate) {\n        let next = this;\n        let index = 0;\n        while (true) {\n            if (predicate(next._head, index++)) {\n                return true;\n            }\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return false;\n            }\n        }\n    }\n    none(predicate) {\n        return this.every(not(predicate));\n    }\n    every(predicate) {\n        let next = this;\n        let index = 0;\n        while (true) {\n            if (!predicate(next._head, index++)) {\n                return false;\n            }\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return true;\n            }\n        }\n    }\n    count(predicate) {\n        return this.reduce((count, value, index) => (predicate(value, index) ? count + 1 : count), 0);\n    }\n    distinct(seen = alfa_set_1.Set.empty()) {\n        let next = this;\n        while (true) {\n            if (seen.has(next._head)) {\n                const tail = next._tail.force();\n                if (Cons.isCons(tail)) {\n                    next = tail;\n                }\n                else {\n                    return nil_1.Nil;\n                }\n            }\n            else {\n                return Cons.of(next._head, next._tail.map((tail) => Cons.isCons(tail) ? tail.distinct(seen.add(next._head)) : nil_1.Nil));\n            }\n        }\n    }\n    get(index) {\n        return index < 0 ? alfa_option_1.None : this.skip(index).first();\n    }\n    has(index) {\n        return this.get(index).isSome();\n    }\n    set(index, value) {\n        if (index < 0) {\n            return this;\n        }\n        if (index === 0) {\n            if (alfa_equatable_1.Equatable.equals(value, this._head)) {\n                return this;\n            }\n            return new Cons(value, this._tail);\n        }\n        return new Cons(this._head, this._tail.map((tail) => tail.set(index - 1, value)));\n    }\n    insert(index, value) {\n        if (index < 0) {\n            return this;\n        }\n        if (index === 0) {\n            return new Cons(value, alfa_lazy_1.Lazy.force(this));\n        }\n        return new Cons(this._head, this._tail.map((tail) => tail.set(index - 1, value)));\n    }\n    append(value) {\n        return new Cons(this._head, this._tail.map((tail) => tail.append(value)));\n    }\n    prepend(value) {\n        return new Cons(value, alfa_lazy_1.Lazy.force(this));\n    }\n    concat(iterable) {\n        const sequence = sequence_1.Sequence.from(iterable);\n        if (Cons.isCons(sequence)) {\n            return new Cons(this._head, this._tail.map((tail) => tail.concat(sequence)));\n        }\n        return this;\n    }\n    subtract(iterable) {\n        return this.filter((value) => !alfa_iterable_1.Iterable.includes(iterable, value));\n    }\n    intersect(iterable) {\n        return this.filter((value) => alfa_iterable_1.Iterable.includes(iterable, value));\n    }\n    tee(callback, ...args) {\n        callback(this, ...args);\n        return this;\n    }\n    zip(iterable) {\n        const sequence = sequence_1.Sequence.from(iterable);\n        if (Cons.isCons(sequence)) {\n            return new Cons([this._head, sequence._head], this._tail.map((tail) => tail.zip(sequence.rest())));\n        }\n        return nil_1.Nil;\n    }\n    first() {\n        return alfa_option_1.Option.of(this._head);\n    }\n    last() {\n        let next = this;\n        while (true) {\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return alfa_option_1.Option.of(next._head);\n            }\n        }\n    }\n    take(count) {\n        if (count <= 0) {\n            return nil_1.Nil;\n        }\n        return new Cons(this._head, count === 1\n            ? alfa_lazy_1.Lazy.force(nil_1.Nil)\n            : this._tail.map((tail) => Cons.isCons(tail) ? tail.take(count - 1) : nil_1.Nil));\n    }\n    takeWhile(predicate) {\n        return this.takeUntil(not(predicate));\n    }\n    takeUntil(predicate, index = 0) {\n        if (predicate(this._head, index)) {\n            return nil_1.Nil;\n        }\n        return new Cons(this._head, this._tail.map((tail) => Cons.isCons(tail)\n            ? tail.takeUntil(predicate, index + 1)\n            : tail.takeUntil(predicate)));\n    }\n    takeLast(count) {\n        return this.skip(this.size - count);\n    }\n    takeLastWhile(predicate) {\n        return this.reverse().takeWhile(predicate).reverse();\n    }\n    takeLastUntil(predicate) {\n        return this.takeLastWhile(not(predicate));\n    }\n    skip(count) {\n        let next = this;\n        while (count-- > 0) {\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return nil_1.Nil;\n            }\n        }\n        return next;\n    }\n    skipWhile(predicate) {\n        let next = this;\n        let index = 0;\n        while (predicate(next._head, index++)) {\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return nil_1.Nil;\n            }\n        }\n        return next;\n    }\n    skipUntil(predicate) {\n        return this.skipWhile(not(predicate));\n    }\n    skipLast(count) {\n        return this.take(this.size - count);\n    }\n    skipLastWhile(predicate) {\n        return this.reverse().skipWhile(predicate).reverse();\n    }\n    skipLastUntil(predicate) {\n        return this.skipLastWhile(not(predicate));\n    }\n    trim(predicate) {\n        return this.trimLeading(predicate).trimTrailing(predicate);\n    }\n    trimLeading(predicate) {\n        return this.skipWhile(predicate);\n    }\n    trimTrailing(predicate) {\n        return this.skipLastWhile(predicate);\n    }\n    rest() {\n        return this._tail.force();\n    }\n    slice(start, end) {\n        let slice = this.skip(start);\n        if (end !== undefined) {\n            slice = slice.take(end - start);\n        }\n        return slice;\n    }\n    reverse() {\n        return this.reduce((reversed, value) => new Cons(value, alfa_lazy_1.Lazy.force(reversed)), nil_1.Nil);\n    }\n    join(separator) {\n        let result = `${this._head}`;\n        let next = this;\n        while (true) {\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                result += `${separator}${tail._head}`;\n                next = tail;\n            }\n            else {\n                return result;\n            }\n        }\n    }\n    sort() {\n        return this.sortWith(compareComparable);\n    }\n    sortWith(comparer) {\n        return sequence_1.Sequence.fromArray(alfa_array_1.Array.sortWith(this.toArray(), comparer));\n    }\n    compare(iterable) {\n        return this.compareWith(iterable, alfa_comparable_1.Comparable.compare);\n    }\n    compareWith(iterable, comparer) {\n        return alfa_iterable_1.Iterable.compareWith(this, iterable, comparer);\n    }\n    groupBy(grouper) {\n        return this.reduce((groups, value, index) => {\n            const group = grouper(value, index);\n            return groups.set(group, new Cons(value, alfa_lazy_1.Lazy.force(groups.get(group).getOrElse(() => nil_1.Nil))));\n        }, alfa_map_1.Map.empty()).map((group) => group.reverse());\n    }\n    equals(value) {\n        if (!Cons.isCons(value)) {\n            return false;\n        }\n        let a = this;\n        let b = value;\n        while (true) {\n            if (!alfa_equatable_1.Equatable.equals(a._head, b._head)) {\n                return false;\n            }\n            const ta = a._tail.force();\n            const tb = b._tail.force();\n            if (Cons.isCons(ta) && Cons.isCons(tb)) {\n                a = ta;\n                b = tb;\n            }\n            else {\n                return ta === nil_1.Nil && tb === nil_1.Nil;\n            }\n        }\n    }\n    hash(hash) {\n        let size = 0;\n        for (const value of this) {\n            hash.writeUnknown(value);\n            size++;\n        }\n        hash.writeUint32(size);\n    }\n    *iterator() {\n        let next = this;\n        while (true) {\n            yield next._head;\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                break;\n            }\n        }\n    }\n    [Symbol.iterator]() {\n        return this.iterator();\n    }\n    toArray() {\n        const array = [];\n        let next = this;\n        while (true) {\n            array.push(next._head);\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return array;\n            }\n        }\n    }\n    toJSON() {\n        const json = [];\n        let next = this;\n        while (true) {\n            json.push(alfa_json_1.Serializable.toJSON(next._head));\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return json;\n            }\n        }\n    }\n    toString() {\n        return `Sequence [ ${this.join(\", \")} ]`;\n    }\n}\nexports.Cons = Cons;\n/**\n * @public\n */\n(function (Cons) {\n    function isCons(value) {\n        return value instanceof Cons;\n    }\n    Cons.isCons = isCons;\n})(Cons || (exports.Cons = Cons = {}));\n//# sourceMappingURL=cons.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-graph/node_modules/@siteimprove/alfa-sequence/src/cons.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-graph/node_modules/@siteimprove/alfa-sequence/src/index.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-graph/node_modules/@siteimprove/alfa-sequence/src/index.js ***!
  \***************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./cons */ \"./node_modules/@siteimprove/alfa-graph/node_modules/@siteimprove/alfa-sequence/src/cons.js\"), exports);\n__exportStar(__webpack_require__(/*! ./nil */ \"./node_modules/@siteimprove/alfa-graph/node_modules/@siteimprove/alfa-sequence/src/nil.js\"), exports);\n__exportStar(__webpack_require__(/*! ./sequence */ \"./node_modules/@siteimprove/alfa-graph/node_modules/@siteimprove/alfa-sequence/src/sequence.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-graph/node_modules/@siteimprove/alfa-sequence/src/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-graph/node_modules/@siteimprove/alfa-sequence/src/nil.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-graph/node_modules/@siteimprove/alfa-sequence/src/nil.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Nil = void 0;\nconst alfa_comparable_1 = __webpack_require__(/*! @siteimprove/alfa-comparable */ \"./node_modules/@siteimprove/alfa-comparable/src/index.js\");\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_map_1 = __webpack_require__(/*! @siteimprove/alfa-map */ \"./node_modules/@siteimprove/alfa-map/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst sequence_1 = __webpack_require__(/*! ./sequence */ \"./node_modules/@siteimprove/alfa-graph/node_modules/@siteimprove/alfa-sequence/src/sequence.js\");\nconst cons_1 = __webpack_require__(/*! ./cons */ \"./node_modules/@siteimprove/alfa-graph/node_modules/@siteimprove/alfa-sequence/src/cons.js\");\n/**\n * @public\n */\nexports.Nil = new (class Nil {\n    get size() {\n        return 0;\n    }\n    isEmpty() {\n        return true;\n    }\n    forEach() { }\n    map() {\n        return this;\n    }\n    apply() {\n        return this;\n    }\n    flatMap() {\n        return this;\n    }\n    flatten() {\n        return this;\n    }\n    reduce(reducer, accumulator) {\n        return accumulator;\n    }\n    reduceWhile(predicate, reducer, accumulator) {\n        return accumulator;\n    }\n    reduceUntil(predicate, reducer, accumulator) {\n        return accumulator;\n    }\n    filter() {\n        return this;\n    }\n    reject() {\n        return this;\n    }\n    find() {\n        return alfa_option_1.None;\n    }\n    includes() {\n        return false;\n    }\n    collect() {\n        return this;\n    }\n    collectFirst() {\n        return alfa_option_1.None;\n    }\n    some() {\n        return false;\n    }\n    none() {\n        return true;\n    }\n    every() {\n        return true;\n    }\n    count() {\n        return 0;\n    }\n    distinct() {\n        return this;\n    }\n    get() {\n        return alfa_option_1.None;\n    }\n    has() {\n        return false;\n    }\n    set() {\n        return this;\n    }\n    insert(index, value) {\n        return index === 0 ? cons_1.Cons.of(value) : this;\n    }\n    append(value) {\n        return cons_1.Cons.of(value);\n    }\n    prepend(value) {\n        return cons_1.Cons.of(value);\n    }\n    concat(iterable) {\n        if (iterable === this) {\n            return this;\n        }\n        return sequence_1.Sequence.from(iterable);\n    }\n    subtract() {\n        return this;\n    }\n    intersect() {\n        return this;\n    }\n    tee(callback, ...args) {\n        callback(this, ...args);\n        return this;\n    }\n    zip() {\n        return this;\n    }\n    first() {\n        return alfa_option_1.None;\n    }\n    last() {\n        return alfa_option_1.None;\n    }\n    take() {\n        return this;\n    }\n    takeWhile() {\n        return this;\n    }\n    takeUntil() {\n        return this;\n    }\n    takeLast() {\n        return this;\n    }\n    takeLastWhile() {\n        return this;\n    }\n    takeLastUntil() {\n        return this;\n    }\n    skip() {\n        return this;\n    }\n    skipWhile() {\n        return this;\n    }\n    skipUntil() {\n        return this;\n    }\n    skipLast() {\n        return this;\n    }\n    skipLastWhile() {\n        return this;\n    }\n    skipLastUntil() {\n        return this;\n    }\n    trim() {\n        return this;\n    }\n    trimLeading() {\n        return this;\n    }\n    trimTrailing() {\n        return this;\n    }\n    rest() {\n        return this;\n    }\n    slice() {\n        return this;\n    }\n    reverse() {\n        return this;\n    }\n    join() {\n        return \"\";\n    }\n    sort() {\n        return this;\n    }\n    sortWith() {\n        return this;\n    }\n    compare(iterable) {\n        return this.compareWith(iterable, alfa_comparable_1.Comparable.compare);\n    }\n    compareWith(iterable, comparer) {\n        return alfa_iterable_1.Iterable.compareWith(this, iterable, comparer);\n    }\n    groupBy() {\n        return alfa_map_1.Map.empty();\n    }\n    equals(value) {\n        return value instanceof Nil;\n    }\n    hash(hash) {\n        hash.writeUint32(0);\n    }\n    *iterator() { }\n    [Symbol.iterator]() {\n        return this.iterator();\n    }\n    toArray() {\n        return [];\n    }\n    toJSON() {\n        return [];\n    }\n    toString() {\n        return \"Sequence []\";\n    }\n})();\n//# sourceMappingURL=nil.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-graph/node_modules/@siteimprove/alfa-sequence/src/nil.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-graph/node_modules/@siteimprove/alfa-sequence/src/sequence.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-graph/node_modules/@siteimprove/alfa-sequence/src/sequence.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Sequence = void 0;\nconst alfa_array_1 = __webpack_require__(/*! @siteimprove/alfa-array */ \"./node_modules/@siteimprove/alfa-array/src/index.js\");\nconst alfa_lazy_1 = __webpack_require__(/*! @siteimprove/alfa-lazy */ \"./node_modules/@siteimprove/alfa-lazy/src/index.js\");\nconst cons_1 = __webpack_require__(/*! ./cons */ \"./node_modules/@siteimprove/alfa-graph/node_modules/@siteimprove/alfa-sequence/src/cons.js\");\nconst nil_1 = __webpack_require__(/*! ./nil */ \"./node_modules/@siteimprove/alfa-graph/node_modules/@siteimprove/alfa-sequence/src/nil.js\");\n/**\n * @public\n */\nvar Sequence;\n(function (Sequence) {\n    function isSequence(value) {\n        return isCons(value) || isNil(value);\n    }\n    Sequence.isSequence = isSequence;\n    function isCons(value) {\n        return cons_1.Cons.isCons(value);\n    }\n    Sequence.isCons = isCons;\n    function isNil(value) {\n        return value === nil_1.Nil;\n    }\n    Sequence.isNil = isNil;\n    function of(head, tail) {\n        return cons_1.Cons.of(head, tail);\n    }\n    Sequence.of = of;\n    function empty() {\n        return nil_1.Nil;\n    }\n    Sequence.empty = empty;\n    function from(iterable) {\n        if (isSequence(iterable)) {\n            return iterable;\n        }\n        if (alfa_array_1.Array.isArray(iterable)) {\n            return fromArray(iterable);\n        }\n        return fromIterable(iterable);\n    }\n    Sequence.from = from;\n    function fromArray(array) {\n        let i = 0;\n        const tail = () => {\n            if (i >= array.length) {\n                return empty();\n            }\n            return of(array[i++], alfa_lazy_1.Lazy.of(tail));\n        };\n        return tail();\n    }\n    Sequence.fromArray = fromArray;\n    function fromIterable(iterable) {\n        return fromIterator(iterable[Symbol.iterator]());\n    }\n    Sequence.fromIterable = fromIterable;\n    function fromIterator(iterator) {\n        const tail = () => {\n            const head = iterator.next();\n            if (head.done === true) {\n                return empty();\n            }\n            return of(head.value, alfa_lazy_1.Lazy.of(tail));\n        };\n        return tail();\n    }\n    Sequence.fromIterator = fromIterator;\n})(Sequence || (exports.Sequence = Sequence = {}));\n//# sourceMappingURL=sequence.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-graph/node_modules/@siteimprove/alfa-sequence/src/sequence.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-graph/src/graph.js":
/*!***********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-graph/src/graph.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Graph = void 0;\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_json_1 = __webpack_require__(/*! @siteimprove/alfa-json */ \"./node_modules/@siteimprove/alfa-json/src/index.js\");\nconst alfa_map_1 = __webpack_require__(/*! @siteimprove/alfa-map */ \"./node_modules/@siteimprove/alfa-map/src/index.js\");\nconst alfa_sequence_1 = __webpack_require__(/*! @siteimprove/alfa-sequence */ \"./node_modules/@siteimprove/alfa-graph/node_modules/@siteimprove/alfa-sequence/src/index.js\");\nconst alfa_set_1 = __webpack_require__(/*! @siteimprove/alfa-set */ \"./node_modules/@siteimprove/alfa-set/src/index.js\");\n/**\n * @public\n */\nclass Graph {\n    static of(nodes) {\n        return new Graph(nodes);\n    }\n    static empty() {\n        return this._empty;\n    }\n    constructor(nodes) {\n        this._nodes = nodes;\n    }\n    get size() {\n        return this._nodes.size;\n    }\n    isEmpty() {\n        return this._nodes.isEmpty();\n    }\n    nodes() {\n        return this._nodes.keys();\n    }\n    neighbors(node) {\n        return this._nodes.get(node).getOr([]);\n    }\n    has(node) {\n        return this._nodes.has(node);\n    }\n    add(node) {\n        if (this.has(node)) {\n            return this;\n        }\n        return new Graph(this._nodes.set(node, alfa_set_1.Set.empty()));\n    }\n    delete(node) {\n        let nodes = this._nodes;\n        if (!nodes.has(node)) {\n            return this;\n        }\n        return new Graph(nodes.delete(node).map((neighbors) => neighbors.delete(node)));\n    }\n    connect(from, to) {\n        let nodes = this._nodes;\n        if (!nodes.has(from)) {\n            nodes = nodes.set(from, alfa_set_1.Set.empty());\n        }\n        if (!nodes.has(to)) {\n            nodes = nodes.set(to, alfa_set_1.Set.empty());\n        }\n        return new Graph(nodes.set(from, nodes\n            .get(from)\n            .map((from) => from.add(to))\n            // Presence of from is guaranteed by first test.\n            .getUnsafe()));\n    }\n    disconnect(from, to) {\n        if (!this.has(from) || !this.has(to)) {\n            return this;\n        }\n        const nodes = this._nodes;\n        return new Graph(nodes.set(from, nodes\n            .get(from)\n            .map((from) => from.delete(to))\n            // presence of from is guaranteed by first test.\n            .getUnsafe()));\n    }\n    traverse(root, traversal = Graph.DepthFirst) {\n        return alfa_sequence_1.Sequence.from(traversal(this, root));\n    }\n    path(from, to, traversal = Graph.BreadthFirst) {\n        const parents = alfa_map_1.Map.from(traversal(this, from));\n        const path = [];\n        while (parents.has(to)) {\n            const parent = parents\n                .get(to)\n                // presence of to is guaranteed by the loop condition\n                .getUnsafe();\n            path.unshift(to);\n            to = parent;\n        }\n        return alfa_sequence_1.Sequence.from(path);\n    }\n    hasPath(from, to) {\n        if (!this.has(from) || !this.has(to)) {\n            return false;\n        }\n        return this.traverse(from)\n            .map(([node]) => node)\n            .includes(to);\n    }\n    reverse() {\n        let reversed = Graph.empty();\n        for (const [node, neighbors] of this._nodes) {\n            reversed = reversed.add(node);\n            for (const neighbor of neighbors) {\n                reversed = reversed.connect(neighbor, node);\n            }\n        }\n        return reversed;\n    }\n    *sort() {\n        let incoming = this.reverse();\n        const queue = incoming\n            .toArray()\n            .filter(([, edges]) => edges.length === 0)\n            .map(([node]) => node);\n        while (queue.length > 0) {\n            const next = queue.shift();\n            yield next;\n            for (const neighbor of this.neighbors(next)) {\n                incoming = incoming.disconnect(neighbor, next);\n                if (alfa_iterable_1.Iterable.isEmpty(incoming.neighbors(neighbor))) {\n                    queue.push(neighbor);\n                }\n            }\n        }\n    }\n    equals(value) {\n        return value instanceof Graph && value._nodes.equals(this._nodes);\n    }\n    hash(hash) {\n        hash.writeHashable(this._nodes);\n    }\n    *iterator() {\n        yield* this._nodes;\n    }\n    [Symbol.iterator]() {\n        return this.iterator();\n    }\n    toArray() {\n        return [...this].map(([node, neighbors]) => [node, [...neighbors]]);\n    }\n    toJSON() {\n        return this.toArray().map(([node, neighbors]) => [\n            alfa_json_1.Serializable.toJSON(node),\n            neighbors.map((node) => alfa_json_1.Serializable.toJSON(node)),\n        ]);\n    }\n    toString() {\n        const entries = this.toArray()\n            .map(([node, edges]) => {\n            const entries = edges.join(\", \");\n            return `${node}${entries === \"\" ? \"\" : ` => [ ${entries} ]`}`;\n        })\n            .join(\", \");\n        return `Graph {${entries === \"\" ? \"\" : ` ${entries} `}}`;\n    }\n}\nexports.Graph = Graph;\nGraph._empty = new Graph(alfa_map_1.Map.empty());\n/**\n * @public\n */\n(function (Graph) {\n    function isGraph(value) {\n        return value instanceof Graph;\n    }\n    Graph.isGraph = isGraph;\n    function from(iterable) {\n        if (isGraph(iterable)) {\n            return iterable;\n        }\n        return Graph.of(alfa_map_1.Map.from(alfa_iterable_1.Iterable.map(iterable, ([node, neighbours]) => [\n            node,\n            alfa_set_1.Set.from(neighbours),\n        ])));\n    }\n    Graph.from = from;\n    /**\n     * {@link https://en.wikipedia.org/wiki/Depth-first_search}\n     */\n    Graph.DepthFirst = function* (graph, root) {\n        const stack = [...graph.neighbors(root)].map((node) => [node, root]);\n        let seen = alfa_set_1.Set.of(root);\n        while (stack.length > 0) {\n            const next = stack.pop();\n            if (seen.has(next[0])) {\n                continue;\n            }\n            yield next;\n            seen = seen.add(next[0]);\n            for (const neighbor of graph.neighbors(next[0])) {\n                stack.push([neighbor, next[0]]);\n            }\n        }\n    };\n    /**\n     * {@link https://en.wikipedia.org/wiki/Breadth-first_search}\n     */\n    Graph.BreadthFirst = function* (graph, root) {\n        const queue = [...graph.neighbors(root)].map((node) => [node, root]);\n        let seen = alfa_set_1.Set.of(root, ...graph.neighbors(root));\n        while (queue.length > 0) {\n            const next = queue.shift();\n            yield next;\n            for (const neighbor of graph.neighbors(next[0])) {\n                if (seen.has(neighbor)) {\n                    continue;\n                }\n                seen = seen.add(neighbor);\n                queue.push([neighbor, next[0]]);\n            }\n        }\n    };\n})(Graph || (exports.Graph = Graph = {}));\n//# sourceMappingURL=graph.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-graph/src/graph.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-graph/src/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-graph/src/index.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./graph */ \"./node_modules/@siteimprove/alfa-graph/src/graph.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-graph/src/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-hash/src/hash.js":
/*!*********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-hash/src/hash.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Hash = void 0;\nconst alfa_encoding_1 = __webpack_require__(/*! @siteimprove/alfa-encoding */ \"./node_modules/@siteimprove/alfa-encoding/src/index.js\");\nconst hashable_1 = __webpack_require__(/*! ./hashable */ \"./node_modules/@siteimprove/alfa-hash/src/hashable.js\");\nconst { keys } = Object;\n/**\n * A special offset used for the builtin types `true`, `false`, `undefined`, and\n * `null`. The offset is designed to minimize the chance of collisions for data\n * structures that rely on 5-bit partitioning. We use the first 30 bits for 6 of\n * these partitions, leaving us 2 bits to encode the 4 builtin types.\n */\nconst builtinOffset = 2216757312;\n/**\n * @public\n */\nclass Hash {\n    constructor() { }\n    writeString(data) {\n        return this.write(alfa_encoding_1.Encoder.encode(data));\n    }\n    /**\n     * @remarks\n     * As JavaScript represents numbers in double-precision floating-point format,\n     * numbers in general will be written as such.\n     *\n     * {@link https://en.wikipedia.org/wiki/Double-precision_floating-point_format}\n     */\n    writeNumber(data) {\n        return this.writeFloat64(data);\n    }\n    writeInt(data, size = 32, signed = true) {\n        const buffer = new ArrayBuffer(size / 8);\n        const view = new DataView(buffer);\n        switch (size) {\n            case 8:\n                signed ? view.setInt8(0, data) : view.setUint8(0, data);\n                break;\n            case 16:\n                signed ? view.setInt16(0, data) : view.setUint16(0, data);\n                break;\n            case 32:\n                signed ? view.setInt32(0, data) : view.setUint32(0, data);\n        }\n        return this.write(new Uint8Array(buffer));\n    }\n    writeInt8(data) {\n        return this.writeInt(data, 8, true);\n    }\n    writeUint8(data) {\n        return this.writeInt(data, 8, false);\n    }\n    writeInt16(data) {\n        return this.writeInt(data, 16, true);\n    }\n    writeUint16(data) {\n        return this.writeInt(data, 16, false);\n    }\n    writeInt32(data) {\n        return this.writeInt(data, 32, true);\n    }\n    writeUint32(data) {\n        return this.writeInt(data, 32, false);\n    }\n    writeBigInt(data, size = 64, signed = true) {\n        const buffer = new ArrayBuffer(size / 8);\n        const view = new DataView(buffer);\n        switch (size) {\n            case 64:\n                signed ? view.setBigInt64(0, data) : view.setBigUint64(0, data);\n        }\n        return this.write(new Uint8Array(buffer));\n    }\n    writeBigInt64(data) {\n        return this.writeBigInt(data, 64, true);\n    }\n    writeBigUint64(data) {\n        return this.writeBigInt(data, 64, false);\n    }\n    writeFloat(data, size = 32) {\n        const buffer = new ArrayBuffer(size / 8);\n        const view = new DataView(buffer);\n        switch (size) {\n            case 32:\n                view.setFloat32(0, data);\n                break;\n            case 64:\n                view.setFloat64(0, data);\n        }\n        return this.write(new Uint8Array(buffer));\n    }\n    writeFloat32(data) {\n        return this.writeFloat(data, 32);\n    }\n    writeFloat64(data) {\n        return this.writeFloat(data, 64);\n    }\n    writeBoolean(data) {\n        return this.writeUint8(builtinOffset + (data ? 1 : 0));\n    }\n    writeUndefined() {\n        return this.writeUint32(builtinOffset + 2);\n    }\n    writeNull() {\n        return this.writeUint32(builtinOffset + 3);\n    }\n    writeObject(data) {\n        let hash = Hash._objectHashes.get(data);\n        if (hash === undefined) {\n            hash = Hash._getNextHash();\n            Hash._objectHashes.set(data, hash);\n        }\n        return this.writeUint32(hash);\n    }\n    writeSymbol(data) {\n        let hash = Hash._symbolHashes.get(data);\n        if (hash === undefined) {\n            hash = Hash._getNextHash();\n            Hash._symbolHashes.set(data, hash);\n        }\n        return this.writeUint32(hash);\n    }\n    writeHashable(data) {\n        data.hash(this);\n        return this;\n    }\n    writeUnknown(data) {\n        switch (typeof data) {\n            case \"string\":\n                return this.writeString(data);\n            case \"number\":\n                return this.writeNumber(data);\n            case \"bigint\":\n                return this.writeBigInt(data);\n            case \"boolean\":\n                return this.writeBoolean(data);\n            case \"symbol\":\n                return this.writeSymbol(data);\n            case \"undefined\":\n                return this.writeUndefined();\n            case \"object\":\n                if (data === null) {\n                    return this.writeNull();\n                }\n                if (hashable_1.Hashable.isHashable(data)) {\n                    return this.writeHashable(data);\n                }\n                return this.writeObject(data);\n            case \"function\":\n                return this.writeObject(data);\n        }\n    }\n    writeJSON(data) {\n        switch (typeof data) {\n            case \"string\":\n                return this.writeString(data);\n            case \"number\":\n                return this.writeNumber(data);\n            case \"boolean\":\n                return this.writeBoolean(data);\n            case \"object\":\n                if (Array.isArray(data)) {\n                    for (let i = 0, n = data.length; i < n; i++) {\n                        this.writeJSON(data[i]);\n                    }\n                    this.writeUint32(data.length);\n                }\n                else if (data !== null) {\n                    for (const key of keys(data).sort()) {\n                        const value = data[key];\n                        this.writeString(key);\n                        if (value !== undefined) {\n                            this.writeJSON(value);\n                        }\n                        // Write a null byte as a separator between key/value pairs.\n                        this.writeUint8(0);\n                    }\n                }\n                return this;\n        }\n    }\n    equals(value) {\n        return value instanceof Hash && value.finish() === this.finish();\n    }\n    hash(hash) {\n        hash.writeUint32(this.finish());\n    }\n    static _getNextHash() {\n        const nextHash = Hash._nextHash;\n        // Increase the hash, wrapping around when it reaches the limit of 32 bits.\n        Hash._nextHash = (Hash._nextHash + 1) >>> 0;\n        return nextHash;\n    }\n}\nexports.Hash = Hash;\n/**\n * A map from objects to their hash values. Objects are weakly referenced as\n * to not prevent them from being garbage collected.\n */\nHash._objectHashes = new WeakMap();\n/**\n * A map from symbols to their hash values. As there's not currently a way to\n * weakly reference symbols, we have to instead use strong references.\n *\n * {@link https://github.com/tc39/proposal-symbols-as-weakmap-keys}\n */\nHash._symbolHashes = new Map();\n/**\n * The next available hash value. This is used for symbols and objects that\n * don't implement the {@link (Hashable:interface)} interface.\n */\nHash._nextHash = 0;\n//# sourceMappingURL=hash.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-hash/src/hash.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-hash/src/hashable.js":
/*!*************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-hash/src/hashable.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Hashable = void 0;\nconst alfa_refinement_1 = __webpack_require__(/*! @siteimprove/alfa-refinement */ \"./node_modules/@siteimprove/alfa-refinement/src/index.js\");\nconst { isFunction, isObject } = alfa_refinement_1.Refinement;\n/**\n * @public\n */\nvar Hashable;\n(function (Hashable) {\n    function isHashable(value) {\n        return isObject(value) && isFunction(value.hash);\n    }\n    Hashable.isHashable = isHashable;\n})(Hashable || (exports.Hashable = Hashable = {}));\n//# sourceMappingURL=hashable.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-hash/src/hashable.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-hash/src/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-hash/src/index.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./hash */ \"./node_modules/@siteimprove/alfa-hash/src/hash.js\"), exports);\n__exportStar(__webpack_require__(/*! ./hashable */ \"./node_modules/@siteimprove/alfa-hash/src/hashable.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-hash/src/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-http/src/body.js":
/*!*********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-http/src/body.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Body = void 0;\nconst alfa_refinement_1 = __webpack_require__(/*! @siteimprove/alfa-refinement */ \"./node_modules/@siteimprove/alfa-refinement/src/index.js\");\nconst { isObject } = alfa_refinement_1.Refinement;\n/**\n * @public\n */\nvar Body;\n(function (Body) {\n    function isBody(value) {\n        return isObject(value) && value.body instanceof ArrayBuffer;\n    }\n    Body.isBody = isBody;\n})(Body || (exports.Body = Body = {}));\n//# sourceMappingURL=body.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-http/src/body.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-http/src/cookie.js":
/*!***********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-http/src/cookie.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Cookie = void 0;\n/**\n * @public\n */\nclass Cookie {\n    static of(name, value) {\n        return new Cookie(name, value);\n    }\n    constructor(name, value) {\n        this._name = name;\n        this._value = value;\n    }\n    get name() {\n        return this._name;\n    }\n    get value() {\n        return this._value;\n    }\n    equals(value) {\n        return (value instanceof Cookie &&\n            value._name === this._name &&\n            value._value === this._value);\n    }\n    toJSON() {\n        return {\n            name: this._name,\n            value: this._value,\n        };\n    }\n    toString() {\n        return `${this._name}=${this._value}`;\n    }\n}\nexports.Cookie = Cookie;\n/**\n * @public\n */\n(function (Cookie) {\n    function from(json) {\n        return Cookie.of(json.name, json.value);\n    }\n    Cookie.from = from;\n    function isCookie(value) {\n        return value instanceof Cookie;\n    }\n    Cookie.isCookie = isCookie;\n})(Cookie || (exports.Cookie = Cookie = {}));\n//# sourceMappingURL=cookie.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-http/src/cookie.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-http/src/cookies.js":
/*!************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-http/src/cookies.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Cookies = void 0;\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_map_1 = __webpack_require__(/*! @siteimprove/alfa-map */ \"./node_modules/@siteimprove/alfa-map/src/index.js\");\nconst cookie_1 = __webpack_require__(/*! ./cookie */ \"./node_modules/@siteimprove/alfa-http/src/cookie.js\");\n/**\n * @public\n */\nclass Cookies {\n    /**\n     * @remarks\n     * If the iterable contains cookies with duplicate names, the last cookie with\n     * a given name will take precedence.\n     */\n    static of(cookies) {\n        return new Cookies(alfa_map_1.Map.from(alfa_iterable_1.Iterable.map(cookies, (cookie) => [cookie.name, cookie])));\n    }\n    static empty() {\n        return this._empty;\n    }\n    constructor(cookies) {\n        this._cookies = cookies;\n    }\n    get(name) {\n        return this._cookies.get(name);\n    }\n    has(name) {\n        return this._cookies.has(name);\n    }\n    add(cookie) {\n        return new Cookies(this._cookies.set(cookie.name, cookie));\n    }\n    delete(name) {\n        return new Cookies(this._cookies.delete(name));\n    }\n    *[Symbol.iterator]() {\n        yield* this._cookies.values();\n    }\n    toArray() {\n        return [...this];\n    }\n    toJSON() {\n        return this.toArray().map((cookie) => cookie.toJSON());\n    }\n    toString() {\n        return this.toArray()\n            .map((cookie) => cookie.toString())\n            .join(\"; \");\n    }\n}\nexports.Cookies = Cookies;\nCookies._empty = new Cookies(alfa_map_1.Map.empty());\n/**\n * @public\n */\n(function (Cookies) {\n    function from(json) {\n        return Cookies.of(json.map((cookie) => cookie_1.Cookie.from(cookie)));\n    }\n    Cookies.from = from;\n    function isCookies(value) {\n        return value instanceof Cookies;\n    }\n    Cookies.isCookies = isCookies;\n})(Cookies || (exports.Cookies = Cookies = {}));\n//# sourceMappingURL=cookies.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-http/src/cookies.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-http/src/header.js":
/*!***********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-http/src/header.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Header = void 0;\n/**\n * @public\n */\nclass Header {\n    static of(name, value) {\n        return new Header(name, value);\n    }\n    constructor(name, value) {\n        this._name = name;\n        this._value = value;\n    }\n    get name() {\n        return this._name;\n    }\n    get value() {\n        return this._value;\n    }\n    equals(value) {\n        return (value instanceof Header &&\n            value._name === this._name &&\n            value._value === this._value);\n    }\n    toJSON() {\n        return {\n            name: this._name,\n            value: this._value,\n        };\n    }\n    toEARL() {\n        return {\n            \"@context\": {\n                http: \"http://www.w3.org/2011/http#\",\n            },\n            \"@type\": \"http:MessageHeader\",\n            \"http:fieldName\": this._name,\n            \"http:fieldValue\": this._value,\n        };\n    }\n    toString() {\n        return `${this._name}: ${this._value}`;\n    }\n}\nexports.Header = Header;\n/**\n * @public\n */\n(function (Header) {\n    function from(json) {\n        return Header.of(json.name, json.value);\n    }\n    Header.from = from;\n    function isHeader(value) {\n        return value instanceof Header;\n    }\n    Header.isHeader = isHeader;\n})(Header || (exports.Header = Header = {}));\n//# sourceMappingURL=header.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-http/src/header.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-http/src/headers.js":
/*!************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-http/src/headers.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Headers = void 0;\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_map_1 = __webpack_require__(/*! @siteimprove/alfa-map */ \"./node_modules/@siteimprove/alfa-map/src/index.js\");\nconst header_1 = __webpack_require__(/*! ./header */ \"./node_modules/@siteimprove/alfa-http/src/header.js\");\n/**\n * @public\n */\nclass Headers {\n    /**\n     * @remarks\n     * If the iterable contains headers with duplicate names, the last header with\n     * a given name will take precedence.\n     */\n    static of(headers) {\n        return new Headers(alfa_map_1.Map.from(alfa_iterable_1.Iterable.map(headers, (header) => [header.name, header])));\n    }\n    static empty() {\n        return this._empty;\n    }\n    constructor(headers) {\n        this._headers = headers;\n    }\n    get(name) {\n        return this._headers.get(name);\n    }\n    has(name) {\n        return this._headers.has(name);\n    }\n    add(header) {\n        return new Headers(this._headers.set(header.name, header));\n    }\n    delete(name) {\n        return new Headers(this._headers.delete(name));\n    }\n    *[Symbol.iterator]() {\n        yield* this._headers.values();\n    }\n    toArray() {\n        return [...this];\n    }\n    toJSON() {\n        return this.toArray().map((header) => header.toJSON());\n    }\n    toEARL() {\n        return {\n            \"@context\": {\n                http: \"http://www.w3.org/2011/http#\",\n            },\n            \"@list\": this.toArray().map((header) => header.toEARL()),\n        };\n    }\n    toString() {\n        return this.toArray()\n            .map((header) => header.toString())\n            .join(\"\\n\");\n    }\n}\nexports.Headers = Headers;\nHeaders._empty = new Headers(alfa_map_1.Map.empty());\n/**\n * @public\n */\n(function (Headers) {\n    function from(json) {\n        return Headers.of(json.map((header) => header_1.Header.from(header)));\n    }\n    Headers.from = from;\n    function isHeaders(value) {\n        return value instanceof Headers;\n    }\n    Headers.isHeaders = isHeaders;\n})(Headers || (exports.Headers = Headers = {}));\n//# sourceMappingURL=headers.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-http/src/headers.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-http/src/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-http/src/index.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./body */ \"./node_modules/@siteimprove/alfa-http/src/body.js\"), exports);\n__exportStar(__webpack_require__(/*! ./cookie */ \"./node_modules/@siteimprove/alfa-http/src/cookie.js\"), exports);\n__exportStar(__webpack_require__(/*! ./cookies */ \"./node_modules/@siteimprove/alfa-http/src/cookies.js\"), exports);\n__exportStar(__webpack_require__(/*! ./header */ \"./node_modules/@siteimprove/alfa-http/src/header.js\"), exports);\n__exportStar(__webpack_require__(/*! ./headers */ \"./node_modules/@siteimprove/alfa-http/src/headers.js\"), exports);\n__exportStar(__webpack_require__(/*! ./request */ \"./node_modules/@siteimprove/alfa-http/src/request.js\"), exports);\n__exportStar(__webpack_require__(/*! ./response */ \"./node_modules/@siteimprove/alfa-http/src/response.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-http/src/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-http/src/request.js":
/*!************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-http/src/request.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Request = void 0;\nconst alfa_encoding_1 = __webpack_require__(/*! @siteimprove/alfa-encoding */ \"./node_modules/@siteimprove/alfa-encoding/src/index.js\");\nconst alfa_url_1 = __webpack_require__(/*! @siteimprove/alfa-url */ \"./node_modules/@siteimprove/alfa-url/src/index.js\");\nconst headers_1 = __webpack_require__(/*! ./headers */ \"./node_modules/@siteimprove/alfa-http/src/headers.js\");\n/**\n * {@link https://fetch.spec.whatwg.org/#request-class}\n *\n * @public\n */\nclass Request {\n    static of(method, url, headers = headers_1.Headers.empty(), body = new ArrayBuffer(0)) {\n        return new Request(method, url, headers, body);\n    }\n    static empty() {\n        return this._empty;\n    }\n    constructor(method, url, headers, body) {\n        this._method = method;\n        this._url = url;\n        this._headers = headers;\n        this._body = body;\n    }\n    /**\n     * {@link https://fetch.spec.whatwg.org/#dom-request-method}\n     */\n    get method() {\n        return this._method;\n    }\n    /**\n     * {@link https://fetch.spec.whatwg.org/#dom-request-url}\n     */\n    get url() {\n        return this._url;\n    }\n    /**\n     * {@link https://fetch.spec.whatwg.org/#dom-request-headers}\n     */\n    get headers() {\n        return this._headers;\n    }\n    /**\n     * {@link https://fetch.spec.whatwg.org/#dom-body-body}\n     */\n    get body() {\n        return this._body;\n    }\n    toJSON() {\n        return {\n            method: this._method,\n            url: this._url.toString(),\n            headers: this._headers.toJSON(),\n            body: alfa_encoding_1.Decoder.decode(new Uint8Array(this._body)),\n        };\n    }\n    toEARL() {\n        return {\n            \"@context\": {\n                http: \"http://www.w3.org/2011/http#\",\n            },\n            \"@type\": [\"http:Message\", \"http:Request\"],\n            \"http:methodName\": this._method,\n            \"http:requestURI\": this._url.toString(),\n            \"http:headers\": this._headers.toEARL(),\n            \"http:body\": {\n                \"@context\": {\n                    cnt: \"http://www.w3.org/2011/content#\",\n                },\n                \"@type\": [\"cnt:Content\", \"cnt:ContentAsText\"],\n                \"cnt:characterEncoding\": \"utf-8\",\n                \"cnt:chars\": alfa_encoding_1.Decoder.decode(new Uint8Array(this._body)),\n            },\n        };\n    }\n    toString() {\n        let request = `${this._method} ${this._url} HTTP/1.1`;\n        request += \"\\n\" + this._headers.toString();\n        request += \"\\n\";\n        request += alfa_encoding_1.Decoder.decode(new Uint8Array(this._body));\n        return request;\n    }\n}\nexports.Request = Request;\nRequest._empty = Request.of(\"GET\", alfa_url_1.URL.blank());\n/**\n * @public\n */\n(function (Request) {\n    function from(json) {\n        return alfa_url_1.URL.parse(json.url).map((url) => Request.of(json.method, url, headers_1.Headers.from(json.headers), alfa_encoding_1.Encoder.encode(json.body)));\n    }\n    Request.from = from;\n    function isRequest(value) {\n        return value instanceof Request;\n    }\n    Request.isRequest = isRequest;\n})(Request || (exports.Request = Request = {}));\n//# sourceMappingURL=request.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-http/src/request.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-http/src/response.js":
/*!*************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-http/src/response.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Response = void 0;\nconst alfa_encoding_1 = __webpack_require__(/*! @siteimprove/alfa-encoding */ \"./node_modules/@siteimprove/alfa-encoding/src/index.js\");\nconst alfa_url_1 = __webpack_require__(/*! @siteimprove/alfa-url */ \"./node_modules/@siteimprove/alfa-url/src/index.js\");\nconst headers_1 = __webpack_require__(/*! ./headers */ \"./node_modules/@siteimprove/alfa-http/src/headers.js\");\n/**\n * {@link https://fetch.spec.whatwg.org/#response-class}\n *\n * @public\n */\nclass Response {\n    static of(url, status, headers = headers_1.Headers.empty(), body = new ArrayBuffer(0)) {\n        return new Response(url, status, headers, body);\n    }\n    static empty() {\n        return this._empty;\n    }\n    constructor(url, status, headers, body) {\n        this._url = url;\n        this._status = status;\n        this._headers = headers;\n        this._body = body;\n    }\n    /**\n     * {@link https://fetch.spec.whatwg.org/#dom-response-url}\n     */\n    get url() {\n        return this._url;\n    }\n    /**\n     * {@link https://fetch.spec.whatwg.org/#dom-response-status}\n     */\n    get status() {\n        return this._status;\n    }\n    /**\n     * {@link https://fetch.spec.whatwg.org/#dom-response-headers}\n     */\n    get headers() {\n        return this._headers;\n    }\n    /**\n     * {@link https://fetch.spec.whatwg.org/#dom-body-body}\n     */\n    get body() {\n        return this._body;\n    }\n    toJSON() {\n        return {\n            url: this._url.toString(),\n            status: this._status,\n            headers: this._headers.toJSON(),\n            body: alfa_encoding_1.Decoder.decode(new Uint8Array(this._body)),\n        };\n    }\n    toEARL() {\n        return {\n            \"@context\": {\n                http: \"http://www.w3.org/2011/http#\",\n            },\n            \"@type\": [\"http:Message\", \"http:Response\"],\n            \"http:statusCodeValue\": this._status,\n            \"http:headers\": this._headers.toEARL(),\n            \"http:body\": {\n                \"@context\": {\n                    cnt: \"http://www.w3.org/2011/content#\",\n                },\n                \"@type\": [\"cnt:Content\", \"cnt:ContentAsText\"],\n                \"cnt:characterEncoding\": \"utf-8\",\n                \"cnt:chars\": alfa_encoding_1.Decoder.decode(new Uint8Array(this._body)),\n            },\n        };\n    }\n    toString() {\n        let response = `HTTP/1.1 ${this._status}`;\n        response += \"\\n\" + this._headers.toString();\n        response += \"\\n\";\n        response += alfa_encoding_1.Decoder.decode(new Uint8Array(this._body));\n        return response;\n    }\n}\nexports.Response = Response;\nResponse._empty = Response.of(alfa_url_1.URL.blank(), 200);\n/**\n * @public\n */\n(function (Response) {\n    function from(json) {\n        return alfa_url_1.URL.parse(json.url).map((url) => Response.of(url, json.status, headers_1.Headers.from(json.headers), alfa_encoding_1.Encoder.encode(json.body)));\n    }\n    Response.from = from;\n    function isResponse(value) {\n        return value instanceof Response;\n    }\n    Response.isResponse = isResponse;\n})(Response || (exports.Response = Response = {}));\n//# sourceMappingURL=response.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-http/src/response.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-iana/src/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-iana/src/index.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./language */ \"./node_modules/@siteimprove/alfa-iana/src/language.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-iana/src/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-iana/src/language.js":
/*!*************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-iana/src/language.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Language = void 0;\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_slice_1 = __webpack_require__(/*! @siteimprove/alfa-slice */ \"./node_modules/@siteimprove/alfa-slice/src/index.js\");\nconst data_1 = __webpack_require__(/*! ./language/data */ \"./node_modules/@siteimprove/alfa-iana/src/language/data.js\");\n/**\n * @public\n */\nclass Language {\n    static of(primary, extended = alfa_option_1.None, script = alfa_option_1.None, region = alfa_option_1.None, variants = []) {\n        return new Language(primary, extended, script, region, variants);\n    }\n    constructor(primary, extended, script, region, variants) {\n        this._primary = primary;\n        this._extended = extended;\n        this._script = script;\n        this._region = region;\n        this._variants = variants;\n    }\n    get primary() {\n        return this._primary;\n    }\n    get extended() {\n        return this._extended;\n    }\n    get script() {\n        return this._script;\n    }\n    get region() {\n        return this._region;\n    }\n    get variants() {\n        return this._variants;\n    }\n    equals(value) {\n        return (value instanceof Language &&\n            value._primary.equals(this._primary) &&\n            value._extended.equals(this._extended) &&\n            value._script.equals(this._script) &&\n            value._region.equals(this._region) &&\n            value._variants.length === this._variants.length &&\n            value._variants.every((variant, i) => variant.equals(this._variants[i])));\n    }\n    toJSON() {\n        return {\n            type: \"language\",\n            primary: this._primary.toJSON(),\n            extended: this._extended.map((extended) => extended.toJSON()).getOr(null),\n            script: this._script.map((script) => script.toJSON()).getOr(null),\n            region: this._region.map((region) => region.toJSON()).getOr(null),\n            variants: this._variants.map((variant) => variant.toJSON()),\n        };\n    }\n    toString() {\n        return [\n            this._primary,\n            ...this._extended,\n            ...this._script,\n            ...this._region,\n            ...this._variants,\n        ].join(\"-\");\n    }\n}\nexports.Language = Language;\n/**\n * @public\n */\n(function (Language) {\n    /**\n     * {@link https://tools.ietf.org/html/bcp47#section-3.1.2}\n     */\n    class Subtag {\n        constructor(name) {\n            this._name = name;\n        }\n        /**\n         * {@link https://tools.ietf.org/html/bcp47#section-3.1.4}\n         */\n        get name() {\n            return this._name;\n        }\n        toString() {\n            return this._name;\n        }\n    }\n    Language.Subtag = Subtag;\n    /**\n     * {@link https://tools.ietf.org/html/bcp47#section-2.2.1}\n     */\n    class Primary extends Subtag {\n        static of(name) {\n            return new Primary(name);\n        }\n        constructor(name) {\n            super(name);\n        }\n        get type() {\n            return \"primary\";\n        }\n        /**\n         * {@link https://tools.ietf.org/html/bcp47#section-3.1.11}\n         */\n        get scope() {\n            return alfa_option_1.Option.from(data_1.Languages.primary[this._name].scope);\n        }\n        equals(value) {\n            return value instanceof Primary && value._name === this._name;\n        }\n        toJSON() {\n            return {\n                type: \"primary\",\n                name: this._name,\n                scope: this.scope.getOr(null),\n            };\n        }\n    }\n    Language.Primary = Primary;\n    (function (Primary) {\n        function isPrimary(value) {\n            return value instanceof Primary;\n        }\n        Primary.isPrimary = isPrimary;\n        function isName(name) {\n            return name in data_1.Languages.primary;\n        }\n        Primary.isName = isName;\n    })(Primary = Language.Primary || (Language.Primary = {}));\n    Language.primary = Primary.of, Language.isPrimary = Primary.isPrimary, Language.isPrimaryName = Primary.isName;\n    /**\n     * {@link https://tools.ietf.org/html/bcp47#section-2.2.2}\n     */\n    class Extended extends Subtag {\n        static of(name) {\n            return new Extended(name);\n        }\n        constructor(name) {\n            super(name);\n        }\n        get type() {\n            return \"extended\";\n        }\n        /**\n         * {@link https://tools.ietf.org/html/bcp47#section-3.1.8}\n         */\n        get prefix() {\n            return data_1.Languages.extended[this._name].prefix;\n        }\n        equals(value) {\n            return value instanceof Extended && value._name === this._name;\n        }\n        toJSON() {\n            return {\n                type: \"extended\",\n                name: this._name,\n                prefix: this.prefix,\n            };\n        }\n    }\n    Language.Extended = Extended;\n    (function (Extended) {\n        function isExtended(value) {\n            return value instanceof Extended;\n        }\n        Extended.isExtended = isExtended;\n        function isName(name) {\n            return name in data_1.Languages.extended;\n        }\n        Extended.isName = isName;\n    })(Extended = Language.Extended || (Language.Extended = {}));\n    Language.extended = Extended.of, Language.isExtended = Extended.isExtended, Language.isExtendedName = Extended.isName;\n    /**\n     * {@link https://tools.ietf.org/html/bcp47#section-2.2.3}\n     */\n    class Script extends Subtag {\n        static of(name) {\n            return new Script(name);\n        }\n        constructor(name) {\n            super(name);\n        }\n        get type() {\n            return \"script\";\n        }\n        equals(value) {\n            return value instanceof Script && value._name === this._name;\n        }\n        toJSON() {\n            return {\n                type: \"script\",\n                name: this._name,\n            };\n        }\n    }\n    Language.Script = Script;\n    (function (Script) {\n        function isScript(value) {\n            return value instanceof Script;\n        }\n        Script.isScript = isScript;\n        function isName(name) {\n            return name in data_1.Languages.script;\n        }\n        Script.isName = isName;\n    })(Script = Language.Script || (Language.Script = {}));\n    Language.script = Script.of, Language.isScript = Script.isScript, Language.isScriptName = Script.isName;\n    /**\n     * {@link https://tools.ietf.org/html/bcp47#section-2.2.4}\n     */\n    class Region extends Subtag {\n        static of(name) {\n            return new Region(name);\n        }\n        constructor(name) {\n            super(name);\n        }\n        get type() {\n            return \"region\";\n        }\n        equals(value) {\n            return value instanceof Region && value._name === this._name;\n        }\n        toJSON() {\n            return {\n                type: \"region\",\n                name: this._name,\n            };\n        }\n    }\n    Language.Region = Region;\n    (function (Region) {\n        function isRegion(value) {\n            return value instanceof Region;\n        }\n        Region.isRegion = isRegion;\n        function isName(name) {\n            return name in data_1.Languages.region;\n        }\n        Region.isName = isName;\n    })(Region = Language.Region || (Language.Region = {}));\n    Language.region = Region.of, Language.isRegion = Region.isRegion, Language.isRegionName = Region.isName;\n    /**\n     * {@link https://tools.ietf.org/html/bcp47#section-2.2.5}\n     */\n    class Variant extends Subtag {\n        static of(name) {\n            return new Variant(name);\n        }\n        constructor(name) {\n            super(name);\n        }\n        get type() {\n            return \"variant\";\n        }\n        /**\n         * {@link https://tools.ietf.org/html/bcp47#section-3.1.8}\n         */\n        get prefixes() {\n            return data_1.Languages.variant[this._name].prefixes;\n        }\n        equals(value) {\n            return value instanceof Variant && value._name === this._name;\n        }\n        toJSON() {\n            return {\n                type: \"variant\",\n                name: this._name,\n                prefixes: [...this.prefixes],\n            };\n        }\n    }\n    Language.Variant = Variant;\n    (function (Variant) {\n        function isVariant(value) {\n            return value instanceof Variant;\n        }\n        Variant.isVariant = isVariant;\n        function isName(name) {\n            return name in data_1.Languages.variant;\n        }\n        Variant.isName = isName;\n    })(Variant = Language.Variant || (Language.Variant = {}));\n    Language.variant = Variant.of, Language.isVariant = Variant.isVariant, Language.isVariantName = Variant.isName;\n})(Language || (exports.Language = Language = {}));\n/**\n * @public\n */\n(function (Language) {\n    function parse(input) {\n        let parts = alfa_slice_1.Slice.of(input.toLowerCase().split(\"-\"));\n        return parts\n            .get(0)\n            .map((name) => {\n            if (!Language.isPrimaryName(name)) {\n                return alfa_result_1.Err.of(`${name} is not a valid primary language`);\n            }\n            const primary = Language.Primary.of(name);\n            parts = parts.slice(1);\n            const extended = parts.get(0).filter(Language.isExtendedName).map(Language.Extended.of);\n            if (extended.isSome()) {\n                parts = parts.slice(1);\n            }\n            const script = parts.get(0).filter(Language.isScriptName).map(Language.Script.of);\n            if (script.isSome()) {\n                parts = parts.slice(1);\n            }\n            const region = parts.get(0).filter(Language.isRegionName).map(Language.Region.of);\n            if (region.isSome()) {\n                parts = parts.slice(1);\n            }\n            const variants = [];\n            while (true) {\n                const variant = parts.get(0).filter(Language.isVariantName).map(Language.Variant.of);\n                if (variant.isSome()) {\n                    parts = parts.slice(1);\n                    variants.push(variant.get());\n                }\n                else {\n                    break;\n                }\n            }\n            return alfa_result_1.Result.of(Language.of(primary, extended, script, region, variants));\n        })\n            .getOrElse(() => alfa_result_1.Err.of(`Expected a primary language name`));\n    }\n    Language.parse = parse;\n})(Language || (exports.Language = Language = {}));\n//# sourceMappingURL=language.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-iana/src/language.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-iana/src/language/data.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-iana/src/language/data.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// This file has been automatically generated based on the IANA Language Subtag\n// Registry. Do therefore not modify it directly! If you wish to make changes,\n// do so in `scripts/languages.js` and run `yarn generate` to rebuild this file.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Languages = void 0;\n/**\n * @internal\n */\nexports.Languages = {\n    primary: {\n        aa: { scope: null },\n        ab: { scope: null },\n        ae: { scope: null },\n        af: { scope: null },\n        ak: { scope: \"macrolanguage\" },\n        am: { scope: null },\n        an: { scope: null },\n        ar: { scope: \"macrolanguage\" },\n        as: { scope: null },\n        av: { scope: null },\n        ay: { scope: \"macrolanguage\" },\n        az: { scope: \"macrolanguage\" },\n        ba: { scope: null },\n        be: { scope: null },\n        bg: { scope: null },\n        bh: { scope: \"collection\" },\n        bi: { scope: null },\n        bm: { scope: null },\n        bn: { scope: null },\n        bo: { scope: null },\n        br: { scope: null },\n        bs: { scope: null },\n        ca: { scope: null },\n        ce: { scope: null },\n        ch: { scope: null },\n        co: { scope: null },\n        cr: { scope: \"macrolanguage\" },\n        cs: { scope: null },\n        cu: { scope: null },\n        cv: { scope: null },\n        cy: { scope: null },\n        da: { scope: null },\n        de: { scope: null },\n        dv: { scope: null },\n        dz: { scope: null },\n        ee: { scope: null },\n        el: { scope: null },\n        en: { scope: null },\n        eo: { scope: null },\n        es: { scope: null },\n        et: { scope: \"macrolanguage\" },\n        eu: { scope: null },\n        fa: { scope: \"macrolanguage\" },\n        ff: { scope: \"macrolanguage\" },\n        fi: { scope: null },\n        fj: { scope: null },\n        fo: { scope: null },\n        fr: { scope: null },\n        fy: { scope: null },\n        ga: { scope: null },\n        gd: { scope: null },\n        gl: { scope: null },\n        gn: { scope: \"macrolanguage\" },\n        gu: { scope: null },\n        gv: { scope: null },\n        ha: { scope: null },\n        he: { scope: null },\n        hi: { scope: null },\n        ho: { scope: null },\n        hr: { scope: null },\n        ht: { scope: null },\n        hu: { scope: null },\n        hy: { scope: null },\n        hz: { scope: null },\n        ia: { scope: null },\n        id: { scope: null },\n        ie: { scope: null },\n        ig: { scope: null },\n        ii: { scope: null },\n        ik: { scope: \"macrolanguage\" },\n        in: { scope: null },\n        io: { scope: null },\n        is: { scope: null },\n        it: { scope: null },\n        iu: { scope: \"macrolanguage\" },\n        iw: { scope: null },\n        ja: { scope: null },\n        ji: { scope: null },\n        jv: { scope: null },\n        jw: { scope: null },\n        ka: { scope: null },\n        kg: { scope: \"macrolanguage\" },\n        ki: { scope: null },\n        kj: { scope: null },\n        kk: { scope: null },\n        kl: { scope: null },\n        km: { scope: null },\n        kn: { scope: null },\n        ko: { scope: null },\n        kr: { scope: \"macrolanguage\" },\n        ks: { scope: null },\n        ku: { scope: \"macrolanguage\" },\n        kv: { scope: \"macrolanguage\" },\n        kw: { scope: null },\n        ky: { scope: null },\n        la: { scope: null },\n        lb: { scope: null },\n        lg: { scope: null },\n        li: { scope: null },\n        ln: { scope: null },\n        lo: { scope: null },\n        lt: { scope: null },\n        lu: { scope: null },\n        lv: { scope: \"macrolanguage\" },\n        mg: { scope: \"macrolanguage\" },\n        mh: { scope: null },\n        mi: { scope: null },\n        mk: { scope: null },\n        ml: { scope: null },\n        mn: { scope: \"macrolanguage\" },\n        mo: { scope: null },\n        mr: { scope: null },\n        ms: { scope: \"macrolanguage\" },\n        mt: { scope: null },\n        my: { scope: null },\n        na: { scope: null },\n        nb: { scope: null },\n        nd: { scope: null },\n        ne: { scope: \"macrolanguage\" },\n        ng: { scope: null },\n        nl: { scope: null },\n        nn: { scope: null },\n        no: { scope: \"macrolanguage\" },\n        nr: { scope: null },\n        nv: { scope: null },\n        ny: { scope: null },\n        oc: { scope: null },\n        oj: { scope: \"macrolanguage\" },\n        om: { scope: \"macrolanguage\" },\n        or: { scope: \"macrolanguage\" },\n        os: { scope: null },\n        pa: { scope: null },\n        pi: { scope: null },\n        pl: { scope: null },\n        ps: { scope: \"macrolanguage\" },\n        pt: { scope: null },\n        qu: { scope: \"macrolanguage\" },\n        rm: { scope: null },\n        rn: { scope: null },\n        ro: { scope: null },\n        ru: { scope: null },\n        rw: { scope: null },\n        sa: { scope: null },\n        sc: { scope: \"macrolanguage\" },\n        sd: { scope: null },\n        se: { scope: null },\n        sg: { scope: null },\n        sh: { scope: \"macrolanguage\" },\n        si: { scope: null },\n        sk: { scope: null },\n        sl: { scope: null },\n        sm: { scope: null },\n        sn: { scope: null },\n        so: { scope: null },\n        sq: { scope: \"macrolanguage\" },\n        sr: { scope: null },\n        ss: { scope: null },\n        st: { scope: null },\n        su: { scope: null },\n        sv: { scope: null },\n        sw: { scope: \"macrolanguage\" },\n        ta: { scope: null },\n        te: { scope: null },\n        tg: { scope: null },\n        th: { scope: null },\n        ti: { scope: null },\n        tk: { scope: null },\n        tl: { scope: null },\n        tn: { scope: null },\n        to: { scope: null },\n        tr: { scope: null },\n        ts: { scope: null },\n        tt: { scope: null },\n        tw: { scope: null },\n        ty: { scope: null },\n        ug: { scope: null },\n        uk: { scope: null },\n        ur: { scope: null },\n        uz: { scope: \"macrolanguage\" },\n        ve: { scope: null },\n        vi: { scope: null },\n        vo: { scope: null },\n        wa: { scope: null },\n        wo: { scope: null },\n        xh: { scope: null },\n        yi: { scope: \"macrolanguage\" },\n        yo: { scope: null },\n        za: { scope: \"macrolanguage\" },\n        zh: { scope: \"macrolanguage\" },\n        zu: { scope: null },\n        aaa: { scope: null },\n        aab: { scope: null },\n        aac: { scope: null },\n        aad: { scope: null },\n        aae: { scope: null },\n        aaf: { scope: null },\n        aag: { scope: null },\n        aah: { scope: null },\n        aai: { scope: null },\n        aak: { scope: null },\n        aal: { scope: null },\n        aam: { scope: null },\n        aan: { scope: null },\n        aao: { scope: null },\n        aap: { scope: null },\n        aaq: { scope: null },\n        aas: { scope: null },\n        aat: { scope: null },\n        aau: { scope: null },\n        aav: { scope: \"collection\" },\n        aaw: { scope: null },\n        aax: { scope: null },\n        aaz: { scope: null },\n        aba: { scope: null },\n        abb: { scope: null },\n        abc: { scope: null },\n        abd: { scope: null },\n        abe: { scope: null },\n        abf: { scope: null },\n        abg: { scope: null },\n        abh: { scope: null },\n        abi: { scope: null },\n        abj: { scope: null },\n        abl: { scope: null },\n        abm: { scope: null },\n        abn: { scope: null },\n        abo: { scope: null },\n        abp: { scope: null },\n        abq: { scope: null },\n        abr: { scope: null },\n        abs: { scope: null },\n        abt: { scope: null },\n        abu: { scope: null },\n        abv: { scope: null },\n        abw: { scope: null },\n        abx: { scope: null },\n        aby: { scope: null },\n        abz: { scope: null },\n        aca: { scope: null },\n        acb: { scope: null },\n        acd: { scope: null },\n        ace: { scope: null },\n        acf: { scope: null },\n        ach: { scope: null },\n        aci: { scope: null },\n        ack: { scope: null },\n        acl: { scope: null },\n        acm: { scope: null },\n        acn: { scope: null },\n        acp: { scope: null },\n        acq: { scope: null },\n        acr: { scope: null },\n        acs: { scope: null },\n        act: { scope: null },\n        acu: { scope: null },\n        acv: { scope: null },\n        acw: { scope: null },\n        acx: { scope: null },\n        acy: { scope: null },\n        acz: { scope: null },\n        ada: { scope: null },\n        adb: { scope: null },\n        add: { scope: null },\n        ade: { scope: null },\n        adf: { scope: null },\n        adg: { scope: null },\n        adh: { scope: null },\n        adi: { scope: null },\n        adj: { scope: null },\n        adl: { scope: null },\n        adn: { scope: null },\n        ado: { scope: null },\n        adp: { scope: null },\n        adq: { scope: null },\n        adr: { scope: null },\n        ads: { scope: null },\n        adt: { scope: null },\n        adu: { scope: null },\n        adw: { scope: null },\n        adx: { scope: null },\n        ady: { scope: null },\n        adz: { scope: null },\n        aea: { scope: null },\n        aeb: { scope: null },\n        aec: { scope: null },\n        aed: { scope: null },\n        aee: { scope: null },\n        aek: { scope: null },\n        ael: { scope: null },\n        aem: { scope: null },\n        aen: { scope: null },\n        aeq: { scope: null },\n        aer: { scope: null },\n        aes: { scope: null },\n        aeu: { scope: null },\n        aew: { scope: null },\n        aey: { scope: null },\n        aez: { scope: null },\n        afa: { scope: \"collection\" },\n        afb: { scope: null },\n        afd: { scope: null },\n        afe: { scope: null },\n        afg: { scope: null },\n        afh: { scope: null },\n        afi: { scope: null },\n        afk: { scope: null },\n        afn: { scope: null },\n        afo: { scope: null },\n        afp: { scope: null },\n        afs: { scope: null },\n        aft: { scope: null },\n        afu: { scope: null },\n        afz: { scope: null },\n        aga: { scope: null },\n        agb: { scope: null },\n        agc: { scope: null },\n        agd: { scope: null },\n        age: { scope: null },\n        agf: { scope: null },\n        agg: { scope: null },\n        agh: { scope: null },\n        agi: { scope: null },\n        agj: { scope: null },\n        agk: { scope: null },\n        agl: { scope: null },\n        agm: { scope: null },\n        agn: { scope: null },\n        ago: { scope: null },\n        agp: { scope: null },\n        agq: { scope: null },\n        agr: { scope: null },\n        ags: { scope: null },\n        agt: { scope: null },\n        agu: { scope: null },\n        agv: { scope: null },\n        agw: { scope: null },\n        agx: { scope: null },\n        agy: { scope: null },\n        agz: { scope: null },\n        aha: { scope: null },\n        ahb: { scope: null },\n        ahg: { scope: null },\n        ahh: { scope: null },\n        ahi: { scope: null },\n        ahk: { scope: null },\n        ahl: { scope: null },\n        ahm: { scope: null },\n        ahn: { scope: null },\n        aho: { scope: null },\n        ahp: { scope: null },\n        ahr: { scope: null },\n        ahs: { scope: null },\n        aht: { scope: null },\n        aia: { scope: null },\n        aib: { scope: null },\n        aic: { scope: null },\n        aid: { scope: null },\n        aie: { scope: null },\n        aif: { scope: null },\n        aig: { scope: null },\n        aih: { scope: null },\n        aii: { scope: null },\n        aij: { scope: null },\n        aik: { scope: null },\n        ail: { scope: null },\n        aim: { scope: null },\n        ain: { scope: null },\n        aio: { scope: null },\n        aip: { scope: null },\n        aiq: { scope: null },\n        air: { scope: null },\n        ais: { scope: null },\n        ait: { scope: null },\n        aiw: { scope: null },\n        aix: { scope: null },\n        aiy: { scope: null },\n        aja: { scope: null },\n        ajg: { scope: null },\n        aji: { scope: null },\n        ajn: { scope: null },\n        ajp: { scope: null },\n        ajt: { scope: null },\n        aju: { scope: null },\n        ajw: { scope: null },\n        ajz: { scope: null },\n        akb: { scope: null },\n        akc: { scope: null },\n        akd: { scope: null },\n        ake: { scope: null },\n        akf: { scope: null },\n        akg: { scope: null },\n        akh: { scope: null },\n        aki: { scope: null },\n        akj: { scope: null },\n        akk: { scope: null },\n        akl: { scope: null },\n        akm: { scope: null },\n        ako: { scope: null },\n        akp: { scope: null },\n        akq: { scope: null },\n        akr: { scope: null },\n        aks: { scope: null },\n        akt: { scope: null },\n        aku: { scope: null },\n        akv: { scope: null },\n        akw: { scope: null },\n        akx: { scope: null },\n        aky: { scope: null },\n        akz: { scope: null },\n        ala: { scope: null },\n        alc: { scope: null },\n        ald: { scope: null },\n        ale: { scope: null },\n        alf: { scope: null },\n        alg: { scope: \"collection\" },\n        alh: { scope: null },\n        ali: { scope: null },\n        alj: { scope: null },\n        alk: { scope: null },\n        all: { scope: null },\n        alm: { scope: null },\n        aln: { scope: null },\n        alo: { scope: null },\n        alp: { scope: null },\n        alq: { scope: null },\n        alr: { scope: null },\n        als: { scope: null },\n        alt: { scope: null },\n        alu: { scope: null },\n        alv: { scope: \"collection\" },\n        alw: { scope: null },\n        alx: { scope: null },\n        aly: { scope: null },\n        alz: { scope: null },\n        ama: { scope: null },\n        amb: { scope: null },\n        amc: { scope: null },\n        ame: { scope: null },\n        amf: { scope: null },\n        amg: { scope: null },\n        ami: { scope: null },\n        amj: { scope: null },\n        amk: { scope: null },\n        aml: { scope: null },\n        amm: { scope: null },\n        amn: { scope: null },\n        amo: { scope: null },\n        amp: { scope: null },\n        amq: { scope: null },\n        amr: { scope: null },\n        ams: { scope: null },\n        amt: { scope: null },\n        amu: { scope: null },\n        amv: { scope: null },\n        amw: { scope: null },\n        amx: { scope: null },\n        amy: { scope: null },\n        amz: { scope: null },\n        ana: { scope: null },\n        anb: { scope: null },\n        anc: { scope: null },\n        and: { scope: null },\n        ane: { scope: null },\n        anf: { scope: null },\n        ang: { scope: null },\n        anh: { scope: null },\n        ani: { scope: null },\n        anj: { scope: null },\n        ank: { scope: null },\n        anl: { scope: null },\n        anm: { scope: null },\n        ann: { scope: null },\n        ano: { scope: null },\n        anp: { scope: null },\n        anq: { scope: null },\n        anr: { scope: null },\n        ans: { scope: null },\n        ant: { scope: null },\n        anu: { scope: null },\n        anv: { scope: null },\n        anw: { scope: null },\n        anx: { scope: null },\n        any: { scope: null },\n        anz: { scope: null },\n        aoa: { scope: null },\n        aob: { scope: null },\n        aoc: { scope: null },\n        aod: { scope: null },\n        aoe: { scope: null },\n        aof: { scope: null },\n        aog: { scope: null },\n        aoh: { scope: null },\n        aoi: { scope: null },\n        aoj: { scope: null },\n        aok: { scope: null },\n        aol: { scope: null },\n        aom: { scope: null },\n        aon: { scope: null },\n        aor: { scope: null },\n        aos: { scope: null },\n        aot: { scope: null },\n        aou: { scope: null },\n        aox: { scope: null },\n        aoz: { scope: null },\n        apa: { scope: \"collection\" },\n        apb: { scope: null },\n        apc: { scope: null },\n        apd: { scope: null },\n        ape: { scope: null },\n        apf: { scope: null },\n        apg: { scope: null },\n        aph: { scope: null },\n        api: { scope: null },\n        apj: { scope: null },\n        apk: { scope: null },\n        apl: { scope: null },\n        apm: { scope: null },\n        apn: { scope: null },\n        apo: { scope: null },\n        app: { scope: null },\n        apq: { scope: null },\n        apr: { scope: null },\n        aps: { scope: null },\n        apt: { scope: null },\n        apu: { scope: null },\n        apv: { scope: null },\n        apw: { scope: null },\n        apx: { scope: null },\n        apy: { scope: null },\n        apz: { scope: null },\n        aqa: { scope: \"collection\" },\n        aqc: { scope: null },\n        aqd: { scope: null },\n        aqg: { scope: null },\n        aqk: { scope: null },\n        aql: { scope: \"collection\" },\n        aqm: { scope: null },\n        aqn: { scope: null },\n        aqp: { scope: null },\n        aqr: { scope: null },\n        aqt: { scope: null },\n        aqz: { scope: null },\n        arb: { scope: null },\n        arc: { scope: null },\n        ard: { scope: null },\n        are: { scope: null },\n        arh: { scope: null },\n        ari: { scope: null },\n        arj: { scope: null },\n        ark: { scope: null },\n        arl: { scope: null },\n        arn: { scope: null },\n        aro: { scope: null },\n        arp: { scope: null },\n        arq: { scope: null },\n        arr: { scope: null },\n        ars: { scope: null },\n        art: { scope: \"collection\" },\n        aru: { scope: null },\n        arv: { scope: null },\n        arw: { scope: null },\n        arx: { scope: null },\n        ary: { scope: null },\n        arz: { scope: null },\n        asa: { scope: null },\n        asb: { scope: null },\n        asc: { scope: null },\n        asd: { scope: null },\n        ase: { scope: null },\n        asf: { scope: null },\n        asg: { scope: null },\n        ash: { scope: null },\n        asi: { scope: null },\n        asj: { scope: null },\n        ask: { scope: null },\n        asl: { scope: null },\n        asn: { scope: null },\n        aso: { scope: null },\n        asp: { scope: null },\n        asq: { scope: null },\n        asr: { scope: null },\n        ass: { scope: null },\n        ast: { scope: null },\n        asu: { scope: null },\n        asv: { scope: null },\n        asw: { scope: null },\n        asx: { scope: null },\n        asy: { scope: null },\n        asz: { scope: null },\n        ata: { scope: null },\n        atb: { scope: null },\n        atc: { scope: null },\n        atd: { scope: null },\n        ate: { scope: null },\n        atg: { scope: null },\n        ath: { scope: \"collection\" },\n        ati: { scope: null },\n        atj: { scope: null },\n        atk: { scope: null },\n        atl: { scope: null },\n        atm: { scope: null },\n        atn: { scope: null },\n        ato: { scope: null },\n        atp: { scope: null },\n        atq: { scope: null },\n        atr: { scope: null },\n        ats: { scope: null },\n        att: { scope: null },\n        atu: { scope: null },\n        atv: { scope: null },\n        atw: { scope: null },\n        atx: { scope: null },\n        aty: { scope: null },\n        atz: { scope: null },\n        aua: { scope: null },\n        aub: { scope: null },\n        auc: { scope: null },\n        aud: { scope: null },\n        aue: { scope: null },\n        auf: { scope: \"collection\" },\n        aug: { scope: null },\n        auh: { scope: null },\n        aui: { scope: null },\n        auj: { scope: null },\n        auk: { scope: null },\n        aul: { scope: null },\n        aum: { scope: null },\n        aun: { scope: null },\n        auo: { scope: null },\n        aup: { scope: null },\n        auq: { scope: null },\n        aur: { scope: null },\n        aus: { scope: \"collection\" },\n        aut: { scope: null },\n        auu: { scope: null },\n        auw: { scope: null },\n        aux: { scope: null },\n        auy: { scope: null },\n        auz: { scope: null },\n        avb: { scope: null },\n        avd: { scope: null },\n        avi: { scope: null },\n        avk: { scope: null },\n        avl: { scope: null },\n        avm: { scope: null },\n        avn: { scope: null },\n        avo: { scope: null },\n        avs: { scope: null },\n        avt: { scope: null },\n        avu: { scope: null },\n        avv: { scope: null },\n        awa: { scope: null },\n        awb: { scope: null },\n        awc: { scope: null },\n        awd: { scope: \"collection\" },\n        awe: { scope: null },\n        awg: { scope: null },\n        awh: { scope: null },\n        awi: { scope: null },\n        awk: { scope: null },\n        awm: { scope: null },\n        awn: { scope: null },\n        awo: { scope: null },\n        awr: { scope: null },\n        aws: { scope: null },\n        awt: { scope: null },\n        awu: { scope: null },\n        awv: { scope: null },\n        aww: { scope: null },\n        awx: { scope: null },\n        awy: { scope: null },\n        axb: { scope: null },\n        axe: { scope: null },\n        axg: { scope: null },\n        axk: { scope: null },\n        axl: { scope: null },\n        axm: { scope: null },\n        axx: { scope: null },\n        aya: { scope: null },\n        ayb: { scope: null },\n        ayc: { scope: null },\n        ayd: { scope: null },\n        aye: { scope: null },\n        ayg: { scope: null },\n        ayh: { scope: null },\n        ayi: { scope: null },\n        ayk: { scope: null },\n        ayl: { scope: null },\n        ayn: { scope: null },\n        ayo: { scope: null },\n        ayp: { scope: null },\n        ayq: { scope: null },\n        ayr: { scope: null },\n        ays: { scope: null },\n        ayt: { scope: null },\n        ayu: { scope: null },\n        ayx: { scope: null },\n        ayy: { scope: null },\n        ayz: { scope: null },\n        aza: { scope: null },\n        azb: { scope: null },\n        azc: { scope: \"collection\" },\n        azd: { scope: null },\n        azg: { scope: null },\n        azj: { scope: null },\n        azm: { scope: null },\n        azn: { scope: null },\n        azo: { scope: null },\n        azt: { scope: null },\n        azz: { scope: null },\n        baa: { scope: null },\n        bab: { scope: null },\n        bac: { scope: null },\n        bad: { scope: \"collection\" },\n        bae: { scope: null },\n        baf: { scope: null },\n        bag: { scope: null },\n        bah: { scope: null },\n        bai: { scope: \"collection\" },\n        baj: { scope: null },\n        bal: { scope: \"macrolanguage\" },\n        ban: { scope: null },\n        bao: { scope: null },\n        bap: { scope: null },\n        bar: { scope: null },\n        bas: { scope: null },\n        bat: { scope: \"collection\" },\n        bau: { scope: null },\n        bav: { scope: null },\n        baw: { scope: null },\n        bax: { scope: null },\n        bay: { scope: null },\n        baz: { scope: null },\n        bba: { scope: null },\n        bbb: { scope: null },\n        bbc: { scope: null },\n        bbd: { scope: null },\n        bbe: { scope: null },\n        bbf: { scope: null },\n        bbg: { scope: null },\n        bbh: { scope: null },\n        bbi: { scope: null },\n        bbj: { scope: null },\n        bbk: { scope: null },\n        bbl: { scope: null },\n        bbm: { scope: null },\n        bbn: { scope: null },\n        bbo: { scope: null },\n        bbp: { scope: null },\n        bbq: { scope: null },\n        bbr: { scope: null },\n        bbs: { scope: null },\n        bbt: { scope: null },\n        bbu: { scope: null },\n        bbv: { scope: null },\n        bbw: { scope: null },\n        bbx: { scope: null },\n        bby: { scope: null },\n        bbz: { scope: null },\n        bca: { scope: null },\n        bcb: { scope: null },\n        bcc: { scope: null },\n        bcd: { scope: null },\n        bce: { scope: null },\n        bcf: { scope: null },\n        bcg: { scope: null },\n        bch: { scope: null },\n        bci: { scope: null },\n        bcj: { scope: null },\n        bck: { scope: null },\n        bcl: { scope: null },\n        bcm: { scope: null },\n        bcn: { scope: null },\n        bco: { scope: null },\n        bcp: { scope: null },\n        bcq: { scope: null },\n        bcr: { scope: null },\n        bcs: { scope: null },\n        bct: { scope: null },\n        bcu: { scope: null },\n        bcv: { scope: null },\n        bcw: { scope: null },\n        bcy: { scope: null },\n        bcz: { scope: null },\n        bda: { scope: null },\n        bdb: { scope: null },\n        bdc: { scope: null },\n        bdd: { scope: null },\n        bde: { scope: null },\n        bdf: { scope: null },\n        bdg: { scope: null },\n        bdh: { scope: null },\n        bdi: { scope: null },\n        bdj: { scope: null },\n        bdk: { scope: null },\n        bdl: { scope: null },\n        bdm: { scope: null },\n        bdn: { scope: null },\n        bdo: { scope: null },\n        bdp: { scope: null },\n        bdq: { scope: null },\n        bdr: { scope: null },\n        bds: { scope: null },\n        bdt: { scope: null },\n        bdu: { scope: null },\n        bdv: { scope: null },\n        bdw: { scope: null },\n        bdx: { scope: null },\n        bdy: { scope: null },\n        bdz: { scope: null },\n        bea: { scope: null },\n        beb: { scope: null },\n        bec: { scope: null },\n        bed: { scope: null },\n        bee: { scope: null },\n        bef: { scope: null },\n        beg: { scope: null },\n        beh: { scope: null },\n        bei: { scope: null },\n        bej: { scope: null },\n        bek: { scope: null },\n        bem: { scope: null },\n        beo: { scope: null },\n        bep: { scope: null },\n        beq: { scope: null },\n        ber: { scope: \"collection\" },\n        bes: { scope: null },\n        bet: { scope: null },\n        beu: { scope: null },\n        bev: { scope: null },\n        bew: { scope: null },\n        bex: { scope: null },\n        bey: { scope: null },\n        bez: { scope: null },\n        bfa: { scope: null },\n        bfb: { scope: null },\n        bfc: { scope: null },\n        bfd: { scope: null },\n        bfe: { scope: null },\n        bff: { scope: null },\n        bfg: { scope: null },\n        bfh: { scope: null },\n        bfi: { scope: null },\n        bfj: { scope: null },\n        bfk: { scope: null },\n        bfl: { scope: null },\n        bfm: { scope: null },\n        bfn: { scope: null },\n        bfo: { scope: null },\n        bfp: { scope: null },\n        bfq: { scope: null },\n        bfr: { scope: null },\n        bfs: { scope: null },\n        bft: { scope: null },\n        bfu: { scope: null },\n        bfw: { scope: null },\n        bfx: { scope: null },\n        bfy: { scope: null },\n        bfz: { scope: null },\n        bga: { scope: null },\n        bgb: { scope: null },\n        bgc: { scope: null },\n        bgd: { scope: null },\n        bge: { scope: null },\n        bgf: { scope: null },\n        bgg: { scope: null },\n        bgi: { scope: null },\n        bgj: { scope: null },\n        bgk: { scope: null },\n        bgl: { scope: null },\n        bgm: { scope: null },\n        bgn: { scope: null },\n        bgo: { scope: null },\n        bgp: { scope: null },\n        bgq: { scope: null },\n        bgr: { scope: null },\n        bgs: { scope: null },\n        bgt: { scope: null },\n        bgu: { scope: null },\n        bgv: { scope: null },\n        bgw: { scope: null },\n        bgx: { scope: null },\n        bgy: { scope: null },\n        bgz: { scope: null },\n        bha: { scope: null },\n        bhb: { scope: null },\n        bhc: { scope: null },\n        bhd: { scope: null },\n        bhe: { scope: null },\n        bhf: { scope: null },\n        bhg: { scope: null },\n        bhh: { scope: null },\n        bhi: { scope: null },\n        bhj: { scope: null },\n        bhk: { scope: null },\n        bhl: { scope: null },\n        bhm: { scope: null },\n        bhn: { scope: null },\n        bho: { scope: null },\n        bhp: { scope: null },\n        bhq: { scope: null },\n        bhr: { scope: null },\n        bhs: { scope: null },\n        bht: { scope: null },\n        bhu: { scope: null },\n        bhv: { scope: null },\n        bhw: { scope: null },\n        bhx: { scope: null },\n        bhy: { scope: null },\n        bhz: { scope: null },\n        bia: { scope: null },\n        bib: { scope: null },\n        bic: { scope: null },\n        bid: { scope: null },\n        bie: { scope: null },\n        bif: { scope: null },\n        big: { scope: null },\n        bij: { scope: null },\n        bik: { scope: \"macrolanguage\" },\n        bil: { scope: null },\n        bim: { scope: null },\n        bin: { scope: null },\n        bio: { scope: null },\n        bip: { scope: null },\n        biq: { scope: null },\n        bir: { scope: null },\n        bit: { scope: null },\n        biu: { scope: null },\n        biv: { scope: null },\n        biw: { scope: null },\n        bix: { scope: null },\n        biy: { scope: null },\n        biz: { scope: null },\n        bja: { scope: null },\n        bjb: { scope: null },\n        bjc: { scope: null },\n        bjd: { scope: null },\n        bje: { scope: null },\n        bjf: { scope: null },\n        bjg: { scope: null },\n        bjh: { scope: null },\n        bji: { scope: null },\n        bjj: { scope: null },\n        bjk: { scope: null },\n        bjl: { scope: null },\n        bjm: { scope: null },\n        bjn: { scope: null },\n        bjo: { scope: null },\n        bjp: { scope: null },\n        bjq: { scope: null },\n        bjr: { scope: null },\n        bjs: { scope: null },\n        bjt: { scope: null },\n        bju: { scope: null },\n        bjv: { scope: null },\n        bjw: { scope: null },\n        bjx: { scope: null },\n        bjy: { scope: null },\n        bjz: { scope: null },\n        bka: { scope: null },\n        bkb: { scope: null },\n        bkc: { scope: null },\n        bkd: { scope: null },\n        bkf: { scope: null },\n        bkg: { scope: null },\n        bkh: { scope: null },\n        bki: { scope: null },\n        bkj: { scope: null },\n        bkk: { scope: null },\n        bkl: { scope: null },\n        bkm: { scope: null },\n        bkn: { scope: null },\n        bko: { scope: null },\n        bkp: { scope: null },\n        bkq: { scope: null },\n        bkr: { scope: null },\n        bks: { scope: null },\n        bkt: { scope: null },\n        bku: { scope: null },\n        bkv: { scope: null },\n        bkw: { scope: null },\n        bkx: { scope: null },\n        bky: { scope: null },\n        bkz: { scope: null },\n        bla: { scope: null },\n        blb: { scope: null },\n        blc: { scope: null },\n        bld: { scope: null },\n        ble: { scope: null },\n        blf: { scope: null },\n        blg: { scope: null },\n        blh: { scope: null },\n        bli: { scope: null },\n        blj: { scope: null },\n        blk: { scope: null },\n        bll: { scope: null },\n        blm: { scope: null },\n        bln: { scope: null },\n        blo: { scope: null },\n        blp: { scope: null },\n        blq: { scope: null },\n        blr: { scope: null },\n        bls: { scope: null },\n        blt: { scope: null },\n        blv: { scope: null },\n        blw: { scope: null },\n        blx: { scope: null },\n        bly: { scope: null },\n        blz: { scope: null },\n        bma: { scope: null },\n        bmb: { scope: null },\n        bmc: { scope: null },\n        bmd: { scope: null },\n        bme: { scope: null },\n        bmf: { scope: null },\n        bmg: { scope: null },\n        bmh: { scope: null },\n        bmi: { scope: null },\n        bmj: { scope: null },\n        bmk: { scope: null },\n        bml: { scope: null },\n        bmm: { scope: null },\n        bmn: { scope: null },\n        bmo: { scope: null },\n        bmp: { scope: null },\n        bmq: { scope: null },\n        bmr: { scope: null },\n        bms: { scope: null },\n        bmt: { scope: null },\n        bmu: { scope: null },\n        bmv: { scope: null },\n        bmw: { scope: null },\n        bmx: { scope: null },\n        bmy: { scope: null },\n        bmz: { scope: null },\n        bna: { scope: null },\n        bnb: { scope: null },\n        bnc: { scope: \"macrolanguage\" },\n        bnd: { scope: null },\n        bne: { scope: null },\n        bnf: { scope: null },\n        bng: { scope: null },\n        bni: { scope: null },\n        bnj: { scope: null },\n        bnk: { scope: null },\n        bnl: { scope: null },\n        bnm: { scope: null },\n        bnn: { scope: null },\n        bno: { scope: null },\n        bnp: { scope: null },\n        bnq: { scope: null },\n        bnr: { scope: null },\n        bns: { scope: null },\n        bnt: { scope: \"collection\" },\n        bnu: { scope: null },\n        bnv: { scope: null },\n        bnw: { scope: null },\n        bnx: { scope: null },\n        bny: { scope: null },\n        bnz: { scope: null },\n        boa: { scope: null },\n        bob: { scope: null },\n        boe: { scope: null },\n        bof: { scope: null },\n        bog: { scope: null },\n        boh: { scope: null },\n        boi: { scope: null },\n        boj: { scope: null },\n        bok: { scope: null },\n        bol: { scope: null },\n        bom: { scope: null },\n        bon: { scope: null },\n        boo: { scope: null },\n        bop: { scope: null },\n        boq: { scope: null },\n        bor: { scope: null },\n        bot: { scope: null },\n        bou: { scope: null },\n        bov: { scope: null },\n        bow: { scope: null },\n        box: { scope: null },\n        boy: { scope: null },\n        boz: { scope: null },\n        bpa: { scope: null },\n        bpb: { scope: null },\n        bpd: { scope: null },\n        bpe: { scope: null },\n        bpg: { scope: null },\n        bph: { scope: null },\n        bpi: { scope: null },\n        bpj: { scope: null },\n        bpk: { scope: null },\n        bpl: { scope: null },\n        bpm: { scope: null },\n        bpn: { scope: null },\n        bpo: { scope: null },\n        bpp: { scope: null },\n        bpq: { scope: null },\n        bpr: { scope: null },\n        bps: { scope: null },\n        bpt: { scope: null },\n        bpu: { scope: null },\n        bpv: { scope: null },\n        bpw: { scope: null },\n        bpx: { scope: null },\n        bpy: { scope: null },\n        bpz: { scope: null },\n        bqa: { scope: null },\n        bqb: { scope: null },\n        bqc: { scope: null },\n        bqd: { scope: null },\n        bqf: { scope: null },\n        bqg: { scope: null },\n        bqh: { scope: null },\n        bqi: { scope: null },\n        bqj: { scope: null },\n        bqk: { scope: null },\n        bql: { scope: null },\n        bqm: { scope: null },\n        bqn: { scope: null },\n        bqo: { scope: null },\n        bqp: { scope: null },\n        bqq: { scope: null },\n        bqr: { scope: null },\n        bqs: { scope: null },\n        bqt: { scope: null },\n        bqu: { scope: null },\n        bqv: { scope: null },\n        bqw: { scope: null },\n        bqx: { scope: null },\n        bqy: { scope: null },\n        bqz: { scope: null },\n        bra: { scope: null },\n        brb: { scope: null },\n        brc: { scope: null },\n        brd: { scope: null },\n        brf: { scope: null },\n        brg: { scope: null },\n        brh: { scope: null },\n        bri: { scope: null },\n        brj: { scope: null },\n        brk: { scope: null },\n        brl: { scope: null },\n        brm: { scope: null },\n        brn: { scope: null },\n        bro: { scope: null },\n        brp: { scope: null },\n        brq: { scope: null },\n        brr: { scope: null },\n        brs: { scope: null },\n        brt: { scope: null },\n        bru: { scope: null },\n        brv: { scope: null },\n        brw: { scope: null },\n        brx: { scope: null },\n        bry: { scope: null },\n        brz: { scope: null },\n        bsa: { scope: null },\n        bsb: { scope: null },\n        bsc: { scope: null },\n        bse: { scope: null },\n        bsf: { scope: null },\n        bsg: { scope: null },\n        bsh: { scope: null },\n        bsi: { scope: null },\n        bsj: { scope: null },\n        bsk: { scope: null },\n        bsl: { scope: null },\n        bsm: { scope: null },\n        bsn: { scope: null },\n        bso: { scope: null },\n        bsp: { scope: null },\n        bsq: { scope: null },\n        bsr: { scope: null },\n        bss: { scope: null },\n        bst: { scope: null },\n        bsu: { scope: null },\n        bsv: { scope: null },\n        bsw: { scope: null },\n        bsx: { scope: null },\n        bsy: { scope: null },\n        bta: { scope: null },\n        btb: { scope: null },\n        btc: { scope: null },\n        btd: { scope: null },\n        bte: { scope: null },\n        btf: { scope: null },\n        btg: { scope: null },\n        bth: { scope: null },\n        bti: { scope: null },\n        btj: { scope: null },\n        btk: { scope: \"collection\" },\n        btl: { scope: null },\n        btm: { scope: null },\n        btn: { scope: null },\n        bto: { scope: null },\n        btp: { scope: null },\n        btq: { scope: null },\n        btr: { scope: null },\n        bts: { scope: null },\n        btt: { scope: null },\n        btu: { scope: null },\n        btv: { scope: null },\n        btw: { scope: null },\n        btx: { scope: null },\n        bty: { scope: null },\n        btz: { scope: null },\n        bua: { scope: \"macrolanguage\" },\n        bub: { scope: null },\n        buc: { scope: null },\n        bud: { scope: null },\n        bue: { scope: null },\n        buf: { scope: null },\n        bug: { scope: null },\n        buh: { scope: null },\n        bui: { scope: null },\n        buj: { scope: null },\n        buk: { scope: null },\n        bum: { scope: null },\n        bun: { scope: null },\n        buo: { scope: null },\n        bup: { scope: null },\n        buq: { scope: null },\n        bus: { scope: null },\n        but: { scope: null },\n        buu: { scope: null },\n        buv: { scope: null },\n        buw: { scope: null },\n        bux: { scope: null },\n        buy: { scope: null },\n        buz: { scope: null },\n        bva: { scope: null },\n        bvb: { scope: null },\n        bvc: { scope: null },\n        bvd: { scope: null },\n        bve: { scope: null },\n        bvf: { scope: null },\n        bvg: { scope: null },\n        bvh: { scope: null },\n        bvi: { scope: null },\n        bvj: { scope: null },\n        bvk: { scope: null },\n        bvl: { scope: null },\n        bvm: { scope: null },\n        bvn: { scope: null },\n        bvo: { scope: null },\n        bvp: { scope: null },\n        bvq: { scope: null },\n        bvr: { scope: null },\n        bvt: { scope: null },\n        bvu: { scope: null },\n        bvv: { scope: null },\n        bvw: { scope: null },\n        bvx: { scope: null },\n        bvy: { scope: null },\n        bvz: { scope: null },\n        bwa: { scope: null },\n        bwb: { scope: null },\n        bwc: { scope: null },\n        bwd: { scope: null },\n        bwe: { scope: null },\n        bwf: { scope: null },\n        bwg: { scope: null },\n        bwh: { scope: null },\n        bwi: { scope: null },\n        bwj: { scope: null },\n        bwk: { scope: null },\n        bwl: { scope: null },\n        bwm: { scope: null },\n        bwn: { scope: null },\n        bwo: { scope: null },\n        bwp: { scope: null },\n        bwq: { scope: null },\n        bwr: { scope: null },\n        bws: { scope: null },\n        bwt: { scope: null },\n        bwu: { scope: null },\n        bww: { scope: null },\n        bwx: { scope: null },\n        bwy: { scope: null },\n        bwz: { scope: null },\n        bxa: { scope: null },\n        bxb: { scope: null },\n        bxc: { scope: null },\n        bxd: { scope: null },\n        bxe: { scope: null },\n        bxf: { scope: null },\n        bxg: { scope: null },\n        bxh: { scope: null },\n        bxi: { scope: null },\n        bxj: { scope: null },\n        bxk: { scope: null },\n        bxl: { scope: null },\n        bxm: { scope: null },\n        bxn: { scope: null },\n        bxo: { scope: null },\n        bxp: { scope: null },\n        bxq: { scope: null },\n        bxr: { scope: null },\n        bxs: { scope: null },\n        bxu: { scope: null },\n        bxv: { scope: null },\n        bxw: { scope: null },\n        bxx: { scope: null },\n        bxz: { scope: null },\n        bya: { scope: null },\n        byb: { scope: null },\n        byc: { scope: null },\n        byd: { scope: null },\n        bye: { scope: null },\n        byf: { scope: null },\n        byg: { scope: null },\n        byh: { scope: null },\n        byi: { scope: null },\n        byj: { scope: null },\n        byk: { scope: null },\n        byl: { scope: null },\n        bym: { scope: null },\n        byn: { scope: null },\n        byo: { scope: null },\n        byp: { scope: null },\n        byq: { scope: null },\n        byr: { scope: null },\n        bys: { scope: null },\n        byt: { scope: null },\n        byv: { scope: null },\n        byw: { scope: null },\n        byx: { scope: null },\n        byy: { scope: null },\n        byz: { scope: null },\n        bza: { scope: null },\n        bzb: { scope: null },\n        bzc: { scope: null },\n        bzd: { scope: null },\n        bze: { scope: null },\n        bzf: { scope: null },\n        bzg: { scope: null },\n        bzh: { scope: null },\n        bzi: { scope: null },\n        bzj: { scope: null },\n        bzk: { scope: null },\n        bzl: { scope: null },\n        bzm: { scope: null },\n        bzn: { scope: null },\n        bzo: { scope: null },\n        bzp: { scope: null },\n        bzq: { scope: null },\n        bzr: { scope: null },\n        bzs: { scope: null },\n        bzt: { scope: null },\n        bzu: { scope: null },\n        bzv: { scope: null },\n        bzw: { scope: null },\n        bzx: { scope: null },\n        bzy: { scope: null },\n        bzz: { scope: null },\n        caa: { scope: null },\n        cab: { scope: null },\n        cac: { scope: null },\n        cad: { scope: null },\n        cae: { scope: null },\n        caf: { scope: null },\n        cag: { scope: null },\n        cah: { scope: null },\n        cai: { scope: \"collection\" },\n        caj: { scope: null },\n        cak: { scope: null },\n        cal: { scope: null },\n        cam: { scope: null },\n        can: { scope: null },\n        cao: { scope: null },\n        cap: { scope: null },\n        caq: { scope: null },\n        car: { scope: null },\n        cas: { scope: null },\n        cau: { scope: \"collection\" },\n        cav: { scope: null },\n        caw: { scope: null },\n        cax: { scope: null },\n        cay: { scope: null },\n        caz: { scope: null },\n        cba: { scope: \"collection\" },\n        cbb: { scope: null },\n        cbc: { scope: null },\n        cbd: { scope: null },\n        cbe: { scope: null },\n        cbg: { scope: null },\n        cbh: { scope: null },\n        cbi: { scope: null },\n        cbj: { scope: null },\n        cbk: { scope: null },\n        cbl: { scope: null },\n        cbn: { scope: null },\n        cbo: { scope: null },\n        cbq: { scope: null },\n        cbr: { scope: null },\n        cbs: { scope: null },\n        cbt: { scope: null },\n        cbu: { scope: null },\n        cbv: { scope: null },\n        cbw: { scope: null },\n        cby: { scope: null },\n        cca: { scope: null },\n        ccc: { scope: null },\n        ccd: { scope: null },\n        cce: { scope: null },\n        ccg: { scope: null },\n        cch: { scope: null },\n        ccj: { scope: null },\n        ccl: { scope: null },\n        ccm: { scope: null },\n        ccn: { scope: \"collection\" },\n        cco: { scope: null },\n        ccp: { scope: null },\n        ccq: { scope: null },\n        ccr: { scope: null },\n        ccs: { scope: \"collection\" },\n        cda: { scope: null },\n        cdc: { scope: \"collection\" },\n        cdd: { scope: \"collection\" },\n        cde: { scope: null },\n        cdf: { scope: null },\n        cdg: { scope: null },\n        cdh: { scope: null },\n        cdi: { scope: null },\n        cdj: { scope: null },\n        cdm: { scope: null },\n        cdn: { scope: null },\n        cdo: { scope: null },\n        cdr: { scope: null },\n        cds: { scope: null },\n        cdy: { scope: null },\n        cdz: { scope: null },\n        cea: { scope: null },\n        ceb: { scope: null },\n        ceg: { scope: null },\n        cek: { scope: null },\n        cel: { scope: \"collection\" },\n        cen: { scope: null },\n        cet: { scope: null },\n        cey: { scope: null },\n        cfa: { scope: null },\n        cfd: { scope: null },\n        cfg: { scope: null },\n        cfm: { scope: null },\n        cga: { scope: null },\n        cgc: { scope: null },\n        cgg: { scope: null },\n        cgk: { scope: null },\n        chb: { scope: null },\n        chc: { scope: null },\n        chd: { scope: null },\n        chf: { scope: null },\n        chg: { scope: null },\n        chh: { scope: null },\n        chj: { scope: null },\n        chk: { scope: null },\n        chl: { scope: null },\n        chm: { scope: \"macrolanguage\" },\n        chn: { scope: null },\n        cho: { scope: null },\n        chp: { scope: null },\n        chq: { scope: null },\n        chr: { scope: null },\n        cht: { scope: null },\n        chw: { scope: null },\n        chx: { scope: null },\n        chy: { scope: null },\n        chz: { scope: null },\n        cia: { scope: null },\n        cib: { scope: null },\n        cic: { scope: null },\n        cid: { scope: null },\n        cie: { scope: null },\n        cih: { scope: null },\n        cik: { scope: null },\n        cim: { scope: null },\n        cin: { scope: null },\n        cip: { scope: null },\n        cir: { scope: null },\n        ciw: { scope: null },\n        ciy: { scope: null },\n        cja: { scope: null },\n        cje: { scope: null },\n        cjh: { scope: null },\n        cji: { scope: null },\n        cjk: { scope: null },\n        cjm: { scope: null },\n        cjn: { scope: null },\n        cjo: { scope: null },\n        cjp: { scope: null },\n        cjr: { scope: null },\n        cjs: { scope: null },\n        cjv: { scope: null },\n        cjy: { scope: null },\n        cka: { scope: null },\n        ckb: { scope: null },\n        ckh: { scope: null },\n        ckl: { scope: null },\n        ckm: { scope: null },\n        ckn: { scope: null },\n        cko: { scope: null },\n        ckq: { scope: null },\n        ckr: { scope: null },\n        cks: { scope: null },\n        ckt: { scope: null },\n        cku: { scope: null },\n        ckv: { scope: null },\n        ckx: { scope: null },\n        cky: { scope: null },\n        ckz: { scope: null },\n        cla: { scope: null },\n        clc: { scope: null },\n        cld: { scope: null },\n        cle: { scope: null },\n        clh: { scope: null },\n        cli: { scope: null },\n        clj: { scope: null },\n        clk: { scope: null },\n        cll: { scope: null },\n        clm: { scope: null },\n        clo: { scope: null },\n        clt: { scope: null },\n        clu: { scope: null },\n        clw: { scope: null },\n        cly: { scope: null },\n        cma: { scope: null },\n        cmc: { scope: \"collection\" },\n        cme: { scope: null },\n        cmg: { scope: null },\n        cmi: { scope: null },\n        cmk: { scope: null },\n        cml: { scope: null },\n        cmm: { scope: null },\n        cmn: { scope: null },\n        cmo: { scope: null },\n        cmr: { scope: null },\n        cms: { scope: null },\n        cmt: { scope: null },\n        cna: { scope: null },\n        cnb: { scope: null },\n        cnc: { scope: null },\n        cng: { scope: null },\n        cnh: { scope: null },\n        cni: { scope: null },\n        cnk: { scope: null },\n        cnl: { scope: null },\n        cno: { scope: null },\n        cnp: { scope: null },\n        cnr: { scope: null },\n        cns: { scope: null },\n        cnt: { scope: null },\n        cnu: { scope: null },\n        cnw: { scope: null },\n        cnx: { scope: null },\n        coa: { scope: null },\n        cob: { scope: null },\n        coc: { scope: null },\n        cod: { scope: null },\n        coe: { scope: null },\n        cof: { scope: null },\n        cog: { scope: null },\n        coh: { scope: null },\n        coj: { scope: null },\n        cok: { scope: null },\n        col: { scope: null },\n        com: { scope: null },\n        con: { scope: null },\n        coo: { scope: null },\n        cop: { scope: null },\n        coq: { scope: null },\n        cot: { scope: null },\n        cou: { scope: null },\n        cov: { scope: null },\n        cow: { scope: null },\n        cox: { scope: null },\n        coy: { scope: null },\n        coz: { scope: null },\n        cpa: { scope: null },\n        cpb: { scope: null },\n        cpc: { scope: null },\n        cpe: { scope: \"collection\" },\n        cpf: { scope: \"collection\" },\n        cpg: { scope: null },\n        cpi: { scope: null },\n        cpn: { scope: null },\n        cpo: { scope: null },\n        cpp: { scope: \"collection\" },\n        cps: { scope: null },\n        cpu: { scope: null },\n        cpx: { scope: null },\n        cpy: { scope: null },\n        cqd: { scope: null },\n        cqu: { scope: null },\n        cra: { scope: null },\n        crb: { scope: null },\n        crc: { scope: null },\n        crd: { scope: null },\n        crf: { scope: null },\n        crg: { scope: null },\n        crh: { scope: null },\n        cri: { scope: null },\n        crj: { scope: null },\n        crk: { scope: null },\n        crl: { scope: null },\n        crm: { scope: null },\n        crn: { scope: null },\n        cro: { scope: null },\n        crp: { scope: \"collection\" },\n        crq: { scope: null },\n        crr: { scope: null },\n        crs: { scope: null },\n        crt: { scope: null },\n        crv: { scope: null },\n        crw: { scope: null },\n        crx: { scope: null },\n        cry: { scope: null },\n        crz: { scope: null },\n        csa: { scope: null },\n        csb: { scope: null },\n        csc: { scope: null },\n        csd: { scope: null },\n        cse: { scope: null },\n        csf: { scope: null },\n        csg: { scope: null },\n        csh: { scope: null },\n        csi: { scope: null },\n        csj: { scope: null },\n        csk: { scope: null },\n        csl: { scope: null },\n        csm: { scope: null },\n        csn: { scope: null },\n        cso: { scope: null },\n        csp: { scope: null },\n        csq: { scope: null },\n        csr: { scope: null },\n        css: { scope: null },\n        cst: { scope: null },\n        csu: { scope: \"collection\" },\n        csv: { scope: null },\n        csw: { scope: null },\n        csx: { scope: null },\n        csy: { scope: null },\n        csz: { scope: null },\n        cta: { scope: null },\n        ctc: { scope: null },\n        ctd: { scope: null },\n        cte: { scope: null },\n        ctg: { scope: null },\n        cth: { scope: null },\n        ctl: { scope: null },\n        ctm: { scope: null },\n        ctn: { scope: null },\n        cto: { scope: null },\n        ctp: { scope: null },\n        cts: { scope: null },\n        ctt: { scope: null },\n        ctu: { scope: null },\n        cty: { scope: null },\n        ctz: { scope: null },\n        cua: { scope: null },\n        cub: { scope: null },\n        cuc: { scope: null },\n        cug: { scope: null },\n        cuh: { scope: null },\n        cui: { scope: null },\n        cuj: { scope: null },\n        cuk: { scope: null },\n        cul: { scope: null },\n        cum: { scope: null },\n        cuo: { scope: null },\n        cup: { scope: null },\n        cuq: { scope: null },\n        cur: { scope: null },\n        cus: { scope: \"collection\" },\n        cut: { scope: null },\n        cuu: { scope: null },\n        cuv: { scope: null },\n        cuw: { scope: null },\n        cux: { scope: null },\n        cuy: { scope: null },\n        cvg: { scope: null },\n        cvn: { scope: null },\n        cwa: { scope: null },\n        cwb: { scope: null },\n        cwd: { scope: null },\n        cwe: { scope: null },\n        cwg: { scope: null },\n        cwt: { scope: null },\n        cya: { scope: null },\n        cyb: { scope: null },\n        cyo: { scope: null },\n        czh: { scope: null },\n        czk: { scope: null },\n        czn: { scope: null },\n        czo: { scope: null },\n        czt: { scope: null },\n        daa: { scope: null },\n        dac: { scope: null },\n        dad: { scope: null },\n        dae: { scope: null },\n        daf: { scope: null },\n        dag: { scope: null },\n        dah: { scope: null },\n        dai: { scope: null },\n        daj: { scope: null },\n        dak: { scope: null },\n        dal: { scope: null },\n        dam: { scope: null },\n        dao: { scope: null },\n        dap: { scope: null },\n        daq: { scope: null },\n        dar: { scope: null },\n        das: { scope: null },\n        dau: { scope: null },\n        dav: { scope: null },\n        daw: { scope: null },\n        dax: { scope: null },\n        day: { scope: \"collection\" },\n        daz: { scope: null },\n        dba: { scope: null },\n        dbb: { scope: null },\n        dbd: { scope: null },\n        dbe: { scope: null },\n        dbf: { scope: null },\n        dbg: { scope: null },\n        dbi: { scope: null },\n        dbj: { scope: null },\n        dbl: { scope: null },\n        dbm: { scope: null },\n        dbn: { scope: null },\n        dbo: { scope: null },\n        dbp: { scope: null },\n        dbq: { scope: null },\n        dbr: { scope: null },\n        dbt: { scope: null },\n        dbu: { scope: null },\n        dbv: { scope: null },\n        dbw: { scope: null },\n        dby: { scope: null },\n        dcc: { scope: null },\n        dcr: { scope: null },\n        dda: { scope: null },\n        ddd: { scope: null },\n        dde: { scope: null },\n        ddg: { scope: null },\n        ddi: { scope: null },\n        ddj: { scope: null },\n        ddn: { scope: null },\n        ddo: { scope: null },\n        ddr: { scope: null },\n        dds: { scope: null },\n        ddw: { scope: null },\n        dec: { scope: null },\n        ded: { scope: null },\n        dee: { scope: null },\n        def: { scope: null },\n        deg: { scope: null },\n        deh: { scope: null },\n        dei: { scope: null },\n        dek: { scope: null },\n        del: { scope: \"macrolanguage\" },\n        dem: { scope: null },\n        den: { scope: \"macrolanguage\" },\n        dep: { scope: null },\n        deq: { scope: null },\n        der: { scope: null },\n        des: { scope: null },\n        dev: { scope: null },\n        dez: { scope: null },\n        dga: { scope: null },\n        dgb: { scope: null },\n        dgc: { scope: null },\n        dgd: { scope: null },\n        dge: { scope: null },\n        dgg: { scope: null },\n        dgh: { scope: null },\n        dgi: { scope: null },\n        dgk: { scope: null },\n        dgl: { scope: null },\n        dgn: { scope: null },\n        dgo: { scope: null },\n        dgr: { scope: null },\n        dgs: { scope: null },\n        dgt: { scope: null },\n        dgu: { scope: null },\n        dgw: { scope: null },\n        dgx: { scope: null },\n        dgz: { scope: null },\n        dha: { scope: null },\n        dhd: { scope: null },\n        dhg: { scope: null },\n        dhi: { scope: null },\n        dhl: { scope: null },\n        dhm: { scope: null },\n        dhn: { scope: null },\n        dho: { scope: null },\n        dhr: { scope: null },\n        dhs: { scope: null },\n        dhu: { scope: null },\n        dhv: { scope: null },\n        dhw: { scope: null },\n        dhx: { scope: null },\n        dia: { scope: null },\n        dib: { scope: null },\n        dic: { scope: null },\n        did: { scope: null },\n        dif: { scope: null },\n        dig: { scope: null },\n        dih: { scope: null },\n        dii: { scope: null },\n        dij: { scope: null },\n        dik: { scope: null },\n        dil: { scope: null },\n        dim: { scope: null },\n        din: { scope: \"macrolanguage\" },\n        dio: { scope: null },\n        dip: { scope: null },\n        diq: { scope: null },\n        dir: { scope: null },\n        dis: { scope: null },\n        dit: { scope: null },\n        diu: { scope: null },\n        diw: { scope: null },\n        dix: { scope: null },\n        diy: { scope: null },\n        diz: { scope: null },\n        dja: { scope: null },\n        djb: { scope: null },\n        djc: { scope: null },\n        djd: { scope: null },\n        dje: { scope: null },\n        djf: { scope: null },\n        dji: { scope: null },\n        djj: { scope: null },\n        djk: { scope: null },\n        djl: { scope: null },\n        djm: { scope: null },\n        djn: { scope: null },\n        djo: { scope: null },\n        djr: { scope: null },\n        dju: { scope: null },\n        djw: { scope: null },\n        dka: { scope: null },\n        dkg: { scope: null },\n        dkk: { scope: null },\n        dkl: { scope: null },\n        dkr: { scope: null },\n        dks: { scope: null },\n        dkx: { scope: null },\n        dlg: { scope: null },\n        dlk: { scope: null },\n        dlm: { scope: null },\n        dln: { scope: null },\n        dma: { scope: null },\n        dmb: { scope: null },\n        dmc: { scope: null },\n        dmd: { scope: null },\n        dme: { scope: null },\n        dmf: { scope: null },\n        dmg: { scope: null },\n        dmk: { scope: null },\n        dml: { scope: null },\n        dmm: { scope: null },\n        dmn: { scope: \"collection\" },\n        dmo: { scope: null },\n        dmr: { scope: null },\n        dms: { scope: null },\n        dmu: { scope: null },\n        dmv: { scope: null },\n        dmw: { scope: null },\n        dmx: { scope: null },\n        dmy: { scope: null },\n        dna: { scope: null },\n        dnd: { scope: null },\n        dne: { scope: null },\n        dng: { scope: null },\n        dni: { scope: null },\n        dnj: { scope: null },\n        dnk: { scope: null },\n        dnn: { scope: null },\n        dno: { scope: null },\n        dnr: { scope: null },\n        dnt: { scope: null },\n        dnu: { scope: null },\n        dnv: { scope: null },\n        dnw: { scope: null },\n        dny: { scope: null },\n        doa: { scope: null },\n        dob: { scope: null },\n        doc: { scope: null },\n        doe: { scope: null },\n        dof: { scope: null },\n        doh: { scope: null },\n        doi: { scope: \"macrolanguage\" },\n        dok: { scope: null },\n        dol: { scope: null },\n        don: { scope: null },\n        doo: { scope: null },\n        dop: { scope: null },\n        doq: { scope: null },\n        dor: { scope: null },\n        dos: { scope: null },\n        dot: { scope: null },\n        dov: { scope: null },\n        dow: { scope: null },\n        dox: { scope: null },\n        doy: { scope: null },\n        doz: { scope: null },\n        dpp: { scope: null },\n        dra: { scope: \"collection\" },\n        drb: { scope: null },\n        drc: { scope: null },\n        drd: { scope: null },\n        dre: { scope: null },\n        drg: { scope: null },\n        drh: { scope: null },\n        dri: { scope: null },\n        drl: { scope: null },\n        drn: { scope: null },\n        dro: { scope: null },\n        drq: { scope: null },\n        drr: { scope: null },\n        drs: { scope: null },\n        drt: { scope: null },\n        dru: { scope: null },\n        drw: { scope: null },\n        dry: { scope: null },\n        dsb: { scope: null },\n        dse: { scope: null },\n        dsh: { scope: null },\n        dsi: { scope: null },\n        dsl: { scope: null },\n        dsn: { scope: null },\n        dso: { scope: null },\n        dsq: { scope: null },\n        dta: { scope: null },\n        dtb: { scope: null },\n        dtd: { scope: null },\n        dth: { scope: null },\n        dti: { scope: null },\n        dtk: { scope: null },\n        dtm: { scope: null },\n        dtn: { scope: null },\n        dto: { scope: null },\n        dtp: { scope: null },\n        dtr: { scope: null },\n        dts: { scope: null },\n        dtt: { scope: null },\n        dtu: { scope: null },\n        dty: { scope: null },\n        dua: { scope: null },\n        dub: { scope: null },\n        duc: { scope: null },\n        dud: { scope: null },\n        due: { scope: null },\n        duf: { scope: null },\n        dug: { scope: null },\n        duh: { scope: null },\n        dui: { scope: null },\n        duj: { scope: null },\n        duk: { scope: null },\n        dul: { scope: null },\n        dum: { scope: null },\n        dun: { scope: null },\n        duo: { scope: null },\n        dup: { scope: null },\n        duq: { scope: null },\n        dur: { scope: null },\n        dus: { scope: null },\n        duu: { scope: null },\n        duv: { scope: null },\n        duw: { scope: null },\n        dux: { scope: null },\n        duy: { scope: null },\n        duz: { scope: null },\n        dva: { scope: null },\n        dwa: { scope: null },\n        dwk: { scope: null },\n        dwl: { scope: null },\n        dwr: { scope: null },\n        dws: { scope: null },\n        dwu: { scope: null },\n        dww: { scope: null },\n        dwy: { scope: null },\n        dwz: { scope: null },\n        dya: { scope: null },\n        dyb: { scope: null },\n        dyd: { scope: null },\n        dyg: { scope: null },\n        dyi: { scope: null },\n        dym: { scope: null },\n        dyn: { scope: null },\n        dyo: { scope: null },\n        dyu: { scope: null },\n        dyy: { scope: null },\n        dza: { scope: null },\n        dzd: { scope: null },\n        dze: { scope: null },\n        dzg: { scope: null },\n        dzl: { scope: null },\n        dzn: { scope: null },\n        eaa: { scope: null },\n        ebc: { scope: null },\n        ebg: { scope: null },\n        ebk: { scope: null },\n        ebo: { scope: null },\n        ebr: { scope: null },\n        ebu: { scope: null },\n        ecr: { scope: null },\n        ecs: { scope: null },\n        ecy: { scope: null },\n        eee: { scope: null },\n        efa: { scope: null },\n        efe: { scope: null },\n        efi: { scope: null },\n        ega: { scope: null },\n        egl: { scope: null },\n        ego: { scope: null },\n        egx: { scope: \"collection\" },\n        egy: { scope: null },\n        ehs: { scope: null },\n        ehu: { scope: null },\n        eip: { scope: null },\n        eit: { scope: null },\n        eiv: { scope: null },\n        eja: { scope: null },\n        eka: { scope: null },\n        ekc: { scope: null },\n        eke: { scope: null },\n        ekg: { scope: null },\n        eki: { scope: null },\n        ekk: { scope: null },\n        ekl: { scope: null },\n        ekm: { scope: null },\n        eko: { scope: null },\n        ekp: { scope: null },\n        ekr: { scope: null },\n        eky: { scope: null },\n        ele: { scope: null },\n        elh: { scope: null },\n        eli: { scope: null },\n        elk: { scope: null },\n        elm: { scope: null },\n        elo: { scope: null },\n        elp: { scope: null },\n        elu: { scope: null },\n        elx: { scope: null },\n        ema: { scope: null },\n        emb: { scope: null },\n        eme: { scope: null },\n        emg: { scope: null },\n        emi: { scope: null },\n        emk: { scope: null },\n        emm: { scope: null },\n        emn: { scope: null },\n        emo: { scope: null },\n        emp: { scope: null },\n        emq: { scope: null },\n        ems: { scope: null },\n        emu: { scope: null },\n        emw: { scope: null },\n        emx: { scope: null },\n        emy: { scope: null },\n        emz: { scope: null },\n        ena: { scope: null },\n        enb: { scope: null },\n        enc: { scope: null },\n        end: { scope: null },\n        enf: { scope: null },\n        enh: { scope: null },\n        enl: { scope: null },\n        enm: { scope: null },\n        enn: { scope: null },\n        eno: { scope: null },\n        enq: { scope: null },\n        enr: { scope: null },\n        enu: { scope: null },\n        env: { scope: null },\n        enw: { scope: null },\n        enx: { scope: null },\n        eot: { scope: null },\n        epi: { scope: null },\n        era: { scope: null },\n        erg: { scope: null },\n        erh: { scope: null },\n        eri: { scope: null },\n        erk: { scope: null },\n        ero: { scope: null },\n        err: { scope: null },\n        ers: { scope: null },\n        ert: { scope: null },\n        erw: { scope: null },\n        ese: { scope: null },\n        esg: { scope: null },\n        esh: { scope: null },\n        esi: { scope: null },\n        esk: { scope: null },\n        esl: { scope: null },\n        esm: { scope: null },\n        esn: { scope: null },\n        eso: { scope: null },\n        esq: { scope: null },\n        ess: { scope: null },\n        esu: { scope: null },\n        esx: { scope: \"collection\" },\n        esy: { scope: null },\n        etb: { scope: null },\n        etc: { scope: null },\n        eth: { scope: null },\n        etn: { scope: null },\n        eto: { scope: null },\n        etr: { scope: null },\n        ets: { scope: null },\n        ett: { scope: null },\n        etu: { scope: null },\n        etx: { scope: null },\n        etz: { scope: null },\n        euq: { scope: \"collection\" },\n        eve: { scope: null },\n        evh: { scope: null },\n        evn: { scope: null },\n        ewo: { scope: null },\n        ext: { scope: null },\n        eya: { scope: null },\n        eyo: { scope: null },\n        eza: { scope: null },\n        eze: { scope: null },\n        faa: { scope: null },\n        fab: { scope: null },\n        fad: { scope: null },\n        faf: { scope: null },\n        fag: { scope: null },\n        fah: { scope: null },\n        fai: { scope: null },\n        faj: { scope: null },\n        fak: { scope: null },\n        fal: { scope: null },\n        fam: { scope: null },\n        fan: { scope: null },\n        fap: { scope: null },\n        far: { scope: null },\n        fat: { scope: null },\n        fau: { scope: null },\n        fax: { scope: null },\n        fay: { scope: null },\n        faz: { scope: null },\n        fbl: { scope: null },\n        fcs: { scope: null },\n        fer: { scope: null },\n        ffi: { scope: null },\n        ffm: { scope: null },\n        fgr: { scope: null },\n        fia: { scope: null },\n        fie: { scope: null },\n        fif: { scope: null },\n        fil: { scope: null },\n        fip: { scope: null },\n        fir: { scope: null },\n        fit: { scope: null },\n        fiu: { scope: \"collection\" },\n        fiw: { scope: null },\n        fkk: { scope: null },\n        fkv: { scope: null },\n        fla: { scope: null },\n        flh: { scope: null },\n        fli: { scope: null },\n        fll: { scope: null },\n        fln: { scope: null },\n        flr: { scope: null },\n        fly: { scope: null },\n        fmp: { scope: null },\n        fmu: { scope: null },\n        fnb: { scope: null },\n        fng: { scope: null },\n        fni: { scope: null },\n        fod: { scope: null },\n        foi: { scope: null },\n        fom: { scope: null },\n        fon: { scope: null },\n        for: { scope: null },\n        fos: { scope: null },\n        fox: { scope: \"collection\" },\n        fpe: { scope: null },\n        fqs: { scope: null },\n        frc: { scope: null },\n        frd: { scope: null },\n        frk: { scope: null },\n        frm: { scope: null },\n        fro: { scope: null },\n        frp: { scope: null },\n        frq: { scope: null },\n        frr: { scope: null },\n        frs: { scope: null },\n        frt: { scope: null },\n        fse: { scope: null },\n        fsl: { scope: null },\n        fss: { scope: null },\n        fub: { scope: null },\n        fuc: { scope: null },\n        fud: { scope: null },\n        fue: { scope: null },\n        fuf: { scope: null },\n        fuh: { scope: null },\n        fui: { scope: null },\n        fuj: { scope: null },\n        fum: { scope: null },\n        fun: { scope: null },\n        fuq: { scope: null },\n        fur: { scope: null },\n        fut: { scope: null },\n        fuu: { scope: null },\n        fuv: { scope: null },\n        fuy: { scope: null },\n        fvr: { scope: null },\n        fwa: { scope: null },\n        fwe: { scope: null },\n        gaa: { scope: null },\n        gab: { scope: null },\n        gac: { scope: null },\n        gad: { scope: null },\n        gae: { scope: null },\n        gaf: { scope: null },\n        gag: { scope: null },\n        gah: { scope: null },\n        gai: { scope: null },\n        gaj: { scope: null },\n        gak: { scope: null },\n        gal: { scope: null },\n        gam: { scope: null },\n        gan: { scope: null },\n        gao: { scope: null },\n        gap: { scope: null },\n        gaq: { scope: null },\n        gar: { scope: null },\n        gas: { scope: null },\n        gat: { scope: null },\n        gau: { scope: null },\n        gav: { scope: null },\n        gaw: { scope: null },\n        gax: { scope: null },\n        gay: { scope: null },\n        gaz: { scope: null },\n        gba: { scope: \"macrolanguage\" },\n        gbb: { scope: null },\n        gbc: { scope: null },\n        gbd: { scope: null },\n        gbe: { scope: null },\n        gbf: { scope: null },\n        gbg: { scope: null },\n        gbh: { scope: null },\n        gbi: { scope: null },\n        gbj: { scope: null },\n        gbk: { scope: null },\n        gbl: { scope: null },\n        gbm: { scope: null },\n        gbn: { scope: null },\n        gbo: { scope: null },\n        gbp: { scope: null },\n        gbq: { scope: null },\n        gbr: { scope: null },\n        gbs: { scope: null },\n        gbu: { scope: null },\n        gbv: { scope: null },\n        gbw: { scope: null },\n        gbx: { scope: null },\n        gby: { scope: null },\n        gbz: { scope: null },\n        gcc: { scope: null },\n        gcd: { scope: null },\n        gce: { scope: null },\n        gcf: { scope: null },\n        gcl: { scope: null },\n        gcn: { scope: null },\n        gcr: { scope: null },\n        gct: { scope: null },\n        gda: { scope: null },\n        gdb: { scope: null },\n        gdc: { scope: null },\n        gdd: { scope: null },\n        gde: { scope: null },\n        gdf: { scope: null },\n        gdg: { scope: null },\n        gdh: { scope: null },\n        gdi: { scope: null },\n        gdj: { scope: null },\n        gdk: { scope: null },\n        gdl: { scope: null },\n        gdm: { scope: null },\n        gdn: { scope: null },\n        gdo: { scope: null },\n        gdq: { scope: null },\n        gdr: { scope: null },\n        gds: { scope: null },\n        gdt: { scope: null },\n        gdu: { scope: null },\n        gdx: { scope: null },\n        gea: { scope: null },\n        geb: { scope: null },\n        gec: { scope: null },\n        ged: { scope: null },\n        gef: { scope: null },\n        geg: { scope: null },\n        geh: { scope: null },\n        gei: { scope: null },\n        gej: { scope: null },\n        gek: { scope: null },\n        gel: { scope: null },\n        gem: { scope: \"collection\" },\n        geq: { scope: null },\n        ges: { scope: null },\n        gev: { scope: null },\n        gew: { scope: null },\n        gex: { scope: null },\n        gey: { scope: null },\n        gez: { scope: null },\n        gfk: { scope: null },\n        gft: { scope: null },\n        gfx: { scope: null },\n        gga: { scope: null },\n        ggb: { scope: null },\n        ggd: { scope: null },\n        gge: { scope: null },\n        ggg: { scope: null },\n        ggk: { scope: null },\n        ggl: { scope: null },\n        ggn: { scope: null },\n        ggo: { scope: null },\n        ggr: { scope: null },\n        ggt: { scope: null },\n        ggu: { scope: null },\n        ggw: { scope: null },\n        gha: { scope: null },\n        ghc: { scope: null },\n        ghe: { scope: null },\n        ghh: { scope: null },\n        ghk: { scope: null },\n        ghl: { scope: null },\n        ghn: { scope: null },\n        gho: { scope: null },\n        ghr: { scope: null },\n        ghs: { scope: null },\n        ght: { scope: null },\n        gia: { scope: null },\n        gib: { scope: null },\n        gic: { scope: null },\n        gid: { scope: null },\n        gie: { scope: null },\n        gig: { scope: null },\n        gih: { scope: null },\n        gii: { scope: null },\n        gil: { scope: null },\n        gim: { scope: null },\n        gin: { scope: null },\n        gio: { scope: null },\n        gip: { scope: null },\n        giq: { scope: null },\n        gir: { scope: null },\n        gis: { scope: null },\n        git: { scope: null },\n        giu: { scope: null },\n        giw: { scope: null },\n        gix: { scope: null },\n        giy: { scope: null },\n        giz: { scope: null },\n        gji: { scope: null },\n        gjk: { scope: null },\n        gjm: { scope: null },\n        gjn: { scope: null },\n        gjr: { scope: null },\n        gju: { scope: null },\n        gka: { scope: null },\n        gkd: { scope: null },\n        gke: { scope: null },\n        gkn: { scope: null },\n        gko: { scope: null },\n        gkp: { scope: null },\n        gku: { scope: null },\n        glb: { scope: null },\n        glc: { scope: null },\n        gld: { scope: null },\n        glh: { scope: null },\n        gli: { scope: null },\n        glj: { scope: null },\n        glk: { scope: null },\n        gll: { scope: null },\n        glo: { scope: null },\n        glr: { scope: null },\n        glu: { scope: null },\n        glw: { scope: null },\n        gly: { scope: null },\n        gma: { scope: null },\n        gmb: { scope: null },\n        gmd: { scope: null },\n        gme: { scope: \"collection\" },\n        gmg: { scope: null },\n        gmh: { scope: null },\n        gml: { scope: null },\n        gmm: { scope: null },\n        gmn: { scope: null },\n        gmq: { scope: \"collection\" },\n        gmr: { scope: null },\n        gmu: { scope: null },\n        gmv: { scope: null },\n        gmw: { scope: \"collection\" },\n        gmx: { scope: null },\n        gmy: { scope: null },\n        gmz: { scope: null },\n        gna: { scope: null },\n        gnb: { scope: null },\n        gnc: { scope: null },\n        gnd: { scope: null },\n        gne: { scope: null },\n        gng: { scope: null },\n        gnh: { scope: null },\n        gni: { scope: null },\n        gnj: { scope: null },\n        gnk: { scope: null },\n        gnl: { scope: null },\n        gnm: { scope: null },\n        gnn: { scope: null },\n        gno: { scope: null },\n        gnq: { scope: null },\n        gnr: { scope: null },\n        gnt: { scope: null },\n        gnu: { scope: null },\n        gnw: { scope: null },\n        gnz: { scope: null },\n        goa: { scope: null },\n        gob: { scope: null },\n        goc: { scope: null },\n        god: { scope: null },\n        goe: { scope: null },\n        gof: { scope: null },\n        gog: { scope: null },\n        goh: { scope: null },\n        goi: { scope: null },\n        goj: { scope: null },\n        gok: { scope: null },\n        gol: { scope: null },\n        gom: { scope: null },\n        gon: { scope: \"macrolanguage\" },\n        goo: { scope: null },\n        gop: { scope: null },\n        goq: { scope: null },\n        gor: { scope: null },\n        gos: { scope: null },\n        got: { scope: null },\n        gou: { scope: null },\n        gow: { scope: null },\n        gox: { scope: null },\n        goy: { scope: null },\n        goz: { scope: null },\n        gpa: { scope: null },\n        gpe: { scope: null },\n        gpn: { scope: null },\n        gqa: { scope: null },\n        gqi: { scope: null },\n        gqn: { scope: null },\n        gqr: { scope: null },\n        gqu: { scope: null },\n        gra: { scope: null },\n        grb: { scope: \"macrolanguage\" },\n        grc: { scope: null },\n        grd: { scope: null },\n        grg: { scope: null },\n        grh: { scope: null },\n        gri: { scope: null },\n        grj: { scope: null },\n        grk: { scope: \"collection\" },\n        grm: { scope: null },\n        gro: { scope: null },\n        grq: { scope: null },\n        grr: { scope: null },\n        grs: { scope: null },\n        grt: { scope: null },\n        gru: { scope: null },\n        grv: { scope: null },\n        grw: { scope: null },\n        grx: { scope: null },\n        gry: { scope: null },\n        grz: { scope: null },\n        gse: { scope: null },\n        gsg: { scope: null },\n        gsl: { scope: null },\n        gsm: { scope: null },\n        gsn: { scope: null },\n        gso: { scope: null },\n        gsp: { scope: null },\n        gss: { scope: null },\n        gsw: { scope: null },\n        gta: { scope: null },\n        gti: { scope: null },\n        gtu: { scope: null },\n        gua: { scope: null },\n        gub: { scope: null },\n        guc: { scope: null },\n        gud: { scope: null },\n        gue: { scope: null },\n        guf: { scope: null },\n        gug: { scope: null },\n        guh: { scope: null },\n        gui: { scope: null },\n        guk: { scope: null },\n        gul: { scope: null },\n        gum: { scope: null },\n        gun: { scope: null },\n        guo: { scope: null },\n        gup: { scope: null },\n        guq: { scope: null },\n        gur: { scope: null },\n        gus: { scope: null },\n        gut: { scope: null },\n        guu: { scope: null },\n        guv: { scope: null },\n        guw: { scope: null },\n        gux: { scope: null },\n        guz: { scope: null },\n        gva: { scope: null },\n        gvc: { scope: null },\n        gve: { scope: null },\n        gvf: { scope: null },\n        gvj: { scope: null },\n        gvl: { scope: null },\n        gvm: { scope: null },\n        gvn: { scope: null },\n        gvo: { scope: null },\n        gvp: { scope: null },\n        gvr: { scope: null },\n        gvs: { scope: null },\n        gvy: { scope: null },\n        gwa: { scope: null },\n        gwb: { scope: null },\n        gwc: { scope: null },\n        gwd: { scope: null },\n        gwe: { scope: null },\n        gwf: { scope: null },\n        gwg: { scope: null },\n        gwi: { scope: null },\n        gwj: { scope: null },\n        gwm: { scope: null },\n        gwn: { scope: null },\n        gwr: { scope: null },\n        gwt: { scope: null },\n        gwu: { scope: null },\n        gww: { scope: null },\n        gwx: { scope: null },\n        gxx: { scope: null },\n        gya: { scope: null },\n        gyb: { scope: null },\n        gyd: { scope: null },\n        gye: { scope: null },\n        gyf: { scope: null },\n        gyg: { scope: null },\n        gyi: { scope: null },\n        gyl: { scope: null },\n        gym: { scope: null },\n        gyn: { scope: null },\n        gyo: { scope: null },\n        gyr: { scope: null },\n        gyy: { scope: null },\n        gyz: { scope: null },\n        gza: { scope: null },\n        gzi: { scope: null },\n        gzn: { scope: null },\n        haa: { scope: null },\n        hab: { scope: null },\n        hac: { scope: null },\n        had: { scope: null },\n        hae: { scope: null },\n        haf: { scope: null },\n        hag: { scope: null },\n        hah: { scope: null },\n        hai: { scope: \"macrolanguage\" },\n        haj: { scope: null },\n        hak: { scope: null },\n        hal: { scope: null },\n        ham: { scope: null },\n        han: { scope: null },\n        hao: { scope: null },\n        hap: { scope: null },\n        haq: { scope: null },\n        har: { scope: null },\n        has: { scope: null },\n        hav: { scope: null },\n        haw: { scope: null },\n        hax: { scope: null },\n        hay: { scope: null },\n        haz: { scope: null },\n        hba: { scope: null },\n        hbb: { scope: null },\n        hbn: { scope: null },\n        hbo: { scope: null },\n        hbu: { scope: null },\n        hca: { scope: null },\n        hch: { scope: null },\n        hdn: { scope: null },\n        hds: { scope: null },\n        hdy: { scope: null },\n        hea: { scope: null },\n        hed: { scope: null },\n        heg: { scope: null },\n        heh: { scope: null },\n        hei: { scope: null },\n        hem: { scope: null },\n        hgm: { scope: null },\n        hgw: { scope: null },\n        hhi: { scope: null },\n        hhr: { scope: null },\n        hhy: { scope: null },\n        hia: { scope: null },\n        hib: { scope: null },\n        hid: { scope: null },\n        hif: { scope: null },\n        hig: { scope: null },\n        hih: { scope: null },\n        hii: { scope: null },\n        hij: { scope: null },\n        hik: { scope: null },\n        hil: { scope: null },\n        him: { scope: \"collection\" },\n        hio: { scope: null },\n        hir: { scope: null },\n        hit: { scope: null },\n        hiw: { scope: null },\n        hix: { scope: null },\n        hji: { scope: null },\n        hka: { scope: null },\n        hke: { scope: null },\n        hkh: { scope: null },\n        hkk: { scope: null },\n        hkn: { scope: null },\n        hks: { scope: null },\n        hla: { scope: null },\n        hlb: { scope: null },\n        hld: { scope: null },\n        hle: { scope: null },\n        hlt: { scope: null },\n        hlu: { scope: null },\n        hma: { scope: null },\n        hmb: { scope: null },\n        hmc: { scope: null },\n        hmd: { scope: null },\n        hme: { scope: null },\n        hmf: { scope: null },\n        hmg: { scope: null },\n        hmh: { scope: null },\n        hmi: { scope: null },\n        hmj: { scope: null },\n        hmk: { scope: null },\n        hml: { scope: null },\n        hmm: { scope: null },\n        hmn: { scope: \"macrolanguage\" },\n        hmp: { scope: null },\n        hmq: { scope: null },\n        hmr: { scope: null },\n        hms: { scope: null },\n        hmt: { scope: null },\n        hmu: { scope: null },\n        hmv: { scope: null },\n        hmw: { scope: null },\n        hmx: { scope: \"collection\" },\n        hmy: { scope: null },\n        hmz: { scope: null },\n        hna: { scope: null },\n        hnd: { scope: null },\n        hne: { scope: null },\n        hng: { scope: null },\n        hnh: { scope: null },\n        hni: { scope: null },\n        hnj: { scope: null },\n        hnn: { scope: null },\n        hno: { scope: null },\n        hns: { scope: null },\n        hnu: { scope: null },\n        hoa: { scope: null },\n        hob: { scope: null },\n        hoc: { scope: null },\n        hod: { scope: null },\n        hoe: { scope: null },\n        hoh: { scope: null },\n        hoi: { scope: null },\n        hoj: { scope: null },\n        hok: { scope: \"collection\" },\n        hol: { scope: null },\n        hom: { scope: null },\n        hoo: { scope: null },\n        hop: { scope: null },\n        hor: { scope: null },\n        hos: { scope: null },\n        hot: { scope: null },\n        hov: { scope: null },\n        how: { scope: null },\n        hoy: { scope: null },\n        hoz: { scope: null },\n        hpo: { scope: null },\n        hps: { scope: null },\n        hra: { scope: null },\n        hrc: { scope: null },\n        hre: { scope: null },\n        hrk: { scope: null },\n        hrm: { scope: null },\n        hro: { scope: null },\n        hrp: { scope: null },\n        hrr: { scope: null },\n        hrt: { scope: null },\n        hru: { scope: null },\n        hrw: { scope: null },\n        hrx: { scope: null },\n        hrz: { scope: null },\n        hsb: { scope: null },\n        hsh: { scope: null },\n        hsl: { scope: null },\n        hsn: { scope: null },\n        hss: { scope: null },\n        hti: { scope: null },\n        hto: { scope: null },\n        hts: { scope: null },\n        htu: { scope: null },\n        htx: { scope: null },\n        hub: { scope: null },\n        huc: { scope: null },\n        hud: { scope: null },\n        hue: { scope: null },\n        huf: { scope: null },\n        hug: { scope: null },\n        huh: { scope: null },\n        hui: { scope: null },\n        huj: { scope: null },\n        huk: { scope: null },\n        hul: { scope: null },\n        hum: { scope: null },\n        huo: { scope: null },\n        hup: { scope: null },\n        huq: { scope: null },\n        hur: { scope: null },\n        hus: { scope: null },\n        hut: { scope: null },\n        huu: { scope: null },\n        huv: { scope: null },\n        huw: { scope: null },\n        hux: { scope: null },\n        huy: { scope: null },\n        huz: { scope: null },\n        hvc: { scope: null },\n        hve: { scope: null },\n        hvk: { scope: null },\n        hvn: { scope: null },\n        hvv: { scope: null },\n        hwa: { scope: null },\n        hwc: { scope: null },\n        hwo: { scope: null },\n        hya: { scope: null },\n        hyw: { scope: null },\n        hyx: { scope: \"collection\" },\n        iai: { scope: null },\n        ian: { scope: null },\n        iap: { scope: null },\n        iar: { scope: null },\n        iba: { scope: null },\n        ibb: { scope: null },\n        ibd: { scope: null },\n        ibe: { scope: null },\n        ibg: { scope: null },\n        ibh: { scope: null },\n        ibi: { scope: null },\n        ibl: { scope: null },\n        ibm: { scope: null },\n        ibn: { scope: null },\n        ibr: { scope: null },\n        ibu: { scope: null },\n        iby: { scope: null },\n        ica: { scope: null },\n        ich: { scope: null },\n        icl: { scope: null },\n        icr: { scope: null },\n        ida: { scope: null },\n        idb: { scope: null },\n        idc: { scope: null },\n        idd: { scope: null },\n        ide: { scope: null },\n        idi: { scope: null },\n        idr: { scope: null },\n        ids: { scope: null },\n        idt: { scope: null },\n        idu: { scope: null },\n        ifa: { scope: null },\n        ifb: { scope: null },\n        ife: { scope: null },\n        iff: { scope: null },\n        ifk: { scope: null },\n        ifm: { scope: null },\n        ifu: { scope: null },\n        ify: { scope: null },\n        igb: { scope: null },\n        ige: { scope: null },\n        igg: { scope: null },\n        igl: { scope: null },\n        igm: { scope: null },\n        ign: { scope: null },\n        igo: { scope: null },\n        igs: { scope: null },\n        igw: { scope: null },\n        ihb: { scope: null },\n        ihi: { scope: null },\n        ihp: { scope: null },\n        ihw: { scope: null },\n        iin: { scope: null },\n        iir: { scope: \"collection\" },\n        ijc: { scope: null },\n        ije: { scope: null },\n        ijj: { scope: null },\n        ijn: { scope: null },\n        ijo: { scope: \"collection\" },\n        ijs: { scope: null },\n        ike: { scope: null },\n        iki: { scope: null },\n        ikk: { scope: null },\n        ikl: { scope: null },\n        iko: { scope: null },\n        ikp: { scope: null },\n        ikr: { scope: null },\n        iks: { scope: null },\n        ikt: { scope: null },\n        ikv: { scope: null },\n        ikw: { scope: null },\n        ikx: { scope: null },\n        ikz: { scope: null },\n        ila: { scope: null },\n        ilb: { scope: null },\n        ilg: { scope: null },\n        ili: { scope: null },\n        ilk: { scope: null },\n        ill: { scope: null },\n        ilm: { scope: null },\n        ilo: { scope: null },\n        ilp: { scope: null },\n        ils: { scope: null },\n        ilu: { scope: null },\n        ilv: { scope: null },\n        ilw: { scope: null },\n        ima: { scope: null },\n        ime: { scope: null },\n        imi: { scope: null },\n        iml: { scope: null },\n        imn: { scope: null },\n        imo: { scope: null },\n        imr: { scope: null },\n        ims: { scope: null },\n        imy: { scope: null },\n        inb: { scope: null },\n        inc: { scope: \"collection\" },\n        ine: { scope: \"collection\" },\n        ing: { scope: null },\n        inh: { scope: null },\n        inj: { scope: null },\n        inl: { scope: null },\n        inm: { scope: null },\n        inn: { scope: null },\n        ino: { scope: null },\n        inp: { scope: null },\n        ins: { scope: null },\n        int: { scope: null },\n        inz: { scope: null },\n        ior: { scope: null },\n        iou: { scope: null },\n        iow: { scope: null },\n        ipi: { scope: null },\n        ipo: { scope: null },\n        iqu: { scope: null },\n        iqw: { scope: null },\n        ira: { scope: \"collection\" },\n        ire: { scope: null },\n        irh: { scope: null },\n        iri: { scope: null },\n        irk: { scope: null },\n        irn: { scope: null },\n        iro: { scope: \"collection\" },\n        irr: { scope: null },\n        iru: { scope: null },\n        irx: { scope: null },\n        iry: { scope: null },\n        isa: { scope: null },\n        isc: { scope: null },\n        isd: { scope: null },\n        ise: { scope: null },\n        isg: { scope: null },\n        ish: { scope: null },\n        isi: { scope: null },\n        isk: { scope: null },\n        ism: { scope: null },\n        isn: { scope: null },\n        iso: { scope: null },\n        isr: { scope: null },\n        ist: { scope: null },\n        isu: { scope: null },\n        itb: { scope: null },\n        itc: { scope: \"collection\" },\n        itd: { scope: null },\n        ite: { scope: null },\n        iti: { scope: null },\n        itk: { scope: null },\n        itl: { scope: null },\n        itm: { scope: null },\n        ito: { scope: null },\n        itr: { scope: null },\n        its: { scope: null },\n        itt: { scope: null },\n        itv: { scope: null },\n        itw: { scope: null },\n        itx: { scope: null },\n        ity: { scope: null },\n        itz: { scope: null },\n        ium: { scope: null },\n        ivb: { scope: null },\n        ivv: { scope: null },\n        iwk: { scope: null },\n        iwm: { scope: null },\n        iwo: { scope: null },\n        iws: { scope: null },\n        ixc: { scope: null },\n        ixl: { scope: null },\n        iya: { scope: null },\n        iyo: { scope: null },\n        iyx: { scope: null },\n        izh: { scope: null },\n        izi: { scope: null },\n        izr: { scope: null },\n        izz: { scope: null },\n        jaa: { scope: null },\n        jab: { scope: null },\n        jac: { scope: null },\n        jad: { scope: null },\n        jae: { scope: null },\n        jaf: { scope: null },\n        jah: { scope: null },\n        jaj: { scope: null },\n        jak: { scope: null },\n        jal: { scope: null },\n        jam: { scope: null },\n        jan: { scope: null },\n        jao: { scope: null },\n        jaq: { scope: null },\n        jar: { scope: null },\n        jas: { scope: null },\n        jat: { scope: null },\n        jau: { scope: null },\n        jax: { scope: null },\n        jay: { scope: null },\n        jaz: { scope: null },\n        jbe: { scope: null },\n        jbi: { scope: null },\n        jbj: { scope: null },\n        jbk: { scope: null },\n        jbm: { scope: null },\n        jbn: { scope: null },\n        jbo: { scope: null },\n        jbr: { scope: null },\n        jbt: { scope: null },\n        jbu: { scope: null },\n        jbw: { scope: null },\n        jcs: { scope: null },\n        jct: { scope: null },\n        jda: { scope: null },\n        jdg: { scope: null },\n        jdt: { scope: null },\n        jeb: { scope: null },\n        jee: { scope: null },\n        jeg: { scope: null },\n        jeh: { scope: null },\n        jei: { scope: null },\n        jek: { scope: null },\n        jel: { scope: null },\n        jen: { scope: null },\n        jer: { scope: null },\n        jet: { scope: null },\n        jeu: { scope: null },\n        jgb: { scope: null },\n        jge: { scope: null },\n        jgk: { scope: null },\n        jgo: { scope: null },\n        jhi: { scope: null },\n        jhs: { scope: null },\n        jia: { scope: null },\n        jib: { scope: null },\n        jic: { scope: null },\n        jid: { scope: null },\n        jie: { scope: null },\n        jig: { scope: null },\n        jih: { scope: null },\n        jii: { scope: null },\n        jil: { scope: null },\n        jim: { scope: null },\n        jio: { scope: null },\n        jiq: { scope: null },\n        jit: { scope: null },\n        jiu: { scope: null },\n        jiv: { scope: null },\n        jiy: { scope: null },\n        jje: { scope: null },\n        jjr: { scope: null },\n        jka: { scope: null },\n        jkm: { scope: null },\n        jko: { scope: null },\n        jkp: { scope: null },\n        jkr: { scope: null },\n        jks: { scope: null },\n        jku: { scope: null },\n        jle: { scope: null },\n        jls: { scope: null },\n        jma: { scope: null },\n        jmb: { scope: null },\n        jmc: { scope: null },\n        jmd: { scope: null },\n        jmi: { scope: null },\n        jml: { scope: null },\n        jmn: { scope: null },\n        jmr: { scope: null },\n        jms: { scope: null },\n        jmw: { scope: null },\n        jmx: { scope: null },\n        jna: { scope: null },\n        jnd: { scope: null },\n        jng: { scope: null },\n        jni: { scope: null },\n        jnj: { scope: null },\n        jnl: { scope: null },\n        jns: { scope: null },\n        job: { scope: null },\n        jod: { scope: null },\n        jog: { scope: null },\n        jor: { scope: null },\n        jos: { scope: null },\n        jow: { scope: null },\n        jpa: { scope: null },\n        jpr: { scope: null },\n        jpx: { scope: \"collection\" },\n        jqr: { scope: null },\n        jra: { scope: null },\n        jrb: { scope: \"macrolanguage\" },\n        jrr: { scope: null },\n        jrt: { scope: null },\n        jru: { scope: null },\n        jsl: { scope: null },\n        jua: { scope: null },\n        jub: { scope: null },\n        juc: { scope: null },\n        jud: { scope: null },\n        juh: { scope: null },\n        jui: { scope: null },\n        juk: { scope: null },\n        jul: { scope: null },\n        jum: { scope: null },\n        jun: { scope: null },\n        juo: { scope: null },\n        jup: { scope: null },\n        jur: { scope: null },\n        jus: { scope: null },\n        jut: { scope: null },\n        juu: { scope: null },\n        juw: { scope: null },\n        juy: { scope: null },\n        jvd: { scope: null },\n        jvn: { scope: null },\n        jwi: { scope: null },\n        jya: { scope: null },\n        jye: { scope: null },\n        jyy: { scope: null },\n        kaa: { scope: null },\n        kab: { scope: null },\n        kac: { scope: null },\n        kad: { scope: null },\n        kae: { scope: null },\n        kaf: { scope: null },\n        kag: { scope: null },\n        kah: { scope: null },\n        kai: { scope: null },\n        kaj: { scope: null },\n        kak: { scope: null },\n        kam: { scope: null },\n        kao: { scope: null },\n        kap: { scope: null },\n        kaq: { scope: null },\n        kar: { scope: \"collection\" },\n        kav: { scope: null },\n        kaw: { scope: null },\n        kax: { scope: null },\n        kay: { scope: null },\n        kba: { scope: null },\n        kbb: { scope: null },\n        kbc: { scope: null },\n        kbd: { scope: null },\n        kbe: { scope: null },\n        kbf: { scope: null },\n        kbg: { scope: null },\n        kbh: { scope: null },\n        kbi: { scope: null },\n        kbj: { scope: null },\n        kbk: { scope: null },\n        kbl: { scope: null },\n        kbm: { scope: null },\n        kbn: { scope: null },\n        kbo: { scope: null },\n        kbp: { scope: null },\n        kbq: { scope: null },\n        kbr: { scope: null },\n        kbs: { scope: null },\n        kbt: { scope: null },\n        kbu: { scope: null },\n        kbv: { scope: null },\n        kbw: { scope: null },\n        kbx: { scope: null },\n        kby: { scope: null },\n        kbz: { scope: null },\n        kca: { scope: null },\n        kcb: { scope: null },\n        kcc: { scope: null },\n        kcd: { scope: null },\n        kce: { scope: null },\n        kcf: { scope: null },\n        kcg: { scope: null },\n        kch: { scope: null },\n        kci: { scope: null },\n        kcj: { scope: null },\n        kck: { scope: null },\n        kcl: { scope: null },\n        kcm: { scope: null },\n        kcn: { scope: null },\n        kco: { scope: null },\n        kcp: { scope: null },\n        kcq: { scope: null },\n        kcr: { scope: null },\n        kcs: { scope: null },\n        kct: { scope: null },\n        kcu: { scope: null },\n        kcv: { scope: null },\n        kcw: { scope: null },\n        kcx: { scope: null },\n        kcy: { scope: null },\n        kcz: { scope: null },\n        kda: { scope: null },\n        kdc: { scope: null },\n        kdd: { scope: null },\n        kde: { scope: null },\n        kdf: { scope: null },\n        kdg: { scope: null },\n        kdh: { scope: null },\n        kdi: { scope: null },\n        kdj: { scope: null },\n        kdk: { scope: null },\n        kdl: { scope: null },\n        kdm: { scope: null },\n        kdn: { scope: null },\n        kdo: { scope: \"collection\" },\n        kdp: { scope: null },\n        kdq: { scope: null },\n        kdr: { scope: null },\n        kdt: { scope: null },\n        kdu: { scope: null },\n        kdv: { scope: null },\n        kdw: { scope: null },\n        kdx: { scope: null },\n        kdy: { scope: null },\n        kdz: { scope: null },\n        kea: { scope: null },\n        keb: { scope: null },\n        kec: { scope: null },\n        ked: { scope: null },\n        kee: { scope: null },\n        kef: { scope: null },\n        keg: { scope: null },\n        keh: { scope: null },\n        kei: { scope: null },\n        kej: { scope: null },\n        kek: { scope: null },\n        kel: { scope: null },\n        kem: { scope: null },\n        ken: { scope: null },\n        keo: { scope: null },\n        kep: { scope: null },\n        keq: { scope: null },\n        ker: { scope: null },\n        kes: { scope: null },\n        ket: { scope: null },\n        keu: { scope: null },\n        kev: { scope: null },\n        kew: { scope: null },\n        kex: { scope: null },\n        key: { scope: null },\n        kez: { scope: null },\n        kfa: { scope: null },\n        kfb: { scope: null },\n        kfc: { scope: null },\n        kfd: { scope: null },\n        kfe: { scope: null },\n        kff: { scope: null },\n        kfg: { scope: null },\n        kfh: { scope: null },\n        kfi: { scope: null },\n        kfj: { scope: null },\n        kfk: { scope: null },\n        kfl: { scope: null },\n        kfm: { scope: null },\n        kfn: { scope: null },\n        kfo: { scope: null },\n        kfp: { scope: null },\n        kfq: { scope: null },\n        kfr: { scope: null },\n        kfs: { scope: null },\n        kft: { scope: null },\n        kfu: { scope: null },\n        kfv: { scope: null },\n        kfw: { scope: null },\n        kfx: { scope: null },\n        kfy: { scope: null },\n        kfz: { scope: null },\n        kga: { scope: null },\n        kgb: { scope: null },\n        kgc: { scope: null },\n        kgd: { scope: null },\n        kge: { scope: null },\n        kgf: { scope: null },\n        kgg: { scope: null },\n        kgh: { scope: null },\n        kgi: { scope: null },\n        kgj: { scope: null },\n        kgk: { scope: null },\n        kgl: { scope: null },\n        kgm: { scope: null },\n        kgn: { scope: null },\n        kgo: { scope: null },\n        kgp: { scope: null },\n        kgq: { scope: null },\n        kgr: { scope: null },\n        kgs: { scope: null },\n        kgt: { scope: null },\n        kgu: { scope: null },\n        kgv: { scope: null },\n        kgw: { scope: null },\n        kgx: { scope: null },\n        kgy: { scope: null },\n        kha: { scope: null },\n        khb: { scope: null },\n        khc: { scope: null },\n        khd: { scope: null },\n        khe: { scope: null },\n        khf: { scope: null },\n        khg: { scope: null },\n        khh: { scope: null },\n        khi: { scope: \"collection\" },\n        khj: { scope: null },\n        khk: { scope: null },\n        khl: { scope: null },\n        khn: { scope: null },\n        kho: { scope: null },\n        khp: { scope: null },\n        khq: { scope: null },\n        khr: { scope: null },\n        khs: { scope: null },\n        kht: { scope: null },\n        khu: { scope: null },\n        khv: { scope: null },\n        khw: { scope: null },\n        khx: { scope: null },\n        khy: { scope: null },\n        khz: { scope: null },\n        kia: { scope: null },\n        kib: { scope: null },\n        kic: { scope: null },\n        kid: { scope: null },\n        kie: { scope: null },\n        kif: { scope: null },\n        kig: { scope: null },\n        kih: { scope: null },\n        kii: { scope: null },\n        kij: { scope: null },\n        kil: { scope: null },\n        kim: { scope: null },\n        kio: { scope: null },\n        kip: { scope: null },\n        kiq: { scope: null },\n        kis: { scope: null },\n        kit: { scope: null },\n        kiu: { scope: null },\n        kiv: { scope: null },\n        kiw: { scope: null },\n        kix: { scope: null },\n        kiy: { scope: null },\n        kiz: { scope: null },\n        kja: { scope: null },\n        kjb: { scope: null },\n        kjc: { scope: null },\n        kjd: { scope: null },\n        kje: { scope: null },\n        kjf: { scope: null },\n        kjg: { scope: null },\n        kjh: { scope: null },\n        kji: { scope: null },\n        kjj: { scope: null },\n        kjk: { scope: null },\n        kjl: { scope: null },\n        kjm: { scope: null },\n        kjn: { scope: null },\n        kjo: { scope: null },\n        kjp: { scope: null },\n        kjq: { scope: null },\n        kjr: { scope: null },\n        kjs: { scope: null },\n        kjt: { scope: null },\n        kju: { scope: null },\n        kjv: { scope: null },\n        kjx: { scope: null },\n        kjy: { scope: null },\n        kjz: { scope: null },\n        kka: { scope: null },\n        kkb: { scope: null },\n        kkc: { scope: null },\n        kkd: { scope: null },\n        kke: { scope: null },\n        kkf: { scope: null },\n        kkg: { scope: null },\n        kkh: { scope: null },\n        kki: { scope: null },\n        kkj: { scope: null },\n        kkk: { scope: null },\n        kkl: { scope: null },\n        kkm: { scope: null },\n        kkn: { scope: null },\n        kko: { scope: null },\n        kkp: { scope: null },\n        kkq: { scope: null },\n        kkr: { scope: null },\n        kks: { scope: null },\n        kkt: { scope: null },\n        kku: { scope: null },\n        kkv: { scope: null },\n        kkw: { scope: null },\n        kkx: { scope: null },\n        kky: { scope: null },\n        kkz: { scope: null },\n        kla: { scope: null },\n        klb: { scope: null },\n        klc: { scope: null },\n        kld: { scope: null },\n        kle: { scope: null },\n        klf: { scope: null },\n        klg: { scope: null },\n        klh: { scope: null },\n        kli: { scope: null },\n        klj: { scope: null },\n        klk: { scope: null },\n        kll: { scope: null },\n        klm: { scope: null },\n        kln: { scope: \"macrolanguage\" },\n        klo: { scope: null },\n        klp: { scope: null },\n        klq: { scope: null },\n        klr: { scope: null },\n        kls: { scope: null },\n        klt: { scope: null },\n        klu: { scope: null },\n        klv: { scope: null },\n        klw: { scope: null },\n        klx: { scope: null },\n        kly: { scope: null },\n        klz: { scope: null },\n        kma: { scope: null },\n        kmb: { scope: null },\n        kmc: { scope: null },\n        kmd: { scope: null },\n        kme: { scope: null },\n        kmf: { scope: null },\n        kmg: { scope: null },\n        kmh: { scope: null },\n        kmi: { scope: null },\n        kmj: { scope: null },\n        kmk: { scope: null },\n        kml: { scope: null },\n        kmm: { scope: null },\n        kmn: { scope: null },\n        kmo: { scope: null },\n        kmp: { scope: null },\n        kmq: { scope: null },\n        kmr: { scope: null },\n        kms: { scope: null },\n        kmt: { scope: null },\n        kmu: { scope: null },\n        kmv: { scope: null },\n        kmw: { scope: null },\n        kmx: { scope: null },\n        kmy: { scope: null },\n        kmz: { scope: null },\n        kna: { scope: null },\n        knb: { scope: null },\n        knc: { scope: null },\n        knd: { scope: null },\n        kne: { scope: null },\n        knf: { scope: null },\n        kng: { scope: null },\n        kni: { scope: null },\n        knj: { scope: null },\n        knk: { scope: null },\n        knl: { scope: null },\n        knm: { scope: null },\n        knn: { scope: null },\n        kno: { scope: null },\n        knp: { scope: null },\n        knq: { scope: null },\n        knr: { scope: null },\n        kns: { scope: null },\n        knt: { scope: null },\n        knu: { scope: null },\n        knv: { scope: null },\n        knw: { scope: null },\n        knx: { scope: null },\n        kny: { scope: null },\n        knz: { scope: null },\n        koa: { scope: null },\n        koc: { scope: null },\n        kod: { scope: null },\n        koe: { scope: null },\n        kof: { scope: null },\n        kog: { scope: null },\n        koh: { scope: null },\n        koi: { scope: null },\n        koj: { scope: null },\n        kok: { scope: \"macrolanguage\" },\n        kol: { scope: null },\n        koo: { scope: null },\n        kop: { scope: null },\n        koq: { scope: null },\n        kos: { scope: null },\n        kot: { scope: null },\n        kou: { scope: null },\n        kov: { scope: null },\n        kow: { scope: null },\n        kox: { scope: null },\n        koy: { scope: null },\n        koz: { scope: null },\n        kpa: { scope: null },\n        kpb: { scope: null },\n        kpc: { scope: null },\n        kpd: { scope: null },\n        kpe: { scope: \"macrolanguage\" },\n        kpf: { scope: null },\n        kpg: { scope: null },\n        kph: { scope: null },\n        kpi: { scope: null },\n        kpj: { scope: null },\n        kpk: { scope: null },\n        kpl: { scope: null },\n        kpm: { scope: null },\n        kpn: { scope: null },\n        kpo: { scope: null },\n        kpp: { scope: null },\n        kpq: { scope: null },\n        kpr: { scope: null },\n        kps: { scope: null },\n        kpt: { scope: null },\n        kpu: { scope: null },\n        kpv: { scope: null },\n        kpw: { scope: null },\n        kpx: { scope: null },\n        kpy: { scope: null },\n        kpz: { scope: null },\n        kqa: { scope: null },\n        kqb: { scope: null },\n        kqc: { scope: null },\n        kqd: { scope: null },\n        kqe: { scope: null },\n        kqf: { scope: null },\n        kqg: { scope: null },\n        kqh: { scope: null },\n        kqi: { scope: null },\n        kqj: { scope: null },\n        kqk: { scope: null },\n        kql: { scope: null },\n        kqm: { scope: null },\n        kqn: { scope: null },\n        kqo: { scope: null },\n        kqp: { scope: null },\n        kqq: { scope: null },\n        kqr: { scope: null },\n        kqs: { scope: null },\n        kqt: { scope: null },\n        kqu: { scope: null },\n        kqv: { scope: null },\n        kqw: { scope: null },\n        kqx: { scope: null },\n        kqy: { scope: null },\n        kqz: { scope: null },\n        kra: { scope: null },\n        krb: { scope: null },\n        krc: { scope: null },\n        krd: { scope: null },\n        kre: { scope: null },\n        krf: { scope: null },\n        krh: { scope: null },\n        kri: { scope: null },\n        krj: { scope: null },\n        krk: { scope: null },\n        krl: { scope: null },\n        krm: { scope: null },\n        krn: { scope: null },\n        kro: { scope: \"collection\" },\n        krp: { scope: null },\n        krr: { scope: null },\n        krs: { scope: null },\n        krt: { scope: null },\n        kru: { scope: null },\n        krv: { scope: null },\n        krw: { scope: null },\n        krx: { scope: null },\n        kry: { scope: null },\n        krz: { scope: null },\n        ksa: { scope: null },\n        ksb: { scope: null },\n        ksc: { scope: null },\n        ksd: { scope: null },\n        kse: { scope: null },\n        ksf: { scope: null },\n        ksg: { scope: null },\n        ksh: { scope: null },\n        ksi: { scope: null },\n        ksj: { scope: null },\n        ksk: { scope: null },\n        ksl: { scope: null },\n        ksm: { scope: null },\n        ksn: { scope: null },\n        kso: { scope: null },\n        ksp: { scope: null },\n        ksq: { scope: null },\n        ksr: { scope: null },\n        kss: { scope: null },\n        kst: { scope: null },\n        ksu: { scope: null },\n        ksv: { scope: null },\n        ksw: { scope: null },\n        ksx: { scope: null },\n        ksy: { scope: null },\n        ksz: { scope: null },\n        kta: { scope: null },\n        ktb: { scope: null },\n        ktc: { scope: null },\n        ktd: { scope: null },\n        kte: { scope: null },\n        ktf: { scope: null },\n        ktg: { scope: null },\n        kth: { scope: null },\n        kti: { scope: null },\n        ktj: { scope: null },\n        ktk: { scope: null },\n        ktl: { scope: null },\n        ktm: { scope: null },\n        ktn: { scope: null },\n        kto: { scope: null },\n        ktp: { scope: null },\n        ktq: { scope: null },\n        ktr: { scope: null },\n        kts: { scope: null },\n        ktt: { scope: null },\n        ktu: { scope: null },\n        ktv: { scope: null },\n        ktw: { scope: null },\n        ktx: { scope: null },\n        kty: { scope: null },\n        ktz: { scope: null },\n        kub: { scope: null },\n        kuc: { scope: null },\n        kud: { scope: null },\n        kue: { scope: null },\n        kuf: { scope: null },\n        kug: { scope: null },\n        kuh: { scope: null },\n        kui: { scope: null },\n        kuj: { scope: null },\n        kuk: { scope: null },\n        kul: { scope: null },\n        kum: { scope: null },\n        kun: { scope: null },\n        kuo: { scope: null },\n        kup: { scope: null },\n        kuq: { scope: null },\n        kus: { scope: null },\n        kut: { scope: null },\n        kuu: { scope: null },\n        kuv: { scope: null },\n        kuw: { scope: null },\n        kux: { scope: null },\n        kuy: { scope: null },\n        kuz: { scope: null },\n        kva: { scope: null },\n        kvb: { scope: null },\n        kvc: { scope: null },\n        kvd: { scope: null },\n        kve: { scope: null },\n        kvf: { scope: null },\n        kvg: { scope: null },\n        kvh: { scope: null },\n        kvi: { scope: null },\n        kvj: { scope: null },\n        kvk: { scope: null },\n        kvl: { scope: null },\n        kvm: { scope: null },\n        kvn: { scope: null },\n        kvo: { scope: null },\n        kvp: { scope: null },\n        kvq: { scope: null },\n        kvr: { scope: null },\n        kvs: { scope: null },\n        kvt: { scope: null },\n        kvu: { scope: null },\n        kvv: { scope: null },\n        kvw: { scope: null },\n        kvx: { scope: null },\n        kvy: { scope: null },\n        kvz: { scope: null },\n        kwa: { scope: null },\n        kwb: { scope: null },\n        kwc: { scope: null },\n        kwd: { scope: null },\n        kwe: { scope: null },\n        kwf: { scope: null },\n        kwg: { scope: null },\n        kwh: { scope: null },\n        kwi: { scope: null },\n        kwj: { scope: null },\n        kwk: { scope: null },\n        kwl: { scope: null },\n        kwm: { scope: null },\n        kwn: { scope: null },\n        kwo: { scope: null },\n        kwp: { scope: null },\n        kwq: { scope: null },\n        kwr: { scope: null },\n        kws: { scope: null },\n        kwt: { scope: null },\n        kwu: { scope: null },\n        kwv: { scope: null },\n        kww: { scope: null },\n        kwx: { scope: null },\n        kwy: { scope: null },\n        kwz: { scope: null },\n        kxa: { scope: null },\n        kxb: { scope: null },\n        kxc: { scope: null },\n        kxd: { scope: null },\n        kxe: { scope: null },\n        kxf: { scope: null },\n        kxh: { scope: null },\n        kxi: { scope: null },\n        kxj: { scope: null },\n        kxk: { scope: null },\n        kxl: { scope: null },\n        kxm: { scope: null },\n        kxn: { scope: null },\n        kxo: { scope: null },\n        kxp: { scope: null },\n        kxq: { scope: null },\n        kxr: { scope: null },\n        kxs: { scope: null },\n        kxt: { scope: null },\n        kxu: { scope: null },\n        kxv: { scope: null },\n        kxw: { scope: null },\n        kxx: { scope: null },\n        kxy: { scope: null },\n        kxz: { scope: null },\n        kya: { scope: null },\n        kyb: { scope: null },\n        kyc: { scope: null },\n        kyd: { scope: null },\n        kye: { scope: null },\n        kyf: { scope: null },\n        kyg: { scope: null },\n        kyh: { scope: null },\n        kyi: { scope: null },\n        kyj: { scope: null },\n        kyk: { scope: null },\n        kyl: { scope: null },\n        kym: { scope: null },\n        kyn: { scope: null },\n        kyo: { scope: null },\n        kyp: { scope: null },\n        kyq: { scope: null },\n        kyr: { scope: null },\n        kys: { scope: null },\n        kyt: { scope: null },\n        kyu: { scope: null },\n        kyv: { scope: null },\n        kyw: { scope: null },\n        kyx: { scope: null },\n        kyy: { scope: null },\n        kyz: { scope: null },\n        kza: { scope: null },\n        kzb: { scope: null },\n        kzc: { scope: null },\n        kzd: { scope: null },\n        kze: { scope: null },\n        kzf: { scope: null },\n        kzg: { scope: null },\n        kzh: { scope: null },\n        kzi: { scope: null },\n        kzj: { scope: null },\n        kzk: { scope: null },\n        kzl: { scope: null },\n        kzm: { scope: null },\n        kzn: { scope: null },\n        kzo: { scope: null },\n        kzp: { scope: null },\n        kzq: { scope: null },\n        kzr: { scope: null },\n        kzs: { scope: null },\n        kzt: { scope: null },\n        kzu: { scope: null },\n        kzv: { scope: null },\n        kzw: { scope: null },\n        kzx: { scope: null },\n        kzy: { scope: null },\n        kzz: { scope: null },\n        laa: { scope: null },\n        lab: { scope: null },\n        lac: { scope: null },\n        lad: { scope: null },\n        lae: { scope: null },\n        laf: { scope: null },\n        lag: { scope: null },\n        lah: { scope: \"macrolanguage\" },\n        lai: { scope: null },\n        laj: { scope: null },\n        lak: { scope: null },\n        lal: { scope: null },\n        lam: { scope: null },\n        lan: { scope: null },\n        lap: { scope: null },\n        laq: { scope: null },\n        lar: { scope: null },\n        las: { scope: null },\n        lau: { scope: null },\n        law: { scope: null },\n        lax: { scope: null },\n        lay: { scope: null },\n        laz: { scope: null },\n        lba: { scope: null },\n        lbb: { scope: null },\n        lbc: { scope: null },\n        lbe: { scope: null },\n        lbf: { scope: null },\n        lbg: { scope: null },\n        lbi: { scope: null },\n        lbj: { scope: null },\n        lbk: { scope: null },\n        lbl: { scope: null },\n        lbm: { scope: null },\n        lbn: { scope: null },\n        lbo: { scope: null },\n        lbq: { scope: null },\n        lbr: { scope: null },\n        lbs: { scope: null },\n        lbt: { scope: null },\n        lbu: { scope: null },\n        lbv: { scope: null },\n        lbw: { scope: null },\n        lbx: { scope: null },\n        lby: { scope: null },\n        lbz: { scope: null },\n        lcc: { scope: null },\n        lcd: { scope: null },\n        lce: { scope: null },\n        lcf: { scope: null },\n        lch: { scope: null },\n        lcl: { scope: null },\n        lcm: { scope: null },\n        lcp: { scope: null },\n        lcq: { scope: null },\n        lcs: { scope: null },\n        lda: { scope: null },\n        ldb: { scope: null },\n        ldd: { scope: null },\n        ldg: { scope: null },\n        ldh: { scope: null },\n        ldi: { scope: null },\n        ldj: { scope: null },\n        ldk: { scope: null },\n        ldl: { scope: null },\n        ldm: { scope: null },\n        ldn: { scope: null },\n        ldo: { scope: null },\n        ldp: { scope: null },\n        ldq: { scope: null },\n        lea: { scope: null },\n        leb: { scope: null },\n        lec: { scope: null },\n        led: { scope: null },\n        lee: { scope: null },\n        lef: { scope: null },\n        leg: { scope: null },\n        leh: { scope: null },\n        lei: { scope: null },\n        lej: { scope: null },\n        lek: { scope: null },\n        lel: { scope: null },\n        lem: { scope: null },\n        len: { scope: null },\n        leo: { scope: null },\n        lep: { scope: null },\n        leq: { scope: null },\n        ler: { scope: null },\n        les: { scope: null },\n        let: { scope: null },\n        leu: { scope: null },\n        lev: { scope: null },\n        lew: { scope: null },\n        lex: { scope: null },\n        ley: { scope: null },\n        lez: { scope: null },\n        lfa: { scope: null },\n        lfn: { scope: null },\n        lga: { scope: null },\n        lgb: { scope: null },\n        lgg: { scope: null },\n        lgh: { scope: null },\n        lgi: { scope: null },\n        lgk: { scope: null },\n        lgl: { scope: null },\n        lgm: { scope: null },\n        lgn: { scope: null },\n        lgq: { scope: null },\n        lgr: { scope: null },\n        lgt: { scope: null },\n        lgu: { scope: null },\n        lgz: { scope: null },\n        lha: { scope: null },\n        lhh: { scope: null },\n        lhi: { scope: null },\n        lhl: { scope: null },\n        lhm: { scope: null },\n        lhn: { scope: null },\n        lhp: { scope: null },\n        lhs: { scope: null },\n        lht: { scope: null },\n        lhu: { scope: null },\n        lia: { scope: null },\n        lib: { scope: null },\n        lic: { scope: null },\n        lid: { scope: null },\n        lie: { scope: null },\n        lif: { scope: null },\n        lig: { scope: null },\n        lih: { scope: null },\n        lii: { scope: null },\n        lij: { scope: null },\n        lik: { scope: null },\n        lil: { scope: null },\n        lio: { scope: null },\n        lip: { scope: null },\n        liq: { scope: null },\n        lir: { scope: null },\n        lis: { scope: null },\n        liu: { scope: null },\n        liv: { scope: null },\n        liw: { scope: null },\n        lix: { scope: null },\n        liy: { scope: null },\n        liz: { scope: null },\n        lja: { scope: null },\n        lje: { scope: null },\n        lji: { scope: null },\n        ljl: { scope: null },\n        ljp: { scope: null },\n        ljw: { scope: null },\n        ljx: { scope: null },\n        lka: { scope: null },\n        lkb: { scope: null },\n        lkc: { scope: null },\n        lkd: { scope: null },\n        lke: { scope: null },\n        lkh: { scope: null },\n        lki: { scope: null },\n        lkj: { scope: null },\n        lkl: { scope: null },\n        lkm: { scope: null },\n        lkn: { scope: null },\n        lko: { scope: null },\n        lkr: { scope: null },\n        lks: { scope: null },\n        lkt: { scope: null },\n        lku: { scope: null },\n        lky: { scope: null },\n        lla: { scope: null },\n        llb: { scope: null },\n        llc: { scope: null },\n        lld: { scope: null },\n        lle: { scope: null },\n        llf: { scope: null },\n        llg: { scope: null },\n        llh: { scope: null },\n        lli: { scope: null },\n        llj: { scope: null },\n        llk: { scope: null },\n        lll: { scope: null },\n        llm: { scope: null },\n        lln: { scope: null },\n        llo: { scope: null },\n        llp: { scope: null },\n        llq: { scope: null },\n        lls: { scope: null },\n        llu: { scope: null },\n        llx: { scope: null },\n        lma: { scope: null },\n        lmb: { scope: null },\n        lmc: { scope: null },\n        lmd: { scope: null },\n        lme: { scope: null },\n        lmf: { scope: null },\n        lmg: { scope: null },\n        lmh: { scope: null },\n        lmi: { scope: null },\n        lmj: { scope: null },\n        lmk: { scope: null },\n        lml: { scope: null },\n        lmm: { scope: null },\n        lmn: { scope: null },\n        lmo: { scope: null },\n        lmp: { scope: null },\n        lmq: { scope: null },\n        lmr: { scope: null },\n        lmu: { scope: null },\n        lmv: { scope: null },\n        lmw: { scope: null },\n        lmx: { scope: null },\n        lmy: { scope: null },\n        lmz: { scope: null },\n        lna: { scope: null },\n        lnb: { scope: null },\n        lnd: { scope: null },\n        lng: { scope: null },\n        lnh: { scope: null },\n        lni: { scope: null },\n        lnj: { scope: null },\n        lnl: { scope: null },\n        lnm: { scope: null },\n        lnn: { scope: null },\n        lno: { scope: null },\n        lns: { scope: null },\n        lnu: { scope: null },\n        lnw: { scope: null },\n        lnz: { scope: null },\n        loa: { scope: null },\n        lob: { scope: null },\n        loc: { scope: null },\n        loe: { scope: null },\n        lof: { scope: null },\n        log: { scope: null },\n        loh: { scope: null },\n        loi: { scope: null },\n        loj: { scope: null },\n        lok: { scope: null },\n        lol: { scope: null },\n        lom: { scope: null },\n        lon: { scope: null },\n        loo: { scope: null },\n        lop: { scope: null },\n        loq: { scope: null },\n        lor: { scope: null },\n        los: { scope: null },\n        lot: { scope: null },\n        lou: { scope: null },\n        lov: { scope: null },\n        low: { scope: null },\n        lox: { scope: null },\n        loy: { scope: null },\n        loz: { scope: null },\n        lpa: { scope: null },\n        lpe: { scope: null },\n        lpn: { scope: null },\n        lpo: { scope: null },\n        lpx: { scope: null },\n        lra: { scope: null },\n        lrc: { scope: null },\n        lre: { scope: null },\n        lrg: { scope: null },\n        lri: { scope: null },\n        lrk: { scope: null },\n        lrl: { scope: null },\n        lrm: { scope: null },\n        lrn: { scope: null },\n        lro: { scope: null },\n        lrr: { scope: null },\n        lrt: { scope: null },\n        lrv: { scope: null },\n        lrz: { scope: null },\n        lsa: { scope: null },\n        lsb: { scope: null },\n        lsd: { scope: null },\n        lse: { scope: null },\n        lsg: { scope: null },\n        lsh: { scope: null },\n        lsi: { scope: null },\n        lsl: { scope: null },\n        lsm: { scope: null },\n        lsn: { scope: null },\n        lso: { scope: null },\n        lsp: { scope: null },\n        lsr: { scope: null },\n        lss: { scope: null },\n        lst: { scope: null },\n        lsv: { scope: null },\n        lsy: { scope: null },\n        ltc: { scope: null },\n        ltg: { scope: null },\n        lth: { scope: null },\n        lti: { scope: null },\n        ltn: { scope: null },\n        lto: { scope: null },\n        lts: { scope: null },\n        ltu: { scope: null },\n        lua: { scope: null },\n        luc: { scope: null },\n        lud: { scope: null },\n        lue: { scope: null },\n        luf: { scope: null },\n        lui: { scope: null },\n        luj: { scope: null },\n        luk: { scope: null },\n        lul: { scope: null },\n        lum: { scope: null },\n        lun: { scope: null },\n        luo: { scope: null },\n        lup: { scope: null },\n        luq: { scope: null },\n        lur: { scope: null },\n        lus: { scope: null },\n        lut: { scope: null },\n        luu: { scope: null },\n        luv: { scope: null },\n        luw: { scope: null },\n        luy: { scope: \"macrolanguage\" },\n        luz: { scope: null },\n        lva: { scope: null },\n        lvi: { scope: null },\n        lvk: { scope: null },\n        lvs: { scope: null },\n        lvu: { scope: null },\n        lwa: { scope: null },\n        lwe: { scope: null },\n        lwg: { scope: null },\n        lwh: { scope: null },\n        lwl: { scope: null },\n        lwm: { scope: null },\n        lwo: { scope: null },\n        lws: { scope: null },\n        lwt: { scope: null },\n        lwu: { scope: null },\n        lww: { scope: null },\n        lxm: { scope: null },\n        lya: { scope: null },\n        lyg: { scope: null },\n        lyn: { scope: null },\n        lzh: { scope: null },\n        lzl: { scope: null },\n        lzn: { scope: null },\n        lzz: { scope: null },\n        maa: { scope: null },\n        mab: { scope: null },\n        mad: { scope: null },\n        mae: { scope: null },\n        maf: { scope: null },\n        mag: { scope: null },\n        mai: { scope: null },\n        maj: { scope: null },\n        mak: { scope: null },\n        mam: { scope: null },\n        man: { scope: \"macrolanguage\" },\n        map: { scope: \"collection\" },\n        maq: { scope: null },\n        mas: { scope: null },\n        mat: { scope: null },\n        mau: { scope: null },\n        mav: { scope: null },\n        maw: { scope: null },\n        max: { scope: null },\n        maz: { scope: null },\n        mba: { scope: null },\n        mbb: { scope: null },\n        mbc: { scope: null },\n        mbd: { scope: null },\n        mbe: { scope: null },\n        mbf: { scope: null },\n        mbh: { scope: null },\n        mbi: { scope: null },\n        mbj: { scope: null },\n        mbk: { scope: null },\n        mbl: { scope: null },\n        mbm: { scope: null },\n        mbn: { scope: null },\n        mbo: { scope: null },\n        mbp: { scope: null },\n        mbq: { scope: null },\n        mbr: { scope: null },\n        mbs: { scope: null },\n        mbt: { scope: null },\n        mbu: { scope: null },\n        mbv: { scope: null },\n        mbw: { scope: null },\n        mbx: { scope: null },\n        mby: { scope: null },\n        mbz: { scope: null },\n        mca: { scope: null },\n        mcb: { scope: null },\n        mcc: { scope: null },\n        mcd: { scope: null },\n        mce: { scope: null },\n        mcf: { scope: null },\n        mcg: { scope: null },\n        mch: { scope: null },\n        mci: { scope: null },\n        mcj: { scope: null },\n        mck: { scope: null },\n        mcl: { scope: null },\n        mcm: { scope: null },\n        mcn: { scope: null },\n        mco: { scope: null },\n        mcp: { scope: null },\n        mcq: { scope: null },\n        mcr: { scope: null },\n        mcs: { scope: null },\n        mct: { scope: null },\n        mcu: { scope: null },\n        mcv: { scope: null },\n        mcw: { scope: null },\n        mcx: { scope: null },\n        mcy: { scope: null },\n        mcz: { scope: null },\n        mda: { scope: null },\n        mdb: { scope: null },\n        mdc: { scope: null },\n        mdd: { scope: null },\n        mde: { scope: null },\n        mdf: { scope: null },\n        mdg: { scope: null },\n        mdh: { scope: null },\n        mdi: { scope: null },\n        mdj: { scope: null },\n        mdk: { scope: null },\n        mdl: { scope: null },\n        mdm: { scope: null },\n        mdn: { scope: null },\n        mdp: { scope: null },\n        mdq: { scope: null },\n        mdr: { scope: null },\n        mds: { scope: null },\n        mdt: { scope: null },\n        mdu: { scope: null },\n        mdv: { scope: null },\n        mdw: { scope: null },\n        mdx: { scope: null },\n        mdy: { scope: null },\n        mdz: { scope: null },\n        mea: { scope: null },\n        meb: { scope: null },\n        mec: { scope: null },\n        med: { scope: null },\n        mee: { scope: null },\n        mef: { scope: null },\n        meg: { scope: null },\n        meh: { scope: null },\n        mei: { scope: null },\n        mej: { scope: null },\n        mek: { scope: null },\n        mel: { scope: null },\n        mem: { scope: null },\n        men: { scope: null },\n        meo: { scope: null },\n        mep: { scope: null },\n        meq: { scope: null },\n        mer: { scope: null },\n        mes: { scope: null },\n        met: { scope: null },\n        meu: { scope: null },\n        mev: { scope: null },\n        mew: { scope: null },\n        mey: { scope: null },\n        mez: { scope: null },\n        mfa: { scope: null },\n        mfb: { scope: null },\n        mfc: { scope: null },\n        mfd: { scope: null },\n        mfe: { scope: null },\n        mff: { scope: null },\n        mfg: { scope: null },\n        mfh: { scope: null },\n        mfi: { scope: null },\n        mfj: { scope: null },\n        mfk: { scope: null },\n        mfl: { scope: null },\n        mfm: { scope: null },\n        mfn: { scope: null },\n        mfo: { scope: null },\n        mfp: { scope: null },\n        mfq: { scope: null },\n        mfr: { scope: null },\n        mfs: { scope: null },\n        mft: { scope: null },\n        mfu: { scope: null },\n        mfv: { scope: null },\n        mfw: { scope: null },\n        mfx: { scope: null },\n        mfy: { scope: null },\n        mfz: { scope: null },\n        mga: { scope: null },\n        mgb: { scope: null },\n        mgc: { scope: null },\n        mgd: { scope: null },\n        mge: { scope: null },\n        mgf: { scope: null },\n        mgg: { scope: null },\n        mgh: { scope: null },\n        mgi: { scope: null },\n        mgj: { scope: null },\n        mgk: { scope: null },\n        mgl: { scope: null },\n        mgm: { scope: null },\n        mgn: { scope: null },\n        mgo: { scope: null },\n        mgp: { scope: null },\n        mgq: { scope: null },\n        mgr: { scope: null },\n        mgs: { scope: null },\n        mgt: { scope: null },\n        mgu: { scope: null },\n        mgv: { scope: null },\n        mgw: { scope: null },\n        mgx: { scope: null },\n        mgy: { scope: null },\n        mgz: { scope: null },\n        mha: { scope: null },\n        mhb: { scope: null },\n        mhc: { scope: null },\n        mhd: { scope: null },\n        mhe: { scope: null },\n        mhf: { scope: null },\n        mhg: { scope: null },\n        mhh: { scope: null },\n        mhi: { scope: null },\n        mhj: { scope: null },\n        mhk: { scope: null },\n        mhl: { scope: null },\n        mhm: { scope: null },\n        mhn: { scope: null },\n        mho: { scope: null },\n        mhp: { scope: null },\n        mhq: { scope: null },\n        mhr: { scope: null },\n        mhs: { scope: null },\n        mht: { scope: null },\n        mhu: { scope: null },\n        mhw: { scope: null },\n        mhx: { scope: null },\n        mhy: { scope: null },\n        mhz: { scope: null },\n        mia: { scope: null },\n        mib: { scope: null },\n        mic: { scope: null },\n        mid: { scope: null },\n        mie: { scope: null },\n        mif: { scope: null },\n        mig: { scope: null },\n        mih: { scope: null },\n        mii: { scope: null },\n        mij: { scope: null },\n        mik: { scope: null },\n        mil: { scope: null },\n        mim: { scope: null },\n        min: { scope: null },\n        mio: { scope: null },\n        mip: { scope: null },\n        miq: { scope: null },\n        mir: { scope: null },\n        mis: { scope: \"special\" },\n        mit: { scope: null },\n        miu: { scope: null },\n        miw: { scope: null },\n        mix: { scope: null },\n        miy: { scope: null },\n        miz: { scope: null },\n        mja: { scope: null },\n        mjb: { scope: null },\n        mjc: { scope: null },\n        mjd: { scope: null },\n        mje: { scope: null },\n        mjg: { scope: null },\n        mjh: { scope: null },\n        mji: { scope: null },\n        mjj: { scope: null },\n        mjk: { scope: null },\n        mjl: { scope: null },\n        mjm: { scope: null },\n        mjn: { scope: null },\n        mjo: { scope: null },\n        mjp: { scope: null },\n        mjq: { scope: null },\n        mjr: { scope: null },\n        mjs: { scope: null },\n        mjt: { scope: null },\n        mju: { scope: null },\n        mjv: { scope: null },\n        mjw: { scope: null },\n        mjx: { scope: null },\n        mjy: { scope: null },\n        mjz: { scope: null },\n        mka: { scope: null },\n        mkb: { scope: null },\n        mkc: { scope: null },\n        mke: { scope: null },\n        mkf: { scope: null },\n        mkg: { scope: null },\n        mkh: { scope: \"collection\" },\n        mki: { scope: null },\n        mkj: { scope: null },\n        mkk: { scope: null },\n        mkl: { scope: null },\n        mkm: { scope: null },\n        mkn: { scope: null },\n        mko: { scope: null },\n        mkp: { scope: null },\n        mkq: { scope: null },\n        mkr: { scope: null },\n        mks: { scope: null },\n        mkt: { scope: null },\n        mku: { scope: null },\n        mkv: { scope: null },\n        mkw: { scope: null },\n        mkx: { scope: null },\n        mky: { scope: null },\n        mkz: { scope: null },\n        mla: { scope: null },\n        mlb: { scope: null },\n        mlc: { scope: null },\n        mld: { scope: null },\n        mle: { scope: null },\n        mlf: { scope: null },\n        mlh: { scope: null },\n        mli: { scope: null },\n        mlj: { scope: null },\n        mlk: { scope: null },\n        mll: { scope: null },\n        mlm: { scope: null },\n        mln: { scope: null },\n        mlo: { scope: null },\n        mlp: { scope: null },\n        mlq: { scope: null },\n        mlr: { scope: null },\n        mls: { scope: null },\n        mlu: { scope: null },\n        mlv: { scope: null },\n        mlw: { scope: null },\n        mlx: { scope: null },\n        mlz: { scope: null },\n        mma: { scope: null },\n        mmb: { scope: null },\n        mmc: { scope: null },\n        mmd: { scope: null },\n        mme: { scope: null },\n        mmf: { scope: null },\n        mmg: { scope: null },\n        mmh: { scope: null },\n        mmi: { scope: null },\n        mmj: { scope: null },\n        mmk: { scope: null },\n        mml: { scope: null },\n        mmm: { scope: null },\n        mmn: { scope: null },\n        mmo: { scope: null },\n        mmp: { scope: null },\n        mmq: { scope: null },\n        mmr: { scope: null },\n        mmt: { scope: null },\n        mmu: { scope: null },\n        mmv: { scope: null },\n        mmw: { scope: null },\n        mmx: { scope: null },\n        mmy: { scope: null },\n        mmz: { scope: null },\n        mna: { scope: null },\n        mnb: { scope: null },\n        mnc: { scope: null },\n        mnd: { scope: null },\n        mne: { scope: null },\n        mnf: { scope: null },\n        mng: { scope: null },\n        mnh: { scope: null },\n        mni: { scope: null },\n        mnj: { scope: null },\n        mnk: { scope: null },\n        mnl: { scope: null },\n        mnm: { scope: null },\n        mnn: { scope: null },\n        mno: { scope: \"collection\" },\n        mnp: { scope: null },\n        mnq: { scope: null },\n        mnr: { scope: null },\n        mns: { scope: null },\n        mnt: { scope: null },\n        mnu: { scope: null },\n        mnv: { scope: null },\n        mnw: { scope: null },\n        mnx: { scope: null },\n        mny: { scope: null },\n        mnz: { scope: null },\n        moa: { scope: null },\n        moc: { scope: null },\n        mod: { scope: null },\n        moe: { scope: null },\n        mof: { scope: null },\n        mog: { scope: null },\n        moh: { scope: null },\n        moi: { scope: null },\n        moj: { scope: null },\n        mok: { scope: null },\n        mom: { scope: null },\n        moo: { scope: null },\n        mop: { scope: null },\n        moq: { scope: null },\n        mor: { scope: null },\n        mos: { scope: null },\n        mot: { scope: null },\n        mou: { scope: null },\n        mov: { scope: null },\n        mow: { scope: null },\n        mox: { scope: null },\n        moy: { scope: null },\n        moz: { scope: null },\n        mpa: { scope: null },\n        mpb: { scope: null },\n        mpc: { scope: null },\n        mpd: { scope: null },\n        mpe: { scope: null },\n        mpg: { scope: null },\n        mph: { scope: null },\n        mpi: { scope: null },\n        mpj: { scope: null },\n        mpk: { scope: null },\n        mpl: { scope: null },\n        mpm: { scope: null },\n        mpn: { scope: null },\n        mpo: { scope: null },\n        mpp: { scope: null },\n        mpq: { scope: null },\n        mpr: { scope: null },\n        mps: { scope: null },\n        mpt: { scope: null },\n        mpu: { scope: null },\n        mpv: { scope: null },\n        mpw: { scope: null },\n        mpx: { scope: null },\n        mpy: { scope: null },\n        mpz: { scope: null },\n        mqa: { scope: null },\n        mqb: { scope: null },\n        mqc: { scope: null },\n        mqe: { scope: null },\n        mqf: { scope: null },\n        mqg: { scope: null },\n        mqh: { scope: null },\n        mqi: { scope: null },\n        mqj: { scope: null },\n        mqk: { scope: null },\n        mql: { scope: null },\n        mqm: { scope: null },\n        mqn: { scope: null },\n        mqo: { scope: null },\n        mqp: { scope: null },\n        mqq: { scope: null },\n        mqr: { scope: null },\n        mqs: { scope: null },\n        mqt: { scope: null },\n        mqu: { scope: null },\n        mqv: { scope: null },\n        mqw: { scope: null },\n        mqx: { scope: null },\n        mqy: { scope: null },\n        mqz: { scope: null },\n        mra: { scope: null },\n        mrb: { scope: null },\n        mrc: { scope: null },\n        mrd: { scope: null },\n        mre: { scope: null },\n        mrf: { scope: null },\n        mrg: { scope: null },\n        mrh: { scope: null },\n        mrj: { scope: null },\n        mrk: { scope: null },\n        mrl: { scope: null },\n        mrm: { scope: null },\n        mrn: { scope: null },\n        mro: { scope: null },\n        mrp: { scope: null },\n        mrq: { scope: null },\n        mrr: { scope: null },\n        mrs: { scope: null },\n        mrt: { scope: null },\n        mru: { scope: null },\n        mrv: { scope: null },\n        mrw: { scope: null },\n        mrx: { scope: null },\n        mry: { scope: null },\n        mrz: { scope: null },\n        msb: { scope: null },\n        msc: { scope: null },\n        msd: { scope: null },\n        mse: { scope: null },\n        msf: { scope: null },\n        msg: { scope: null },\n        msh: { scope: null },\n        msi: { scope: null },\n        msj: { scope: null },\n        msk: { scope: null },\n        msl: { scope: null },\n        msm: { scope: null },\n        msn: { scope: null },\n        mso: { scope: null },\n        msp: { scope: null },\n        msq: { scope: null },\n        msr: { scope: null },\n        mss: { scope: null },\n        mst: { scope: null },\n        msu: { scope: null },\n        msv: { scope: null },\n        msw: { scope: null },\n        msx: { scope: null },\n        msy: { scope: null },\n        msz: { scope: null },\n        mta: { scope: null },\n        mtb: { scope: null },\n        mtc: { scope: null },\n        mtd: { scope: null },\n        mte: { scope: null },\n        mtf: { scope: null },\n        mtg: { scope: null },\n        mth: { scope: null },\n        mti: { scope: null },\n        mtj: { scope: null },\n        mtk: { scope: null },\n        mtl: { scope: null },\n        mtm: { scope: null },\n        mtn: { scope: null },\n        mto: { scope: null },\n        mtp: { scope: null },\n        mtq: { scope: null },\n        mtr: { scope: null },\n        mts: { scope: null },\n        mtt: { scope: null },\n        mtu: { scope: null },\n        mtv: { scope: null },\n        mtw: { scope: null },\n        mtx: { scope: null },\n        mty: { scope: null },\n        mua: { scope: null },\n        mub: { scope: null },\n        muc: { scope: null },\n        mud: { scope: null },\n        mue: { scope: null },\n        mug: { scope: null },\n        muh: { scope: null },\n        mui: { scope: null },\n        muj: { scope: null },\n        muk: { scope: null },\n        mul: { scope: \"special\" },\n        mum: { scope: null },\n        mun: { scope: \"collection\" },\n        muo: { scope: null },\n        mup: { scope: null },\n        muq: { scope: null },\n        mur: { scope: null },\n        mus: { scope: null },\n        mut: { scope: null },\n        muu: { scope: null },\n        muv: { scope: null },\n        mux: { scope: null },\n        muy: { scope: null },\n        muz: { scope: null },\n        mva: { scope: null },\n        mvb: { scope: null },\n        mvd: { scope: null },\n        mve: { scope: null },\n        mvf: { scope: null },\n        mvg: { scope: null },\n        mvh: { scope: null },\n        mvi: { scope: null },\n        mvk: { scope: null },\n        mvl: { scope: null },\n        mvm: { scope: null },\n        mvn: { scope: null },\n        mvo: { scope: null },\n        mvp: { scope: null },\n        mvq: { scope: null },\n        mvr: { scope: null },\n        mvs: { scope: null },\n        mvt: { scope: null },\n        mvu: { scope: null },\n        mvv: { scope: null },\n        mvw: { scope: null },\n        mvx: { scope: null },\n        mvy: { scope: null },\n        mvz: { scope: null },\n        mwa: { scope: null },\n        mwb: { scope: null },\n        mwc: { scope: null },\n        mwd: { scope: null },\n        mwe: { scope: null },\n        mwf: { scope: null },\n        mwg: { scope: null },\n        mwh: { scope: null },\n        mwi: { scope: null },\n        mwj: { scope: null },\n        mwk: { scope: null },\n        mwl: { scope: null },\n        mwm: { scope: null },\n        mwn: { scope: null },\n        mwo: { scope: null },\n        mwp: { scope: null },\n        mwq: { scope: null },\n        mwr: { scope: \"macrolanguage\" },\n        mws: { scope: null },\n        mwt: { scope: null },\n        mwu: { scope: null },\n        mwv: { scope: null },\n        mww: { scope: null },\n        mwx: { scope: null },\n        mwy: { scope: null },\n        mwz: { scope: null },\n        mxa: { scope: null },\n        mxb: { scope: null },\n        mxc: { scope: null },\n        mxd: { scope: null },\n        mxe: { scope: null },\n        mxf: { scope: null },\n        mxg: { scope: null },\n        mxh: { scope: null },\n        mxi: { scope: null },\n        mxj: { scope: null },\n        mxk: { scope: null },\n        mxl: { scope: null },\n        mxm: { scope: null },\n        mxn: { scope: null },\n        mxo: { scope: null },\n        mxp: { scope: null },\n        mxq: { scope: null },\n        mxr: { scope: null },\n        mxs: { scope: null },\n        mxt: { scope: null },\n        mxu: { scope: null },\n        mxv: { scope: null },\n        mxw: { scope: null },\n        mxx: { scope: null },\n        mxy: { scope: null },\n        mxz: { scope: null },\n        myb: { scope: null },\n        myc: { scope: null },\n        myd: { scope: null },\n        mye: { scope: null },\n        myf: { scope: null },\n        myg: { scope: null },\n        myh: { scope: null },\n        myi: { scope: null },\n        myj: { scope: null },\n        myk: { scope: null },\n        myl: { scope: null },\n        mym: { scope: null },\n        myn: { scope: \"collection\" },\n        myo: { scope: null },\n        myp: { scope: null },\n        myq: { scope: null },\n        myr: { scope: null },\n        mys: { scope: null },\n        myt: { scope: null },\n        myu: { scope: null },\n        myv: { scope: null },\n        myw: { scope: null },\n        myx: { scope: null },\n        myy: { scope: null },\n        myz: { scope: null },\n        mza: { scope: null },\n        mzb: { scope: null },\n        mzc: { scope: null },\n        mzd: { scope: null },\n        mze: { scope: null },\n        mzg: { scope: null },\n        mzh: { scope: null },\n        mzi: { scope: null },\n        mzj: { scope: null },\n        mzk: { scope: null },\n        mzl: { scope: null },\n        mzm: { scope: null },\n        mzn: { scope: null },\n        mzo: { scope: null },\n        mzp: { scope: null },\n        mzq: { scope: null },\n        mzr: { scope: null },\n        mzs: { scope: null },\n        mzt: { scope: null },\n        mzu: { scope: null },\n        mzv: { scope: null },\n        mzw: { scope: null },\n        mzx: { scope: null },\n        mzy: { scope: null },\n        mzz: { scope: null },\n        naa: { scope: null },\n        nab: { scope: null },\n        nac: { scope: null },\n        nad: { scope: null },\n        nae: { scope: null },\n        naf: { scope: null },\n        nag: { scope: null },\n        nah: { scope: \"collection\" },\n        nai: { scope: \"collection\" },\n        naj: { scope: null },\n        nak: { scope: null },\n        nal: { scope: null },\n        nam: { scope: null },\n        nan: { scope: null },\n        nao: { scope: null },\n        nap: { scope: null },\n        naq: { scope: null },\n        nar: { scope: null },\n        nas: { scope: null },\n        nat: { scope: null },\n        naw: { scope: null },\n        nax: { scope: null },\n        nay: { scope: null },\n        naz: { scope: null },\n        nba: { scope: null },\n        nbb: { scope: null },\n        nbc: { scope: null },\n        nbd: { scope: null },\n        nbe: { scope: null },\n        nbf: { scope: null },\n        nbg: { scope: null },\n        nbh: { scope: null },\n        nbi: { scope: null },\n        nbj: { scope: null },\n        nbk: { scope: null },\n        nbm: { scope: null },\n        nbn: { scope: null },\n        nbo: { scope: null },\n        nbp: { scope: null },\n        nbq: { scope: null },\n        nbr: { scope: null },\n        nbs: { scope: null },\n        nbt: { scope: null },\n        nbu: { scope: null },\n        nbv: { scope: null },\n        nbw: { scope: null },\n        nbx: { scope: null },\n        nby: { scope: null },\n        nca: { scope: null },\n        ncb: { scope: null },\n        ncc: { scope: null },\n        ncd: { scope: null },\n        nce: { scope: null },\n        ncf: { scope: null },\n        ncg: { scope: null },\n        nch: { scope: null },\n        nci: { scope: null },\n        ncj: { scope: null },\n        nck: { scope: null },\n        ncl: { scope: null },\n        ncm: { scope: null },\n        ncn: { scope: null },\n        nco: { scope: null },\n        ncp: { scope: null },\n        ncq: { scope: null },\n        ncr: { scope: null },\n        ncs: { scope: null },\n        nct: { scope: null },\n        ncu: { scope: null },\n        ncx: { scope: null },\n        ncz: { scope: null },\n        nda: { scope: null },\n        ndb: { scope: null },\n        ndc: { scope: null },\n        ndd: { scope: null },\n        ndf: { scope: null },\n        ndg: { scope: null },\n        ndh: { scope: null },\n        ndi: { scope: null },\n        ndj: { scope: null },\n        ndk: { scope: null },\n        ndl: { scope: null },\n        ndm: { scope: null },\n        ndn: { scope: null },\n        ndp: { scope: null },\n        ndq: { scope: null },\n        ndr: { scope: null },\n        nds: { scope: null },\n        ndt: { scope: null },\n        ndu: { scope: null },\n        ndv: { scope: null },\n        ndw: { scope: null },\n        ndx: { scope: null },\n        ndy: { scope: null },\n        ndz: { scope: null },\n        nea: { scope: null },\n        neb: { scope: null },\n        nec: { scope: null },\n        ned: { scope: null },\n        nee: { scope: null },\n        nef: { scope: null },\n        neg: { scope: null },\n        neh: { scope: null },\n        nei: { scope: null },\n        nej: { scope: null },\n        nek: { scope: null },\n        nem: { scope: null },\n        nen: { scope: null },\n        neo: { scope: null },\n        neq: { scope: null },\n        ner: { scope: null },\n        nes: { scope: null },\n        net: { scope: null },\n        neu: { scope: null },\n        nev: { scope: null },\n        new: { scope: null },\n        nex: { scope: null },\n        ney: { scope: null },\n        nez: { scope: null },\n        nfa: { scope: null },\n        nfd: { scope: null },\n        nfl: { scope: null },\n        nfr: { scope: null },\n        nfu: { scope: null },\n        nga: { scope: null },\n        ngb: { scope: null },\n        ngc: { scope: null },\n        ngd: { scope: null },\n        nge: { scope: null },\n        ngf: { scope: \"collection\" },\n        ngg: { scope: null },\n        ngh: { scope: null },\n        ngi: { scope: null },\n        ngj: { scope: null },\n        ngk: { scope: null },\n        ngl: { scope: null },\n        ngm: { scope: null },\n        ngn: { scope: null },\n        ngo: { scope: null },\n        ngp: { scope: null },\n        ngq: { scope: null },\n        ngr: { scope: null },\n        ngs: { scope: null },\n        ngt: { scope: null },\n        ngu: { scope: null },\n        ngv: { scope: null },\n        ngw: { scope: null },\n        ngx: { scope: null },\n        ngy: { scope: null },\n        ngz: { scope: null },\n        nha: { scope: null },\n        nhb: { scope: null },\n        nhc: { scope: null },\n        nhd: { scope: null },\n        nhe: { scope: null },\n        nhf: { scope: null },\n        nhg: { scope: null },\n        nhh: { scope: null },\n        nhi: { scope: null },\n        nhk: { scope: null },\n        nhm: { scope: null },\n        nhn: { scope: null },\n        nho: { scope: null },\n        nhp: { scope: null },\n        nhq: { scope: null },\n        nhr: { scope: null },\n        nht: { scope: null },\n        nhu: { scope: null },\n        nhv: { scope: null },\n        nhw: { scope: null },\n        nhx: { scope: null },\n        nhy: { scope: null },\n        nhz: { scope: null },\n        nia: { scope: null },\n        nib: { scope: null },\n        nic: { scope: \"collection\" },\n        nid: { scope: null },\n        nie: { scope: null },\n        nif: { scope: null },\n        nig: { scope: null },\n        nih: { scope: null },\n        nii: { scope: null },\n        nij: { scope: null },\n        nik: { scope: null },\n        nil: { scope: null },\n        nim: { scope: null },\n        nin: { scope: null },\n        nio: { scope: null },\n        niq: { scope: null },\n        nir: { scope: null },\n        nis: { scope: null },\n        nit: { scope: null },\n        niu: { scope: null },\n        niv: { scope: null },\n        niw: { scope: null },\n        nix: { scope: null },\n        niy: { scope: null },\n        niz: { scope: null },\n        nja: { scope: null },\n        njb: { scope: null },\n        njd: { scope: null },\n        njh: { scope: null },\n        nji: { scope: null },\n        njj: { scope: null },\n        njl: { scope: null },\n        njm: { scope: null },\n        njn: { scope: null },\n        njo: { scope: null },\n        njr: { scope: null },\n        njs: { scope: null },\n        njt: { scope: null },\n        nju: { scope: null },\n        njx: { scope: null },\n        njy: { scope: null },\n        njz: { scope: null },\n        nka: { scope: null },\n        nkb: { scope: null },\n        nkc: { scope: null },\n        nkd: { scope: null },\n        nke: { scope: null },\n        nkf: { scope: null },\n        nkg: { scope: null },\n        nkh: { scope: null },\n        nki: { scope: null },\n        nkj: { scope: null },\n        nkk: { scope: null },\n        nkm: { scope: null },\n        nkn: { scope: null },\n        nko: { scope: null },\n        nkp: { scope: null },\n        nkq: { scope: null },\n        nkr: { scope: null },\n        nks: { scope: null },\n        nkt: { scope: null },\n        nku: { scope: null },\n        nkv: { scope: null },\n        nkw: { scope: null },\n        nkx: { scope: null },\n        nkz: { scope: null },\n        nla: { scope: null },\n        nlc: { scope: null },\n        nle: { scope: null },\n        nlg: { scope: null },\n        nli: { scope: null },\n        nlj: { scope: null },\n        nlk: { scope: null },\n        nll: { scope: null },\n        nlm: { scope: null },\n        nln: { scope: null },\n        nlo: { scope: null },\n        nlq: { scope: null },\n        nlr: { scope: null },\n        nlu: { scope: null },\n        nlv: { scope: null },\n        nlw: { scope: null },\n        nlx: { scope: null },\n        nly: { scope: null },\n        nlz: { scope: null },\n        nma: { scope: null },\n        nmb: { scope: null },\n        nmc: { scope: null },\n        nmd: { scope: null },\n        nme: { scope: null },\n        nmf: { scope: null },\n        nmg: { scope: null },\n        nmh: { scope: null },\n        nmi: { scope: null },\n        nmj: { scope: null },\n        nmk: { scope: null },\n        nml: { scope: null },\n        nmm: { scope: null },\n        nmn: { scope: null },\n        nmo: { scope: null },\n        nmp: { scope: null },\n        nmq: { scope: null },\n        nmr: { scope: null },\n        nms: { scope: null },\n        nmt: { scope: null },\n        nmu: { scope: null },\n        nmv: { scope: null },\n        nmw: { scope: null },\n        nmx: { scope: null },\n        nmy: { scope: null },\n        nmz: { scope: null },\n        nna: { scope: null },\n        nnb: { scope: null },\n        nnc: { scope: null },\n        nnd: { scope: null },\n        nne: { scope: null },\n        nnf: { scope: null },\n        nng: { scope: null },\n        nnh: { scope: null },\n        nni: { scope: null },\n        nnj: { scope: null },\n        nnk: { scope: null },\n        nnl: { scope: null },\n        nnm: { scope: null },\n        nnn: { scope: null },\n        nnp: { scope: null },\n        nnq: { scope: null },\n        nnr: { scope: null },\n        nns: { scope: null },\n        nnt: { scope: null },\n        nnu: { scope: null },\n        nnv: { scope: null },\n        nnw: { scope: null },\n        nnx: { scope: null },\n        nny: { scope: null },\n        nnz: { scope: null },\n        noa: { scope: null },\n        noc: { scope: null },\n        nod: { scope: null },\n        noe: { scope: null },\n        nof: { scope: null },\n        nog: { scope: null },\n        noh: { scope: null },\n        noi: { scope: null },\n        noj: { scope: null },\n        nok: { scope: null },\n        nol: { scope: null },\n        nom: { scope: null },\n        non: { scope: null },\n        noo: { scope: null },\n        nop: { scope: null },\n        noq: { scope: null },\n        nos: { scope: null },\n        not: { scope: null },\n        nou: { scope: null },\n        nov: { scope: null },\n        now: { scope: null },\n        noy: { scope: null },\n        noz: { scope: null },\n        npa: { scope: null },\n        npb: { scope: null },\n        npg: { scope: null },\n        nph: { scope: null },\n        npi: { scope: null },\n        npl: { scope: null },\n        npn: { scope: null },\n        npo: { scope: null },\n        nps: { scope: null },\n        npu: { scope: null },\n        npx: { scope: null },\n        npy: { scope: null },\n        nqg: { scope: null },\n        nqk: { scope: null },\n        nql: { scope: null },\n        nqm: { scope: null },\n        nqn: { scope: null },\n        nqo: { scope: null },\n        nqq: { scope: null },\n        nqt: { scope: null },\n        nqy: { scope: null },\n        nra: { scope: null },\n        nrb: { scope: null },\n        nrc: { scope: null },\n        nre: { scope: null },\n        nrf: { scope: null },\n        nrg: { scope: null },\n        nri: { scope: null },\n        nrk: { scope: null },\n        nrl: { scope: null },\n        nrm: { scope: null },\n        nrn: { scope: null },\n        nrp: { scope: null },\n        nrr: { scope: null },\n        nrt: { scope: null },\n        nru: { scope: null },\n        nrx: { scope: null },\n        nrz: { scope: null },\n        nsa: { scope: null },\n        nsb: { scope: null },\n        nsc: { scope: null },\n        nsd: { scope: null },\n        nse: { scope: null },\n        nsf: { scope: null },\n        nsg: { scope: null },\n        nsh: { scope: null },\n        nsi: { scope: null },\n        nsk: { scope: null },\n        nsl: { scope: null },\n        nsm: { scope: null },\n        nsn: { scope: null },\n        nso: { scope: null },\n        nsp: { scope: null },\n        nsq: { scope: null },\n        nsr: { scope: null },\n        nss: { scope: null },\n        nst: { scope: null },\n        nsu: { scope: null },\n        nsv: { scope: null },\n        nsw: { scope: null },\n        nsx: { scope: null },\n        nsy: { scope: null },\n        nsz: { scope: null },\n        ntd: { scope: null },\n        nte: { scope: null },\n        ntg: { scope: null },\n        nti: { scope: null },\n        ntj: { scope: null },\n        ntk: { scope: null },\n        ntm: { scope: null },\n        nto: { scope: null },\n        ntp: { scope: null },\n        ntr: { scope: null },\n        nts: { scope: null },\n        ntu: { scope: null },\n        ntw: { scope: null },\n        ntx: { scope: null },\n        nty: { scope: null },\n        ntz: { scope: null },\n        nua: { scope: null },\n        nub: { scope: \"collection\" },\n        nuc: { scope: null },\n        nud: { scope: null },\n        nue: { scope: null },\n        nuf: { scope: null },\n        nug: { scope: null },\n        nuh: { scope: null },\n        nui: { scope: null },\n        nuj: { scope: null },\n        nuk: { scope: null },\n        nul: { scope: null },\n        num: { scope: null },\n        nun: { scope: null },\n        nuo: { scope: null },\n        nup: { scope: null },\n        nuq: { scope: null },\n        nur: { scope: null },\n        nus: { scope: null },\n        nut: { scope: null },\n        nuu: { scope: null },\n        nuv: { scope: null },\n        nuw: { scope: null },\n        nux: { scope: null },\n        nuy: { scope: null },\n        nuz: { scope: null },\n        nvh: { scope: null },\n        nvm: { scope: null },\n        nvo: { scope: null },\n        nwa: { scope: null },\n        nwb: { scope: null },\n        nwc: { scope: null },\n        nwe: { scope: null },\n        nwg: { scope: null },\n        nwi: { scope: null },\n        nwm: { scope: null },\n        nwo: { scope: null },\n        nwr: { scope: null },\n        nwx: { scope: null },\n        nwy: { scope: null },\n        nxa: { scope: null },\n        nxd: { scope: null },\n        nxe: { scope: null },\n        nxg: { scope: null },\n        nxi: { scope: null },\n        nxk: { scope: null },\n        nxl: { scope: null },\n        nxm: { scope: null },\n        nxn: { scope: null },\n        nxo: { scope: null },\n        nxq: { scope: null },\n        nxr: { scope: null },\n        nxu: { scope: null },\n        nxx: { scope: null },\n        nyb: { scope: null },\n        nyc: { scope: null },\n        nyd: { scope: null },\n        nye: { scope: null },\n        nyf: { scope: null },\n        nyg: { scope: null },\n        nyh: { scope: null },\n        nyi: { scope: null },\n        nyj: { scope: null },\n        nyk: { scope: null },\n        nyl: { scope: null },\n        nym: { scope: null },\n        nyn: { scope: null },\n        nyo: { scope: null },\n        nyp: { scope: null },\n        nyq: { scope: null },\n        nyr: { scope: null },\n        nys: { scope: null },\n        nyt: { scope: null },\n        nyu: { scope: null },\n        nyv: { scope: null },\n        nyw: { scope: null },\n        nyx: { scope: null },\n        nyy: { scope: null },\n        nza: { scope: null },\n        nzb: { scope: null },\n        nzd: { scope: null },\n        nzi: { scope: null },\n        nzk: { scope: null },\n        nzm: { scope: null },\n        nzs: { scope: null },\n        nzu: { scope: null },\n        nzy: { scope: null },\n        nzz: { scope: null },\n        oaa: { scope: null },\n        oac: { scope: null },\n        oar: { scope: null },\n        oav: { scope: null },\n        obi: { scope: null },\n        obk: { scope: null },\n        obl: { scope: null },\n        obm: { scope: null },\n        obo: { scope: null },\n        obr: { scope: null },\n        obt: { scope: null },\n        obu: { scope: null },\n        oca: { scope: null },\n        och: { scope: null },\n        ocm: { scope: null },\n        oco: { scope: null },\n        ocu: { scope: null },\n        oda: { scope: null },\n        odk: { scope: null },\n        odt: { scope: null },\n        odu: { scope: null },\n        ofo: { scope: null },\n        ofs: { scope: null },\n        ofu: { scope: null },\n        ogb: { scope: null },\n        ogc: { scope: null },\n        oge: { scope: null },\n        ogg: { scope: null },\n        ogo: { scope: null },\n        ogu: { scope: null },\n        oht: { scope: null },\n        ohu: { scope: null },\n        oia: { scope: null },\n        oin: { scope: null },\n        ojb: { scope: null },\n        ojc: { scope: null },\n        ojg: { scope: null },\n        ojp: { scope: null },\n        ojs: { scope: null },\n        ojv: { scope: null },\n        ojw: { scope: null },\n        oka: { scope: null },\n        okb: { scope: null },\n        okc: { scope: null },\n        okd: { scope: null },\n        oke: { scope: null },\n        okg: { scope: null },\n        okh: { scope: null },\n        oki: { scope: null },\n        okj: { scope: null },\n        okk: { scope: null },\n        okl: { scope: null },\n        okm: { scope: null },\n        okn: { scope: null },\n        oko: { scope: null },\n        okr: { scope: null },\n        oks: { scope: null },\n        oku: { scope: null },\n        okv: { scope: null },\n        okx: { scope: null },\n        okz: { scope: null },\n        ola: { scope: null },\n        old: { scope: null },\n        ole: { scope: null },\n        olk: { scope: null },\n        olm: { scope: null },\n        olo: { scope: null },\n        olr: { scope: null },\n        olt: { scope: null },\n        olu: { scope: null },\n        oma: { scope: null },\n        omb: { scope: null },\n        omc: { scope: null },\n        ome: { scope: null },\n        omg: { scope: null },\n        omi: { scope: null },\n        omk: { scope: null },\n        oml: { scope: null },\n        omn: { scope: null },\n        omo: { scope: null },\n        omp: { scope: null },\n        omq: { scope: \"collection\" },\n        omr: { scope: null },\n        omt: { scope: null },\n        omu: { scope: null },\n        omv: { scope: \"collection\" },\n        omw: { scope: null },\n        omx: { scope: null },\n        omy: { scope: null },\n        ona: { scope: null },\n        onb: { scope: null },\n        one: { scope: null },\n        ong: { scope: null },\n        oni: { scope: null },\n        onj: { scope: null },\n        onk: { scope: null },\n        onn: { scope: null },\n        ono: { scope: null },\n        onp: { scope: null },\n        onr: { scope: null },\n        ons: { scope: null },\n        ont: { scope: null },\n        onu: { scope: null },\n        onw: { scope: null },\n        onx: { scope: null },\n        ood: { scope: null },\n        oog: { scope: null },\n        oon: { scope: null },\n        oor: { scope: null },\n        oos: { scope: null },\n        opa: { scope: null },\n        opk: { scope: null },\n        opm: { scope: null },\n        opo: { scope: null },\n        opt: { scope: null },\n        opy: { scope: null },\n        ora: { scope: null },\n        orc: { scope: null },\n        ore: { scope: null },\n        org: { scope: null },\n        orh: { scope: null },\n        orn: { scope: null },\n        oro: { scope: null },\n        orr: { scope: null },\n        ors: { scope: null },\n        ort: { scope: null },\n        oru: { scope: null },\n        orv: { scope: null },\n        orw: { scope: null },\n        orx: { scope: null },\n        ory: { scope: null },\n        orz: { scope: null },\n        osa: { scope: null },\n        osc: { scope: null },\n        osi: { scope: null },\n        osn: { scope: null },\n        oso: { scope: null },\n        osp: { scope: null },\n        ost: { scope: null },\n        osu: { scope: null },\n        osx: { scope: null },\n        ota: { scope: null },\n        otb: { scope: null },\n        otd: { scope: null },\n        ote: { scope: null },\n        oti: { scope: null },\n        otk: { scope: null },\n        otl: { scope: null },\n        otm: { scope: null },\n        otn: { scope: null },\n        oto: { scope: \"collection\" },\n        otq: { scope: null },\n        otr: { scope: null },\n        ots: { scope: null },\n        ott: { scope: null },\n        otu: { scope: null },\n        otw: { scope: null },\n        otx: { scope: null },\n        oty: { scope: null },\n        otz: { scope: null },\n        oua: { scope: null },\n        oub: { scope: null },\n        oue: { scope: null },\n        oui: { scope: null },\n        oum: { scope: null },\n        oun: { scope: null },\n        ovd: { scope: null },\n        owi: { scope: null },\n        owl: { scope: null },\n        oyb: { scope: null },\n        oyd: { scope: null },\n        oym: { scope: null },\n        oyy: { scope: null },\n        ozm: { scope: null },\n        paa: { scope: \"collection\" },\n        pab: { scope: null },\n        pac: { scope: null },\n        pad: { scope: null },\n        pae: { scope: null },\n        paf: { scope: null },\n        pag: { scope: null },\n        pah: { scope: null },\n        pai: { scope: null },\n        pak: { scope: null },\n        pal: { scope: null },\n        pam: { scope: null },\n        pao: { scope: null },\n        pap: { scope: null },\n        paq: { scope: null },\n        par: { scope: null },\n        pas: { scope: null },\n        pat: { scope: null },\n        pau: { scope: null },\n        pav: { scope: null },\n        paw: { scope: null },\n        pax: { scope: null },\n        pay: { scope: null },\n        paz: { scope: null },\n        pbb: { scope: null },\n        pbc: { scope: null },\n        pbe: { scope: null },\n        pbf: { scope: null },\n        pbg: { scope: null },\n        pbh: { scope: null },\n        pbi: { scope: null },\n        pbl: { scope: null },\n        pbm: { scope: null },\n        pbn: { scope: null },\n        pbo: { scope: null },\n        pbp: { scope: null },\n        pbr: { scope: null },\n        pbs: { scope: null },\n        pbt: { scope: null },\n        pbu: { scope: null },\n        pbv: { scope: null },\n        pby: { scope: null },\n        pbz: { scope: null },\n        pca: { scope: null },\n        pcb: { scope: null },\n        pcc: { scope: null },\n        pcd: { scope: null },\n        pce: { scope: null },\n        pcf: { scope: null },\n        pcg: { scope: null },\n        pch: { scope: null },\n        pci: { scope: null },\n        pcj: { scope: null },\n        pck: { scope: null },\n        pcl: { scope: null },\n        pcm: { scope: null },\n        pcn: { scope: null },\n        pcp: { scope: null },\n        pcr: { scope: null },\n        pcw: { scope: null },\n        pda: { scope: null },\n        pdc: { scope: null },\n        pdi: { scope: null },\n        pdn: { scope: null },\n        pdo: { scope: null },\n        pdt: { scope: null },\n        pdu: { scope: null },\n        pea: { scope: null },\n        peb: { scope: null },\n        ped: { scope: null },\n        pee: { scope: null },\n        pef: { scope: null },\n        peg: { scope: null },\n        peh: { scope: null },\n        pei: { scope: null },\n        pej: { scope: null },\n        pek: { scope: null },\n        pel: { scope: null },\n        pem: { scope: null },\n        peo: { scope: null },\n        pep: { scope: null },\n        peq: { scope: null },\n        pes: { scope: null },\n        pev: { scope: null },\n        pex: { scope: null },\n        pey: { scope: null },\n        pez: { scope: null },\n        pfa: { scope: null },\n        pfe: { scope: null },\n        pfl: { scope: null },\n        pga: { scope: null },\n        pgd: { scope: null },\n        pgg: { scope: null },\n        pgi: { scope: null },\n        pgk: { scope: null },\n        pgl: { scope: null },\n        pgn: { scope: null },\n        pgs: { scope: null },\n        pgu: { scope: null },\n        pgy: { scope: null },\n        pgz: { scope: null },\n        pha: { scope: null },\n        phd: { scope: null },\n        phg: { scope: null },\n        phh: { scope: null },\n        phi: { scope: \"collection\" },\n        phk: { scope: null },\n        phl: { scope: null },\n        phm: { scope: null },\n        phn: { scope: null },\n        pho: { scope: null },\n        phq: { scope: null },\n        phr: { scope: null },\n        pht: { scope: null },\n        phu: { scope: null },\n        phv: { scope: null },\n        phw: { scope: null },\n        pia: { scope: null },\n        pib: { scope: null },\n        pic: { scope: null },\n        pid: { scope: null },\n        pie: { scope: null },\n        pif: { scope: null },\n        pig: { scope: null },\n        pih: { scope: null },\n        pii: { scope: null },\n        pij: { scope: null },\n        pil: { scope: null },\n        pim: { scope: null },\n        pin: { scope: null },\n        pio: { scope: null },\n        pip: { scope: null },\n        pir: { scope: null },\n        pis: { scope: null },\n        pit: { scope: null },\n        piu: { scope: null },\n        piv: { scope: null },\n        piw: { scope: null },\n        pix: { scope: null },\n        piy: { scope: null },\n        piz: { scope: null },\n        pjt: { scope: null },\n        pka: { scope: null },\n        pkb: { scope: null },\n        pkc: { scope: null },\n        pkg: { scope: null },\n        pkh: { scope: null },\n        pkn: { scope: null },\n        pko: { scope: null },\n        pkp: { scope: null },\n        pkr: { scope: null },\n        pks: { scope: null },\n        pkt: { scope: null },\n        pku: { scope: null },\n        pla: { scope: null },\n        plb: { scope: null },\n        plc: { scope: null },\n        pld: { scope: null },\n        ple: { scope: null },\n        plf: { scope: \"collection\" },\n        plg: { scope: null },\n        plh: { scope: null },\n        plj: { scope: null },\n        plk: { scope: null },\n        pll: { scope: null },\n        pln: { scope: null },\n        plo: { scope: null },\n        plp: { scope: null },\n        plq: { scope: null },\n        plr: { scope: null },\n        pls: { scope: null },\n        plt: { scope: null },\n        plu: { scope: null },\n        plv: { scope: null },\n        plw: { scope: null },\n        ply: { scope: null },\n        plz: { scope: null },\n        pma: { scope: null },\n        pmb: { scope: null },\n        pmc: { scope: null },\n        pmd: { scope: null },\n        pme: { scope: null },\n        pmf: { scope: null },\n        pmh: { scope: null },\n        pmi: { scope: null },\n        pmj: { scope: null },\n        pmk: { scope: null },\n        pml: { scope: null },\n        pmm: { scope: null },\n        pmn: { scope: null },\n        pmo: { scope: null },\n        pmq: { scope: null },\n        pmr: { scope: null },\n        pms: { scope: null },\n        pmt: { scope: null },\n        pmu: { scope: null },\n        pmw: { scope: null },\n        pmx: { scope: null },\n        pmy: { scope: null },\n        pmz: { scope: null },\n        pna: { scope: null },\n        pnb: { scope: null },\n        pnc: { scope: null },\n        pnd: { scope: null },\n        pne: { scope: null },\n        png: { scope: null },\n        pnh: { scope: null },\n        pni: { scope: null },\n        pnj: { scope: null },\n        pnk: { scope: null },\n        pnl: { scope: null },\n        pnm: { scope: null },\n        pnn: { scope: null },\n        pno: { scope: null },\n        pnp: { scope: null },\n        pnq: { scope: null },\n        pnr: { scope: null },\n        pns: { scope: null },\n        pnt: { scope: null },\n        pnu: { scope: null },\n        pnv: { scope: null },\n        pnw: { scope: null },\n        pnx: { scope: null },\n        pny: { scope: null },\n        pnz: { scope: null },\n        poc: { scope: null },\n        pod: { scope: null },\n        poe: { scope: null },\n        pof: { scope: null },\n        pog: { scope: null },\n        poh: { scope: null },\n        poi: { scope: null },\n        pok: { scope: null },\n        pom: { scope: null },\n        pon: { scope: null },\n        poo: { scope: null },\n        pop: { scope: null },\n        poq: { scope: null },\n        pos: { scope: null },\n        pot: { scope: null },\n        pov: { scope: null },\n        pow: { scope: null },\n        pox: { scope: null },\n        poy: { scope: null },\n        poz: { scope: \"collection\" },\n        ppa: { scope: null },\n        ppe: { scope: null },\n        ppi: { scope: null },\n        ppk: { scope: null },\n        ppl: { scope: null },\n        ppm: { scope: null },\n        ppn: { scope: null },\n        ppo: { scope: null },\n        ppp: { scope: null },\n        ppq: { scope: null },\n        ppr: { scope: null },\n        pps: { scope: null },\n        ppt: { scope: null },\n        ppu: { scope: null },\n        pqa: { scope: null },\n        pqe: { scope: \"collection\" },\n        pqm: { scope: null },\n        pqw: { scope: \"collection\" },\n        pra: { scope: \"collection\" },\n        prb: { scope: null },\n        prc: { scope: null },\n        prd: { scope: null },\n        pre: { scope: null },\n        prf: { scope: null },\n        prg: { scope: null },\n        prh: { scope: null },\n        pri: { scope: null },\n        prk: { scope: null },\n        prl: { scope: null },\n        prm: { scope: null },\n        prn: { scope: null },\n        pro: { scope: null },\n        prp: { scope: null },\n        prq: { scope: null },\n        prr: { scope: null },\n        prs: { scope: null },\n        prt: { scope: null },\n        pru: { scope: null },\n        prw: { scope: null },\n        prx: { scope: null },\n        pry: { scope: null },\n        prz: { scope: null },\n        psa: { scope: null },\n        psc: { scope: null },\n        psd: { scope: null },\n        pse: { scope: null },\n        psg: { scope: null },\n        psh: { scope: null },\n        psi: { scope: null },\n        psl: { scope: null },\n        psm: { scope: null },\n        psn: { scope: null },\n        pso: { scope: null },\n        psp: { scope: null },\n        psq: { scope: null },\n        psr: { scope: null },\n        pss: { scope: null },\n        pst: { scope: null },\n        psu: { scope: null },\n        psw: { scope: null },\n        psy: { scope: null },\n        pta: { scope: null },\n        pth: { scope: null },\n        pti: { scope: null },\n        ptn: { scope: null },\n        pto: { scope: null },\n        ptp: { scope: null },\n        ptq: { scope: null },\n        ptr: { scope: null },\n        ptt: { scope: null },\n        ptu: { scope: null },\n        ptv: { scope: null },\n        ptw: { scope: null },\n        pty: { scope: null },\n        pua: { scope: null },\n        pub: { scope: null },\n        puc: { scope: null },\n        pud: { scope: null },\n        pue: { scope: null },\n        puf: { scope: null },\n        pug: { scope: null },\n        pui: { scope: null },\n        puj: { scope: null },\n        puk: { scope: null },\n        pum: { scope: null },\n        puo: { scope: null },\n        pup: { scope: null },\n        puq: { scope: null },\n        pur: { scope: null },\n        put: { scope: null },\n        puu: { scope: null },\n        puw: { scope: null },\n        pux: { scope: null },\n        puy: { scope: null },\n        puz: { scope: null },\n        pwa: { scope: null },\n        pwb: { scope: null },\n        pwg: { scope: null },\n        pwi: { scope: null },\n        pwm: { scope: null },\n        pwn: { scope: null },\n        pwo: { scope: null },\n        pwr: { scope: null },\n        pww: { scope: null },\n        pxm: { scope: null },\n        pye: { scope: null },\n        pym: { scope: null },\n        pyn: { scope: null },\n        pys: { scope: null },\n        pyu: { scope: null },\n        pyx: { scope: null },\n        pyy: { scope: null },\n        pzn: { scope: null },\n        qaa: { scope: \"private-use\" },\n        qab: { scope: \"private-use\" },\n        qac: { scope: \"private-use\" },\n        qad: { scope: \"private-use\" },\n        qae: { scope: \"private-use\" },\n        qaf: { scope: \"private-use\" },\n        qag: { scope: \"private-use\" },\n        qah: { scope: \"private-use\" },\n        qai: { scope: \"private-use\" },\n        qaj: { scope: \"private-use\" },\n        qak: { scope: \"private-use\" },\n        qal: { scope: \"private-use\" },\n        qam: { scope: \"private-use\" },\n        qan: { scope: \"private-use\" },\n        qao: { scope: \"private-use\" },\n        qap: { scope: \"private-use\" },\n        qaq: { scope: \"private-use\" },\n        qar: { scope: \"private-use\" },\n        qas: { scope: \"private-use\" },\n        qat: { scope: \"private-use\" },\n        qau: { scope: \"private-use\" },\n        qav: { scope: \"private-use\" },\n        qaw: { scope: \"private-use\" },\n        qax: { scope: \"private-use\" },\n        qay: { scope: \"private-use\" },\n        qaz: { scope: \"private-use\" },\n        qba: { scope: \"private-use\" },\n        qbb: { scope: \"private-use\" },\n        qbc: { scope: \"private-use\" },\n        qbd: { scope: \"private-use\" },\n        qbe: { scope: \"private-use\" },\n        qbf: { scope: \"private-use\" },\n        qbg: { scope: \"private-use\" },\n        qbh: { scope: \"private-use\" },\n        qbi: { scope: \"private-use\" },\n        qbj: { scope: \"private-use\" },\n        qbk: { scope: \"private-use\" },\n        qbl: { scope: \"private-use\" },\n        qbm: { scope: \"private-use\" },\n        qbn: { scope: \"private-use\" },\n        qbo: { scope: \"private-use\" },\n        qbp: { scope: \"private-use\" },\n        qbq: { scope: \"private-use\" },\n        qbr: { scope: \"private-use\" },\n        qbs: { scope: \"private-use\" },\n        qbt: { scope: \"private-use\" },\n        qbu: { scope: \"private-use\" },\n        qbv: { scope: \"private-use\" },\n        qbw: { scope: \"private-use\" },\n        qbx: { scope: \"private-use\" },\n        qby: { scope: \"private-use\" },\n        qbz: { scope: \"private-use\" },\n        qca: { scope: \"private-use\" },\n        qcb: { scope: \"private-use\" },\n        qcc: { scope: \"private-use\" },\n        qcd: { scope: \"private-use\" },\n        qce: { scope: \"private-use\" },\n        qcf: { scope: \"private-use\" },\n        qcg: { scope: \"private-use\" },\n        qch: { scope: \"private-use\" },\n        qci: { scope: \"private-use\" },\n        qcj: { scope: \"private-use\" },\n        qck: { scope: \"private-use\" },\n        qcl: { scope: \"private-use\" },\n        qcm: { scope: \"private-use\" },\n        qcn: { scope: \"private-use\" },\n        qco: { scope: \"private-use\" },\n        qcp: { scope: \"private-use\" },\n        qcq: { scope: \"private-use\" },\n        qcr: { scope: \"private-use\" },\n        qcs: { scope: \"private-use\" },\n        qct: { scope: \"private-use\" },\n        qcu: { scope: \"private-use\" },\n        qcv: { scope: \"private-use\" },\n        qcw: { scope: \"private-use\" },\n        qcx: { scope: \"private-use\" },\n        qcy: { scope: \"private-use\" },\n        qcz: { scope: \"private-use\" },\n        qda: { scope: \"private-use\" },\n        qdb: { scope: \"private-use\" },\n        qdc: { scope: \"private-use\" },\n        qdd: { scope: \"private-use\" },\n        qde: { scope: \"private-use\" },\n        qdf: { scope: \"private-use\" },\n        qdg: { scope: \"private-use\" },\n        qdh: { scope: \"private-use\" },\n        qdi: { scope: \"private-use\" },\n        qdj: { scope: \"private-use\" },\n        qdk: { scope: \"private-use\" },\n        qdl: { scope: \"private-use\" },\n        qdm: { scope: \"private-use\" },\n        qdn: { scope: \"private-use\" },\n        qdo: { scope: \"private-use\" },\n        qdp: { scope: \"private-use\" },\n        qdq: { scope: \"private-use\" },\n        qdr: { scope: \"private-use\" },\n        qds: { scope: \"private-use\" },\n        qdt: { scope: \"private-use\" },\n        qdu: { scope: \"private-use\" },\n        qdv: { scope: \"private-use\" },\n        qdw: { scope: \"private-use\" },\n        qdx: { scope: \"private-use\" },\n        qdy: { scope: \"private-use\" },\n        qdz: { scope: \"private-use\" },\n        qea: { scope: \"private-use\" },\n        qeb: { scope: \"private-use\" },\n        qec: { scope: \"private-use\" },\n        qed: { scope: \"private-use\" },\n        qee: { scope: \"private-use\" },\n        qef: { scope: \"private-use\" },\n        qeg: { scope: \"private-use\" },\n        qeh: { scope: \"private-use\" },\n        qei: { scope: \"private-use\" },\n        qej: { scope: \"private-use\" },\n        qek: { scope: \"private-use\" },\n        qel: { scope: \"private-use\" },\n        qem: { scope: \"private-use\" },\n        qen: { scope: \"private-use\" },\n        qeo: { scope: \"private-use\" },\n        qep: { scope: \"private-use\" },\n        qeq: { scope: \"private-use\" },\n        qer: { scope: \"private-use\" },\n        qes: { scope: \"private-use\" },\n        qet: { scope: \"private-use\" },\n        qeu: { scope: \"private-use\" },\n        qev: { scope: \"private-use\" },\n        qew: { scope: \"private-use\" },\n        qex: { scope: \"private-use\" },\n        qey: { scope: \"private-use\" },\n        qez: { scope: \"private-use\" },\n        qfa: { scope: \"private-use\" },\n        qfb: { scope: \"private-use\" },\n        qfc: { scope: \"private-use\" },\n        qfd: { scope: \"private-use\" },\n        qfe: { scope: \"private-use\" },\n        qff: { scope: \"private-use\" },\n        qfg: { scope: \"private-use\" },\n        qfh: { scope: \"private-use\" },\n        qfi: { scope: \"private-use\" },\n        qfj: { scope: \"private-use\" },\n        qfk: { scope: \"private-use\" },\n        qfl: { scope: \"private-use\" },\n        qfm: { scope: \"private-use\" },\n        qfn: { scope: \"private-use\" },\n        qfo: { scope: \"private-use\" },\n        qfp: { scope: \"private-use\" },\n        qfq: { scope: \"private-use\" },\n        qfr: { scope: \"private-use\" },\n        qfs: { scope: \"private-use\" },\n        qft: { scope: \"private-use\" },\n        qfu: { scope: \"private-use\" },\n        qfv: { scope: \"private-use\" },\n        qfw: { scope: \"private-use\" },\n        qfx: { scope: \"private-use\" },\n        qfy: { scope: \"private-use\" },\n        qfz: { scope: \"private-use\" },\n        qga: { scope: \"private-use\" },\n        qgb: { scope: \"private-use\" },\n        qgc: { scope: \"private-use\" },\n        qgd: { scope: \"private-use\" },\n        qge: { scope: \"private-use\" },\n        qgf: { scope: \"private-use\" },\n        qgg: { scope: \"private-use\" },\n        qgh: { scope: \"private-use\" },\n        qgi: { scope: \"private-use\" },\n        qgj: { scope: \"private-use\" },\n        qgk: { scope: \"private-use\" },\n        qgl: { scope: \"private-use\" },\n        qgm: { scope: \"private-use\" },\n        qgn: { scope: \"private-use\" },\n        qgo: { scope: \"private-use\" },\n        qgp: { scope: \"private-use\" },\n        qgq: { scope: \"private-use\" },\n        qgr: { scope: \"private-use\" },\n        qgs: { scope: \"private-use\" },\n        qgt: { scope: \"private-use\" },\n        qgu: { scope: \"private-use\" },\n        qgv: { scope: \"private-use\" },\n        qgw: { scope: \"private-use\" },\n        qgx: { scope: \"private-use\" },\n        qgy: { scope: \"private-use\" },\n        qgz: { scope: \"private-use\" },\n        qha: { scope: \"private-use\" },\n        qhb: { scope: \"private-use\" },\n        qhc: { scope: \"private-use\" },\n        qhd: { scope: \"private-use\" },\n        qhe: { scope: \"private-use\" },\n        qhf: { scope: \"private-use\" },\n        qhg: { scope: \"private-use\" },\n        qhh: { scope: \"private-use\" },\n        qhi: { scope: \"private-use\" },\n        qhj: { scope: \"private-use\" },\n        qhk: { scope: \"private-use\" },\n        qhl: { scope: \"private-use\" },\n        qhm: { scope: \"private-use\" },\n        qhn: { scope: \"private-use\" },\n        qho: { scope: \"private-use\" },\n        qhp: { scope: \"private-use\" },\n        qhq: { scope: \"private-use\" },\n        qhr: { scope: \"private-use\" },\n        qhs: { scope: \"private-use\" },\n        qht: { scope: \"private-use\" },\n        qhu: { scope: \"private-use\" },\n        qhv: { scope: \"private-use\" },\n        qhw: { scope: \"private-use\" },\n        qhx: { scope: \"private-use\" },\n        qhy: { scope: \"private-use\" },\n        qhz: { scope: \"private-use\" },\n        qia: { scope: \"private-use\" },\n        qib: { scope: \"private-use\" },\n        qic: { scope: \"private-use\" },\n        qid: { scope: \"private-use\" },\n        qie: { scope: \"private-use\" },\n        qif: { scope: \"private-use\" },\n        qig: { scope: \"private-use\" },\n        qih: { scope: \"private-use\" },\n        qii: { scope: \"private-use\" },\n        qij: { scope: \"private-use\" },\n        qik: { scope: \"private-use\" },\n        qil: { scope: \"private-use\" },\n        qim: { scope: \"private-use\" },\n        qin: { scope: \"private-use\" },\n        qio: { scope: \"private-use\" },\n        qip: { scope: \"private-use\" },\n        qiq: { scope: \"private-use\" },\n        qir: { scope: \"private-use\" },\n        qis: { scope: \"private-use\" },\n        qit: { scope: \"private-use\" },\n        qiu: { scope: \"private-use\" },\n        qiv: { scope: \"private-use\" },\n        qiw: { scope: \"private-use\" },\n        qix: { scope: \"private-use\" },\n        qiy: { scope: \"private-use\" },\n        qiz: { scope: \"private-use\" },\n        qja: { scope: \"private-use\" },\n        qjb: { scope: \"private-use\" },\n        qjc: { scope: \"private-use\" },\n        qjd: { scope: \"private-use\" },\n        qje: { scope: \"private-use\" },\n        qjf: { scope: \"private-use\" },\n        qjg: { scope: \"private-use\" },\n        qjh: { scope: \"private-use\" },\n        qji: { scope: \"private-use\" },\n        qjj: { scope: \"private-use\" },\n        qjk: { scope: \"private-use\" },\n        qjl: { scope: \"private-use\" },\n        qjm: { scope: \"private-use\" },\n        qjn: { scope: \"private-use\" },\n        qjo: { scope: \"private-use\" },\n        qjp: { scope: \"private-use\" },\n        qjq: { scope: \"private-use\" },\n        qjr: { scope: \"private-use\" },\n        qjs: { scope: \"private-use\" },\n        qjt: { scope: \"private-use\" },\n        qju: { scope: \"private-use\" },\n        qjv: { scope: \"private-use\" },\n        qjw: { scope: \"private-use\" },\n        qjx: { scope: \"private-use\" },\n        qjy: { scope: \"private-use\" },\n        qjz: { scope: \"private-use\" },\n        qka: { scope: \"private-use\" },\n        qkb: { scope: \"private-use\" },\n        qkc: { scope: \"private-use\" },\n        qkd: { scope: \"private-use\" },\n        qke: { scope: \"private-use\" },\n        qkf: { scope: \"private-use\" },\n        qkg: { scope: \"private-use\" },\n        qkh: { scope: \"private-use\" },\n        qki: { scope: \"private-use\" },\n        qkj: { scope: \"private-use\" },\n        qkk: { scope: \"private-use\" },\n        qkl: { scope: \"private-use\" },\n        qkm: { scope: \"private-use\" },\n        qkn: { scope: \"private-use\" },\n        qko: { scope: \"private-use\" },\n        qkp: { scope: \"private-use\" },\n        qkq: { scope: \"private-use\" },\n        qkr: { scope: \"private-use\" },\n        qks: { scope: \"private-use\" },\n        qkt: { scope: \"private-use\" },\n        qku: { scope: \"private-use\" },\n        qkv: { scope: \"private-use\" },\n        qkw: { scope: \"private-use\" },\n        qkx: { scope: \"private-use\" },\n        qky: { scope: \"private-use\" },\n        qkz: { scope: \"private-use\" },\n        qla: { scope: \"private-use\" },\n        qlb: { scope: \"private-use\" },\n        qlc: { scope: \"private-use\" },\n        qld: { scope: \"private-use\" },\n        qle: { scope: \"private-use\" },\n        qlf: { scope: \"private-use\" },\n        qlg: { scope: \"private-use\" },\n        qlh: { scope: \"private-use\" },\n        qli: { scope: \"private-use\" },\n        qlj: { scope: \"private-use\" },\n        qlk: { scope: \"private-use\" },\n        qll: { scope: \"private-use\" },\n        qlm: { scope: \"private-use\" },\n        qln: { scope: \"private-use\" },\n        qlo: { scope: \"private-use\" },\n        qlp: { scope: \"private-use\" },\n        qlq: { scope: \"private-use\" },\n        qlr: { scope: \"private-use\" },\n        qls: { scope: \"private-use\" },\n        qlt: { scope: \"private-use\" },\n        qlu: { scope: \"private-use\" },\n        qlv: { scope: \"private-use\" },\n        qlw: { scope: \"private-use\" },\n        qlx: { scope: \"private-use\" },\n        qly: { scope: \"private-use\" },\n        qlz: { scope: \"private-use\" },\n        qma: { scope: \"private-use\" },\n        qmb: { scope: \"private-use\" },\n        qmc: { scope: \"private-use\" },\n        qmd: { scope: \"private-use\" },\n        qme: { scope: \"private-use\" },\n        qmf: { scope: \"private-use\" },\n        qmg: { scope: \"private-use\" },\n        qmh: { scope: \"private-use\" },\n        qmi: { scope: \"private-use\" },\n        qmj: { scope: \"private-use\" },\n        qmk: { scope: \"private-use\" },\n        qml: { scope: \"private-use\" },\n        qmm: { scope: \"private-use\" },\n        qmn: { scope: \"private-use\" },\n        qmo: { scope: \"private-use\" },\n        qmp: { scope: \"private-use\" },\n        qmq: { scope: \"private-use\" },\n        qmr: { scope: \"private-use\" },\n        qms: { scope: \"private-use\" },\n        qmt: { scope: \"private-use\" },\n        qmu: { scope: \"private-use\" },\n        qmv: { scope: \"private-use\" },\n        qmw: { scope: \"private-use\" },\n        qmx: { scope: \"private-use\" },\n        qmy: { scope: \"private-use\" },\n        qmz: { scope: \"private-use\" },\n        qna: { scope: \"private-use\" },\n        qnb: { scope: \"private-use\" },\n        qnc: { scope: \"private-use\" },\n        qnd: { scope: \"private-use\" },\n        qne: { scope: \"private-use\" },\n        qnf: { scope: \"private-use\" },\n        qng: { scope: \"private-use\" },\n        qnh: { scope: \"private-use\" },\n        qni: { scope: \"private-use\" },\n        qnj: { scope: \"private-use\" },\n        qnk: { scope: \"private-use\" },\n        qnl: { scope: \"private-use\" },\n        qnm: { scope: \"private-use\" },\n        qnn: { scope: \"private-use\" },\n        qno: { scope: \"private-use\" },\n        qnp: { scope: \"private-use\" },\n        qnq: { scope: \"private-use\" },\n        qnr: { scope: \"private-use\" },\n        qns: { scope: \"private-use\" },\n        qnt: { scope: \"private-use\" },\n        qnu: { scope: \"private-use\" },\n        qnv: { scope: \"private-use\" },\n        qnw: { scope: \"private-use\" },\n        qnx: { scope: \"private-use\" },\n        qny: { scope: \"private-use\" },\n        qnz: { scope: \"private-use\" },\n        qoa: { scope: \"private-use\" },\n        qob: { scope: \"private-use\" },\n        qoc: { scope: \"private-use\" },\n        qod: { scope: \"private-use\" },\n        qoe: { scope: \"private-use\" },\n        qof: { scope: \"private-use\" },\n        qog: { scope: \"private-use\" },\n        qoh: { scope: \"private-use\" },\n        qoi: { scope: \"private-use\" },\n        qoj: { scope: \"private-use\" },\n        qok: { scope: \"private-use\" },\n        qol: { scope: \"private-use\" },\n        qom: { scope: \"private-use\" },\n        qon: { scope: \"private-use\" },\n        qoo: { scope: \"private-use\" },\n        qop: { scope: \"private-use\" },\n        qoq: { scope: \"private-use\" },\n        qor: { scope: \"private-use\" },\n        qos: { scope: \"private-use\" },\n        qot: { scope: \"private-use\" },\n        qou: { scope: \"private-use\" },\n        qov: { scope: \"private-use\" },\n        qow: { scope: \"private-use\" },\n        qox: { scope: \"private-use\" },\n        qoy: { scope: \"private-use\" },\n        qoz: { scope: \"private-use\" },\n        qpa: { scope: \"private-use\" },\n        qpb: { scope: \"private-use\" },\n        qpc: { scope: \"private-use\" },\n        qpd: { scope: \"private-use\" },\n        qpe: { scope: \"private-use\" },\n        qpf: { scope: \"private-use\" },\n        qpg: { scope: \"private-use\" },\n        qph: { scope: \"private-use\" },\n        qpi: { scope: \"private-use\" },\n        qpj: { scope: \"private-use\" },\n        qpk: { scope: \"private-use\" },\n        qpl: { scope: \"private-use\" },\n        qpm: { scope: \"private-use\" },\n        qpn: { scope: \"private-use\" },\n        qpo: { scope: \"private-use\" },\n        qpp: { scope: \"private-use\" },\n        qpq: { scope: \"private-use\" },\n        qpr: { scope: \"private-use\" },\n        qps: { scope: \"private-use\" },\n        qpt: { scope: \"private-use\" },\n        qpu: { scope: \"private-use\" },\n        qpv: { scope: \"private-use\" },\n        qpw: { scope: \"private-use\" },\n        qpx: { scope: \"private-use\" },\n        qpy: { scope: \"private-use\" },\n        qpz: { scope: \"private-use\" },\n        qqa: { scope: \"private-use\" },\n        qqb: { scope: \"private-use\" },\n        qqc: { scope: \"private-use\" },\n        qqd: { scope: \"private-use\" },\n        qqe: { scope: \"private-use\" },\n        qqf: { scope: \"private-use\" },\n        qqg: { scope: \"private-use\" },\n        qqh: { scope: \"private-use\" },\n        qqi: { scope: \"private-use\" },\n        qqj: { scope: \"private-use\" },\n        qqk: { scope: \"private-use\" },\n        qql: { scope: \"private-use\" },\n        qqm: { scope: \"private-use\" },\n        qqn: { scope: \"private-use\" },\n        qqo: { scope: \"private-use\" },\n        qqp: { scope: \"private-use\" },\n        qqq: { scope: \"private-use\" },\n        qqr: { scope: \"private-use\" },\n        qqs: { scope: \"private-use\" },\n        qqt: { scope: \"private-use\" },\n        qqu: { scope: \"private-use\" },\n        qqv: { scope: \"private-use\" },\n        qqw: { scope: \"private-use\" },\n        qqx: { scope: \"private-use\" },\n        qqy: { scope: \"private-use\" },\n        qqz: { scope: \"private-use\" },\n        qra: { scope: \"private-use\" },\n        qrb: { scope: \"private-use\" },\n        qrc: { scope: \"private-use\" },\n        qrd: { scope: \"private-use\" },\n        qre: { scope: \"private-use\" },\n        qrf: { scope: \"private-use\" },\n        qrg: { scope: \"private-use\" },\n        qrh: { scope: \"private-use\" },\n        qri: { scope: \"private-use\" },\n        qrj: { scope: \"private-use\" },\n        qrk: { scope: \"private-use\" },\n        qrl: { scope: \"private-use\" },\n        qrm: { scope: \"private-use\" },\n        qrn: { scope: \"private-use\" },\n        qro: { scope: \"private-use\" },\n        qrp: { scope: \"private-use\" },\n        qrq: { scope: \"private-use\" },\n        qrr: { scope: \"private-use\" },\n        qrs: { scope: \"private-use\" },\n        qrt: { scope: \"private-use\" },\n        qru: { scope: \"private-use\" },\n        qrv: { scope: \"private-use\" },\n        qrw: { scope: \"private-use\" },\n        qrx: { scope: \"private-use\" },\n        qry: { scope: \"private-use\" },\n        qrz: { scope: \"private-use\" },\n        qsa: { scope: \"private-use\" },\n        qsb: { scope: \"private-use\" },\n        qsc: { scope: \"private-use\" },\n        qsd: { scope: \"private-use\" },\n        qse: { scope: \"private-use\" },\n        qsf: { scope: \"private-use\" },\n        qsg: { scope: \"private-use\" },\n        qsh: { scope: \"private-use\" },\n        qsi: { scope: \"private-use\" },\n        qsj: { scope: \"private-use\" },\n        qsk: { scope: \"private-use\" },\n        qsl: { scope: \"private-use\" },\n        qsm: { scope: \"private-use\" },\n        qsn: { scope: \"private-use\" },\n        qso: { scope: \"private-use\" },\n        qsp: { scope: \"private-use\" },\n        qsq: { scope: \"private-use\" },\n        qsr: { scope: \"private-use\" },\n        qss: { scope: \"private-use\" },\n        qst: { scope: \"private-use\" },\n        qsu: { scope: \"private-use\" },\n        qsv: { scope: \"private-use\" },\n        qsw: { scope: \"private-use\" },\n        qsx: { scope: \"private-use\" },\n        qsy: { scope: \"private-use\" },\n        qsz: { scope: \"private-use\" },\n        qta: { scope: \"private-use\" },\n        qtb: { scope: \"private-use\" },\n        qtc: { scope: \"private-use\" },\n        qtd: { scope: \"private-use\" },\n        qte: { scope: \"private-use\" },\n        qtf: { scope: \"private-use\" },\n        qtg: { scope: \"private-use\" },\n        qth: { scope: \"private-use\" },\n        qti: { scope: \"private-use\" },\n        qtj: { scope: \"private-use\" },\n        qtk: { scope: \"private-use\" },\n        qtl: { scope: \"private-use\" },\n        qtm: { scope: \"private-use\" },\n        qtn: { scope: \"private-use\" },\n        qto: { scope: \"private-use\" },\n        qtp: { scope: \"private-use\" },\n        qtq: { scope: \"private-use\" },\n        qtr: { scope: \"private-use\" },\n        qts: { scope: \"private-use\" },\n        qtt: { scope: \"private-use\" },\n        qtu: { scope: \"private-use\" },\n        qtv: { scope: \"private-use\" },\n        qtw: { scope: \"private-use\" },\n        qtx: { scope: \"private-use\" },\n        qty: { scope: \"private-use\" },\n        qtz: { scope: \"private-use\" },\n        qua: { scope: null },\n        qub: { scope: null },\n        quc: { scope: null },\n        qud: { scope: null },\n        quf: { scope: null },\n        qug: { scope: null },\n        quh: { scope: null },\n        qui: { scope: null },\n        quk: { scope: null },\n        qul: { scope: null },\n        qum: { scope: null },\n        qun: { scope: null },\n        qup: { scope: null },\n        quq: { scope: null },\n        qur: { scope: null },\n        qus: { scope: null },\n        quv: { scope: null },\n        quw: { scope: null },\n        qux: { scope: null },\n        quy: { scope: null },\n        quz: { scope: null },\n        qva: { scope: null },\n        qvc: { scope: null },\n        qve: { scope: null },\n        qvh: { scope: null },\n        qvi: { scope: null },\n        qvj: { scope: null },\n        qvl: { scope: null },\n        qvm: { scope: null },\n        qvn: { scope: null },\n        qvo: { scope: null },\n        qvp: { scope: null },\n        qvs: { scope: null },\n        qvw: { scope: null },\n        qvy: { scope: null },\n        qvz: { scope: null },\n        qwa: { scope: null },\n        qwc: { scope: null },\n        qwe: { scope: \"collection\" },\n        qwh: { scope: null },\n        qwm: { scope: null },\n        qws: { scope: null },\n        qwt: { scope: null },\n        qxa: { scope: null },\n        qxc: { scope: null },\n        qxh: { scope: null },\n        qxl: { scope: null },\n        qxn: { scope: null },\n        qxo: { scope: null },\n        qxp: { scope: null },\n        qxq: { scope: null },\n        qxr: { scope: null },\n        qxs: { scope: null },\n        qxt: { scope: null },\n        qxu: { scope: null },\n        qxw: { scope: null },\n        qya: { scope: null },\n        qyp: { scope: null },\n        raa: { scope: null },\n        rab: { scope: null },\n        rac: { scope: null },\n        rad: { scope: null },\n        raf: { scope: null },\n        rag: { scope: null },\n        rah: { scope: null },\n        rai: { scope: null },\n        raj: { scope: \"macrolanguage\" },\n        rak: { scope: null },\n        ral: { scope: null },\n        ram: { scope: null },\n        ran: { scope: null },\n        rao: { scope: null },\n        rap: { scope: null },\n        raq: { scope: null },\n        rar: { scope: null },\n        ras: { scope: null },\n        rat: { scope: null },\n        rau: { scope: null },\n        rav: { scope: null },\n        raw: { scope: null },\n        rax: { scope: null },\n        ray: { scope: null },\n        raz: { scope: null },\n        rbb: { scope: null },\n        rbk: { scope: null },\n        rbl: { scope: null },\n        rbp: { scope: null },\n        rcf: { scope: null },\n        rdb: { scope: null },\n        rea: { scope: null },\n        reb: { scope: null },\n        ree: { scope: null },\n        reg: { scope: null },\n        rei: { scope: null },\n        rej: { scope: null },\n        rel: { scope: null },\n        rem: { scope: null },\n        ren: { scope: null },\n        rer: { scope: null },\n        res: { scope: null },\n        ret: { scope: null },\n        rey: { scope: null },\n        rga: { scope: null },\n        rge: { scope: null },\n        rgk: { scope: null },\n        rgn: { scope: null },\n        rgr: { scope: null },\n        rgs: { scope: null },\n        rgu: { scope: null },\n        rhg: { scope: null },\n        rhp: { scope: null },\n        ria: { scope: null },\n        rie: { scope: null },\n        rif: { scope: null },\n        ril: { scope: null },\n        rim: { scope: null },\n        rin: { scope: null },\n        rir: { scope: null },\n        rit: { scope: null },\n        riu: { scope: null },\n        rjg: { scope: null },\n        rji: { scope: null },\n        rjs: { scope: null },\n        rka: { scope: null },\n        rkb: { scope: null },\n        rkh: { scope: null },\n        rki: { scope: null },\n        rkm: { scope: null },\n        rkt: { scope: null },\n        rkw: { scope: null },\n        rma: { scope: null },\n        rmb: { scope: null },\n        rmc: { scope: null },\n        rmd: { scope: null },\n        rme: { scope: null },\n        rmf: { scope: null },\n        rmg: { scope: null },\n        rmh: { scope: null },\n        rmi: { scope: null },\n        rmk: { scope: null },\n        rml: { scope: null },\n        rmm: { scope: null },\n        rmn: { scope: null },\n        rmo: { scope: null },\n        rmp: { scope: null },\n        rmq: { scope: null },\n        rmr: { scope: null },\n        rms: { scope: null },\n        rmt: { scope: null },\n        rmu: { scope: null },\n        rmv: { scope: null },\n        rmw: { scope: null },\n        rmx: { scope: null },\n        rmy: { scope: null },\n        rmz: { scope: null },\n        rna: { scope: null },\n        rnd: { scope: null },\n        rng: { scope: null },\n        rnl: { scope: null },\n        rnn: { scope: null },\n        rnp: { scope: null },\n        rnr: { scope: null },\n        rnw: { scope: null },\n        roa: { scope: \"collection\" },\n        rob: { scope: null },\n        roc: { scope: null },\n        rod: { scope: null },\n        roe: { scope: null },\n        rof: { scope: null },\n        rog: { scope: null },\n        rol: { scope: null },\n        rom: { scope: \"macrolanguage\" },\n        roo: { scope: null },\n        rop: { scope: null },\n        ror: { scope: null },\n        rou: { scope: null },\n        row: { scope: null },\n        rpn: { scope: null },\n        rpt: { scope: null },\n        rri: { scope: null },\n        rro: { scope: null },\n        rrt: { scope: null },\n        rsb: { scope: null },\n        rsi: { scope: null },\n        rsl: { scope: null },\n        rsm: { scope: null },\n        rtc: { scope: null },\n        rth: { scope: null },\n        rtm: { scope: null },\n        rts: { scope: null },\n        rtw: { scope: null },\n        rub: { scope: null },\n        ruc: { scope: null },\n        rue: { scope: null },\n        ruf: { scope: null },\n        rug: { scope: null },\n        ruh: { scope: null },\n        rui: { scope: null },\n        ruk: { scope: null },\n        ruo: { scope: null },\n        rup: { scope: null },\n        ruq: { scope: null },\n        rut: { scope: null },\n        ruu: { scope: null },\n        ruy: { scope: null },\n        ruz: { scope: null },\n        rwa: { scope: null },\n        rwk: { scope: null },\n        rwl: { scope: null },\n        rwm: { scope: null },\n        rwo: { scope: null },\n        rwr: { scope: null },\n        rxd: { scope: null },\n        rxw: { scope: null },\n        ryn: { scope: null },\n        rys: { scope: null },\n        ryu: { scope: null },\n        rzh: { scope: null },\n        saa: { scope: null },\n        sab: { scope: null },\n        sac: { scope: null },\n        sad: { scope: null },\n        sae: { scope: null },\n        saf: { scope: null },\n        sah: { scope: null },\n        sai: { scope: \"collection\" },\n        saj: { scope: null },\n        sak: { scope: null },\n        sal: { scope: \"collection\" },\n        sam: { scope: null },\n        sao: { scope: null },\n        sap: { scope: null },\n        saq: { scope: null },\n        sar: { scope: null },\n        sas: { scope: null },\n        sat: { scope: null },\n        sau: { scope: null },\n        sav: { scope: null },\n        saw: { scope: null },\n        sax: { scope: null },\n        say: { scope: null },\n        saz: { scope: null },\n        sba: { scope: null },\n        sbb: { scope: null },\n        sbc: { scope: null },\n        sbd: { scope: null },\n        sbe: { scope: null },\n        sbf: { scope: null },\n        sbg: { scope: null },\n        sbh: { scope: null },\n        sbi: { scope: null },\n        sbj: { scope: null },\n        sbk: { scope: null },\n        sbl: { scope: null },\n        sbm: { scope: null },\n        sbn: { scope: null },\n        sbo: { scope: null },\n        sbp: { scope: null },\n        sbq: { scope: null },\n        sbr: { scope: null },\n        sbs: { scope: null },\n        sbt: { scope: null },\n        sbu: { scope: null },\n        sbv: { scope: null },\n        sbw: { scope: null },\n        sbx: { scope: null },\n        sby: { scope: null },\n        sbz: { scope: null },\n        sca: { scope: null },\n        scb: { scope: null },\n        sce: { scope: null },\n        scf: { scope: null },\n        scg: { scope: null },\n        sch: { scope: null },\n        sci: { scope: null },\n        sck: { scope: null },\n        scl: { scope: null },\n        scn: { scope: null },\n        sco: { scope: null },\n        scp: { scope: null },\n        scq: { scope: null },\n        scs: { scope: null },\n        sct: { scope: null },\n        scu: { scope: null },\n        scv: { scope: null },\n        scw: { scope: null },\n        scx: { scope: null },\n        sda: { scope: null },\n        sdb: { scope: null },\n        sdc: { scope: null },\n        sde: { scope: null },\n        sdf: { scope: null },\n        sdg: { scope: null },\n        sdh: { scope: null },\n        sdj: { scope: null },\n        sdk: { scope: null },\n        sdl: { scope: null },\n        sdm: { scope: null },\n        sdn: { scope: null },\n        sdo: { scope: null },\n        sdp: { scope: null },\n        sdq: { scope: null },\n        sdr: { scope: null },\n        sds: { scope: null },\n        sdt: { scope: null },\n        sdu: { scope: null },\n        sdv: { scope: \"collection\" },\n        sdx: { scope: null },\n        sdz: { scope: null },\n        sea: { scope: null },\n        seb: { scope: null },\n        sec: { scope: null },\n        sed: { scope: null },\n        see: { scope: null },\n        sef: { scope: null },\n        seg: { scope: null },\n        seh: { scope: null },\n        sei: { scope: null },\n        sej: { scope: null },\n        sek: { scope: null },\n        sel: { scope: null },\n        sem: { scope: \"collection\" },\n        sen: { scope: null },\n        seo: { scope: null },\n        sep: { scope: null },\n        seq: { scope: null },\n        ser: { scope: null },\n        ses: { scope: null },\n        set: { scope: null },\n        seu: { scope: null },\n        sev: { scope: null },\n        sew: { scope: null },\n        sey: { scope: null },\n        sez: { scope: null },\n        sfb: { scope: null },\n        sfe: { scope: null },\n        sfm: { scope: null },\n        sfs: { scope: null },\n        sfw: { scope: null },\n        sga: { scope: null },\n        sgb: { scope: null },\n        sgc: { scope: null },\n        sgd: { scope: null },\n        sge: { scope: null },\n        sgg: { scope: null },\n        sgh: { scope: null },\n        sgi: { scope: null },\n        sgj: { scope: null },\n        sgk: { scope: null },\n        sgl: { scope: null },\n        sgm: { scope: null },\n        sgn: { scope: \"collection\" },\n        sgo: { scope: null },\n        sgp: { scope: null },\n        sgr: { scope: null },\n        sgs: { scope: null },\n        sgt: { scope: null },\n        sgu: { scope: null },\n        sgw: { scope: null },\n        sgx: { scope: null },\n        sgy: { scope: null },\n        sgz: { scope: null },\n        sha: { scope: null },\n        shb: { scope: null },\n        shc: { scope: null },\n        shd: { scope: null },\n        she: { scope: null },\n        shg: { scope: null },\n        shh: { scope: null },\n        shi: { scope: null },\n        shj: { scope: null },\n        shk: { scope: null },\n        shl: { scope: null },\n        shm: { scope: null },\n        shn: { scope: null },\n        sho: { scope: null },\n        shp: { scope: null },\n        shq: { scope: null },\n        shr: { scope: null },\n        shs: { scope: null },\n        sht: { scope: null },\n        shu: { scope: null },\n        shv: { scope: null },\n        shw: { scope: null },\n        shx: { scope: null },\n        shy: { scope: null },\n        shz: { scope: null },\n        sia: { scope: null },\n        sib: { scope: null },\n        sid: { scope: null },\n        sie: { scope: null },\n        sif: { scope: null },\n        sig: { scope: null },\n        sih: { scope: null },\n        sii: { scope: null },\n        sij: { scope: null },\n        sik: { scope: null },\n        sil: { scope: null },\n        sim: { scope: null },\n        sio: { scope: \"collection\" },\n        sip: { scope: null },\n        siq: { scope: null },\n        sir: { scope: null },\n        sis: { scope: null },\n        sit: { scope: \"collection\" },\n        siu: { scope: null },\n        siv: { scope: null },\n        siw: { scope: null },\n        six: { scope: null },\n        siy: { scope: null },\n        siz: { scope: null },\n        sja: { scope: null },\n        sjb: { scope: null },\n        sjd: { scope: null },\n        sje: { scope: null },\n        sjg: { scope: null },\n        sjk: { scope: null },\n        sjl: { scope: null },\n        sjm: { scope: null },\n        sjn: { scope: null },\n        sjo: { scope: null },\n        sjp: { scope: null },\n        sjr: { scope: null },\n        sjs: { scope: null },\n        sjt: { scope: null },\n        sju: { scope: null },\n        sjw: { scope: null },\n        ska: { scope: null },\n        skb: { scope: null },\n        skc: { scope: null },\n        skd: { scope: null },\n        ske: { scope: null },\n        skf: { scope: null },\n        skg: { scope: null },\n        skh: { scope: null },\n        ski: { scope: null },\n        skj: { scope: null },\n        skk: { scope: null },\n        skm: { scope: null },\n        skn: { scope: null },\n        sko: { scope: null },\n        skp: { scope: null },\n        skq: { scope: null },\n        skr: { scope: null },\n        sks: { scope: null },\n        skt: { scope: null },\n        sku: { scope: null },\n        skv: { scope: null },\n        skw: { scope: null },\n        skx: { scope: null },\n        sky: { scope: null },\n        skz: { scope: null },\n        sla: { scope: \"collection\" },\n        slc: { scope: null },\n        sld: { scope: null },\n        sle: { scope: null },\n        slf: { scope: null },\n        slg: { scope: null },\n        slh: { scope: null },\n        sli: { scope: null },\n        slj: { scope: null },\n        sll: { scope: null },\n        slm: { scope: null },\n        sln: { scope: null },\n        slp: { scope: null },\n        slq: { scope: null },\n        slr: { scope: null },\n        sls: { scope: null },\n        slt: { scope: null },\n        slu: { scope: null },\n        slw: { scope: null },\n        slx: { scope: null },\n        sly: { scope: null },\n        slz: { scope: null },\n        sma: { scope: null },\n        smb: { scope: null },\n        smc: { scope: null },\n        smd: { scope: null },\n        smf: { scope: null },\n        smg: { scope: null },\n        smh: { scope: null },\n        smi: { scope: \"collection\" },\n        smj: { scope: null },\n        smk: { scope: null },\n        sml: { scope: null },\n        smm: { scope: null },\n        smn: { scope: null },\n        smp: { scope: null },\n        smq: { scope: null },\n        smr: { scope: null },\n        sms: { scope: null },\n        smt: { scope: null },\n        smu: { scope: null },\n        smv: { scope: null },\n        smw: { scope: null },\n        smx: { scope: null },\n        smy: { scope: null },\n        smz: { scope: null },\n        snb: { scope: null },\n        snc: { scope: null },\n        sne: { scope: null },\n        snf: { scope: null },\n        sng: { scope: null },\n        snh: { scope: null },\n        sni: { scope: null },\n        snj: { scope: null },\n        snk: { scope: null },\n        snl: { scope: null },\n        snm: { scope: null },\n        snn: { scope: null },\n        sno: { scope: null },\n        snp: { scope: null },\n        snq: { scope: null },\n        snr: { scope: null },\n        sns: { scope: null },\n        snu: { scope: null },\n        snv: { scope: null },\n        snw: { scope: null },\n        snx: { scope: null },\n        sny: { scope: null },\n        snz: { scope: null },\n        soa: { scope: null },\n        sob: { scope: null },\n        soc: { scope: null },\n        sod: { scope: null },\n        soe: { scope: null },\n        sog: { scope: null },\n        soh: { scope: null },\n        soi: { scope: null },\n        soj: { scope: null },\n        sok: { scope: null },\n        sol: { scope: null },\n        son: { scope: \"collection\" },\n        soo: { scope: null },\n        sop: { scope: null },\n        soq: { scope: null },\n        sor: { scope: null },\n        sos: { scope: null },\n        sou: { scope: null },\n        sov: { scope: null },\n        sow: { scope: null },\n        sox: { scope: null },\n        soy: { scope: null },\n        soz: { scope: null },\n        spb: { scope: null },\n        spc: { scope: null },\n        spd: { scope: null },\n        spe: { scope: null },\n        spg: { scope: null },\n        spi: { scope: null },\n        spk: { scope: null },\n        spl: { scope: null },\n        spm: { scope: null },\n        spn: { scope: null },\n        spo: { scope: null },\n        spp: { scope: null },\n        spq: { scope: null },\n        spr: { scope: null },\n        sps: { scope: null },\n        spt: { scope: null },\n        spu: { scope: null },\n        spv: { scope: null },\n        spx: { scope: null },\n        spy: { scope: null },\n        sqa: { scope: null },\n        sqh: { scope: null },\n        sqj: { scope: \"collection\" },\n        sqk: { scope: null },\n        sqm: { scope: null },\n        sqn: { scope: null },\n        sqo: { scope: null },\n        sqq: { scope: null },\n        sqr: { scope: null },\n        sqs: { scope: null },\n        sqt: { scope: null },\n        squ: { scope: null },\n        sqx: { scope: null },\n        sra: { scope: null },\n        srb: { scope: null },\n        src: { scope: null },\n        sre: { scope: null },\n        srf: { scope: null },\n        srg: { scope: null },\n        srh: { scope: null },\n        sri: { scope: null },\n        srk: { scope: null },\n        srl: { scope: null },\n        srm: { scope: null },\n        srn: { scope: null },\n        sro: { scope: null },\n        srq: { scope: null },\n        srr: { scope: null },\n        srs: { scope: null },\n        srt: { scope: null },\n        sru: { scope: null },\n        srv: { scope: null },\n        srw: { scope: null },\n        srx: { scope: null },\n        sry: { scope: null },\n        srz: { scope: null },\n        ssa: { scope: \"collection\" },\n        ssb: { scope: null },\n        ssc: { scope: null },\n        ssd: { scope: null },\n        sse: { scope: null },\n        ssf: { scope: null },\n        ssg: { scope: null },\n        ssh: { scope: null },\n        ssi: { scope: null },\n        ssj: { scope: null },\n        ssk: { scope: null },\n        ssl: { scope: null },\n        ssm: { scope: null },\n        ssn: { scope: null },\n        sso: { scope: null },\n        ssp: { scope: null },\n        ssq: { scope: null },\n        ssr: { scope: null },\n        sss: { scope: null },\n        sst: { scope: null },\n        ssu: { scope: null },\n        ssv: { scope: null },\n        ssx: { scope: null },\n        ssy: { scope: null },\n        ssz: { scope: null },\n        sta: { scope: null },\n        stb: { scope: null },\n        std: { scope: null },\n        ste: { scope: null },\n        stf: { scope: null },\n        stg: { scope: null },\n        sth: { scope: null },\n        sti: { scope: null },\n        stj: { scope: null },\n        stk: { scope: null },\n        stl: { scope: null },\n        stm: { scope: null },\n        stn: { scope: null },\n        sto: { scope: null },\n        stp: { scope: null },\n        stq: { scope: null },\n        str: { scope: null },\n        sts: { scope: null },\n        stt: { scope: null },\n        stu: { scope: null },\n        stv: { scope: null },\n        stw: { scope: null },\n        sty: { scope: null },\n        sua: { scope: null },\n        sub: { scope: null },\n        suc: { scope: null },\n        sue: { scope: null },\n        sug: { scope: null },\n        sui: { scope: null },\n        suj: { scope: null },\n        suk: { scope: null },\n        sul: { scope: null },\n        sum: { scope: null },\n        suo: { scope: null },\n        suq: { scope: null },\n        sur: { scope: null },\n        sus: { scope: null },\n        sut: { scope: null },\n        suv: { scope: null },\n        suw: { scope: null },\n        sux: { scope: null },\n        suy: { scope: null },\n        suz: { scope: null },\n        sva: { scope: null },\n        svb: { scope: null },\n        svc: { scope: null },\n        sve: { scope: null },\n        svk: { scope: null },\n        svm: { scope: null },\n        svr: { scope: null },\n        svs: { scope: null },\n        svx: { scope: null },\n        swb: { scope: null },\n        swc: { scope: null },\n        swf: { scope: null },\n        swg: { scope: null },\n        swh: { scope: null },\n        swi: { scope: null },\n        swj: { scope: null },\n        swk: { scope: null },\n        swl: { scope: null },\n        swm: { scope: null },\n        swn: { scope: null },\n        swo: { scope: null },\n        swp: { scope: null },\n        swq: { scope: null },\n        swr: { scope: null },\n        sws: { scope: null },\n        swt: { scope: null },\n        swu: { scope: null },\n        swv: { scope: null },\n        sww: { scope: null },\n        swx: { scope: null },\n        swy: { scope: null },\n        sxb: { scope: null },\n        sxc: { scope: null },\n        sxe: { scope: null },\n        sxg: { scope: null },\n        sxk: { scope: null },\n        sxl: { scope: null },\n        sxm: { scope: null },\n        sxn: { scope: null },\n        sxo: { scope: null },\n        sxr: { scope: null },\n        sxs: { scope: null },\n        sxu: { scope: null },\n        sxw: { scope: null },\n        sya: { scope: null },\n        syb: { scope: null },\n        syc: { scope: null },\n        syd: { scope: \"collection\" },\n        syi: { scope: null },\n        syk: { scope: null },\n        syl: { scope: null },\n        sym: { scope: null },\n        syn: { scope: null },\n        syo: { scope: null },\n        syr: { scope: \"macrolanguage\" },\n        sys: { scope: null },\n        syw: { scope: null },\n        syx: { scope: null },\n        syy: { scope: null },\n        sza: { scope: null },\n        szb: { scope: null },\n        szc: { scope: null },\n        szd: { scope: null },\n        sze: { scope: null },\n        szg: { scope: null },\n        szl: { scope: null },\n        szn: { scope: null },\n        szp: { scope: null },\n        szs: { scope: null },\n        szv: { scope: null },\n        szw: { scope: null },\n        szy: { scope: null },\n        taa: { scope: null },\n        tab: { scope: null },\n        tac: { scope: null },\n        tad: { scope: null },\n        tae: { scope: null },\n        taf: { scope: null },\n        tag: { scope: null },\n        tai: { scope: \"collection\" },\n        taj: { scope: null },\n        tak: { scope: null },\n        tal: { scope: null },\n        tan: { scope: null },\n        tao: { scope: null },\n        tap: { scope: null },\n        taq: { scope: null },\n        tar: { scope: null },\n        tas: { scope: null },\n        tau: { scope: null },\n        tav: { scope: null },\n        taw: { scope: null },\n        tax: { scope: null },\n        tay: { scope: null },\n        taz: { scope: null },\n        tba: { scope: null },\n        tbb: { scope: null },\n        tbc: { scope: null },\n        tbd: { scope: null },\n        tbe: { scope: null },\n        tbf: { scope: null },\n        tbg: { scope: null },\n        tbh: { scope: null },\n        tbi: { scope: null },\n        tbj: { scope: null },\n        tbk: { scope: null },\n        tbl: { scope: null },\n        tbm: { scope: null },\n        tbn: { scope: null },\n        tbo: { scope: null },\n        tbp: { scope: null },\n        tbq: { scope: \"collection\" },\n        tbr: { scope: null },\n        tbs: { scope: null },\n        tbt: { scope: null },\n        tbu: { scope: null },\n        tbv: { scope: null },\n        tbw: { scope: null },\n        tbx: { scope: null },\n        tby: { scope: null },\n        tbz: { scope: null },\n        tca: { scope: null },\n        tcb: { scope: null },\n        tcc: { scope: null },\n        tcd: { scope: null },\n        tce: { scope: null },\n        tcf: { scope: null },\n        tcg: { scope: null },\n        tch: { scope: null },\n        tci: { scope: null },\n        tck: { scope: null },\n        tcl: { scope: null },\n        tcm: { scope: null },\n        tcn: { scope: null },\n        tco: { scope: null },\n        tcp: { scope: null },\n        tcq: { scope: null },\n        tcs: { scope: null },\n        tct: { scope: null },\n        tcu: { scope: null },\n        tcw: { scope: null },\n        tcx: { scope: null },\n        tcy: { scope: null },\n        tcz: { scope: null },\n        tda: { scope: null },\n        tdb: { scope: null },\n        tdc: { scope: null },\n        tdd: { scope: null },\n        tde: { scope: null },\n        tdf: { scope: null },\n        tdg: { scope: null },\n        tdh: { scope: null },\n        tdi: { scope: null },\n        tdj: { scope: null },\n        tdk: { scope: null },\n        tdl: { scope: null },\n        tdm: { scope: null },\n        tdn: { scope: null },\n        tdo: { scope: null },\n        tdq: { scope: null },\n        tdr: { scope: null },\n        tds: { scope: null },\n        tdt: { scope: null },\n        tdu: { scope: null },\n        tdv: { scope: null },\n        tdx: { scope: null },\n        tdy: { scope: null },\n        tea: { scope: null },\n        teb: { scope: null },\n        tec: { scope: null },\n        ted: { scope: null },\n        tee: { scope: null },\n        tef: { scope: null },\n        teg: { scope: null },\n        teh: { scope: null },\n        tei: { scope: null },\n        tek: { scope: null },\n        tem: { scope: null },\n        ten: { scope: null },\n        teo: { scope: null },\n        tep: { scope: null },\n        teq: { scope: null },\n        ter: { scope: null },\n        tes: { scope: null },\n        tet: { scope: null },\n        teu: { scope: null },\n        tev: { scope: null },\n        tew: { scope: null },\n        tex: { scope: null },\n        tey: { scope: null },\n        tez: { scope: null },\n        tfi: { scope: null },\n        tfn: { scope: null },\n        tfo: { scope: null },\n        tfr: { scope: null },\n        tft: { scope: null },\n        tga: { scope: null },\n        tgb: { scope: null },\n        tgc: { scope: null },\n        tgd: { scope: null },\n        tge: { scope: null },\n        tgf: { scope: null },\n        tgg: { scope: null },\n        tgh: { scope: null },\n        tgi: { scope: null },\n        tgj: { scope: null },\n        tgn: { scope: null },\n        tgo: { scope: null },\n        tgp: { scope: null },\n        tgq: { scope: null },\n        tgr: { scope: null },\n        tgs: { scope: null },\n        tgt: { scope: null },\n        tgu: { scope: null },\n        tgv: { scope: null },\n        tgw: { scope: null },\n        tgx: { scope: null },\n        tgy: { scope: null },\n        tgz: { scope: null },\n        thc: { scope: null },\n        thd: { scope: null },\n        the: { scope: null },\n        thf: { scope: null },\n        thh: { scope: null },\n        thi: { scope: null },\n        thk: { scope: null },\n        thl: { scope: null },\n        thm: { scope: null },\n        thn: { scope: null },\n        thp: { scope: null },\n        thq: { scope: null },\n        thr: { scope: null },\n        ths: { scope: null },\n        tht: { scope: null },\n        thu: { scope: null },\n        thv: { scope: null },\n        thw: { scope: null },\n        thx: { scope: null },\n        thy: { scope: null },\n        thz: { scope: null },\n        tia: { scope: null },\n        tic: { scope: null },\n        tid: { scope: null },\n        tie: { scope: null },\n        tif: { scope: null },\n        tig: { scope: null },\n        tih: { scope: null },\n        tii: { scope: null },\n        tij: { scope: null },\n        tik: { scope: null },\n        til: { scope: null },\n        tim: { scope: null },\n        tin: { scope: null },\n        tio: { scope: null },\n        tip: { scope: null },\n        tiq: { scope: null },\n        tis: { scope: null },\n        tit: { scope: null },\n        tiu: { scope: null },\n        tiv: { scope: null },\n        tiw: { scope: null },\n        tix: { scope: null },\n        tiy: { scope: null },\n        tiz: { scope: null },\n        tja: { scope: null },\n        tjg: { scope: null },\n        tji: { scope: null },\n        tjj: { scope: null },\n        tjl: { scope: null },\n        tjm: { scope: null },\n        tjn: { scope: null },\n        tjo: { scope: null },\n        tjp: { scope: null },\n        tjs: { scope: null },\n        tju: { scope: null },\n        tjw: { scope: null },\n        tka: { scope: null },\n        tkb: { scope: null },\n        tkd: { scope: null },\n        tke: { scope: null },\n        tkf: { scope: null },\n        tkg: { scope: null },\n        tkk: { scope: null },\n        tkl: { scope: null },\n        tkm: { scope: null },\n        tkn: { scope: null },\n        tkp: { scope: null },\n        tkq: { scope: null },\n        tkr: { scope: null },\n        tks: { scope: null },\n        tkt: { scope: null },\n        tku: { scope: null },\n        tkv: { scope: null },\n        tkw: { scope: null },\n        tkx: { scope: null },\n        tkz: { scope: null },\n        tla: { scope: null },\n        tlb: { scope: null },\n        tlc: { scope: null },\n        tld: { scope: null },\n        tlf: { scope: null },\n        tlg: { scope: null },\n        tlh: { scope: null },\n        tli: { scope: null },\n        tlj: { scope: null },\n        tlk: { scope: null },\n        tll: { scope: null },\n        tlm: { scope: null },\n        tln: { scope: null },\n        tlo: { scope: null },\n        tlp: { scope: null },\n        tlq: { scope: null },\n        tlr: { scope: null },\n        tls: { scope: null },\n        tlt: { scope: null },\n        tlu: { scope: null },\n        tlv: { scope: null },\n        tlw: { scope: null },\n        tlx: { scope: null },\n        tly: { scope: null },\n        tma: { scope: null },\n        tmb: { scope: null },\n        tmc: { scope: null },\n        tmd: { scope: null },\n        tme: { scope: null },\n        tmf: { scope: null },\n        tmg: { scope: null },\n        tmh: { scope: \"macrolanguage\" },\n        tmi: { scope: null },\n        tmj: { scope: null },\n        tmk: { scope: null },\n        tml: { scope: null },\n        tmm: { scope: null },\n        tmn: { scope: null },\n        tmo: { scope: null },\n        tmp: { scope: null },\n        tmq: { scope: null },\n        tmr: { scope: null },\n        tms: { scope: null },\n        tmt: { scope: null },\n        tmu: { scope: null },\n        tmv: { scope: null },\n        tmw: { scope: null },\n        tmy: { scope: null },\n        tmz: { scope: null },\n        tna: { scope: null },\n        tnb: { scope: null },\n        tnc: { scope: null },\n        tnd: { scope: null },\n        tne: { scope: null },\n        tnf: { scope: null },\n        tng: { scope: null },\n        tnh: { scope: null },\n        tni: { scope: null },\n        tnk: { scope: null },\n        tnl: { scope: null },\n        tnm: { scope: null },\n        tnn: { scope: null },\n        tno: { scope: null },\n        tnp: { scope: null },\n        tnq: { scope: null },\n        tnr: { scope: null },\n        tns: { scope: null },\n        tnt: { scope: null },\n        tnu: { scope: null },\n        tnv: { scope: null },\n        tnw: { scope: null },\n        tnx: { scope: null },\n        tny: { scope: null },\n        tnz: { scope: null },\n        tob: { scope: null },\n        toc: { scope: null },\n        tod: { scope: null },\n        toe: { scope: null },\n        tof: { scope: null },\n        tog: { scope: null },\n        toh: { scope: null },\n        toi: { scope: null },\n        toj: { scope: null },\n        tol: { scope: null },\n        tom: { scope: null },\n        too: { scope: null },\n        top: { scope: null },\n        toq: { scope: null },\n        tor: { scope: null },\n        tos: { scope: null },\n        tou: { scope: null },\n        tov: { scope: null },\n        tow: { scope: null },\n        tox: { scope: null },\n        toy: { scope: null },\n        toz: { scope: null },\n        tpa: { scope: null },\n        tpc: { scope: null },\n        tpe: { scope: null },\n        tpf: { scope: null },\n        tpg: { scope: null },\n        tpi: { scope: null },\n        tpj: { scope: null },\n        tpk: { scope: null },\n        tpl: { scope: null },\n        tpm: { scope: null },\n        tpn: { scope: null },\n        tpo: { scope: null },\n        tpp: { scope: null },\n        tpq: { scope: null },\n        tpr: { scope: null },\n        tpt: { scope: null },\n        tpu: { scope: null },\n        tpv: { scope: null },\n        tpw: { scope: null },\n        tpx: { scope: null },\n        tpy: { scope: null },\n        tpz: { scope: null },\n        tqb: { scope: null },\n        tql: { scope: null },\n        tqm: { scope: null },\n        tqn: { scope: null },\n        tqo: { scope: null },\n        tqp: { scope: null },\n        tqq: { scope: null },\n        tqr: { scope: null },\n        tqt: { scope: null },\n        tqu: { scope: null },\n        tqw: { scope: null },\n        tra: { scope: null },\n        trb: { scope: null },\n        trc: { scope: null },\n        trd: { scope: null },\n        tre: { scope: null },\n        trf: { scope: null },\n        trg: { scope: null },\n        trh: { scope: null },\n        tri: { scope: null },\n        trj: { scope: null },\n        trk: { scope: \"collection\" },\n        trl: { scope: null },\n        trm: { scope: null },\n        trn: { scope: null },\n        tro: { scope: null },\n        trp: { scope: null },\n        trq: { scope: null },\n        trr: { scope: null },\n        trs: { scope: null },\n        trt: { scope: null },\n        tru: { scope: null },\n        trv: { scope: null },\n        trw: { scope: null },\n        trx: { scope: null },\n        try: { scope: null },\n        trz: { scope: null },\n        tsa: { scope: null },\n        tsb: { scope: null },\n        tsc: { scope: null },\n        tsd: { scope: null },\n        tse: { scope: null },\n        tsf: { scope: null },\n        tsg: { scope: null },\n        tsh: { scope: null },\n        tsi: { scope: null },\n        tsj: { scope: null },\n        tsk: { scope: null },\n        tsl: { scope: null },\n        tsm: { scope: null },\n        tsp: { scope: null },\n        tsq: { scope: null },\n        tsr: { scope: null },\n        tss: { scope: null },\n        tst: { scope: null },\n        tsu: { scope: null },\n        tsv: { scope: null },\n        tsw: { scope: null },\n        tsx: { scope: null },\n        tsy: { scope: null },\n        tsz: { scope: null },\n        tta: { scope: null },\n        ttb: { scope: null },\n        ttc: { scope: null },\n        ttd: { scope: null },\n        tte: { scope: null },\n        ttf: { scope: null },\n        ttg: { scope: null },\n        tth: { scope: null },\n        tti: { scope: null },\n        ttj: { scope: null },\n        ttk: { scope: null },\n        ttl: { scope: null },\n        ttm: { scope: null },\n        ttn: { scope: null },\n        tto: { scope: null },\n        ttp: { scope: null },\n        ttq: { scope: null },\n        ttr: { scope: null },\n        tts: { scope: null },\n        ttt: { scope: null },\n        ttu: { scope: null },\n        ttv: { scope: null },\n        ttw: { scope: null },\n        tty: { scope: null },\n        ttz: { scope: null },\n        tua: { scope: null },\n        tub: { scope: null },\n        tuc: { scope: null },\n        tud: { scope: null },\n        tue: { scope: null },\n        tuf: { scope: null },\n        tug: { scope: null },\n        tuh: { scope: null },\n        tui: { scope: null },\n        tuj: { scope: null },\n        tul: { scope: null },\n        tum: { scope: null },\n        tun: { scope: null },\n        tuo: { scope: null },\n        tup: { scope: \"collection\" },\n        tuq: { scope: null },\n        tus: { scope: null },\n        tut: { scope: \"collection\" },\n        tuu: { scope: null },\n        tuv: { scope: null },\n        tuw: { scope: \"collection\" },\n        tux: { scope: null },\n        tuy: { scope: null },\n        tuz: { scope: null },\n        tva: { scope: null },\n        tvd: { scope: null },\n        tve: { scope: null },\n        tvk: { scope: null },\n        tvl: { scope: null },\n        tvm: { scope: null },\n        tvn: { scope: null },\n        tvo: { scope: null },\n        tvs: { scope: null },\n        tvt: { scope: null },\n        tvu: { scope: null },\n        tvw: { scope: null },\n        tvx: { scope: null },\n        tvy: { scope: null },\n        twa: { scope: null },\n        twb: { scope: null },\n        twc: { scope: null },\n        twd: { scope: null },\n        twe: { scope: null },\n        twf: { scope: null },\n        twg: { scope: null },\n        twh: { scope: null },\n        twl: { scope: null },\n        twm: { scope: null },\n        twn: { scope: null },\n        two: { scope: null },\n        twp: { scope: null },\n        twq: { scope: null },\n        twr: { scope: null },\n        twt: { scope: null },\n        twu: { scope: null },\n        tww: { scope: null },\n        twx: { scope: null },\n        twy: { scope: null },\n        txa: { scope: null },\n        txb: { scope: null },\n        txc: { scope: null },\n        txe: { scope: null },\n        txg: { scope: null },\n        txh: { scope: null },\n        txi: { scope: null },\n        txj: { scope: null },\n        txm: { scope: null },\n        txn: { scope: null },\n        txo: { scope: null },\n        txq: { scope: null },\n        txr: { scope: null },\n        txs: { scope: null },\n        txt: { scope: null },\n        txu: { scope: null },\n        txx: { scope: null },\n        txy: { scope: null },\n        tya: { scope: null },\n        tye: { scope: null },\n        tyh: { scope: null },\n        tyi: { scope: null },\n        tyj: { scope: null },\n        tyl: { scope: null },\n        tyn: { scope: null },\n        typ: { scope: null },\n        tyr: { scope: null },\n        tys: { scope: null },\n        tyt: { scope: null },\n        tyu: { scope: null },\n        tyv: { scope: null },\n        tyx: { scope: null },\n        tyy: { scope: null },\n        tyz: { scope: null },\n        tza: { scope: null },\n        tzh: { scope: null },\n        tzj: { scope: null },\n        tzl: { scope: null },\n        tzm: { scope: null },\n        tzn: { scope: null },\n        tzo: { scope: null },\n        tzx: { scope: null },\n        uam: { scope: null },\n        uan: { scope: null },\n        uar: { scope: null },\n        uba: { scope: null },\n        ubi: { scope: null },\n        ubl: { scope: null },\n        ubr: { scope: null },\n        ubu: { scope: null },\n        uby: { scope: null },\n        uda: { scope: null },\n        ude: { scope: null },\n        udg: { scope: null },\n        udi: { scope: null },\n        udj: { scope: null },\n        udl: { scope: null },\n        udm: { scope: null },\n        udu: { scope: null },\n        ues: { scope: null },\n        ufi: { scope: null },\n        uga: { scope: null },\n        ugb: { scope: null },\n        uge: { scope: null },\n        ugn: { scope: null },\n        ugo: { scope: null },\n        ugy: { scope: null },\n        uha: { scope: null },\n        uhn: { scope: null },\n        uis: { scope: null },\n        uiv: { scope: null },\n        uji: { scope: null },\n        uka: { scope: null },\n        ukg: { scope: null },\n        ukh: { scope: null },\n        uki: { scope: null },\n        ukk: { scope: null },\n        ukl: { scope: null },\n        ukp: { scope: null },\n        ukq: { scope: null },\n        uks: { scope: null },\n        uku: { scope: null },\n        ukv: { scope: null },\n        ukw: { scope: null },\n        uky: { scope: null },\n        ula: { scope: null },\n        ulb: { scope: null },\n        ulc: { scope: null },\n        ule: { scope: null },\n        ulf: { scope: null },\n        uli: { scope: null },\n        ulk: { scope: null },\n        ull: { scope: null },\n        ulm: { scope: null },\n        uln: { scope: null },\n        ulu: { scope: null },\n        ulw: { scope: null },\n        uma: { scope: null },\n        umb: { scope: null },\n        umc: { scope: null },\n        umd: { scope: null },\n        umg: { scope: null },\n        umi: { scope: null },\n        umm: { scope: null },\n        umn: { scope: null },\n        umo: { scope: null },\n        ump: { scope: null },\n        umr: { scope: null },\n        ums: { scope: null },\n        umu: { scope: null },\n        una: { scope: null },\n        und: { scope: \"special\" },\n        une: { scope: null },\n        ung: { scope: null },\n        uni: { scope: null },\n        unk: { scope: null },\n        unm: { scope: null },\n        unn: { scope: null },\n        unp: { scope: null },\n        unr: { scope: null },\n        unu: { scope: null },\n        unx: { scope: null },\n        unz: { scope: null },\n        uok: { scope: null },\n        upi: { scope: null },\n        upv: { scope: null },\n        ura: { scope: null },\n        urb: { scope: null },\n        urc: { scope: null },\n        ure: { scope: null },\n        urf: { scope: null },\n        urg: { scope: null },\n        urh: { scope: null },\n        uri: { scope: null },\n        urj: { scope: \"collection\" },\n        urk: { scope: null },\n        url: { scope: null },\n        urm: { scope: null },\n        urn: { scope: null },\n        uro: { scope: null },\n        urp: { scope: null },\n        urr: { scope: null },\n        urt: { scope: null },\n        uru: { scope: null },\n        urv: { scope: null },\n        urw: { scope: null },\n        urx: { scope: null },\n        ury: { scope: null },\n        urz: { scope: null },\n        usa: { scope: null },\n        ush: { scope: null },\n        usi: { scope: null },\n        usk: { scope: null },\n        usp: { scope: null },\n        uss: { scope: null },\n        usu: { scope: null },\n        uta: { scope: null },\n        ute: { scope: null },\n        uth: { scope: null },\n        utp: { scope: null },\n        utr: { scope: null },\n        utu: { scope: null },\n        uum: { scope: null },\n        uun: { scope: null },\n        uur: { scope: null },\n        uuu: { scope: null },\n        uve: { scope: null },\n        uvh: { scope: null },\n        uvl: { scope: null },\n        uwa: { scope: null },\n        uya: { scope: null },\n        uzn: { scope: null },\n        uzs: { scope: null },\n        vaa: { scope: null },\n        vae: { scope: null },\n        vaf: { scope: null },\n        vag: { scope: null },\n        vah: { scope: null },\n        vai: { scope: null },\n        vaj: { scope: null },\n        val: { scope: null },\n        vam: { scope: null },\n        van: { scope: null },\n        vao: { scope: null },\n        vap: { scope: null },\n        var: { scope: null },\n        vas: { scope: null },\n        vau: { scope: null },\n        vav: { scope: null },\n        vay: { scope: null },\n        vbb: { scope: null },\n        vbk: { scope: null },\n        vec: { scope: null },\n        ved: { scope: null },\n        vel: { scope: null },\n        vem: { scope: null },\n        veo: { scope: null },\n        vep: { scope: null },\n        ver: { scope: null },\n        vgr: { scope: null },\n        vgt: { scope: null },\n        vic: { scope: null },\n        vid: { scope: null },\n        vif: { scope: null },\n        vig: { scope: null },\n        vil: { scope: null },\n        vin: { scope: null },\n        vis: { scope: null },\n        vit: { scope: null },\n        viv: { scope: null },\n        vka: { scope: null },\n        vki: { scope: null },\n        vkj: { scope: null },\n        vkk: { scope: null },\n        vkl: { scope: null },\n        vkm: { scope: null },\n        vkn: { scope: null },\n        vko: { scope: null },\n        vkp: { scope: null },\n        vkt: { scope: null },\n        vku: { scope: null },\n        vkz: { scope: null },\n        vlp: { scope: null },\n        vls: { scope: null },\n        vma: { scope: null },\n        vmb: { scope: null },\n        vmc: { scope: null },\n        vmd: { scope: null },\n        vme: { scope: null },\n        vmf: { scope: null },\n        vmg: { scope: null },\n        vmh: { scope: null },\n        vmi: { scope: null },\n        vmj: { scope: null },\n        vmk: { scope: null },\n        vml: { scope: null },\n        vmm: { scope: null },\n        vmp: { scope: null },\n        vmq: { scope: null },\n        vmr: { scope: null },\n        vms: { scope: null },\n        vmu: { scope: null },\n        vmv: { scope: null },\n        vmw: { scope: null },\n        vmx: { scope: null },\n        vmy: { scope: null },\n        vmz: { scope: null },\n        vnk: { scope: null },\n        vnm: { scope: null },\n        vnp: { scope: null },\n        vor: { scope: null },\n        vot: { scope: null },\n        vra: { scope: null },\n        vro: { scope: null },\n        vrs: { scope: null },\n        vrt: { scope: null },\n        vsi: { scope: null },\n        vsl: { scope: null },\n        vsv: { scope: null },\n        vto: { scope: null },\n        vum: { scope: null },\n        vun: { scope: null },\n        vut: { scope: null },\n        vwa: { scope: null },\n        waa: { scope: null },\n        wab: { scope: null },\n        wac: { scope: null },\n        wad: { scope: null },\n        wae: { scope: null },\n        waf: { scope: null },\n        wag: { scope: null },\n        wah: { scope: null },\n        wai: { scope: null },\n        waj: { scope: null },\n        wak: { scope: \"collection\" },\n        wal: { scope: null },\n        wam: { scope: null },\n        wan: { scope: null },\n        wao: { scope: null },\n        wap: { scope: null },\n        waq: { scope: null },\n        war: { scope: null },\n        was: { scope: null },\n        wat: { scope: null },\n        wau: { scope: null },\n        wav: { scope: null },\n        waw: { scope: null },\n        wax: { scope: null },\n        way: { scope: null },\n        waz: { scope: null },\n        wba: { scope: null },\n        wbb: { scope: null },\n        wbe: { scope: null },\n        wbf: { scope: null },\n        wbh: { scope: null },\n        wbi: { scope: null },\n        wbj: { scope: null },\n        wbk: { scope: null },\n        wbl: { scope: null },\n        wbm: { scope: null },\n        wbp: { scope: null },\n        wbq: { scope: null },\n        wbr: { scope: null },\n        wbs: { scope: null },\n        wbt: { scope: null },\n        wbv: { scope: null },\n        wbw: { scope: null },\n        wca: { scope: null },\n        wci: { scope: null },\n        wdd: { scope: null },\n        wdg: { scope: null },\n        wdj: { scope: null },\n        wdk: { scope: null },\n        wdu: { scope: null },\n        wdy: { scope: null },\n        wea: { scope: null },\n        wec: { scope: null },\n        wed: { scope: null },\n        weg: { scope: null },\n        weh: { scope: null },\n        wei: { scope: null },\n        wem: { scope: null },\n        wen: { scope: \"collection\" },\n        weo: { scope: null },\n        wep: { scope: null },\n        wer: { scope: null },\n        wes: { scope: null },\n        wet: { scope: null },\n        weu: { scope: null },\n        wew: { scope: null },\n        wfg: { scope: null },\n        wga: { scope: null },\n        wgb: { scope: null },\n        wgg: { scope: null },\n        wgi: { scope: null },\n        wgo: { scope: null },\n        wgu: { scope: null },\n        wgw: { scope: null },\n        wgy: { scope: null },\n        wha: { scope: null },\n        whg: { scope: null },\n        whk: { scope: null },\n        whu: { scope: null },\n        wib: { scope: null },\n        wic: { scope: null },\n        wie: { scope: null },\n        wif: { scope: null },\n        wig: { scope: null },\n        wih: { scope: null },\n        wii: { scope: null },\n        wij: { scope: null },\n        wik: { scope: null },\n        wil: { scope: null },\n        wim: { scope: null },\n        win: { scope: null },\n        wir: { scope: null },\n        wit: { scope: null },\n        wiu: { scope: null },\n        wiv: { scope: null },\n        wiw: { scope: null },\n        wiy: { scope: null },\n        wja: { scope: null },\n        wji: { scope: null },\n        wka: { scope: null },\n        wkb: { scope: null },\n        wkd: { scope: null },\n        wkl: { scope: null },\n        wkr: { scope: null },\n        wku: { scope: null },\n        wkw: { scope: null },\n        wky: { scope: null },\n        wla: { scope: null },\n        wlc: { scope: null },\n        wle: { scope: null },\n        wlg: { scope: null },\n        wlh: { scope: null },\n        wli: { scope: null },\n        wlk: { scope: null },\n        wll: { scope: null },\n        wlm: { scope: null },\n        wlo: { scope: null },\n        wlr: { scope: null },\n        wls: { scope: null },\n        wlu: { scope: null },\n        wlv: { scope: null },\n        wlw: { scope: null },\n        wlx: { scope: null },\n        wly: { scope: null },\n        wma: { scope: null },\n        wmb: { scope: null },\n        wmc: { scope: null },\n        wmd: { scope: null },\n        wme: { scope: null },\n        wmg: { scope: null },\n        wmh: { scope: null },\n        wmi: { scope: null },\n        wmm: { scope: null },\n        wmn: { scope: null },\n        wmo: { scope: null },\n        wms: { scope: null },\n        wmt: { scope: null },\n        wmw: { scope: null },\n        wmx: { scope: null },\n        wnb: { scope: null },\n        wnc: { scope: null },\n        wnd: { scope: null },\n        wne: { scope: null },\n        wng: { scope: null },\n        wni: { scope: null },\n        wnk: { scope: null },\n        wnm: { scope: null },\n        wnn: { scope: null },\n        wno: { scope: null },\n        wnp: { scope: null },\n        wnu: { scope: null },\n        wnw: { scope: null },\n        wny: { scope: null },\n        woa: { scope: null },\n        wob: { scope: null },\n        woc: { scope: null },\n        wod: { scope: null },\n        woe: { scope: null },\n        wof: { scope: null },\n        wog: { scope: null },\n        woi: { scope: null },\n        wok: { scope: null },\n        wom: { scope: null },\n        won: { scope: null },\n        woo: { scope: null },\n        wor: { scope: null },\n        wos: { scope: null },\n        wow: { scope: null },\n        woy: { scope: null },\n        wpc: { scope: null },\n        wra: { scope: null },\n        wrb: { scope: null },\n        wrd: { scope: null },\n        wrg: { scope: null },\n        wrh: { scope: null },\n        wri: { scope: null },\n        wrk: { scope: null },\n        wrl: { scope: null },\n        wrm: { scope: null },\n        wrn: { scope: null },\n        wro: { scope: null },\n        wrp: { scope: null },\n        wrr: { scope: null },\n        wrs: { scope: null },\n        wru: { scope: null },\n        wrv: { scope: null },\n        wrw: { scope: null },\n        wrx: { scope: null },\n        wry: { scope: null },\n        wrz: { scope: null },\n        wsa: { scope: null },\n        wsg: { scope: null },\n        wsi: { scope: null },\n        wsk: { scope: null },\n        wsr: { scope: null },\n        wss: { scope: null },\n        wsu: { scope: null },\n        wsv: { scope: null },\n        wtf: { scope: null },\n        wth: { scope: null },\n        wti: { scope: null },\n        wtk: { scope: null },\n        wtm: { scope: null },\n        wtw: { scope: null },\n        wua: { scope: null },\n        wub: { scope: null },\n        wud: { scope: null },\n        wuh: { scope: null },\n        wul: { scope: null },\n        wum: { scope: null },\n        wun: { scope: null },\n        wur: { scope: null },\n        wut: { scope: null },\n        wuu: { scope: null },\n        wuv: { scope: null },\n        wux: { scope: null },\n        wuy: { scope: null },\n        wwa: { scope: null },\n        wwb: { scope: null },\n        wwo: { scope: null },\n        wwr: { scope: null },\n        www: { scope: null },\n        wxa: { scope: null },\n        wxw: { scope: null },\n        wya: { scope: null },\n        wyb: { scope: null },\n        wyi: { scope: null },\n        wym: { scope: null },\n        wyr: { scope: null },\n        wyy: { scope: null },\n        xaa: { scope: null },\n        xab: { scope: null },\n        xac: { scope: null },\n        xad: { scope: null },\n        xae: { scope: null },\n        xag: { scope: null },\n        xai: { scope: null },\n        xaj: { scope: null },\n        xak: { scope: null },\n        xal: { scope: null },\n        xam: { scope: null },\n        xan: { scope: null },\n        xao: { scope: null },\n        xap: { scope: null },\n        xaq: { scope: null },\n        xar: { scope: null },\n        xas: { scope: null },\n        xat: { scope: null },\n        xau: { scope: null },\n        xav: { scope: null },\n        xaw: { scope: null },\n        xay: { scope: null },\n        xba: { scope: null },\n        xbb: { scope: null },\n        xbc: { scope: null },\n        xbd: { scope: null },\n        xbe: { scope: null },\n        xbg: { scope: null },\n        xbi: { scope: null },\n        xbj: { scope: null },\n        xbm: { scope: null },\n        xbn: { scope: null },\n        xbo: { scope: null },\n        xbp: { scope: null },\n        xbr: { scope: null },\n        xbw: { scope: null },\n        xbx: { scope: null },\n        xby: { scope: null },\n        xcb: { scope: null },\n        xcc: { scope: null },\n        xce: { scope: null },\n        xcg: { scope: null },\n        xch: { scope: null },\n        xcl: { scope: null },\n        xcm: { scope: null },\n        xcn: { scope: null },\n        xco: { scope: null },\n        xcr: { scope: null },\n        xct: { scope: null },\n        xcu: { scope: null },\n        xcv: { scope: null },\n        xcw: { scope: null },\n        xcy: { scope: null },\n        xda: { scope: null },\n        xdc: { scope: null },\n        xdk: { scope: null },\n        xdm: { scope: null },\n        xdo: { scope: null },\n        xdy: { scope: null },\n        xeb: { scope: null },\n        xed: { scope: null },\n        xeg: { scope: null },\n        xel: { scope: null },\n        xem: { scope: null },\n        xep: { scope: null },\n        xer: { scope: null },\n        xes: { scope: null },\n        xet: { scope: null },\n        xeu: { scope: null },\n        xfa: { scope: null },\n        xga: { scope: null },\n        xgb: { scope: null },\n        xgd: { scope: null },\n        xgf: { scope: null },\n        xgg: { scope: null },\n        xgi: { scope: null },\n        xgl: { scope: null },\n        xgm: { scope: null },\n        xgn: { scope: \"collection\" },\n        xgr: { scope: null },\n        xgu: { scope: null },\n        xgw: { scope: null },\n        xha: { scope: null },\n        xhc: { scope: null },\n        xhd: { scope: null },\n        xhe: { scope: null },\n        xhr: { scope: null },\n        xht: { scope: null },\n        xhu: { scope: null },\n        xhv: { scope: null },\n        xia: { scope: null },\n        xib: { scope: null },\n        xii: { scope: null },\n        xil: { scope: null },\n        xin: { scope: null },\n        xip: { scope: null },\n        xir: { scope: null },\n        xis: { scope: null },\n        xiv: { scope: null },\n        xiy: { scope: null },\n        xjb: { scope: null },\n        xjt: { scope: null },\n        xka: { scope: null },\n        xkb: { scope: null },\n        xkc: { scope: null },\n        xkd: { scope: null },\n        xke: { scope: null },\n        xkf: { scope: null },\n        xkg: { scope: null },\n        xkh: { scope: null },\n        xki: { scope: null },\n        xkj: { scope: null },\n        xkk: { scope: null },\n        xkl: { scope: null },\n        xkn: { scope: null },\n        xko: { scope: null },\n        xkp: { scope: null },\n        xkq: { scope: null },\n        xkr: { scope: null },\n        xks: { scope: null },\n        xkt: { scope: null },\n        xku: { scope: null },\n        xkv: { scope: null },\n        xkw: { scope: null },\n        xkx: { scope: null },\n        xky: { scope: null },\n        xkz: { scope: null },\n        xla: { scope: null },\n        xlb: { scope: null },\n        xlc: { scope: null },\n        xld: { scope: null },\n        xle: { scope: null },\n        xlg: { scope: null },\n        xli: { scope: null },\n        xln: { scope: null },\n        xlo: { scope: null },\n        xlp: { scope: null },\n        xls: { scope: null },\n        xlu: { scope: null },\n        xly: { scope: null },\n        xma: { scope: null },\n        xmb: { scope: null },\n        xmc: { scope: null },\n        xmd: { scope: null },\n        xme: { scope: null },\n        xmf: { scope: null },\n        xmg: { scope: null },\n        xmh: { scope: null },\n        xmj: { scope: null },\n        xmk: { scope: null },\n        xml: { scope: null },\n        xmm: { scope: null },\n        xmn: { scope: null },\n        xmo: { scope: null },\n        xmp: { scope: null },\n        xmq: { scope: null },\n        xmr: { scope: null },\n        xms: { scope: null },\n        xmt: { scope: null },\n        xmu: { scope: null },\n        xmv: { scope: null },\n        xmw: { scope: null },\n        xmx: { scope: null },\n        xmy: { scope: null },\n        xmz: { scope: null },\n        xna: { scope: null },\n        xnb: { scope: null },\n        xnd: { scope: \"collection\" },\n        xng: { scope: null },\n        xnh: { scope: null },\n        xni: { scope: null },\n        xnj: { scope: null },\n        xnk: { scope: null },\n        xnm: { scope: null },\n        xnn: { scope: null },\n        xno: { scope: null },\n        xnq: { scope: null },\n        xnr: { scope: null },\n        xns: { scope: null },\n        xnt: { scope: null },\n        xnu: { scope: null },\n        xny: { scope: null },\n        xnz: { scope: null },\n        xoc: { scope: null },\n        xod: { scope: null },\n        xog: { scope: null },\n        xoi: { scope: null },\n        xok: { scope: null },\n        xom: { scope: null },\n        xon: { scope: null },\n        xoo: { scope: null },\n        xop: { scope: null },\n        xor: { scope: null },\n        xow: { scope: null },\n        xpa: { scope: null },\n        xpb: { scope: null },\n        xpc: { scope: null },\n        xpd: { scope: null },\n        xpe: { scope: null },\n        xpf: { scope: null },\n        xpg: { scope: null },\n        xph: { scope: null },\n        xpi: { scope: null },\n        xpj: { scope: null },\n        xpk: { scope: null },\n        xpl: { scope: null },\n        xpm: { scope: null },\n        xpn: { scope: null },\n        xpo: { scope: null },\n        xpp: { scope: null },\n        xpq: { scope: null },\n        xpr: { scope: null },\n        xps: { scope: null },\n        xpt: { scope: null },\n        xpu: { scope: null },\n        xpv: { scope: null },\n        xpw: { scope: null },\n        xpx: { scope: null },\n        xpy: { scope: null },\n        xpz: { scope: null },\n        xqa: { scope: null },\n        xqt: { scope: null },\n        xra: { scope: null },\n        xrb: { scope: null },\n        xrd: { scope: null },\n        xre: { scope: null },\n        xrg: { scope: null },\n        xri: { scope: null },\n        xrm: { scope: null },\n        xrn: { scope: null },\n        xrq: { scope: null },\n        xrr: { scope: null },\n        xrt: { scope: null },\n        xru: { scope: null },\n        xrw: { scope: null },\n        xsa: { scope: null },\n        xsb: { scope: null },\n        xsc: { scope: null },\n        xsd: { scope: null },\n        xse: { scope: null },\n        xsh: { scope: null },\n        xsi: { scope: null },\n        xsj: { scope: null },\n        xsl: { scope: null },\n        xsm: { scope: null },\n        xsn: { scope: null },\n        xso: { scope: null },\n        xsp: { scope: null },\n        xsq: { scope: null },\n        xsr: { scope: null },\n        xss: { scope: null },\n        xsu: { scope: null },\n        xsv: { scope: null },\n        xsy: { scope: null },\n        xta: { scope: null },\n        xtb: { scope: null },\n        xtc: { scope: null },\n        xtd: { scope: null },\n        xte: { scope: null },\n        xtg: { scope: null },\n        xth: { scope: null },\n        xti: { scope: null },\n        xtj: { scope: null },\n        xtl: { scope: null },\n        xtm: { scope: null },\n        xtn: { scope: null },\n        xto: { scope: null },\n        xtp: { scope: null },\n        xtq: { scope: null },\n        xtr: { scope: null },\n        xts: { scope: null },\n        xtt: { scope: null },\n        xtu: { scope: null },\n        xtv: { scope: null },\n        xtw: { scope: null },\n        xty: { scope: null },\n        xtz: { scope: null },\n        xua: { scope: null },\n        xub: { scope: null },\n        xud: { scope: null },\n        xug: { scope: null },\n        xuj: { scope: null },\n        xul: { scope: null },\n        xum: { scope: null },\n        xun: { scope: null },\n        xuo: { scope: null },\n        xup: { scope: null },\n        xur: { scope: null },\n        xut: { scope: null },\n        xuu: { scope: null },\n        xve: { scope: null },\n        xvi: { scope: null },\n        xvn: { scope: null },\n        xvo: { scope: null },\n        xvs: { scope: null },\n        xwa: { scope: null },\n        xwc: { scope: null },\n        xwd: { scope: null },\n        xwe: { scope: null },\n        xwg: { scope: null },\n        xwj: { scope: null },\n        xwk: { scope: null },\n        xwl: { scope: null },\n        xwo: { scope: null },\n        xwr: { scope: null },\n        xwt: { scope: null },\n        xww: { scope: null },\n        xxb: { scope: null },\n        xxk: { scope: null },\n        xxm: { scope: null },\n        xxr: { scope: null },\n        xxt: { scope: null },\n        xya: { scope: null },\n        xyb: { scope: null },\n        xyj: { scope: null },\n        xyk: { scope: null },\n        xyl: { scope: null },\n        xyt: { scope: null },\n        xyy: { scope: null },\n        xzh: { scope: null },\n        xzm: { scope: null },\n        xzp: { scope: null },\n        yaa: { scope: null },\n        yab: { scope: null },\n        yac: { scope: null },\n        yad: { scope: null },\n        yae: { scope: null },\n        yaf: { scope: null },\n        yag: { scope: null },\n        yah: { scope: null },\n        yai: { scope: null },\n        yaj: { scope: null },\n        yak: { scope: null },\n        yal: { scope: null },\n        yam: { scope: null },\n        yan: { scope: null },\n        yao: { scope: null },\n        yap: { scope: null },\n        yaq: { scope: null },\n        yar: { scope: null },\n        yas: { scope: null },\n        yat: { scope: null },\n        yau: { scope: null },\n        yav: { scope: null },\n        yaw: { scope: null },\n        yax: { scope: null },\n        yay: { scope: null },\n        yaz: { scope: null },\n        yba: { scope: null },\n        ybb: { scope: null },\n        ybd: { scope: null },\n        ybe: { scope: null },\n        ybh: { scope: null },\n        ybi: { scope: null },\n        ybj: { scope: null },\n        ybk: { scope: null },\n        ybl: { scope: null },\n        ybm: { scope: null },\n        ybn: { scope: null },\n        ybo: { scope: null },\n        ybx: { scope: null },\n        yby: { scope: null },\n        ych: { scope: null },\n        ycl: { scope: null },\n        ycn: { scope: null },\n        ycp: { scope: null },\n        yda: { scope: null },\n        ydd: { scope: null },\n        yde: { scope: null },\n        ydg: { scope: null },\n        ydk: { scope: null },\n        yds: { scope: null },\n        yea: { scope: null },\n        yec: { scope: null },\n        yee: { scope: null },\n        yei: { scope: null },\n        yej: { scope: null },\n        yel: { scope: null },\n        yen: { scope: null },\n        yer: { scope: null },\n        yes: { scope: null },\n        yet: { scope: null },\n        yeu: { scope: null },\n        yev: { scope: null },\n        yey: { scope: null },\n        yga: { scope: null },\n        ygi: { scope: null },\n        ygl: { scope: null },\n        ygm: { scope: null },\n        ygp: { scope: null },\n        ygr: { scope: null },\n        ygs: { scope: null },\n        ygu: { scope: null },\n        ygw: { scope: null },\n        yha: { scope: null },\n        yhd: { scope: null },\n        yhl: { scope: null },\n        yhs: { scope: null },\n        yia: { scope: null },\n        yif: { scope: null },\n        yig: { scope: null },\n        yih: { scope: null },\n        yii: { scope: null },\n        yij: { scope: null },\n        yik: { scope: null },\n        yil: { scope: null },\n        yim: { scope: null },\n        yin: { scope: null },\n        yip: { scope: null },\n        yiq: { scope: null },\n        yir: { scope: null },\n        yis: { scope: null },\n        yit: { scope: null },\n        yiu: { scope: null },\n        yiv: { scope: null },\n        yix: { scope: null },\n        yiy: { scope: null },\n        yiz: { scope: null },\n        yka: { scope: null },\n        ykg: { scope: null },\n        yki: { scope: null },\n        ykk: { scope: null },\n        ykl: { scope: null },\n        ykm: { scope: null },\n        ykn: { scope: null },\n        yko: { scope: null },\n        ykr: { scope: null },\n        ykt: { scope: null },\n        yku: { scope: null },\n        yky: { scope: null },\n        yla: { scope: null },\n        ylb: { scope: null },\n        yle: { scope: null },\n        ylg: { scope: null },\n        yli: { scope: null },\n        yll: { scope: null },\n        ylm: { scope: null },\n        yln: { scope: null },\n        ylo: { scope: null },\n        ylr: { scope: null },\n        ylu: { scope: null },\n        yly: { scope: null },\n        yma: { scope: null },\n        ymb: { scope: null },\n        ymc: { scope: null },\n        ymd: { scope: null },\n        yme: { scope: null },\n        ymg: { scope: null },\n        ymh: { scope: null },\n        ymi: { scope: null },\n        ymk: { scope: null },\n        yml: { scope: null },\n        ymm: { scope: null },\n        ymn: { scope: null },\n        ymo: { scope: null },\n        ymp: { scope: null },\n        ymq: { scope: null },\n        ymr: { scope: null },\n        yms: { scope: null },\n        ymt: { scope: null },\n        ymx: { scope: null },\n        ymz: { scope: null },\n        yna: { scope: null },\n        ynd: { scope: null },\n        yne: { scope: null },\n        yng: { scope: null },\n        ynh: { scope: null },\n        ynk: { scope: null },\n        ynl: { scope: null },\n        ynn: { scope: null },\n        yno: { scope: null },\n        ynq: { scope: null },\n        yns: { scope: null },\n        ynu: { scope: null },\n        yob: { scope: null },\n        yog: { scope: null },\n        yoi: { scope: null },\n        yok: { scope: null },\n        yol: { scope: null },\n        yom: { scope: null },\n        yon: { scope: null },\n        yos: { scope: null },\n        yot: { scope: null },\n        yox: { scope: null },\n        yoy: { scope: null },\n        ypa: { scope: null },\n        ypb: { scope: null },\n        ypg: { scope: null },\n        yph: { scope: null },\n        ypk: { scope: \"collection\" },\n        ypm: { scope: null },\n        ypn: { scope: null },\n        ypo: { scope: null },\n        ypp: { scope: null },\n        ypz: { scope: null },\n        yra: { scope: null },\n        yrb: { scope: null },\n        yre: { scope: null },\n        yri: { scope: null },\n        yrk: { scope: null },\n        yrl: { scope: null },\n        yrm: { scope: null },\n        yrn: { scope: null },\n        yro: { scope: null },\n        yrs: { scope: null },\n        yrw: { scope: null },\n        yry: { scope: null },\n        ysc: { scope: null },\n        ysd: { scope: null },\n        ysg: { scope: null },\n        ysl: { scope: null },\n        ysm: { scope: null },\n        ysn: { scope: null },\n        yso: { scope: null },\n        ysp: { scope: null },\n        ysr: { scope: null },\n        yss: { scope: null },\n        ysy: { scope: null },\n        yta: { scope: null },\n        ytl: { scope: null },\n        ytp: { scope: null },\n        ytw: { scope: null },\n        yty: { scope: null },\n        yua: { scope: null },\n        yub: { scope: null },\n        yuc: { scope: null },\n        yud: { scope: null },\n        yue: { scope: null },\n        yuf: { scope: null },\n        yug: { scope: null },\n        yui: { scope: null },\n        yuj: { scope: null },\n        yuk: { scope: null },\n        yul: { scope: null },\n        yum: { scope: null },\n        yun: { scope: null },\n        yup: { scope: null },\n        yuq: { scope: null },\n        yur: { scope: null },\n        yut: { scope: null },\n        yuu: { scope: null },\n        yuw: { scope: null },\n        yux: { scope: null },\n        yuy: { scope: null },\n        yuz: { scope: null },\n        yva: { scope: null },\n        yvt: { scope: null },\n        ywa: { scope: null },\n        ywg: { scope: null },\n        ywl: { scope: null },\n        ywn: { scope: null },\n        ywq: { scope: null },\n        ywr: { scope: null },\n        ywt: { scope: null },\n        ywu: { scope: null },\n        yww: { scope: null },\n        yxa: { scope: null },\n        yxg: { scope: null },\n        yxl: { scope: null },\n        yxm: { scope: null },\n        yxu: { scope: null },\n        yxy: { scope: null },\n        yyr: { scope: null },\n        yyu: { scope: null },\n        yyz: { scope: null },\n        yzg: { scope: null },\n        yzk: { scope: null },\n        zaa: { scope: null },\n        zab: { scope: null },\n        zac: { scope: null },\n        zad: { scope: null },\n        zae: { scope: null },\n        zaf: { scope: null },\n        zag: { scope: null },\n        zah: { scope: null },\n        zai: { scope: null },\n        zaj: { scope: null },\n        zak: { scope: null },\n        zal: { scope: null },\n        zam: { scope: null },\n        zao: { scope: null },\n        zap: { scope: \"macrolanguage\" },\n        zaq: { scope: null },\n        zar: { scope: null },\n        zas: { scope: null },\n        zat: { scope: null },\n        zau: { scope: null },\n        zav: { scope: null },\n        zaw: { scope: null },\n        zax: { scope: null },\n        zay: { scope: null },\n        zaz: { scope: null },\n        zba: { scope: null },\n        zbc: { scope: null },\n        zbe: { scope: null },\n        zbl: { scope: null },\n        zbt: { scope: null },\n        zbu: { scope: null },\n        zbw: { scope: null },\n        zca: { scope: null },\n        zch: { scope: null },\n        zdj: { scope: null },\n        zea: { scope: null },\n        zeg: { scope: null },\n        zeh: { scope: null },\n        zen: { scope: null },\n        zga: { scope: null },\n        zgb: { scope: null },\n        zgh: { scope: null },\n        zgm: { scope: null },\n        zgn: { scope: null },\n        zgr: { scope: null },\n        zhb: { scope: null },\n        zhd: { scope: null },\n        zhi: { scope: null },\n        zhn: { scope: null },\n        zhw: { scope: null },\n        zhx: { scope: \"collection\" },\n        zia: { scope: null },\n        zib: { scope: null },\n        zik: { scope: null },\n        zil: { scope: null },\n        zim: { scope: null },\n        zin: { scope: null },\n        zir: { scope: null },\n        ziw: { scope: null },\n        ziz: { scope: null },\n        zka: { scope: null },\n        zkb: { scope: null },\n        zkd: { scope: null },\n        zkg: { scope: null },\n        zkh: { scope: null },\n        zkk: { scope: null },\n        zkn: { scope: null },\n        zko: { scope: null },\n        zkp: { scope: null },\n        zkr: { scope: null },\n        zkt: { scope: null },\n        zku: { scope: null },\n        zkv: { scope: null },\n        zkz: { scope: null },\n        zla: { scope: null },\n        zle: { scope: \"collection\" },\n        zlj: { scope: null },\n        zlm: { scope: null },\n        zln: { scope: null },\n        zlq: { scope: null },\n        zls: { scope: \"collection\" },\n        zlw: { scope: \"collection\" },\n        zma: { scope: null },\n        zmb: { scope: null },\n        zmc: { scope: null },\n        zmd: { scope: null },\n        zme: { scope: null },\n        zmf: { scope: null },\n        zmg: { scope: null },\n        zmh: { scope: null },\n        zmi: { scope: null },\n        zmj: { scope: null },\n        zmk: { scope: null },\n        zml: { scope: null },\n        zmm: { scope: null },\n        zmn: { scope: null },\n        zmo: { scope: null },\n        zmp: { scope: null },\n        zmq: { scope: null },\n        zmr: { scope: null },\n        zms: { scope: null },\n        zmt: { scope: null },\n        zmu: { scope: null },\n        zmv: { scope: null },\n        zmw: { scope: null },\n        zmx: { scope: null },\n        zmy: { scope: null },\n        zmz: { scope: null },\n        zna: { scope: null },\n        znd: { scope: \"collection\" },\n        zne: { scope: null },\n        zng: { scope: null },\n        znk: { scope: null },\n        zns: { scope: null },\n        zoc: { scope: null },\n        zoh: { scope: null },\n        zom: { scope: null },\n        zoo: { scope: null },\n        zoq: { scope: null },\n        zor: { scope: null },\n        zos: { scope: null },\n        zpa: { scope: null },\n        zpb: { scope: null },\n        zpc: { scope: null },\n        zpd: { scope: null },\n        zpe: { scope: null },\n        zpf: { scope: null },\n        zpg: { scope: null },\n        zph: { scope: null },\n        zpi: { scope: null },\n        zpj: { scope: null },\n        zpk: { scope: null },\n        zpl: { scope: null },\n        zpm: { scope: null },\n        zpn: { scope: null },\n        zpo: { scope: null },\n        zpp: { scope: null },\n        zpq: { scope: null },\n        zpr: { scope: null },\n        zps: { scope: null },\n        zpt: { scope: null },\n        zpu: { scope: null },\n        zpv: { scope: null },\n        zpw: { scope: null },\n        zpx: { scope: null },\n        zpy: { scope: null },\n        zpz: { scope: null },\n        zqe: { scope: null },\n        zra: { scope: null },\n        zrg: { scope: null },\n        zrn: { scope: null },\n        zro: { scope: null },\n        zrp: { scope: null },\n        zrs: { scope: null },\n        zsa: { scope: null },\n        zsk: { scope: null },\n        zsl: { scope: null },\n        zsm: { scope: null },\n        zsr: { scope: null },\n        zsu: { scope: null },\n        zte: { scope: null },\n        ztg: { scope: null },\n        ztl: { scope: null },\n        ztm: { scope: null },\n        ztn: { scope: null },\n        ztp: { scope: null },\n        ztq: { scope: null },\n        zts: { scope: null },\n        ztt: { scope: null },\n        ztu: { scope: null },\n        ztx: { scope: null },\n        zty: { scope: null },\n        zua: { scope: null },\n        zuh: { scope: null },\n        zum: { scope: null },\n        zun: { scope: null },\n        zuy: { scope: null },\n        zwa: { scope: null },\n        zxx: { scope: \"special\" },\n        zyb: { scope: null },\n        zyg: { scope: null },\n        zyj: { scope: null },\n        zyn: { scope: null },\n        zyp: { scope: null },\n        zza: { scope: \"macrolanguage\" },\n        zzj: { scope: null },\n    },\n    extended: {\n        aao: { prefix: \"ar\" },\n        abh: { prefix: \"ar\" },\n        abv: { prefix: \"ar\" },\n        acm: { prefix: \"ar\" },\n        acq: { prefix: \"ar\" },\n        acw: { prefix: \"ar\" },\n        acx: { prefix: \"ar\" },\n        acy: { prefix: \"ar\" },\n        adf: { prefix: \"ar\" },\n        ads: { prefix: \"sgn\" },\n        aeb: { prefix: \"ar\" },\n        aec: { prefix: \"ar\" },\n        aed: { prefix: \"sgn\" },\n        aen: { prefix: \"sgn\" },\n        afb: { prefix: \"ar\" },\n        afg: { prefix: \"sgn\" },\n        ajp: { prefix: \"ar\" },\n        apc: { prefix: \"ar\" },\n        apd: { prefix: \"ar\" },\n        arb: { prefix: \"ar\" },\n        arq: { prefix: \"ar\" },\n        ars: { prefix: \"ar\" },\n        ary: { prefix: \"ar\" },\n        arz: { prefix: \"ar\" },\n        ase: { prefix: \"sgn\" },\n        asf: { prefix: \"sgn\" },\n        asp: { prefix: \"sgn\" },\n        asq: { prefix: \"sgn\" },\n        asw: { prefix: \"sgn\" },\n        auz: { prefix: \"ar\" },\n        avl: { prefix: \"ar\" },\n        ayh: { prefix: \"ar\" },\n        ayl: { prefix: \"ar\" },\n        ayn: { prefix: \"ar\" },\n        ayp: { prefix: \"ar\" },\n        bbz: { prefix: \"ar\" },\n        bfi: { prefix: \"sgn\" },\n        bfk: { prefix: \"sgn\" },\n        bjn: { prefix: \"ms\" },\n        bog: { prefix: \"sgn\" },\n        bqn: { prefix: \"sgn\" },\n        bqy: { prefix: \"sgn\" },\n        btj: { prefix: \"ms\" },\n        bve: { prefix: \"ms\" },\n        bvl: { prefix: \"sgn\" },\n        bvu: { prefix: \"ms\" },\n        bzs: { prefix: \"sgn\" },\n        cdo: { prefix: \"zh\" },\n        cds: { prefix: \"sgn\" },\n        cjy: { prefix: \"zh\" },\n        cmn: { prefix: \"zh\" },\n        cnp: { prefix: \"zh\" },\n        coa: { prefix: \"ms\" },\n        cpx: { prefix: \"zh\" },\n        csc: { prefix: \"sgn\" },\n        csd: { prefix: \"sgn\" },\n        cse: { prefix: \"sgn\" },\n        csf: { prefix: \"sgn\" },\n        csg: { prefix: \"sgn\" },\n        csl: { prefix: \"sgn\" },\n        csn: { prefix: \"sgn\" },\n        csp: { prefix: \"zh\" },\n        csq: { prefix: \"sgn\" },\n        csr: { prefix: \"sgn\" },\n        csx: { prefix: \"sgn\" },\n        czh: { prefix: \"zh\" },\n        czo: { prefix: \"zh\" },\n        doq: { prefix: \"sgn\" },\n        dse: { prefix: \"sgn\" },\n        dsl: { prefix: \"sgn\" },\n        dup: { prefix: \"ms\" },\n        ecs: { prefix: \"sgn\" },\n        ehs: { prefix: \"sgn\" },\n        esl: { prefix: \"sgn\" },\n        esn: { prefix: \"sgn\" },\n        eso: { prefix: \"sgn\" },\n        eth: { prefix: \"sgn\" },\n        fcs: { prefix: \"sgn\" },\n        fse: { prefix: \"sgn\" },\n        fsl: { prefix: \"sgn\" },\n        fss: { prefix: \"sgn\" },\n        gan: { prefix: \"zh\" },\n        gds: { prefix: \"sgn\" },\n        gom: { prefix: \"kok\" },\n        gse: { prefix: \"sgn\" },\n        gsg: { prefix: \"sgn\" },\n        gsm: { prefix: \"sgn\" },\n        gss: { prefix: \"sgn\" },\n        gus: { prefix: \"sgn\" },\n        hab: { prefix: \"sgn\" },\n        haf: { prefix: \"sgn\" },\n        hak: { prefix: \"zh\" },\n        hds: { prefix: \"sgn\" },\n        hji: { prefix: \"ms\" },\n        hks: { prefix: \"sgn\" },\n        hos: { prefix: \"sgn\" },\n        hps: { prefix: \"sgn\" },\n        hsh: { prefix: \"sgn\" },\n        hsl: { prefix: \"sgn\" },\n        hsn: { prefix: \"zh\" },\n        icl: { prefix: \"sgn\" },\n        iks: { prefix: \"sgn\" },\n        ils: { prefix: \"sgn\" },\n        inl: { prefix: \"sgn\" },\n        ins: { prefix: \"sgn\" },\n        ise: { prefix: \"sgn\" },\n        isg: { prefix: \"sgn\" },\n        isr: { prefix: \"sgn\" },\n        jak: { prefix: \"ms\" },\n        jax: { prefix: \"ms\" },\n        jcs: { prefix: \"sgn\" },\n        jhs: { prefix: \"sgn\" },\n        jks: { prefix: \"sgn\" },\n        jls: { prefix: \"sgn\" },\n        jos: { prefix: \"sgn\" },\n        jsl: { prefix: \"sgn\" },\n        jus: { prefix: \"sgn\" },\n        kgi: { prefix: \"sgn\" },\n        knn: { prefix: \"kok\" },\n        kvb: { prefix: \"ms\" },\n        kvk: { prefix: \"sgn\" },\n        kvr: { prefix: \"ms\" },\n        kxd: { prefix: \"ms\" },\n        lbs: { prefix: \"sgn\" },\n        lce: { prefix: \"ms\" },\n        lcf: { prefix: \"ms\" },\n        liw: { prefix: \"ms\" },\n        lls: { prefix: \"sgn\" },\n        lsb: { prefix: \"sgn\" },\n        lsg: { prefix: \"sgn\" },\n        lsl: { prefix: \"sgn\" },\n        lsn: { prefix: \"sgn\" },\n        lso: { prefix: \"sgn\" },\n        lsp: { prefix: \"sgn\" },\n        lst: { prefix: \"sgn\" },\n        lsv: { prefix: \"sgn\" },\n        lsy: { prefix: \"sgn\" },\n        ltg: { prefix: \"lv\" },\n        lvs: { prefix: \"lv\" },\n        lws: { prefix: \"sgn\" },\n        lzh: { prefix: \"zh\" },\n        max: { prefix: \"ms\" },\n        mdl: { prefix: \"sgn\" },\n        meo: { prefix: \"ms\" },\n        mfa: { prefix: \"ms\" },\n        mfb: { prefix: \"ms\" },\n        mfs: { prefix: \"sgn\" },\n        min: { prefix: \"ms\" },\n        mnp: { prefix: \"zh\" },\n        mqg: { prefix: \"ms\" },\n        mre: { prefix: \"sgn\" },\n        msd: { prefix: \"sgn\" },\n        msi: { prefix: \"ms\" },\n        msr: { prefix: \"sgn\" },\n        mui: { prefix: \"ms\" },\n        mzc: { prefix: \"sgn\" },\n        mzg: { prefix: \"sgn\" },\n        mzy: { prefix: \"sgn\" },\n        nan: { prefix: \"zh\" },\n        nbs: { prefix: \"sgn\" },\n        ncs: { prefix: \"sgn\" },\n        nsi: { prefix: \"sgn\" },\n        nsl: { prefix: \"sgn\" },\n        nsp: { prefix: \"sgn\" },\n        nsr: { prefix: \"sgn\" },\n        nzs: { prefix: \"sgn\" },\n        okl: { prefix: \"sgn\" },\n        orn: { prefix: \"ms\" },\n        ors: { prefix: \"ms\" },\n        pel: { prefix: \"ms\" },\n        pga: { prefix: \"ar\" },\n        pgz: { prefix: \"sgn\" },\n        pks: { prefix: \"sgn\" },\n        prl: { prefix: \"sgn\" },\n        prz: { prefix: \"sgn\" },\n        psc: { prefix: \"sgn\" },\n        psd: { prefix: \"sgn\" },\n        pse: { prefix: \"ms\" },\n        psg: { prefix: \"sgn\" },\n        psl: { prefix: \"sgn\" },\n        pso: { prefix: \"sgn\" },\n        psp: { prefix: \"sgn\" },\n        psr: { prefix: \"sgn\" },\n        pys: { prefix: \"sgn\" },\n        rms: { prefix: \"sgn\" },\n        rsi: { prefix: \"sgn\" },\n        rsl: { prefix: \"sgn\" },\n        rsm: { prefix: \"sgn\" },\n        sdl: { prefix: \"sgn\" },\n        sfb: { prefix: \"sgn\" },\n        sfs: { prefix: \"sgn\" },\n        sgg: { prefix: \"sgn\" },\n        sgx: { prefix: \"sgn\" },\n        shu: { prefix: \"ar\" },\n        slf: { prefix: \"sgn\" },\n        sls: { prefix: \"sgn\" },\n        sqk: { prefix: \"sgn\" },\n        sqs: { prefix: \"sgn\" },\n        sqx: { prefix: \"sgn\" },\n        ssh: { prefix: \"ar\" },\n        ssp: { prefix: \"sgn\" },\n        ssr: { prefix: \"sgn\" },\n        svk: { prefix: \"sgn\" },\n        swc: { prefix: \"sw\" },\n        swh: { prefix: \"sw\" },\n        swl: { prefix: \"sgn\" },\n        syy: { prefix: \"sgn\" },\n        szs: { prefix: \"sgn\" },\n        tmw: { prefix: \"ms\" },\n        tse: { prefix: \"sgn\" },\n        tsm: { prefix: \"sgn\" },\n        tsq: { prefix: \"sgn\" },\n        tss: { prefix: \"sgn\" },\n        tsy: { prefix: \"sgn\" },\n        tza: { prefix: \"sgn\" },\n        ugn: { prefix: \"sgn\" },\n        ugy: { prefix: \"sgn\" },\n        ukl: { prefix: \"sgn\" },\n        uks: { prefix: \"sgn\" },\n        urk: { prefix: \"ms\" },\n        uzn: { prefix: \"uz\" },\n        uzs: { prefix: \"uz\" },\n        vgt: { prefix: \"sgn\" },\n        vkk: { prefix: \"ms\" },\n        vkt: { prefix: \"ms\" },\n        vsi: { prefix: \"sgn\" },\n        vsl: { prefix: \"sgn\" },\n        vsv: { prefix: \"sgn\" },\n        wbs: { prefix: \"sgn\" },\n        wuu: { prefix: \"zh\" },\n        xki: { prefix: \"sgn\" },\n        xml: { prefix: \"sgn\" },\n        xmm: { prefix: \"ms\" },\n        xms: { prefix: \"sgn\" },\n        yds: { prefix: \"sgn\" },\n        ygs: { prefix: \"sgn\" },\n        yhs: { prefix: \"sgn\" },\n        ysl: { prefix: \"sgn\" },\n        ysm: { prefix: \"sgn\" },\n        yue: { prefix: \"zh\" },\n        zib: { prefix: \"sgn\" },\n        zlm: { prefix: \"ms\" },\n        zmi: { prefix: \"ms\" },\n        zsl: { prefix: \"sgn\" },\n        zsm: { prefix: \"ms\" },\n    },\n    script: {\n        adlm: {},\n        afak: {},\n        aghb: {},\n        ahom: {},\n        arab: {},\n        aran: {},\n        armi: {},\n        armn: {},\n        avst: {},\n        bali: {},\n        bamu: {},\n        bass: {},\n        batk: {},\n        beng: {},\n        bhks: {},\n        blis: {},\n        bopo: {},\n        brah: {},\n        brai: {},\n        bugi: {},\n        buhd: {},\n        cakm: {},\n        cans: {},\n        cari: {},\n        cham: {},\n        cher: {},\n        chrs: {},\n        cirt: {},\n        copt: {},\n        cpmn: {},\n        cprt: {},\n        cyrl: {},\n        cyrs: {},\n        deva: {},\n        diak: {},\n        dogr: {},\n        dsrt: {},\n        dupl: {},\n        egyd: {},\n        egyh: {},\n        egyp: {},\n        elba: {},\n        elym: {},\n        ethi: {},\n        geok: {},\n        geor: {},\n        glag: {},\n        gong: {},\n        gonm: {},\n        goth: {},\n        gran: {},\n        grek: {},\n        gujr: {},\n        guru: {},\n        hanb: {},\n        hang: {},\n        hani: {},\n        hano: {},\n        hans: {},\n        hant: {},\n        hatr: {},\n        hebr: {},\n        hira: {},\n        hluw: {},\n        hmng: {},\n        hmnp: {},\n        hrkt: {},\n        hung: {},\n        inds: {},\n        ital: {},\n        jamo: {},\n        java: {},\n        jpan: {},\n        jurc: {},\n        kali: {},\n        kana: {},\n        khar: {},\n        khmr: {},\n        khoj: {},\n        kitl: {},\n        kits: {},\n        knda: {},\n        kore: {},\n        kpel: {},\n        kthi: {},\n        lana: {},\n        laoo: {},\n        latf: {},\n        latg: {},\n        latn: {},\n        leke: {},\n        lepc: {},\n        limb: {},\n        lina: {},\n        linb: {},\n        lisu: {},\n        loma: {},\n        lyci: {},\n        lydi: {},\n        mahj: {},\n        maka: {},\n        mand: {},\n        mani: {},\n        marc: {},\n        maya: {},\n        medf: {},\n        mend: {},\n        merc: {},\n        mero: {},\n        mlym: {},\n        modi: {},\n        mong: {},\n        moon: {},\n        mroo: {},\n        mtei: {},\n        mult: {},\n        mymr: {},\n        nand: {},\n        narb: {},\n        nbat: {},\n        newa: {},\n        nkdb: {},\n        nkgb: {},\n        nkoo: {},\n        nshu: {},\n        ogam: {},\n        olck: {},\n        orkh: {},\n        orya: {},\n        osge: {},\n        osma: {},\n        ougr: {},\n        palm: {},\n        pauc: {},\n        pcun: {},\n        pelm: {},\n        perm: {},\n        phag: {},\n        phli: {},\n        phlp: {},\n        phlv: {},\n        phnx: {},\n        piqd: {},\n        plrd: {},\n        prti: {},\n        psin: {},\n        qaaa: {},\n        qaab: {},\n        qaac: {},\n        qaad: {},\n        qaae: {},\n        qaaf: {},\n        qaag: {},\n        qaah: {},\n        qaai: {},\n        qaaj: {},\n        qaak: {},\n        qaal: {},\n        qaam: {},\n        qaan: {},\n        qaao: {},\n        qaap: {},\n        qaaq: {},\n        qaar: {},\n        qaas: {},\n        qaat: {},\n        qaau: {},\n        qaav: {},\n        qaaw: {},\n        qaax: {},\n        qaba: {},\n        qabb: {},\n        qabc: {},\n        qabd: {},\n        qabe: {},\n        qabf: {},\n        qabg: {},\n        qabh: {},\n        qabi: {},\n        qabj: {},\n        qabk: {},\n        qabl: {},\n        qabm: {},\n        qabn: {},\n        qabo: {},\n        qabp: {},\n        qabq: {},\n        qabr: {},\n        qabs: {},\n        qabt: {},\n        qabu: {},\n        qabv: {},\n        qabw: {},\n        qabx: {},\n        ranj: {},\n        rjng: {},\n        rohg: {},\n        roro: {},\n        runr: {},\n        samr: {},\n        sara: {},\n        sarb: {},\n        saur: {},\n        sgnw: {},\n        shaw: {},\n        shrd: {},\n        shui: {},\n        sidd: {},\n        sind: {},\n        sinh: {},\n        sogd: {},\n        sogo: {},\n        sora: {},\n        soyo: {},\n        sund: {},\n        sylo: {},\n        syrc: {},\n        syre: {},\n        syrj: {},\n        syrn: {},\n        tagb: {},\n        takr: {},\n        tale: {},\n        talu: {},\n        taml: {},\n        tang: {},\n        tavt: {},\n        telu: {},\n        teng: {},\n        tfng: {},\n        tglg: {},\n        thaa: {},\n        thai: {},\n        tibt: {},\n        tirh: {},\n        tnsa: {},\n        toto: {},\n        ugar: {},\n        vaii: {},\n        visp: {},\n        vith: {},\n        wara: {},\n        wcho: {},\n        wole: {},\n        xpeo: {},\n        xsux: {},\n        yezi: {},\n        yiii: {},\n        zanb: {},\n        zinh: {},\n        zmth: {},\n        zsye: {},\n        zsym: {},\n        zxxx: {},\n        zyyy: {},\n        zzzz: {},\n    },\n    region: {\n        aa: {},\n        ac: {},\n        ad: {},\n        ae: {},\n        af: {},\n        ag: {},\n        ai: {},\n        al: {},\n        am: {},\n        an: {},\n        ao: {},\n        aq: {},\n        ar: {},\n        as: {},\n        at: {},\n        au: {},\n        aw: {},\n        ax: {},\n        az: {},\n        ba: {},\n        bb: {},\n        bd: {},\n        be: {},\n        bf: {},\n        bg: {},\n        bh: {},\n        bi: {},\n        bj: {},\n        bl: {},\n        bm: {},\n        bn: {},\n        bo: {},\n        bq: {},\n        br: {},\n        bs: {},\n        bt: {},\n        bu: {},\n        bv: {},\n        bw: {},\n        by: {},\n        bz: {},\n        ca: {},\n        cc: {},\n        cd: {},\n        cf: {},\n        cg: {},\n        ch: {},\n        ci: {},\n        ck: {},\n        cl: {},\n        cm: {},\n        cn: {},\n        co: {},\n        cp: {},\n        cr: {},\n        cs: {},\n        cu: {},\n        cv: {},\n        cw: {},\n        cx: {},\n        cy: {},\n        cz: {},\n        dd: {},\n        de: {},\n        dg: {},\n        dj: {},\n        dk: {},\n        dm: {},\n        do: {},\n        dz: {},\n        ea: {},\n        ec: {},\n        ee: {},\n        eg: {},\n        eh: {},\n        er: {},\n        es: {},\n        et: {},\n        eu: {},\n        ez: {},\n        fi: {},\n        fj: {},\n        fk: {},\n        fm: {},\n        fo: {},\n        fr: {},\n        fx: {},\n        ga: {},\n        gb: {},\n        gd: {},\n        ge: {},\n        gf: {},\n        gg: {},\n        gh: {},\n        gi: {},\n        gl: {},\n        gm: {},\n        gn: {},\n        gp: {},\n        gq: {},\n        gr: {},\n        gs: {},\n        gt: {},\n        gu: {},\n        gw: {},\n        gy: {},\n        hk: {},\n        hm: {},\n        hn: {},\n        hr: {},\n        ht: {},\n        hu: {},\n        ic: {},\n        id: {},\n        ie: {},\n        il: {},\n        im: {},\n        in: {},\n        io: {},\n        iq: {},\n        ir: {},\n        is: {},\n        it: {},\n        je: {},\n        jm: {},\n        jo: {},\n        jp: {},\n        ke: {},\n        kg: {},\n        kh: {},\n        ki: {},\n        km: {},\n        kn: {},\n        kp: {},\n        kr: {},\n        kw: {},\n        ky: {},\n        kz: {},\n        la: {},\n        lb: {},\n        lc: {},\n        li: {},\n        lk: {},\n        lr: {},\n        ls: {},\n        lt: {},\n        lu: {},\n        lv: {},\n        ly: {},\n        ma: {},\n        mc: {},\n        md: {},\n        me: {},\n        mf: {},\n        mg: {},\n        mh: {},\n        mk: {},\n        ml: {},\n        mm: {},\n        mn: {},\n        mo: {},\n        mp: {},\n        mq: {},\n        mr: {},\n        ms: {},\n        mt: {},\n        mu: {},\n        mv: {},\n        mw: {},\n        mx: {},\n        my: {},\n        mz: {},\n        na: {},\n        nc: {},\n        ne: {},\n        nf: {},\n        ng: {},\n        ni: {},\n        nl: {},\n        no: {},\n        np: {},\n        nr: {},\n        nt: {},\n        nu: {},\n        nz: {},\n        om: {},\n        pa: {},\n        pe: {},\n        pf: {},\n        pg: {},\n        ph: {},\n        pk: {},\n        pl: {},\n        pm: {},\n        pn: {},\n        pr: {},\n        ps: {},\n        pt: {},\n        pw: {},\n        py: {},\n        qa: {},\n        qm: {},\n        qn: {},\n        qo: {},\n        qp: {},\n        qq: {},\n        qr: {},\n        qs: {},\n        qt: {},\n        qu: {},\n        qv: {},\n        qw: {},\n        qx: {},\n        qy: {},\n        qz: {},\n        re: {},\n        ro: {},\n        rs: {},\n        ru: {},\n        rw: {},\n        sa: {},\n        sb: {},\n        sc: {},\n        sd: {},\n        se: {},\n        sg: {},\n        sh: {},\n        si: {},\n        sj: {},\n        sk: {},\n        sl: {},\n        sm: {},\n        sn: {},\n        so: {},\n        sr: {},\n        ss: {},\n        st: {},\n        su: {},\n        sv: {},\n        sx: {},\n        sy: {},\n        sz: {},\n        ta: {},\n        tc: {},\n        td: {},\n        tf: {},\n        tg: {},\n        th: {},\n        tj: {},\n        tk: {},\n        tl: {},\n        tm: {},\n        tn: {},\n        to: {},\n        tp: {},\n        tr: {},\n        tt: {},\n        tv: {},\n        tw: {},\n        tz: {},\n        ua: {},\n        ug: {},\n        um: {},\n        un: {},\n        us: {},\n        uy: {},\n        uz: {},\n        va: {},\n        vc: {},\n        ve: {},\n        vg: {},\n        vi: {},\n        vn: {},\n        vu: {},\n        wf: {},\n        ws: {},\n        xa: {},\n        xb: {},\n        xc: {},\n        xd: {},\n        xe: {},\n        xf: {},\n        xg: {},\n        xh: {},\n        xi: {},\n        xj: {},\n        xk: {},\n        xl: {},\n        xm: {},\n        xn: {},\n        xo: {},\n        xp: {},\n        xq: {},\n        xr: {},\n        xs: {},\n        xt: {},\n        xu: {},\n        xv: {},\n        xw: {},\n        xx: {},\n        xy: {},\n        xz: {},\n        yd: {},\n        ye: {},\n        yt: {},\n        yu: {},\n        za: {},\n        zm: {},\n        zr: {},\n        zw: {},\n        zz: {},\n        \"001\": {},\n        \"002\": {},\n        \"003\": {},\n        \"005\": {},\n        \"009\": {},\n        \"011\": {},\n        \"013\": {},\n        \"014\": {},\n        \"015\": {},\n        \"017\": {},\n        \"018\": {},\n        \"019\": {},\n        \"021\": {},\n        \"029\": {},\n        \"030\": {},\n        \"034\": {},\n        \"035\": {},\n        \"039\": {},\n        \"053\": {},\n        \"054\": {},\n        \"057\": {},\n        \"061\": {},\n        \"142\": {},\n        \"143\": {},\n        \"145\": {},\n        \"150\": {},\n        \"151\": {},\n        \"154\": {},\n        \"155\": {},\n        \"202\": {},\n        \"419\": {},\n    },\n    variant: {\n        \"1606nict\": { prefixes: [\"frm\"] },\n        \"1694acad\": { prefixes: [\"fr\"] },\n        \"1901\": { prefixes: [\"de\"] },\n        \"1959acad\": { prefixes: [\"be\"] },\n        \"1994\": {\n            prefixes: [\n                \"sl-rozaj\",\n                \"sl-rozaj-biske\",\n                \"sl-rozaj-njiva\",\n                \"sl-rozaj-osojs\",\n                \"sl-rozaj-solba\",\n            ],\n        },\n        \"1996\": { prefixes: [\"de\"] },\n        abl1943: { prefixes: [\"pt-BR\"] },\n        akuapem: { prefixes: [\"tw\"] },\n        alalc97: { prefixes: [] },\n        aluku: { prefixes: [\"djk\"] },\n        ao1990: { prefixes: [\"pt\", \"gl\"] },\n        aranes: { prefixes: [\"oc\"] },\n        arevela: { prefixes: [\"hy\"] },\n        arevmda: { prefixes: [\"hy\"] },\n        arkaika: { prefixes: [\"eo\"] },\n        asante: { prefixes: [\"tw\"] },\n        auvern: { prefixes: [\"oc\"] },\n        baku1926: {\n            prefixes: [\"az\", \"ba\", \"crh\", \"kk\", \"krc\", \"ky\", \"sah\", \"tk\", \"tt\", \"uz\"],\n        },\n        balanka: { prefixes: [\"blo\"] },\n        barla: { prefixes: [\"kea\"] },\n        basiceng: { prefixes: [\"en\"] },\n        bauddha: { prefixes: [\"sa\"] },\n        biscayan: { prefixes: [\"eu\"] },\n        biske: { prefixes: [\"sl-rozaj\"] },\n        bohoric: { prefixes: [\"sl\"] },\n        boont: { prefixes: [\"en\"] },\n        bornholm: { prefixes: [\"da\"] },\n        cisaup: { prefixes: [\"oc\"] },\n        colb1945: { prefixes: [\"pt\"] },\n        cornu: { prefixes: [\"en\"] },\n        creiss: { prefixes: [\"oc\"] },\n        dajnko: { prefixes: [\"sl\"] },\n        ekavsk: { prefixes: [\"sr\", \"sr-Latn\", \"sr-Cyrl\"] },\n        emodeng: { prefixes: [\"en\"] },\n        fonipa: { prefixes: [] },\n        fonkirsh: { prefixes: [] },\n        fonnapa: { prefixes: [] },\n        fonupa: { prefixes: [] },\n        fonxsamp: { prefixes: [] },\n        gallo: { prefixes: [\"fr\"] },\n        gascon: { prefixes: [\"oc\"] },\n        grclass: {\n            prefixes: [\n                \"oc\",\n                \"oc-aranes\",\n                \"oc-auvern\",\n                \"oc-cisaup\",\n                \"oc-creiss\",\n                \"oc-gascon\",\n                \"oc-lemosin\",\n                \"oc-lengadoc\",\n                \"oc-nicard\",\n                \"oc-provenc\",\n                \"oc-vivaraup\",\n            ],\n        },\n        grital: { prefixes: [\"oc\", \"oc-cisaup\", \"oc-nicard\", \"oc-provenc\"] },\n        grmistr: {\n            prefixes: [\n                \"oc\",\n                \"oc-aranes\",\n                \"oc-auvern\",\n                \"oc-cisaup\",\n                \"oc-creiss\",\n                \"oc-gascon\",\n                \"oc-lemosin\",\n                \"oc-lengadoc\",\n                \"oc-nicard\",\n                \"oc-provenc\",\n                \"oc-vivaraup\",\n            ],\n        },\n        hepburn: { prefixes: [\"ja-Latn\"] },\n        heploc: { prefixes: [\"ja-Latn-hepburn\"] },\n        hognorsk: { prefixes: [\"nn\"] },\n        hsistemo: { prefixes: [\"eo\"] },\n        ijekavsk: { prefixes: [\"sr\", \"sr-Latn\", \"sr-Cyrl\"] },\n        itihasa: { prefixes: [\"sa\"] },\n        ivanchov: { prefixes: [\"bg\"] },\n        jauer: { prefixes: [\"rm\"] },\n        jyutping: { prefixes: [\"yue\"] },\n        kkcor: { prefixes: [\"kw\"] },\n        kociewie: { prefixes: [\"pl\"] },\n        kscor: { prefixes: [\"kw\"] },\n        laukika: { prefixes: [\"sa\"] },\n        lemosin: { prefixes: [\"oc\"] },\n        lengadoc: { prefixes: [\"oc\"] },\n        lipaw: { prefixes: [\"sl-rozaj\"] },\n        luna1918: { prefixes: [\"ru\"] },\n        metelko: { prefixes: [\"sl\"] },\n        monoton: { prefixes: [\"el\"] },\n        ndyuka: { prefixes: [\"djk\"] },\n        nedis: { prefixes: [\"sl\"] },\n        newfound: { prefixes: [\"en-CA\"] },\n        nicard: { prefixes: [\"oc\"] },\n        njiva: { prefixes: [\"sl-rozaj\"] },\n        nulik: { prefixes: [\"vo\"] },\n        osojs: { prefixes: [\"sl-rozaj\"] },\n        oxendict: { prefixes: [\"en\"] },\n        pahawh2: { prefixes: [\"mww\", \"hnj\"] },\n        pahawh3: { prefixes: [\"mww\", \"hnj\"] },\n        pahawh4: { prefixes: [\"mww\", \"hnj\"] },\n        pamaka: { prefixes: [\"djk\"] },\n        peano: { prefixes: [\"la\"] },\n        petr1708: { prefixes: [\"ru\"] },\n        pinyin: { prefixes: [\"zh-Latn\", \"bo-Latn\"] },\n        polyton: { prefixes: [\"el\"] },\n        provenc: { prefixes: [\"oc\"] },\n        puter: { prefixes: [\"rm\"] },\n        rigik: { prefixes: [\"vo\"] },\n        rozaj: { prefixes: [\"sl\"] },\n        rumgr: { prefixes: [\"rm\"] },\n        scotland: { prefixes: [\"en\"] },\n        scouse: { prefixes: [\"en\"] },\n        simple: { prefixes: [] },\n        solba: { prefixes: [\"sl-rozaj\"] },\n        sotav: { prefixes: [\"kea\"] },\n        spanglis: { prefixes: [\"en\", \"es\"] },\n        surmiran: { prefixes: [\"rm\"] },\n        sursilv: { prefixes: [\"rm\"] },\n        sutsilv: { prefixes: [\"rm\"] },\n        synnejyl: { prefixes: [\"da\"] },\n        tarask: { prefixes: [\"be\"] },\n        tongyong: { prefixes: [\"zh-Latn\"] },\n        tunumiit: { prefixes: [\"kl\"] },\n        uccor: { prefixes: [\"kw\"] },\n        ucrcor: { prefixes: [\"kw\"] },\n        ulster: { prefixes: [\"sco\"] },\n        unifon: { prefixes: [\"en\", \"hup\", \"kyh\", \"tol\", \"yur\"] },\n        vaidika: { prefixes: [\"sa\"] },\n        valencia: { prefixes: [\"ca\"] },\n        vallader: { prefixes: [\"rm\"] },\n        vecdruka: { prefixes: [\"lv\"] },\n        vivaraup: { prefixes: [\"oc\"] },\n        wadegile: { prefixes: [\"zh-Latn\"] },\n        xsistemo: { prefixes: [\"eo\"] },\n    },\n};\n//# sourceMappingURL=data.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-iana/src/language/data.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-iterable/src/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-iterable/src/index.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/iterable.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-iterable/src/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-iterable/src/iterable.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-iterable/src/iterable.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Iterable = void 0;\nconst alfa_comparable_1 = __webpack_require__(/*! @siteimprove/alfa-comparable */ \"./node_modules/@siteimprove/alfa-comparable/src/index.js\");\nconst alfa_equatable_1 = __webpack_require__(/*! @siteimprove/alfa-equatable */ \"./node_modules/@siteimprove/alfa-equatable/src/index.js\");\nconst alfa_json_1 = __webpack_require__(/*! @siteimprove/alfa-json */ \"./node_modules/@siteimprove/alfa-json/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_refinement_1 = __webpack_require__(/*! @siteimprove/alfa-refinement */ \"./node_modules/@siteimprove/alfa-refinement/src/index.js\");\nconst { not } = alfa_predicate_1.Predicate;\nconst { isObject } = alfa_refinement_1.Refinement;\nconst { compareComparable } = alfa_comparable_1.Comparable;\n/**\n * @public\n */\nvar Iterable;\n(function (Iterable) {\n    function isIterable(value) {\n        return isObject(value) && Symbol.iterator in value;\n    }\n    Iterable.isIterable = isIterable;\n    function* empty() { }\n    Iterable.empty = empty;\n    function* from(arrayLike) {\n        for (let i = 0, n = arrayLike.length; i < n; i++) {\n            yield arrayLike[i];\n        }\n    }\n    Iterable.from = from;\n    function size(iterable) {\n        return reduce(iterable, (size) => size + 1, 0);\n    }\n    Iterable.size = size;\n    function isEmpty(iterable) {\n        for (const _ of iterable) {\n            return false;\n        }\n        return true;\n    }\n    Iterable.isEmpty = isEmpty;\n    function forEach(iterable, callback) {\n        let index = 0;\n        for (const value of iterable) {\n            callback(value, index++);\n        }\n    }\n    Iterable.forEach = forEach;\n    function* map(iterable, mapper) {\n        let index = 0;\n        for (const value of iterable) {\n            yield mapper(value, index++);\n        }\n    }\n    Iterable.map = map;\n    function* flatMap(iterable, mapper) {\n        let index = 0;\n        for (const value of iterable) {\n            yield* mapper(value, index++);\n        }\n    }\n    Iterable.flatMap = flatMap;\n    function* flatten(iterable) {\n        for (const value of iterable) {\n            yield* value;\n        }\n    }\n    Iterable.flatten = flatten;\n    function reduce(iterable, reducer, accumulator) {\n        let index = 0;\n        for (const value of iterable) {\n            accumulator = reducer(accumulator, value, index++);\n        }\n        return accumulator;\n    }\n    Iterable.reduce = reduce;\n    function reduceWhile(iterable, predicate, reducer, accumulator) {\n        let index = 0;\n        for (const value of iterable) {\n            if (predicate(value, index)) {\n                accumulator = reducer(accumulator, value, index++);\n            }\n            else {\n                break;\n            }\n        }\n        return accumulator;\n    }\n    Iterable.reduceWhile = reduceWhile;\n    function reduceUntil(iterable, predicate, reducer, accumulator) {\n        return reduceWhile(iterable, not(predicate), reducer, accumulator);\n    }\n    Iterable.reduceUntil = reduceUntil;\n    function apply(iterable, mapper) {\n        return flatMap(mapper, (mapper) => map(iterable, mapper));\n    }\n    Iterable.apply = apply;\n    function* filter(iterable, predicate) {\n        let index = 0;\n        for (const value of iterable) {\n            if (predicate(value, index++)) {\n                yield value;\n            }\n        }\n    }\n    Iterable.filter = filter;\n    function reject(iterable, predicate) {\n        return filter(iterable, not(predicate));\n    }\n    Iterable.reject = reject;\n    function find(iterable, predicate) {\n        let index = 0;\n        for (const value of iterable) {\n            if (predicate(value, index++)) {\n                return alfa_option_1.Option.of(value);\n            }\n        }\n        return alfa_option_1.None;\n    }\n    Iterable.find = find;\n    function findLast(iterable, predicate) {\n        let index = 0;\n        let result = alfa_option_1.None;\n        for (const value of iterable) {\n            if (predicate(value, index++)) {\n                result = alfa_option_1.Option.of(value);\n            }\n        }\n        return result;\n    }\n    Iterable.findLast = findLast;\n    function includes(iterable, value) {\n        return some(iterable, alfa_predicate_1.Predicate.equals(value));\n    }\n    Iterable.includes = includes;\n    function collect(iterable, mapper) {\n        return flatMap(iterable, mapper);\n    }\n    Iterable.collect = collect;\n    function collectFirst(iterable, mapper) {\n        return first(collect(iterable, mapper));\n    }\n    Iterable.collectFirst = collectFirst;\n    function some(iterable, predicate) {\n        let index = 0;\n        for (const value of iterable) {\n            if (predicate(value, index++)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    Iterable.some = some;\n    function none(iterable, predicate) {\n        return every(iterable, not(predicate));\n    }\n    Iterable.none = none;\n    function every(iterable, predicate) {\n        let index = 0;\n        for (const value of iterable) {\n            if (!predicate(value, index++)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    Iterable.every = every;\n    function count(iterable, predicate) {\n        return reduce(iterable, (count, value, index) => (predicate(value, index) ? count + 1 : count), 0);\n    }\n    Iterable.count = count;\n    function* distinct(iterable) {\n        const seen = [];\n        for (const value of iterable) {\n            if (seen.some(alfa_predicate_1.Predicate.equals(value))) {\n                continue;\n            }\n            seen.push(value);\n            yield value;\n        }\n    }\n    Iterable.distinct = distinct;\n    function get(iterable, index) {\n        return index < 0 ? alfa_option_1.None : first(skip(iterable, index));\n    }\n    Iterable.get = get;\n    function has(iterable, index) {\n        return index < 0 ? false : !isEmpty(skip(iterable, index));\n    }\n    Iterable.has = has;\n    function* set(iterable, index, value) {\n        const it = iterator(iterable);\n        while (index-- > 0) {\n            const next = it.next();\n            if (next.done === true) {\n                return;\n            }\n            yield next.value;\n        }\n        const next = it.next();\n        if (next.done === true) {\n            return;\n        }\n        yield value;\n        while (true) {\n            const next = it.next();\n            if (next.done === true) {\n                return;\n            }\n            yield next.value;\n        }\n    }\n    Iterable.set = set;\n    function* insert(iterable, index, value) {\n        const it = iterator(iterable);\n        while (index-- > 0) {\n            const next = it.next();\n            if (next.done === true) {\n                return;\n            }\n            yield next.value;\n        }\n        yield value;\n        while (true) {\n            const next = it.next();\n            if (next.done === true) {\n                return;\n            }\n            yield next.value;\n        }\n    }\n    Iterable.insert = insert;\n    function* append(iterable, value) {\n        yield* iterable;\n        yield value;\n    }\n    Iterable.append = append;\n    function* prepend(iterable, value) {\n        yield value;\n        yield* iterable;\n    }\n    Iterable.prepend = prepend;\n    function* concat(iterable, ...iterables) {\n        yield* iterable;\n        for (const iterable of iterables) {\n            yield* iterable;\n        }\n    }\n    Iterable.concat = concat;\n    function subtract(iterable, ...iterables) {\n        return reject(iterable, (value) => includes(flatten(iterables), value));\n    }\n    Iterable.subtract = subtract;\n    function intersect(iterable, ...iterables) {\n        return filter(iterable, (value) => includes(flatten(iterables), value));\n    }\n    Iterable.intersect = intersect;\n    function* zip(a, b) {\n        const itA = iterator(a);\n        const itB = iterator(b);\n        while (true) {\n            const a = itA.next();\n            const b = itB.next();\n            if (a.done === true || b.done === true) {\n                return;\n            }\n            yield [a.value, b.value];\n        }\n    }\n    Iterable.zip = zip;\n    function first(iterable) {\n        for (const value of iterable) {\n            return alfa_option_1.Option.of(value);\n        }\n        return alfa_option_1.None;\n    }\n    Iterable.first = first;\n    function last(iterable) {\n        let last = null;\n        for (const value of iterable) {\n            last = value;\n        }\n        return alfa_option_1.Option.from(last);\n    }\n    Iterable.last = last;\n    function* take(iterable, count) {\n        const it = iterator(iterable);\n        while (count-- > 0) {\n            const next = it.next();\n            if (next.done === true) {\n                return;\n            }\n            yield next.value;\n        }\n    }\n    Iterable.take = take;\n    function* takeWhile(iterable, predicate) {\n        let index = 0;\n        for (const value of iterable) {\n            if (predicate(value, index++)) {\n                yield value;\n            }\n            else {\n                break;\n            }\n        }\n    }\n    Iterable.takeWhile = takeWhile;\n    function takeUntil(iterable, predicate) {\n        return takeWhile(iterable, not(predicate));\n    }\n    Iterable.takeUntil = takeUntil;\n    function* takeLast(iterable, count = 1) {\n        if (count <= 0) {\n            return;\n        }\n        const last = [];\n        for (const value of iterable) {\n            last.push(value);\n            if (last.length > count) {\n                last.shift();\n            }\n        }\n        yield* last;\n    }\n    Iterable.takeLast = takeLast;\n    function* takeLastWhile(iterable, predicate) {\n        const values = [...iterable];\n        let last = values.length - 1;\n        while (last >= 0) {\n            if (predicate(values[last], last)) {\n                last--;\n            }\n            else {\n                break;\n            }\n        }\n        for (let i = last, n = values.length - 1; i < n; i++) {\n            yield values[i];\n        }\n    }\n    Iterable.takeLastWhile = takeLastWhile;\n    function takeLastUntil(iterable, predicate) {\n        return takeLastWhile(iterable, not(predicate));\n    }\n    Iterable.takeLastUntil = takeLastUntil;\n    function* skip(iterable, count) {\n        const it = iterator(iterable);\n        while (count-- > 0) {\n            const next = it.next();\n            if (next.done === true) {\n                return;\n            }\n        }\n        while (true) {\n            const next = it.next();\n            if (next.done === true) {\n                return;\n            }\n            yield next.value;\n        }\n    }\n    Iterable.skip = skip;\n    function* skipWhile(iterable, predicate) {\n        let index = 0;\n        let skipped = false;\n        for (const value of iterable) {\n            if (!skipped && predicate(value, index++)) {\n                continue;\n            }\n            else {\n                skipped = true;\n                yield value;\n            }\n        }\n    }\n    Iterable.skipWhile = skipWhile;\n    function skipUntil(iterable, predicate) {\n        return skipWhile(iterable, not(predicate));\n    }\n    Iterable.skipUntil = skipUntil;\n    function* skipLast(iterable, count = 1) {\n        const it = iterator(iterable);\n        const first = [];\n        while (count-- > 0) {\n            const next = it.next();\n            if (next.done === true) {\n                return;\n            }\n            first.push(next.value);\n        }\n        while (true) {\n            const next = it.next();\n            if (next.done === true) {\n                return;\n            }\n            first.push(next.value);\n            yield first.shift();\n        }\n    }\n    Iterable.skipLast = skipLast;\n    function* skipLastWhile(iterable, predicate) {\n        const values = [...iterable];\n        let last = values.length - 1;\n        while (last >= 0) {\n            if (predicate(values[last], last)) {\n                last--;\n            }\n            else {\n                break;\n            }\n        }\n        for (let i = 0, n = last; i < n; i++) {\n            yield values[i];\n        }\n    }\n    Iterable.skipLastWhile = skipLastWhile;\n    function skipLastUntil(iterable, predicate) {\n        return skipLastWhile(iterable, not(predicate));\n    }\n    Iterable.skipLastUntil = skipLastUntil;\n    function trim(iterable, predicate) {\n        return trimTrailing(trimLeading(iterable, predicate), predicate);\n    }\n    Iterable.trim = trim;\n    function trimLeading(iterable, predicate) {\n        return skipWhile(iterable, predicate);\n    }\n    Iterable.trimLeading = trimLeading;\n    function trimTrailing(iterable, predicate) {\n        return skipLastWhile(iterable, predicate);\n    }\n    Iterable.trimTrailing = trimTrailing;\n    function rest(iterable) {\n        return skip(iterable, 1);\n    }\n    Iterable.rest = rest;\n    function slice(iterable, start, end) {\n        iterable = skip(iterable, start);\n        if (end !== undefined) {\n            iterable = take(iterable, end - start);\n        }\n        return iterable;\n    }\n    Iterable.slice = slice;\n    function* reverse(iterable) {\n        const array = Array.from(iterable);\n        for (let i = array.length - 1; i >= 0; i--) {\n            yield array[i];\n        }\n    }\n    Iterable.reverse = reverse;\n    function join(iterable, separator) {\n        const it = iterator(iterable);\n        let next = it.next();\n        if (next.done === true) {\n            return \"\";\n        }\n        let result = `${next.value}`;\n        next = it.next();\n        while (next.done !== true) {\n            result += `${separator}${next.value}`;\n            next = it.next();\n        }\n        return result;\n    }\n    Iterable.join = join;\n    function sort(iterable) {\n        return sortWith(iterable, compareComparable);\n    }\n    Iterable.sort = sort;\n    function* sortWith(iterable, comparer) {\n        yield* [...iterable].sort(comparer);\n    }\n    Iterable.sortWith = sortWith;\n    function compare(a, b) {\n        return compareWith(a, b, compareComparable);\n    }\n    Iterable.compare = compare;\n    function compareWith(a, b, comparer) {\n        const itA = iterator(a);\n        const itB = iterator(b);\n        let index = 0;\n        while (true) {\n            const a = itA.next();\n            const b = itB.next();\n            if (a.done === true) {\n                return b.done === true ? alfa_comparable_1.Comparison.Equal : alfa_comparable_1.Comparison.Less;\n            }\n            if (b.done === true) {\n                return alfa_comparable_1.Comparison.Greater;\n            }\n            const result = comparer(a.value, b.value, index++);\n            if (result !== 0) {\n                return result;\n            }\n        }\n    }\n    Iterable.compareWith = compareWith;\n    function equals(a, b) {\n        const itA = iterator(a);\n        const itB = iterator(b);\n        while (true) {\n            const a = itA.next();\n            const b = itB.next();\n            if (a.done === true) {\n                return b.done === true;\n            }\n            if (b.done === true || !alfa_equatable_1.Equatable.equals(a.value, b.value)) {\n                return false;\n            }\n        }\n    }\n    Iterable.equals = equals;\n    function hash(iterable, hash) {\n        let size = 0;\n        for (const value of iterable) {\n            hash.writeUnknown(value);\n            size++;\n        }\n        hash.writeUint32(size);\n    }\n    Iterable.hash = hash;\n    function iterator(iterable) {\n        return iterable[Symbol.iterator]();\n    }\n    Iterable.iterator = iterator;\n    function groupBy(iterable, grouper) {\n        const groups = [];\n        let index = 0;\n        for (const value of iterable) {\n            const group = grouper(value, index++);\n            const existing = groups.find(([existing]) => alfa_equatable_1.Equatable.equals(group, existing));\n            if (existing === undefined) {\n                groups.push([group, [value]]);\n            }\n            else {\n                existing[1].push(value);\n            }\n        }\n        return groups;\n    }\n    Iterable.groupBy = groupBy;\n    function toJSON(iterable) {\n        return [...map(iterable, (value) => alfa_json_1.Serializable.toJSON(value))];\n    }\n    Iterable.toJSON = toJSON;\n})(Iterable || (exports.Iterable = Iterable = {}));\n//# sourceMappingURL=iterable.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-iterable/src/iterable.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-json/src/builtin.js":
/*!************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-json/src/builtin.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// This file defines exports from the builtin `JSON` constructor for internal\n// use only.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.JSON = void 0;\n/**\n * @internal\n */\nconst Builtin = JSON;\nexports.JSON = Builtin;\n//# sourceMappingURL=builtin.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-json/src/builtin.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-json/src/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-json/src/index.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./json */ \"./node_modules/@siteimprove/alfa-json/src/json.js\"), exports);\n__exportStar(__webpack_require__(/*! ./serializable */ \"./node_modules/@siteimprove/alfa-json/src/serializable.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-json/src/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-json/src/json.js":
/*!*********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-json/src/json.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.JSON = void 0;\nconst builtin = __webpack_require__(/*! ./builtin */ \"./node_modules/@siteimprove/alfa-json/src/builtin.js\");\n/**\n * @public\n */\nvar JSON;\n(function (JSON) {\n    function parse(value) {\n        return builtin.JSON.parse(value);\n    }\n    JSON.parse = parse;\n    function stringify(value) {\n        return builtin.JSON.stringify(value);\n    }\n    JSON.stringify = stringify;\n})(JSON || (exports.JSON = JSON = {}));\n//# sourceMappingURL=json.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-json/src/json.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-json/src/serializable.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-json/src/serializable.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Serializable = void 0;\nconst alfa_refinement_1 = __webpack_require__(/*! @siteimprove/alfa-refinement */ \"./node_modules/@siteimprove/alfa-refinement/src/index.js\");\nconst { keys } = Object;\nconst { isArray } = Array;\nconst { isFunction, isObject, isString, isNumber, isBoolean, isNull } = alfa_refinement_1.Refinement;\n/**\n * @public\n */\nvar Serializable;\n(function (Serializable) {\n    function isSerializable(value) {\n        return isObject(value) && isFunction(value.toJSON);\n    }\n    Serializable.isSerializable = isSerializable;\n    function toJSON(value, options) {\n        if (isSerializable(value)) {\n            return value.toJSON(options);\n        }\n        if (isString(value) ||\n            isNumber(value) ||\n            isBoolean(value) ||\n            isNull(value)) {\n            return value;\n        }\n        if (isArray(value)) {\n            return value.map(toJSON);\n        }\n        if (isObject(value)) {\n            const json = {};\n            for (const key of keys(value)) {\n                if (value[key] !== undefined) {\n                    json[key] = toJSON(value[key], options);\n                }\n            }\n            return json;\n        }\n        return null;\n    }\n    Serializable.toJSON = toJSON;\n})(Serializable || (exports.Serializable = Serializable = {}));\n//# sourceMappingURL=serializable.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-json/src/serializable.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-lazy/src/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-lazy/src/index.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./lazy */ \"./node_modules/@siteimprove/alfa-lazy/src/lazy.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-lazy/src/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-lazy/src/lazy.js":
/*!*********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-lazy/src/lazy.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Lazy = void 0;\nconst alfa_equatable_1 = __webpack_require__(/*! @siteimprove/alfa-equatable */ \"./node_modules/@siteimprove/alfa-equatable/src/index.js\");\nconst alfa_json_1 = __webpack_require__(/*! @siteimprove/alfa-json */ \"./node_modules/@siteimprove/alfa-json/src/index.js\");\nconst alfa_trampoline_1 = __webpack_require__(/*! @siteimprove/alfa-trampoline */ \"./node_modules/@siteimprove/alfa-trampoline/src/index.js\");\n/**\n * @public\n */\nclass Lazy {\n    static of(thunk) {\n        return new Lazy(alfa_trampoline_1.Trampoline.delay(thunk));\n    }\n    static force(value) {\n        return new Lazy(alfa_trampoline_1.Trampoline.done(value));\n    }\n    constructor(value) {\n        this._value = value;\n    }\n    force() {\n        if (this._value.isSuspended()) {\n            this._value = alfa_trampoline_1.Trampoline.done(this._value.run());\n        }\n        return this._value.run();\n    }\n    map(mapper) {\n        return new Lazy(this._value.flatMap((value) => {\n            if (this._value.isSuspended()) {\n                this._value = alfa_trampoline_1.Trampoline.done(value);\n            }\n            return alfa_trampoline_1.Trampoline.done(mapper(value));\n        }));\n    }\n    apply(mapper) {\n        return mapper.map((mapper) => mapper(this.force()));\n    }\n    flatMap(mapper) {\n        return new Lazy(this._value.flatMap((value) => {\n            if (this._value.isSuspended()) {\n                this._value = alfa_trampoline_1.Trampoline.done(value);\n            }\n            return mapper(value)._value;\n        }));\n    }\n    flatten() {\n        return this.flatMap((lazy) => lazy);\n    }\n    equals(value) {\n        return (value instanceof Lazy && alfa_equatable_1.Equatable.equals(value.force(), this.force()));\n    }\n    *iterator() {\n        yield this.force();\n    }\n    [Symbol.iterator]() {\n        return this.iterator();\n    }\n    toThunk() {\n        return () => this.force();\n    }\n    toJSON() {\n        return alfa_json_1.Serializable.toJSON(this.force());\n    }\n    toString() {\n        return `Lazy { ${this.force()} }`;\n    }\n}\nexports.Lazy = Lazy;\n//# sourceMappingURL=lazy.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-lazy/src/lazy.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-list/src/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-list/src/index.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./list */ \"./node_modules/@siteimprove/alfa-list/src/list.js\"), exports);\n__exportStar(__webpack_require__(/*! ./node */ \"./node_modules/@siteimprove/alfa-list/src/node.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-list/src/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-list/src/list.js":
/*!*********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-list/src/list.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.List = void 0;\nconst alfa_array_1 = __webpack_require__(/*! @siteimprove/alfa-array */ \"./node_modules/@siteimprove/alfa-array/src/index.js\");\nconst alfa_comparable_1 = __webpack_require__(/*! @siteimprove/alfa-comparable */ \"./node_modules/@siteimprove/alfa-comparable/src/index.js\");\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_json_1 = __webpack_require__(/*! @siteimprove/alfa-json */ \"./node_modules/@siteimprove/alfa-json/src/index.js\");\nconst alfa_map_1 = __webpack_require__(/*! @siteimprove/alfa-map */ \"./node_modules/@siteimprove/alfa-map/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_set_1 = __webpack_require__(/*! @siteimprove/alfa-set */ \"./node_modules/@siteimprove/alfa-set/src/index.js\");\nconst node_1 = __webpack_require__(/*! ./node */ \"./node_modules/@siteimprove/alfa-list/src/node.js\");\nconst { not } = alfa_predicate_1.Predicate;\nconst { compareComparable } = alfa_comparable_1.Comparable;\n/**\n * @public\n */\nclass List {\n    static of(...values) {\n        const size = values.length;\n        // Fast path: The values fit within the tail.\n        if (size <= node_1.Node.Capacity) {\n            return new List(node_1.Empty, node_1.Leaf.of(values), 0, size);\n        }\n        return values.reduce((list, value) => list._push(value), List.empty());\n    }\n    static empty() {\n        return this._empty;\n    }\n    constructor(head, tail, shift, size) {\n        this._head = head;\n        this._tail = tail;\n        this._shift = shift;\n        this._size = size;\n    }\n    get size() {\n        return this._size;\n    }\n    isEmpty() {\n        return this._tail.isEmpty();\n    }\n    forEach(callback) {\n        alfa_iterable_1.Iterable.forEach(this, callback);\n    }\n    map(mapper) {\n        let index = 0;\n        const tail = this._tail.map((value) => mapper(value, index++));\n        const head = this._head.map((value) => mapper(value, index++));\n        return new List(head, tail, this._shift, this._size);\n    }\n    apply(mapper) {\n        return mapper.flatMap((mapper) => this.map(mapper));\n    }\n    flatMap(mapper) {\n        return this.reduce((list, value, index) => list.concat(mapper(value, index)), List.empty());\n    }\n    flatten() {\n        return this.flatMap((list) => list);\n    }\n    reduce(reducer, accumulator) {\n        return alfa_iterable_1.Iterable.reduce(this, reducer, accumulator);\n    }\n    reduceWhile(predicate, reducer, accumulator) {\n        return alfa_iterable_1.Iterable.reduceWhile(this, predicate, reducer, accumulator);\n    }\n    reduceUntil(predicate, reducer, accumulator) {\n        return alfa_iterable_1.Iterable.reduceUntil(this, predicate, reducer, accumulator);\n    }\n    filter(predicate) {\n        return List.from(alfa_iterable_1.Iterable.filter(this, predicate));\n    }\n    reject(predicate) {\n        return this.filter(not(predicate));\n    }\n    find(predicate) {\n        return alfa_iterable_1.Iterable.find(this, predicate);\n    }\n    includes(value) {\n        return alfa_iterable_1.Iterable.includes(this, value);\n    }\n    collect(mapper) {\n        return List.from(alfa_iterable_1.Iterable.collect(this, mapper));\n    }\n    collectFirst(mapper) {\n        return alfa_iterable_1.Iterable.collectFirst(this, mapper);\n    }\n    some(predicate) {\n        return alfa_iterable_1.Iterable.some(this, predicate);\n    }\n    none(predicate) {\n        return alfa_iterable_1.Iterable.none(this, predicate);\n    }\n    every(predicate) {\n        return alfa_iterable_1.Iterable.every(this, predicate);\n    }\n    count(predicate) {\n        return alfa_iterable_1.Iterable.count(this, predicate);\n    }\n    distinct() {\n        let seen = alfa_set_1.Set.empty();\n        let list = List.empty();\n        for (const value of this) {\n            if (seen.has(value)) {\n                continue;\n            }\n            seen = seen.add(value);\n            list = list.append(value);\n        }\n        return list;\n    }\n    get(index) {\n        if (index < 0 || index >= this._size || this._tail.isEmpty()) {\n            return alfa_option_1.None;\n        }\n        const offset = this._size - this._tail.values.length;\n        let value;\n        if (index < offset) {\n            value = this._head.get(index, this._shift - node_1.Node.Bits);\n        }\n        else {\n            value = this._tail.get(index - offset);\n        }\n        return value;\n    }\n    has(index) {\n        return index >= 0 && index < this._size;\n    }\n    set(index, value) {\n        if (index < 0 || index >= this._size || this._tail.isEmpty()) {\n            return this;\n        }\n        const offset = this._size - this._tail.values.length;\n        let head = this._head;\n        let tail = this._tail;\n        if (index < offset) {\n            if (head.isEmpty()) {\n                return this;\n            }\n            head = head.set(index, value, this._shift);\n            if (head === this._head) {\n                return this;\n            }\n        }\n        else {\n            tail = tail.set(index - offset, value);\n            if (tail === this._tail) {\n                return this;\n            }\n        }\n        return new List(head, tail, this._shift, this._size);\n    }\n    insert(index, value) {\n        if (index < 0 || index > this.size) {\n            return this;\n        }\n        if (index === 0) {\n            return this.prepend(value);\n        }\n        if (index === this.size) {\n            return this.append(value);\n        }\n        return List.from(alfa_iterable_1.Iterable.concat(alfa_iterable_1.Iterable.take(this, index), alfa_iterable_1.Iterable.from([value]), alfa_iterable_1.Iterable.skip(this, index)));\n    }\n    append(value) {\n        return this._push(value);\n    }\n    prepend(value) {\n        return List.of(value).concat(this);\n    }\n    concat(iterable) {\n        return alfa_iterable_1.Iterable.reduce(iterable, (list, value) => list._push(value), this);\n    }\n    subtract(iterable) {\n        return List.from(alfa_iterable_1.Iterable.subtract(this, iterable));\n    }\n    intersect(iterable) {\n        return List.from(alfa_iterable_1.Iterable.intersect(this, iterable));\n    }\n    tee(callback, ...args) {\n        callback(this, ...args);\n        return this;\n    }\n    zip(iterable) {\n        return List.from(alfa_iterable_1.Iterable.zip(this, iterable));\n    }\n    first() {\n        return this._tail.isEmpty() ? alfa_option_1.None : alfa_option_1.Option.of(this._tail.values[0]);\n    }\n    last() {\n        return alfa_iterable_1.Iterable.last(this);\n    }\n    take(count) {\n        return List.from(alfa_iterable_1.Iterable.take(this, count));\n    }\n    takeWhile(predicate) {\n        return List.from(alfa_iterable_1.Iterable.takeWhile(this, predicate));\n    }\n    takeUntil(predicate) {\n        return this.takeWhile(not(predicate));\n    }\n    takeLast(count = 1) {\n        return List.from(alfa_iterable_1.Iterable.takeLast(this, count));\n    }\n    takeLastWhile(predicate) {\n        return List.from(alfa_iterable_1.Iterable.takeLastWhile(this, predicate));\n    }\n    takeLastUntil(predicate) {\n        return this.takeLastWhile(not(predicate));\n    }\n    skip(count) {\n        return List.from(alfa_iterable_1.Iterable.skip(this, count));\n    }\n    skipWhile(predicate) {\n        return List.from(alfa_iterable_1.Iterable.skipWhile(this, predicate));\n    }\n    skipUntil(predicate) {\n        return this.skipWhile(not(predicate));\n    }\n    skipLast(count = 1) {\n        let list = this;\n        while (count-- > 0) {\n            list = list._pop();\n        }\n        return list;\n    }\n    skipLastWhile(predicate) {\n        return List.from(alfa_iterable_1.Iterable.skipLastWhile(this, predicate));\n    }\n    skipLastUntil(predicate) {\n        return this.skipLastWhile(not(predicate));\n    }\n    trim(predicate) {\n        return this.trimLeading(predicate).trimTrailing(predicate);\n    }\n    trimLeading(predicate) {\n        return this.skipWhile(predicate);\n    }\n    trimTrailing(predicate) {\n        return this.skipLastWhile(predicate);\n    }\n    rest() {\n        return this.skip(1);\n    }\n    slice(start, end) {\n        return List.from(alfa_iterable_1.Iterable.slice(this, start, end));\n    }\n    reverse() {\n        return List.from(alfa_iterable_1.Iterable.reverse(this));\n    }\n    join(separator) {\n        return alfa_iterable_1.Iterable.join(this, separator);\n    }\n    sort() {\n        return this.sortWith(compareComparable);\n    }\n    sortWith(comparer) {\n        return List.from(alfa_iterable_1.Iterable.sortWith(this, comparer));\n    }\n    compare(iterable) {\n        return this.compareWith(iterable, compareComparable);\n    }\n    compareWith(iterable, comparer) {\n        return alfa_iterable_1.Iterable.compareWith(this, iterable, comparer);\n    }\n    groupBy(grouper) {\n        return this.reduce((groups, value) => {\n            const group = grouper(value);\n            return groups.set(group, groups\n                .get(group)\n                .getOrElse(() => List.empty())\n                ._push(value));\n        }, alfa_map_1.Map.empty());\n    }\n    equals(value) {\n        return (value instanceof List &&\n            value._size === this._size &&\n            value._head.equals(this._head) &&\n            value._tail.equals(this._tail));\n    }\n    hash(hash) {\n        for (const value of this) {\n            hash.writeUnknown(value);\n        }\n        hash.writeUint32(this._size);\n    }\n    *[Symbol.iterator]() {\n        yield* this._head;\n        yield* this._tail;\n    }\n    toArray() {\n        return [...this];\n    }\n    toJSON() {\n        return this.toArray().map((value) => alfa_json_1.Serializable.toJSON(value));\n    }\n    toString() {\n        const values = this.join(\", \");\n        return `List [${values === \"\" ? \"\" : ` ${values} `}]`;\n    }\n    _push(value) {\n        // If no tail exists yet, this means that the list is empty. We therefore\n        // create a new tail with the pushed value. As the current list is empty,\n        // it won't have a head. As such, there's no need to pass the head along.\n        //\n        // In:  List { head: Empty, tail: Empty }\n        // Out: List { head: Empty, tail: Leaf(value) }\n        //\n        if (this._tail.isEmpty()) {\n            return new List(node_1.Empty, node_1.Leaf.of([value]), 0, 1);\n        }\n        // If the tail has capacity for another value, we concatenate the pushed\n        // value onto the current tail. The current list may or may not have a head,\n        // so we pass the head along as-is.\n        //\n        // In:  List { head, tail }\n        // Out: List { head, tail: Leaf(...tail, value) }\n        //\n        if (this._tail.hasCapacity()) {\n            return new List(this._head, node_1.Leaf.of([...this._tail.values, value]), this._shift, this._size + 1);\n        }\n        // If the tail does not have capacity for another value, we need to add it\n        // to the head to make room for a new tail. If the current list does not\n        // have a head, we use the current tail as the new head and create a new\n        // tail with the pushed value.\n        //\n        // In:  List { head: Empty, tail }\n        // Out: List { head: tail, tail: Leaf(value) }\n        //\n        if (this._head.isEmpty()) {\n            return new List(this._tail, node_1.Leaf.of([value]), this._shift + node_1.Node.Bits, this._size + 1);\n        }\n        const index = this._size - node_1.Node.Capacity;\n        let head = this._head;\n        let shift = this._shift;\n        // If the head has overflown, we need to split it which in turn increases\n        // the depth of the list.\n        if (head.isLeaf() || index === node_1.Node.overflow(shift)) {\n            head = node_1.Branch.of([head]);\n            shift += node_1.Node.Bits;\n        }\n        else {\n            head = head.clone();\n        }\n        let prev = head;\n        let level = shift - node_1.Node.Bits;\n        // We now add the tail to the head in order to make room for a new tail.\n        while (level > 0) {\n            const i = node_1.Node.fragment(index, level);\n            level -= node_1.Node.Bits;\n            const next = prev.nodes[i];\n            if (next === undefined) {\n                if (level === 0) {\n                    prev.nodes[i] = this._tail;\n                }\n                else {\n                    prev.nodes[i] = prev = node_1.Branch.empty();\n                }\n            }\n            else {\n                prev.nodes[i] = prev = next.clone();\n            }\n        }\n        // With the current tail inserted into the new head, we can now make a new\n        // tail with the pushed value. Do note that the spread syntax is only used\n        // for illustrative purposes here; the tail is actually inserted in the\n        // rightmost branch of the head.\n        //\n        // In:  List { head, tail }\n        // Out: List { head: Branch(...head, ...tail), tail: Leaf(value) }\n        //\n        return new List(head, node_1.Leaf.of([value]), shift, this._size + 1);\n    }\n    _pop() {\n        // If the list has no tail then it is empty. We therefore return the list\n        // itself as the pop has no effect.\n        if (this._tail.isEmpty()) {\n            return this;\n        }\n        // If the list has a size of 1 then the result of the popping its last\n        // element will be an empty list.\n        //\n        // In:  List { head: Empty, tail: Leaf(value) }\n        // Out: List { head: Empty, tail: Empty }\n        //\n        if (this._size === 1) {\n            return List.empty();\n        }\n        // If the tail has more than one element, it will have a non-zero size after\n        // popping the last element. We can therefore get away with removing the\n        // last element from the tail and reuse the head.\n        //\n        // In:  List { head, tail: Leaf(...tail, value) }\n        // Out: List { head, tail }\n        //\n        if (this._tail.values.length > 1) {\n            return new List(this._head, node_1.Leaf.of(this._tail.values.slice(0, this._tail.values.length - 1)), this._shift, this._size - 1);\n        }\n        if (this._head.isLeaf() || this._head.isEmpty()) {\n            return new List(node_1.Empty, this._head, this._shift - node_1.Node.Bits, this._size - 1);\n        }\n        let head = this._head.clone();\n        let tail = this._tail;\n        let shift = this._shift;\n        const index = this._size - node_1.Node.Capacity - 1;\n        let prev = head;\n        let level = shift - node_1.Node.Bits;\n        // We now remove the rightmost leaf of the head as this will be used as the\n        // new tail.\n        while (level > 0) {\n            const fragment = node_1.Node.fragment(index, level);\n            level -= node_1.Node.Bits;\n            const next = prev.nodes[fragment];\n            // Once we reach the rightmost leaf node, remove it as it will be used as\n            // the new tail.\n            if (next.isLeaf()) {\n                prev.nodes.pop();\n                tail = next;\n            }\n            else {\n                prev = prev.nodes[fragment] = next.clone();\n            }\n        }\n        // If the head has underflown, we unwrap its first child and use that as the\n        // new head which in turn decreases the depth of the list. If the head is a\n        // leaf node, we instead set the new head to null.\n        if (index === node_1.Node.underflow(shift)) {\n            head = head.nodes[0];\n            shift -= node_1.Node.Bits;\n        }\n        // With the rightmost branch of the head removed, we can now use it as the\n        // new tail and discard the old. Do note that the spread syntax is only used\n        // for illustrative purposes here; the tail is actually removed from the\n        // rightmost branch of the head.\n        //\n        // In:  List { head: Branch(...head, tail), tail: Leaf(value) }\n        // Out: List { head, tail }\n        //\n        return new List(head, tail, shift, this._size - 1);\n    }\n}\nexports.List = List;\nList._empty = new List(node_1.Empty, node_1.Empty, 0, 0);\n/**\n * @public\n */\n(function (List) {\n    function isList(value) {\n        return value instanceof List;\n    }\n    List.isList = isList;\n    function from(iterable) {\n        if (isList(iterable)) {\n            return iterable;\n        }\n        if (alfa_array_1.Array.isArray(iterable)) {\n            return fromArray(iterable);\n        }\n        return fromIterable(iterable);\n    }\n    List.from = from;\n    function fromArray(array) {\n        const size = array.length;\n        // Fast path: The array fits within the tail.\n        if (size <= node_1.Node.Capacity) {\n            return List.of(...array);\n        }\n        return alfa_array_1.Array.reduce(array, (list, value) => list.append(value), List.empty());\n    }\n    List.fromArray = fromArray;\n    function fromIterable(iterable) {\n        return alfa_iterable_1.Iterable.reduce(iterable, (list, value) => list.append(value), List.empty());\n    }\n    List.fromIterable = fromIterable;\n})(List || (exports.List = List = {}));\n//# sourceMappingURL=list.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-list/src/list.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-list/src/node.js":
/*!*********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-list/src/node.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Branch = exports.Leaf = exports.Empty = exports.Node = void 0;\nconst alfa_bits_1 = __webpack_require__(/*! @siteimprove/alfa-bits */ \"./node_modules/@siteimprove/alfa-bits/src/index.js\");\nconst alfa_equatable_1 = __webpack_require__(/*! @siteimprove/alfa-equatable */ \"./node_modules/@siteimprove/alfa-equatable/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst { bit, take, skip } = alfa_bits_1.Bits;\n/**\n * @internal\n */\nvar Node;\n(function (Node) {\n    Node.Bits = 5;\n    Node.Capacity = bit(Node.Bits);\n    function fragment(index, shift) {\n        return take(skip(index, shift), Node.Bits);\n    }\n    Node.fragment = fragment;\n    function overflow(shift) {\n        return Node.Capacity << (shift - Node.Bits);\n    }\n    Node.overflow = overflow;\n    function underflow(shift) {\n        return Node.Capacity << (shift - Node.Bits * 2);\n    }\n    Node.underflow = underflow;\n})(Node || (exports.Node = Node = {}));\n/**\n * @internal\n */\nexports.Empty = new (class Empty {\n    isEmpty() {\n        return true;\n    }\n    isLeaf() {\n        return false;\n    }\n    get() {\n        return alfa_option_1.None;\n    }\n    set() {\n        return this;\n    }\n    map() {\n        return this;\n    }\n    equals(value) {\n        return value instanceof Empty;\n    }\n    *[Symbol.iterator]() { }\n})();\n/**\n * @internal\n */\nclass Leaf {\n    static of(values) {\n        return new Leaf(values);\n    }\n    constructor(values) {\n        this._values = values;\n    }\n    get values() {\n        return this._values;\n    }\n    isEmpty() {\n        return false;\n    }\n    isLeaf() {\n        return true;\n    }\n    hasCapacity() {\n        return this._values.length < Node.Capacity;\n    }\n    get(index) {\n        const fragment = take(index, Node.Bits);\n        return alfa_option_1.Option.of(this._values[fragment]);\n    }\n    set(index, value) {\n        const fragment = take(index, Node.Bits);\n        if (alfa_equatable_1.Equatable.equals(value, this._values[fragment])) {\n            return this;\n        }\n        const values = this._values.slice(0);\n        values[fragment] = value;\n        return Leaf.of(values);\n    }\n    map(mapper) {\n        return Leaf.of(this._values.map(mapper));\n    }\n    equals(value) {\n        return (value instanceof Leaf &&\n            value._values.length === this._values.length &&\n            value._values.every((value, i) => alfa_equatable_1.Equatable.equals(value, this._values[i])));\n    }\n    *[Symbol.iterator]() {\n        yield* this._values;\n    }\n}\nexports.Leaf = Leaf;\n/**\n * @internal\n */\nclass Branch {\n    static of(nodes) {\n        return new Branch(nodes);\n    }\n    static empty() {\n        return new Branch([]);\n    }\n    constructor(nodes) {\n        this._nodes = nodes;\n    }\n    get nodes() {\n        return this._nodes;\n    }\n    isEmpty() {\n        return false;\n    }\n    isLeaf() {\n        return false;\n    }\n    clone() {\n        return Branch.of(this._nodes.slice(0));\n    }\n    get(index, shift) {\n        const fragment = Node.fragment(index, shift);\n        return this._nodes[fragment].get(index, shift - Node.Bits);\n    }\n    set(index, value, shift) {\n        const fragment = Node.fragment(index, shift);\n        const node = this._nodes[fragment].set(index, value, shift - Node.Bits);\n        if (node === this._nodes[fragment]) {\n            return this;\n        }\n        const nodes = this._nodes.slice(0);\n        nodes[fragment] = node;\n        return Branch.of(nodes);\n    }\n    map(mapper) {\n        return Branch.of(this._nodes.map((node) => node.map(mapper)));\n    }\n    equals(value) {\n        return (value instanceof Branch &&\n            value._nodes.length === this._nodes.length &&\n            value._nodes.every((node, i) => node.equals(this._nodes[i])));\n    }\n    *[Symbol.iterator]() {\n        for (const node of this._nodes) {\n            yield* node;\n        }\n    }\n}\nexports.Branch = Branch;\n//# sourceMappingURL=node.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-list/src/node.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-map/src/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-map/src/index.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./map */ \"./node_modules/@siteimprove/alfa-map/src/map.js\"), exports);\n__exportStar(__webpack_require__(/*! ./node */ \"./node_modules/@siteimprove/alfa-map/src/node.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-map/src/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-map/src/map.js":
/*!*******************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-map/src/map.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Map = void 0;\nconst alfa_array_1 = __webpack_require__(/*! @siteimprove/alfa-array */ \"./node_modules/@siteimprove/alfa-array/src/index.js\");\nconst alfa_fnv_1 = __webpack_require__(/*! @siteimprove/alfa-fnv */ \"./node_modules/@siteimprove/alfa-fnv/src/index.js\");\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_json_1 = __webpack_require__(/*! @siteimprove/alfa-json */ \"./node_modules/@siteimprove/alfa-json/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst node_1 = __webpack_require__(/*! ./node */ \"./node_modules/@siteimprove/alfa-map/src/node.js\");\nconst { not } = alfa_predicate_1.Predicate;\n/**\n * @public\n */\nclass Map {\n    static of(...entries) {\n        return entries.reduce((map, [key, value]) => map.set(key, value), Map.empty());\n    }\n    static empty() {\n        return this._empty;\n    }\n    constructor(root, size) {\n        this._root = root;\n        this._size = size;\n    }\n    get size() {\n        return this._size;\n    }\n    isEmpty() {\n        return this._size === 0;\n    }\n    forEach(callback) {\n        alfa_iterable_1.Iterable.forEach(this, ([key, value]) => callback(value, key));\n    }\n    map(mapper) {\n        return new Map(this._root.map(mapper), this._size);\n    }\n    /**\n     * Apply a map of functions to each corresponding value of this map.\n     *\n     * @remarks\n     * Keys without a corresponding function or value are dropped from the\n     * resulting map.\n     *\n     * @example\n     * ```ts\n     * Map.of([\"a\", 1], [\"b\", 2])\n     *   .apply(Map.of([\"a\", (x) => x + 1], [\"b\", (x) => x * 2]))\n     *   .toArray();\n     * // => [[\"a\", 2], [\"b\", 4]]\n     * ```\n     */\n    apply(mapper) {\n        return this.collect((value, key) => mapper.get(key).map((mapper) => mapper(value)));\n    }\n    /**\n     * @remarks\n     * As the order of maps is undefined, it is also undefined which keys are\n     * kept when duplicate keys are encountered.\n     */\n    flatMap(mapper) {\n        return this.reduce((map, value, key) => map.concat(mapper(value, key)), Map.empty());\n    }\n    /**\n     * @remarks\n     * As the order of maps is undefined, it is also undefined which keys are\n     * kept when duplicate keys are encountered.\n     */\n    flatten() {\n        return this.flatMap((map) => map);\n    }\n    reduce(reducer, accumulator) {\n        return alfa_iterable_1.Iterable.reduce(this, (accumulator, [key, value]) => reducer(accumulator, value, key), accumulator);\n    }\n    filter(predicate) {\n        return this.reduce((map, value, key) => (predicate(value, key) ? map.set(key, value) : map), Map.empty());\n    }\n    reject(predicate) {\n        return this.filter(not(predicate));\n    }\n    find(predicate) {\n        return alfa_iterable_1.Iterable.find(this, ([key, value]) => predicate(value, key)).map(([, value]) => value);\n    }\n    includes(value) {\n        return alfa_iterable_1.Iterable.includes(this.values(), value);\n    }\n    collect(mapper) {\n        return Map.from(alfa_iterable_1.Iterable.collect(this, ([key, value]) => mapper(value, key).map((value) => [key, value])));\n    }\n    collectFirst(mapper) {\n        return alfa_iterable_1.Iterable.collectFirst(this, ([key, value]) => mapper(value, key));\n    }\n    some(predicate) {\n        return alfa_iterable_1.Iterable.some(this, ([key, value]) => predicate(value, key));\n    }\n    none(predicate) {\n        return alfa_iterable_1.Iterable.none(this, ([key, value]) => predicate(value, key));\n    }\n    every(predicate) {\n        return alfa_iterable_1.Iterable.every(this, ([key, value]) => predicate(value, key));\n    }\n    count(predicate) {\n        return alfa_iterable_1.Iterable.count(this, ([key, value]) => predicate(value, key));\n    }\n    /**\n     * @remarks\n     * As the order of maps is undefined, it is also undefined which keys are\n     * kept when duplicate values are encountered.\n     */\n    distinct() {\n        let seen = Map.empty();\n        // We optimize for the case where there are more distinct values than there\n        // are duplicate values by starting with the current map and removing\n        // duplicates as we find them.\n        let map = this;\n        for (const [key, value] of map) {\n            if (seen.has(value)) {\n                map = map.delete(key);\n            }\n            else {\n                seen = seen.set(value, value);\n            }\n        }\n        return map;\n    }\n    get(key) {\n        return this._root.get(key, hash(key), 0);\n    }\n    has(key) {\n        return this.get(key).isSome();\n    }\n    set(key, value) {\n        const { result: root, status } = this._root.set(key, value, hash(key), 0);\n        if (status === \"unchanged\") {\n            return this;\n        }\n        return new Map(root, this._size + (status === \"updated\" ? 0 : 1));\n    }\n    delete(key) {\n        const { result: root, status } = this._root.delete(key, hash(key), 0);\n        if (status === \"unchanged\") {\n            return this;\n        }\n        return new Map(root, this._size - 1);\n    }\n    concat(iterable) {\n        return alfa_iterable_1.Iterable.reduce(iterable, (map, [key, value]) => map.set(key, value), this);\n    }\n    subtract(iterable) {\n        return alfa_iterable_1.Iterable.reduce(iterable, (map, [key]) => map.delete(key), this);\n    }\n    intersect(iterable) {\n        return Map.fromIterable(alfa_iterable_1.Iterable.filter(iterable, ([key]) => this.has(key)));\n    }\n    tee(callback, ...args) {\n        callback(this, ...args);\n        return this;\n    }\n    equals(value) {\n        return (value instanceof Map &&\n            value._size === this._size &&\n            value._root.equals(this._root));\n    }\n    hash(hash) {\n        for (const [key, value] of this) {\n            hash.writeUnknown(key).writeUnknown(value);\n        }\n        hash.writeUint32(this._size);\n    }\n    keys() {\n        return alfa_iterable_1.Iterable.map(this._root, (entry) => entry[0]);\n    }\n    values() {\n        return alfa_iterable_1.Iterable.map(this._root, (entry) => entry[1]);\n    }\n    *iterator() {\n        yield* this._root;\n    }\n    [Symbol.iterator]() {\n        return this.iterator();\n    }\n    toArray() {\n        return [...this];\n    }\n    toJSON() {\n        return this.toArray().map(([key, value]) => [\n            alfa_json_1.Serializable.toJSON(key),\n            alfa_json_1.Serializable.toJSON(value),\n        ]);\n    }\n    toString() {\n        const entries = this.toArray()\n            .map(([key, value]) => `${key} => ${value}`)\n            .join(\", \");\n        return `Map {${entries === \"\" ? \"\" : ` ${entries} `}}`;\n    }\n}\nexports.Map = Map;\nMap._empty = new Map(node_1.Empty, 0);\n/**\n * @public\n */\n(function (Map) {\n    function isMap(value) {\n        return value instanceof Map;\n    }\n    Map.isMap = isMap;\n    function from(iterable) {\n        if (isMap(iterable)) {\n            return iterable;\n        }\n        if (alfa_array_1.Array.isArray(iterable)) {\n            return fromArray(iterable);\n        }\n        return fromIterable(iterable);\n    }\n    Map.from = from;\n    function fromArray(array) {\n        return alfa_array_1.Array.reduce(array, (map, [key, value]) => map.set(key, value), Map.empty());\n    }\n    Map.fromArray = fromArray;\n    function fromIterable(iterable) {\n        return alfa_iterable_1.Iterable.reduce(iterable, (map, [key, value]) => map.set(key, value), Map.empty());\n    }\n    Map.fromIterable = fromIterable;\n})(Map || (exports.Map = Map = {}));\nfunction hash(key) {\n    return alfa_fnv_1.FNV.empty().writeUnknown(key).finish();\n}\n//# sourceMappingURL=map.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-map/src/map.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-map/src/node.js":
/*!********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-map/src/node.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Sparse = exports.Collision = exports.Leaf = exports.Empty = exports.Node = void 0;\nconst alfa_bits_1 = __webpack_require__(/*! @siteimprove/alfa-bits */ \"./node_modules/@siteimprove/alfa-bits/src/index.js\");\nconst alfa_equatable_1 = __webpack_require__(/*! @siteimprove/alfa-equatable */ \"./node_modules/@siteimprove/alfa-equatable/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst status_1 = __webpack_require__(/*! ./status */ \"./node_modules/@siteimprove/alfa-map/src/status.js\");\nconst { bit, take, skip, test, set, clear, popCount } = alfa_bits_1.Bits;\n/**\n * @internal\n */\nvar Node;\n(function (Node) {\n    Node.Bits = 5;\n    function fragment(hash, shift) {\n        return take(skip(hash, shift), Node.Bits);\n    }\n    Node.fragment = fragment;\n    function index(fragment, mask) {\n        return popCount(take(mask, fragment));\n    }\n    Node.index = index;\n})(Node || (exports.Node = Node = {}));\n/**\n * @internal\n */\nexports.Empty = new (class Empty {\n    isEmpty() {\n        return true;\n    }\n    isLeaf() {\n        return false;\n    }\n    get() {\n        return alfa_option_1.None;\n    }\n    set(key, value, hash) {\n        return status_1.Status.created(Leaf.of(hash, key, value));\n    }\n    delete() {\n        return status_1.Status.unchanged(this);\n    }\n    map() {\n        return this;\n    }\n    equals(value) {\n        return value instanceof Empty;\n    }\n    *[Symbol.iterator]() { }\n})();\n/**\n * @internal\n */\nclass Leaf {\n    static of(hash, key, value) {\n        return new Leaf(hash, key, value);\n    }\n    constructor(hash, key, value) {\n        this._hash = hash;\n        this._key = key;\n        this._value = value;\n    }\n    get key() {\n        return this._key;\n    }\n    get value() {\n        return this._value;\n    }\n    isEmpty() {\n        return false;\n    }\n    isLeaf() {\n        return true;\n    }\n    get(key, hash, shift) {\n        return hash === this._hash && alfa_equatable_1.Equatable.equals(key, this._key)\n            ? alfa_option_1.Option.of(this._value)\n            : alfa_option_1.None;\n    }\n    set(key, value, hash, shift) {\n        if (hash === this._hash) {\n            if (alfa_equatable_1.Equatable.equals(key, this._key)) {\n                if (alfa_equatable_1.Equatable.equals(value, this._value)) {\n                    return status_1.Status.unchanged(this);\n                }\n                return status_1.Status.updated(Leaf.of(hash, key, value));\n            }\n            return status_1.Status.created(Collision.of(hash, [this, Leaf.of(hash, key, value)]));\n        }\n        const fragment = Node.fragment(this._hash, shift);\n        return Sparse.of(bit(fragment), [this]).set(key, value, hash, shift);\n    }\n    delete(key, hash) {\n        return hash === this._hash && alfa_equatable_1.Equatable.equals(key, this._key)\n            ? status_1.Status.deleted(exports.Empty)\n            : status_1.Status.unchanged(this);\n    }\n    map(mapper) {\n        return Leaf.of(this._hash, this._key, mapper(this._value, this._key));\n    }\n    equals(value) {\n        return (value instanceof Leaf &&\n            value._hash === this._hash &&\n            alfa_equatable_1.Equatable.equals(value._key, this._key) &&\n            alfa_equatable_1.Equatable.equals(value._value, this._value));\n    }\n    *[Symbol.iterator]() {\n        yield [this._key, this._value];\n    }\n}\nexports.Leaf = Leaf;\n/**\n * @internal\n */\nclass Collision {\n    static of(hash, nodes) {\n        return new Collision(hash, nodes);\n    }\n    constructor(hash, nodes) {\n        this._hash = hash;\n        this._nodes = nodes;\n    }\n    isEmpty() {\n        return false;\n    }\n    isLeaf() {\n        return false;\n    }\n    get(key, hash, shift) {\n        if (hash === this._hash) {\n            for (const node of this._nodes) {\n                const value = node.get(key, hash, shift);\n                if (value.isSome()) {\n                    return value;\n                }\n            }\n        }\n        return alfa_option_1.None;\n    }\n    set(key, value, hash, shift) {\n        if (hash === this._hash) {\n            for (let i = 0, n = this._nodes.length; i < n; i++) {\n                const node = this._nodes[i];\n                if (alfa_equatable_1.Equatable.equals(key, node.key)) {\n                    if (alfa_equatable_1.Equatable.equals(value, node.value)) {\n                        return status_1.Status.unchanged(this);\n                    }\n                    return status_1.Status.updated(Collision.of(this._hash, replace(this._nodes, i, Leaf.of(hash, key, value))));\n                }\n            }\n            return status_1.Status.created(Collision.of(this._hash, this._nodes.concat(Leaf.of(hash, key, value))));\n        }\n        const fragment = Node.fragment(this._hash, shift);\n        return Sparse.of(bit(fragment), [this]).set(key, value, hash, shift);\n    }\n    delete(key, hash) {\n        if (hash === this._hash) {\n            for (let i = 0, n = this._nodes.length; i < n; i++) {\n                const node = this._nodes[i];\n                if (alfa_equatable_1.Equatable.equals(key, node.key)) {\n                    const nodes = remove(this._nodes, i);\n                    if (nodes.length === 1) {\n                        // We just deleted the penultimate Leaf of the Collision, so we can\n                        // remove the Collision and only keep the remaining Leaf.\n                        return status_1.Status.deleted(nodes[0]);\n                    }\n                    return status_1.Status.deleted(Collision.of(this._hash, nodes));\n                }\n            }\n        }\n        return status_1.Status.unchanged(this);\n    }\n    map(mapper) {\n        return Collision.of(this._hash, this._nodes.map((node) => node.map(mapper)));\n    }\n    equals(value) {\n        return (value instanceof Collision &&\n            value._hash === this._hash &&\n            value._nodes.length === this._nodes.length &&\n            value._nodes.every((node, i) => node.equals(this._nodes[i])));\n    }\n    *[Symbol.iterator]() {\n        for (const node of this._nodes) {\n            yield* node;\n        }\n    }\n}\nexports.Collision = Collision;\n/**\n * @internal\n */\nclass Sparse {\n    static of(mask, nodes) {\n        return new Sparse(mask, nodes);\n    }\n    constructor(mask, nodes) {\n        this._mask = mask;\n        this._nodes = nodes;\n    }\n    isEmpty() {\n        return false;\n    }\n    isLeaf() {\n        return false;\n    }\n    get(key, hash, shift) {\n        const fragment = Node.fragment(hash, shift);\n        if (test(this._mask, fragment)) {\n            const index = Node.index(fragment, this._mask);\n            return this._nodes[index].get(key, hash, shift + Node.Bits);\n        }\n        return alfa_option_1.None;\n    }\n    set(key, value, hash, shift) {\n        const fragment = Node.fragment(hash, shift);\n        const index = Node.index(fragment, this._mask);\n        if (test(this._mask, fragment)) {\n            const { result: node, status } = this._nodes[index].set(key, value, hash, shift + Node.Bits);\n            if (status === \"unchanged\") {\n                return status_1.Status.unchanged(this);\n            }\n            const sparse = Sparse.of(this._mask, replace(this._nodes, index, node));\n            switch (status) {\n                case \"created\":\n                    return status_1.Status.created(sparse);\n                case \"updated\":\n                default:\n                    return status_1.Status.updated(sparse);\n            }\n        }\n        return status_1.Status.created(Sparse.of(set(this._mask, fragment), insert(this._nodes, index, Leaf.of(hash, key, value))));\n    }\n    delete(key, hash, shift) {\n        const fragment = Node.fragment(hash, shift);\n        if (test(this._mask, fragment)) {\n            const index = Node.index(fragment, this._mask);\n            const { result: node, status } = this._nodes[index].delete(key, hash, shift + Node.Bits);\n            if (status === \"unchanged\") {\n                return status_1.Status.unchanged(this);\n            }\n            if (node.isEmpty()) {\n                const nodes = remove(this._nodes, index);\n                if (nodes.length === 1) {\n                    // We deleted the penultimate child of the Sparse, we may be able to\n                    // simplify the tree.\n                    if (nodes[0].isLeaf() || nodes[0] instanceof Collision) {\n                        // The last child is leaf-like, hence hashes will be fully matched\n                        // against its key(s) and we can remove the current Sparse\n                        return status_1.Status.deleted(nodes[0]);\n                    }\n                    // Otherwise, the last child is a Sparse. We can't simply collapse the\n                    // tree by removing the current Sparse, since it will cause the child\n                    // mask to be tested with the wrong shift (its depth in the tree would\n                    // be different).\n                    // We could do some further optimisations (e.g., if the child's\n                    // children are all leaf-like, we could instead delete the lone child\n                    // and connect directly to the grandchildren). This is, however,\n                    // getting hairy to make all cases working fine, and we assume this\n                    // kind of situation is not too frequent. So we pay the price of\n                    // keeping a non-branching Sparse until we need to optimise that.\n                }\n                return status_1.Status.deleted(Sparse.of(clear(this._mask, fragment), nodes));\n            }\n            return status_1.Status.deleted(Sparse.of(this._mask, replace(this._nodes, index, node)));\n        }\n        return status_1.Status.unchanged(this);\n    }\n    map(mapper) {\n        return Sparse.of(this._mask, this._nodes.map((node) => node.map(mapper)));\n    }\n    equals(value) {\n        return (value instanceof Sparse &&\n            value._mask === this._mask &&\n            value._nodes.length === this._nodes.length &&\n            value._nodes.every((node, i) => node.equals(this._nodes[i])));\n    }\n    *[Symbol.iterator]() {\n        for (const node of this._nodes) {\n            yield* node;\n        }\n    }\n}\nexports.Sparse = Sparse;\nfunction insert(array, index, value) {\n    const result = new Array(array.length + 1);\n    result[index] = value;\n    for (let i = 0, n = index; i < n; i++) {\n        result[i] = array[i];\n    }\n    for (let i = index, n = array.length; i < n; i++) {\n        result[i + 1] = array[i];\n    }\n    return result;\n}\nfunction remove(array, index) {\n    const result = new Array(array.length - 1);\n    for (let i = 0, n = index; i < n; i++) {\n        result[i] = array[i];\n    }\n    for (let i = index, n = result.length; i < n; i++) {\n        result[i] = array[i + 1];\n    }\n    return result;\n}\nfunction replace(array, index, value) {\n    const result = array.slice(0);\n    result[index] = value;\n    return result;\n}\n//# sourceMappingURL=node.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-map/src/node.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-map/src/status.js":
/*!**********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-map/src/status.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Status = void 0;\n/**\n * @internal\n */\nvar Status;\n(function (Status_1) {\n    class Status {\n        constructor(result) {\n            this._result = result;\n        }\n        get result() {\n            return this._result;\n        }\n    }\n    class Created extends Status {\n        static of(result) {\n            return new Created(result);\n        }\n        constructor(result) {\n            super(result);\n        }\n        get status() {\n            return \"created\";\n        }\n    }\n    Status_1.Created = Created;\n    Status_1.created = Created.of;\n    class Updated extends Status {\n        static of(result) {\n            return new Updated(result);\n        }\n        constructor(result) {\n            super(result);\n        }\n        get status() {\n            return \"updated\";\n        }\n    }\n    Status_1.Updated = Updated;\n    Status_1.updated = Updated.of;\n    class Deleted extends Status {\n        static of(result) {\n            return new Deleted(result);\n        }\n        constructor(result) {\n            super(result);\n        }\n        get status() {\n            return \"deleted\";\n        }\n    }\n    Status_1.Deleted = Deleted;\n    Status_1.deleted = Deleted.of;\n    class Unchanged extends Status {\n        static of(result) {\n            return new Unchanged(result);\n        }\n        constructor(result) {\n            super(result);\n        }\n        get status() {\n            return \"unchanged\";\n        }\n    }\n    Status_1.Unchanged = Unchanged;\n    Status_1.unchanged = Unchanged.of;\n})(Status || (exports.Status = Status = {}));\n//# sourceMappingURL=status.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-map/src/status.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-math/src/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-math/src/index.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./matrix */ \"./node_modules/@siteimprove/alfa-math/src/matrix.js\"), exports);\n__exportStar(__webpack_require__(/*! ./real */ \"./node_modules/@siteimprove/alfa-math/src/real.js\"), exports);\n__exportStar(__webpack_require__(/*! ./vector */ \"./node_modules/@siteimprove/alfa-math/src/vector.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-math/src/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-math/src/matrix.js":
/*!***********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-math/src/matrix.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Matrix = void 0;\nconst real_1 = __webpack_require__(/*! ./real */ \"./node_modules/@siteimprove/alfa-math/src/real.js\");\n/**\n * @public\n */\nvar Matrix;\n(function (Matrix) {\n    function isMatrix(value) {\n        return (Array.isArray(value) &&\n            value.every((r) => Array.isArray(r) && r.every((v) => typeof v === \"number\")));\n    }\n    Matrix.isMatrix = isMatrix;\n    function isSquare(m) {\n        return rows(m) === columns(m);\n    }\n    Matrix.isSquare = isSquare;\n    function clone(m) {\n        return m.map((r) => r.slice(0));\n    }\n    Matrix.clone = clone;\n    function equals(m, n, e) {\n        return (m.length === n.length &&\n            m.every((r, i) => r.length === n[i].length &&\n                r.every((v, j) => real_1.Real.equals(v, n[i][j], e))));\n    }\n    Matrix.equals = equals;\n    function identity(n) {\n        return new Array(n).fill([]).map((_, i) => {\n            const r = new Array(n).fill(0);\n            r[i] = 1;\n            return r;\n        });\n    }\n    Matrix.identity = identity;\n    function size(m) {\n        return [rows(m), columns(m)];\n    }\n    Matrix.size = size;\n    function rows(m) {\n        return m.length;\n    }\n    Matrix.rows = rows;\n    function columns(m) {\n        return m.length === 0 ? 0 : m[0].length;\n    }\n    Matrix.columns = columns;\n    function row(m, i) {\n        return m[i];\n    }\n    Matrix.row = row;\n    function column(m, i) {\n        return m.map((r) => r[i]);\n    }\n    Matrix.column = column;\n    function add(m, n) {\n        return m.map((r, i) => r.map((v, j) => v + n?.[i]?.[j]));\n    }\n    Matrix.add = add;\n    function subtract(m, n) {\n        return m.map((r, i) => r.map((v, j) => v - n?.[i]?.[j]));\n    }\n    Matrix.subtract = subtract;\n    /**\n     * {@link https://en.wikipedia.org/wiki/Matrix_multiplication}\n     */\n    function multiply(m, n) {\n        return typeof n === \"number\"\n            ? m.map((r) => r.map((v) => v * n))\n            : m.map((r, i) => n[0].map((_, j) => r.reduce((s, _, k) => s + m[i][k] * n?.[k]?.[j], 0)));\n    }\n    Matrix.multiply = multiply;\n    /**\n     * Compute the transpose of a matrix.\n     *\n     * {@link https://en.wikipedia.org/wiki/Transpose}\n     */\n    function transpose(m) {\n        return m.length === 0 ? m : m[0].map((_, i) => m.map((row) => row[i]));\n    }\n    Matrix.transpose = transpose;\n    /**\n     * Compute the determinant of a non-empty, square matrix.\n     *\n     * {@link https://en.wikipedia.org/wiki/Determinant}\n     * {@link https://en.wikipedia.org/wiki/Laplace_expansion}\n     *\n     * @remarks\n     * This function uses Laplace expansion for computing the determinant which\n     * has a time complexity of O(n!) and is therefore not practical for large\n     * matrices.\n     */\n    function determinant(m) {\n        switch (m.length) {\n            // The determinant of a 1x1 matrix is the single value of the matrix.\n            case 1:\n                return m[0][0];\n            // The determinant of a 2x2 matrix is fairly short to write out and so\n            // this is done as an optimization.\n            case 2:\n                return m[0]?.[0] * m[1]?.[1] - m[0]?.[1] * m[1]?.[0];\n            default:\n                return m.reduce((d, _, i) => d + m[0]?.[i] * cofactor(m, 0, i), 0);\n        }\n    }\n    Matrix.determinant = determinant;\n    /**\n     * Compute the inverse of an invertible matrix.\n     *\n     * {@link https://en.wikipedia.org/wiki/Invertible_matrix}\n     * {@link https://en.wikipedia.org/wiki/Cramers_rule}\n     *\n     * @remarks\n     * This function uses Cramer's rule for computing the inverse which has a time\n     * complexity of O(n!) and is therefore not practical for large matrices.\n     */\n    function inverse(m) {\n        return multiply(adjugate(m), 1 / determinant(m));\n    }\n    Matrix.inverse = inverse;\n    /**\n     * Compute the (i, j) cofactor of a non-empty, square matrix.\n     *\n     * {@link https://en.wikipedia.org/wiki/Minor_(linear_algebra)}\n     * @internal\n     */\n    function cofactor(m, i, j) {\n        return (-1) ** (i + j) * minor(m, i, j);\n    }\n    /**\n     * Compute the (i, j) minor of a non-empty, square matrix.\n     *\n     * {@link https://en.wikipedia.org/wiki/Minor_(linear_algebra)}\n     * @internal\n     */\n    function minor(m, i, j) {\n        return determinant(m\n            // Remove the i-th row\n            .filter((_, k) => k !== i)\n            .map((r) => r\n            // Remove the j-th column\n            .filter((_, l) => l !== j)));\n    }\n    /**\n     * Compute the adjugate of a non-empty, square matrix.\n     *\n     * {@link https://en.wikipedia.org/wiki/Adjugate_matrix}\n     * @internal\n     */\n    function adjugate(m) {\n        return transpose(m.map((r, i) => r.map((_, j) => cofactor(m, i, j))));\n    }\n})(Matrix || (exports.Matrix = Matrix = {}));\n//# sourceMappingURL=matrix.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-math/src/matrix.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-math/src/real.js":
/*!*********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-math/src/real.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Real = void 0;\nconst { abs, min, max } = Math;\n/**\n * {@link https://en.wikipedia.org/wiki/Real_number}\n *\n * @public\n */\nvar Real;\n(function (Real) {\n    function isReal(value) {\n        return typeof value === \"number\" && Number.isFinite(value);\n    }\n    Real.isReal = isReal;\n    function add(p, q) {\n        return p + q;\n    }\n    Real.add = add;\n    function subtract(p, q) {\n        return p - q;\n    }\n    Real.subtract = subtract;\n    function multiply(p, q) {\n        return p * q;\n    }\n    Real.multiply = multiply;\n    function divide(p, d) {\n        return p / d;\n    }\n    Real.divide = divide;\n    /**\n     * Compute the modulus of a division of two reals.\n     *\n     * {@link https://en.wikipedia.org/wiki/Modulo_operation}\n     *\n     * @remarks\n     * The modulo operation is different from the remainder operation supported\n     * natively in JavaScript through the % operator.\n     */\n    function modulo(p, d) {\n        return ((p % d) + d) % d;\n    }\n    Real.modulo = modulo;\n    /**\n     * Clamp a real between a lower and an upper value.\n     */\n    function clamp(p, l, u) {\n        return max(l, min(p, u));\n    }\n    Real.clamp = clamp;\n    /**\n     * Round a real to a given number of decimals.\n     */\n    function round(p, n = 0) {\n        return n === 0 ? Math.round(p) : Math.round(p * 10 ** n) / 10 ** n;\n    }\n    Real.round = round;\n    /**\n     * Check if two reals are equal, accounting for floating-point precision\n     * errors according to a given epsilon.\n     */\n    function equals(a, b, e = Number.EPSILON) {\n        if (a === b) {\n            return true;\n        }\n        const diff = abs(a - b);\n        if (a === 0 || b === 0) {\n            return diff < e;\n        }\n        return diff / min(abs(b) + abs(a), Number.MAX_VALUE) < e;\n    }\n    Real.equals = equals;\n})(Real || (exports.Real = Real = {}));\n//# sourceMappingURL=real.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-math/src/real.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-math/src/vector.js":
/*!***********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-math/src/vector.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Vector = void 0;\nconst real_1 = __webpack_require__(/*! ./real */ \"./node_modules/@siteimprove/alfa-math/src/real.js\");\nconst { sqrt } = Math;\n/**\n * @public\n */\nvar Vector;\n(function (Vector) {\n    function isVector(value) {\n        return Array.isArray(value) && value.every((n) => typeof n === \"number\");\n    }\n    Vector.isVector = isVector;\n    function clone(v) {\n        return v.slice(0);\n    }\n    Vector.clone = clone;\n    function equals(v, u, e) {\n        return v.length === u.length && v.every((n, i) => real_1.Real.equals(n, u[i], e));\n    }\n    Vector.equals = equals;\n    function size(v) {\n        return v.length;\n    }\n    Vector.size = size;\n    function add(v, u) {\n        return v.map((n, i) => n + u?.[i]);\n    }\n    Vector.add = add;\n    function subtract(v, u) {\n        return v.map((n, i) => n - u?.[i]);\n    }\n    Vector.subtract = subtract;\n    function multiply(v, s) {\n        return v.map((n) => n * s);\n    }\n    Vector.multiply = multiply;\n    function divide(v, d) {\n        return v.map((n) => n / d);\n    }\n    Vector.divide = divide;\n    /**\n     * Compute the dot product of two non-empty, equal length vectors.\n     *\n     * {@link https://en.wikipedia.org/wiki/Dot_product}\n     */\n    function dot(v, u) {\n        return v.reduce((s, n, i) => s + n * u?.[i], 0);\n    }\n    Vector.dot = dot;\n    /**\n     * Compute the cross product of two 3-dimensional vectors.\n     *\n     * {@link https://en.wikipedia.org/wiki/Cross_product}\n     */\n    function cross(v, u) {\n        const [vx, vy, vz] = v;\n        const [ux, uy, uz] = u;\n        return [vy * uz - vz * uy, vz * ux - vx * uz, vx * uy - vy * ux];\n    }\n    Vector.cross = cross;\n    /**\n     * Compute the norm of a vector.\n     *\n     * {@link https://en.wikipedia.org/wiki/Norm_(mathematics)}\n     */\n    function norm(v) {\n        return sqrt(v.reduce((s, n) => s + n ** 2, 0));\n    }\n    Vector.norm = norm;\n    /**\n     * Compute a unit vector corresponding to a vector.\n     *\n     * {@link https://en.wikipedia.org/wiki/Unit_vector}\n     */\n    function normalize(v) {\n        return divide(v, norm(v));\n    }\n    Vector.normalize = normalize;\n})(Vector || (exports.Vector = Vector = {}));\n//# sourceMappingURL=vector.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-math/src/vector.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-option/src/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-option/src/index.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./maybe */ \"./node_modules/@siteimprove/alfa-option/src/maybe.js\"), exports);\n__exportStar(__webpack_require__(/*! ./none */ \"./node_modules/@siteimprove/alfa-option/src/none.js\"), exports);\n__exportStar(__webpack_require__(/*! ./option */ \"./node_modules/@siteimprove/alfa-option/src/option.js\"), exports);\n__exportStar(__webpack_require__(/*! ./some */ \"./node_modules/@siteimprove/alfa-option/src/some.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-option/src/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-option/src/maybe.js":
/*!************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-option/src/maybe.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Maybe = void 0;\nconst option_1 = __webpack_require__(/*! ./option */ \"./node_modules/@siteimprove/alfa-option/src/option.js\");\n/**\n * @internal\n */\nvar Maybe;\n(function (Maybe) {\n    function toOption(maybe) {\n        return option_1.Option.isOption(maybe) ? maybe : option_1.Option.of(maybe);\n    }\n    Maybe.toOption = toOption;\n})(Maybe || (exports.Maybe = Maybe = {}));\n//# sourceMappingURL=maybe.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-option/src/maybe.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-option/src/none.js":
/*!***********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-option/src/none.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.None = void 0;\nconst alfa_comparable_1 = __webpack_require__(/*! @siteimprove/alfa-comparable */ \"./node_modules/@siteimprove/alfa-comparable/src/index.js\");\nconst { compareComparable } = alfa_comparable_1.Comparable;\n/**\n * @public\n */\nexports.None = new (class None {\n    isSome() {\n        return false;\n    }\n    isNone() {\n        return true;\n    }\n    map() {\n        return this;\n    }\n    forEach() {\n        return;\n    }\n    apply() {\n        return this;\n    }\n    flatMap() {\n        return this;\n    }\n    flatten() {\n        return this;\n    }\n    reduce(reducer, accumulator) {\n        return accumulator;\n    }\n    filter() {\n        return this;\n    }\n    reject() {\n        return this;\n    }\n    includes() {\n        return false;\n    }\n    some() {\n        return false;\n    }\n    none() {\n        return true;\n    }\n    every() {\n        return true;\n    }\n    and() {\n        return this;\n    }\n    andThen() {\n        return this;\n    }\n    or(option) {\n        return option;\n    }\n    orElse(option) {\n        return option();\n    }\n    /**\n     * @internal\n     */\n    getUnsafe(message = \"Attempted to .getUnsafe() from None\") {\n        throw new Error(message);\n    }\n    getOr(value) {\n        return value;\n    }\n    getOrElse(value) {\n        return value();\n    }\n    tee() {\n        return this;\n    }\n    compare(option) {\n        return this.compareWith(option, compareComparable);\n    }\n    compareWith(option) {\n        return option.isNone() ? alfa_comparable_1.Comparison.Equal : alfa_comparable_1.Comparison.Less;\n    }\n    equals(value) {\n        return value instanceof None;\n    }\n    hash(hash) {\n        hash.writeBoolean(false);\n    }\n    *[Symbol.iterator]() { }\n    toArray() {\n        return [];\n    }\n    toJSON() {\n        return {\n            type: \"none\",\n        };\n    }\n    toString() {\n        return \"None\";\n    }\n})();\n//# sourceMappingURL=none.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-option/src/none.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-option/src/option.js":
/*!*************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-option/src/option.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Option = void 0;\nconst none_1 = __webpack_require__(/*! ./none */ \"./node_modules/@siteimprove/alfa-option/src/none.js\");\nconst some_1 = __webpack_require__(/*! ./some */ \"./node_modules/@siteimprove/alfa-option/src/some.js\");\n/**\n * @public\n */\nvar Option;\n(function (Option) {\n    function isOption(value) {\n        return isSome(value) || isNone(value);\n    }\n    Option.isOption = isOption;\n    function isSome(value) {\n        return some_1.Some.isSome(value);\n    }\n    Option.isSome = isSome;\n    function isNone(value) {\n        return value === none_1.None;\n    }\n    Option.isNone = isNone;\n    function of(value) {\n        return some_1.Some.of(value);\n    }\n    Option.of = of;\n    function empty() {\n        return none_1.None;\n    }\n    Option.empty = empty;\n    function from(value) {\n        return value === null || value === undefined ? none_1.None : some_1.Some.of(value);\n    }\n    Option.from = from;\n})(Option || (exports.Option = Option = {}));\n//# sourceMappingURL=option.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-option/src/option.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-option/src/some.js":
/*!***********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-option/src/some.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Some = void 0;\nconst alfa_comparable_1 = __webpack_require__(/*! @siteimprove/alfa-comparable */ \"./node_modules/@siteimprove/alfa-comparable/src/index.js\");\nconst alfa_equatable_1 = __webpack_require__(/*! @siteimprove/alfa-equatable */ \"./node_modules/@siteimprove/alfa-equatable/src/index.js\");\nconst alfa_json_1 = __webpack_require__(/*! @siteimprove/alfa-json */ \"./node_modules/@siteimprove/alfa-json/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst none_1 = __webpack_require__(/*! ./none */ \"./node_modules/@siteimprove/alfa-option/src/none.js\");\nconst { not, test } = alfa_predicate_1.Predicate;\nconst { compareComparable } = alfa_comparable_1.Comparable;\n/**\n * @public\n */\nclass Some {\n    static of(value) {\n        return new Some(value);\n    }\n    constructor(value) {\n        this._value = value;\n    }\n    isSome() {\n        return true;\n    }\n    isNone() {\n        return false;\n    }\n    map(mapper) {\n        return new Some(mapper(this._value));\n    }\n    forEach(mapper) {\n        mapper(this._value);\n    }\n    apply(mapper) {\n        return mapper.map((mapper) => mapper(this._value));\n    }\n    flatMap(mapper) {\n        return mapper(this._value);\n    }\n    flatten() {\n        return this._value;\n    }\n    reduce(reducer, accumulator) {\n        return reducer(accumulator, this._value);\n    }\n    filter(predicate) {\n        return test(predicate, this._value) ? this : none_1.None;\n    }\n    reject(predicate) {\n        return this.filter(not(predicate));\n    }\n    includes(value) {\n        return alfa_equatable_1.Equatable.equals(value, this._value);\n    }\n    some(predicate) {\n        return test(predicate, this._value);\n    }\n    none(predicate) {\n        return test(not(predicate), this._value);\n    }\n    every(predicate) {\n        return test(predicate, this._value);\n    }\n    and(option) {\n        return option;\n    }\n    andThen(option) {\n        return option(this._value);\n    }\n    or() {\n        return this;\n    }\n    orElse() {\n        return this;\n    }\n    get() {\n        return this._value;\n    }\n    /**\n     * @internal\n     */\n    getUnsafe() {\n        return this._value;\n    }\n    getOr() {\n        return this._value;\n    }\n    getOrElse() {\n        return this._value;\n    }\n    tee(callback) {\n        callback(this._value);\n        return this;\n    }\n    compare(option) {\n        return this.compareWith(option, compareComparable);\n    }\n    compareWith(option, comparer) {\n        return option.isSome()\n            ? comparer(this._value, option._value)\n            : alfa_comparable_1.Comparison.Greater;\n    }\n    equals(value) {\n        return value instanceof Some && alfa_equatable_1.Equatable.equals(value._value, this._value);\n    }\n    hash(hash) {\n        hash.writeBoolean(true).writeUnknown(this._value);\n    }\n    *[Symbol.iterator]() {\n        yield this._value;\n    }\n    toArray() {\n        return [this._value];\n    }\n    toJSON() {\n        return {\n            type: \"some\",\n            value: alfa_json_1.Serializable.toJSON(this._value),\n        };\n    }\n    toString() {\n        return `Some { ${this._value} }`;\n    }\n}\nexports.Some = Some;\n/**\n * @public\n */\n(function (Some) {\n    function isSome(value) {\n        return value instanceof Some;\n    }\n    Some.isSome = isSome;\n})(Some || (exports.Some = Some = {}));\n//# sourceMappingURL=some.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-option/src/some.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-parser/src/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-parser/src/index.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./parser */ \"./node_modules/@siteimprove/alfa-parser/src/parser.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-parser/src/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-parser/src/parser.js":
/*!*************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-parser/src/parser.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Parser = void 0;\nconst alfa_array_1 = __webpack_require__(/*! @siteimprove/alfa-array */ \"./node_modules/@siteimprove/alfa-array/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst { not } = alfa_predicate_1.Predicate;\n/**\n * @public\n */\nvar Parser;\n(function (Parser) {\n    function toParser(infallible) {\n        return (input, ...args) => alfa_result_1.Result.of(infallible(input, ...args));\n    }\n    Parser.toParser = toParser;\n    function map(parser, mapper) {\n        return (input, ...args) => parser(input, ...args).map(([remainder, value]) => [\n            remainder,\n            mapper(value),\n        ]);\n    }\n    Parser.map = map;\n    function mapResult(parser, mapper) {\n        return (input, ...args) => parser(input, ...args).flatMap(([remainder, value]) => mapper(value).map((result) => [remainder, result]));\n    }\n    Parser.mapResult = mapResult;\n    function flatMap(parser, mapper) {\n        return (input, ...args) => parser(input, ...args).flatMap(([remainder, value]) => mapper(value)(remainder, ...args));\n    }\n    Parser.flatMap = flatMap;\n    function filter(parser, predicate, ifError) {\n        return mapResult(parser, (value) => predicate(value) ? alfa_result_1.Result.of(value) : alfa_result_1.Err.of(ifError(value)));\n    }\n    Parser.filter = filter;\n    function reject(parser, predicate, ifError) {\n        return filter(parser, not(predicate), ifError);\n    }\n    Parser.reject = reject;\n    function zeroOrMore(parser) {\n        return takeAtLeast(parser, 0);\n    }\n    Parser.zeroOrMore = zeroOrMore;\n    function oneOrMore(parser) {\n        // The result contains at least one token, so this cast is safe\n        return takeAtLeast(parser, 1);\n    }\n    Parser.oneOrMore = oneOrMore;\n    function take(parser, count) {\n        return takeBetween(parser, count, count);\n    }\n    Parser.take = take;\n    function takeBetween(parser, lower, upper) {\n        return (input, ...args) => {\n            const values = [];\n            let value;\n            for (let i = 0; i < upper; i++) {\n                const result = parser(input, ...args);\n                if (result.isOk()) {\n                    [input, value] = result.get();\n                    values.push(value);\n                }\n                else if (result.isErr()) {\n                    if (values.length < lower) {\n                        return result;\n                    }\n                    else {\n                        break;\n                    }\n                }\n            }\n            return alfa_result_1.Result.of([input, values]);\n        };\n    }\n    Parser.takeBetween = takeBetween;\n    function takeAtLeast(parser, lower) {\n        return takeBetween(parser, lower, Infinity);\n    }\n    Parser.takeAtLeast = takeAtLeast;\n    function takeAtMost(parser, upper) {\n        return takeBetween(parser, 0, upper);\n    }\n    Parser.takeAtMost = takeAtMost;\n    function takeUntil(parser, condition) {\n        return (input, ...args) => {\n            const values = [];\n            let value;\n            while (true) {\n                if (condition(input, ...args).isOk()) {\n                    return alfa_result_1.Result.of([input, values]);\n                }\n                const result = parser(input, ...args);\n                if (result.isOk()) {\n                    [input, value] = result.get();\n                    values.push(value);\n                }\n                else if (result.isErr()) {\n                    return result;\n                }\n            }\n        };\n    }\n    Parser.takeUntil = takeUntil;\n    function peek(parser) {\n        return (input, ...args) => parser(input, ...args).map(([, value]) => [input, value]);\n    }\n    Parser.peek = peek;\n    function tee(parser, callback) {\n        return (input, ...args) => parser(input, ...args).tee(([remainder, result]) => {\n            callback(result, remainder, ...args);\n        });\n    }\n    Parser.tee = tee;\n    function teeErr(parser, callback) {\n        return (input, ...args) => parser(input, ...args).teeErr((err) => {\n            callback(err, ...args);\n        });\n    }\n    Parser.teeErr = teeErr;\n    function option(parser) {\n        return (input, ...args) => {\n            const result = parser(input, ...args);\n            if (result.isOk()) {\n                const [input, value] = result.get();\n                return alfa_result_1.Result.of([input, alfa_option_1.Option.of(value)]);\n            }\n            return alfa_result_1.Result.of([input, alfa_option_1.None]);\n        };\n    }\n    Parser.option = option;\n    function either(...parsers) {\n        return (input, ...args) => {\n            let error;\n            for (const parser of parsers) {\n                const result = parser(input, ...args);\n                if (result.isErr()) {\n                    error = result;\n                }\n                else {\n                    return result;\n                }\n            }\n            // Per the function overloads, there will always be at least one parser\n            // specified. It is therefore safe to assert that if we get this far, at\n            // least one parser will have produced an error.\n            return error;\n        };\n    }\n    Parser.either = either;\n    function pair(left, right) {\n        return flatMap(left, (left) => map(right, (right) => [left, right]));\n    }\n    Parser.pair = pair;\n    function left(left, right) {\n        return flatMap(left, (left) => map(right, () => left));\n    }\n    Parser.left = left;\n    function right(left, right) {\n        return flatMap(left, () => map(right, (right) => right));\n    }\n    Parser.right = right;\n    function delimited(left, parser, right = left) {\n        return flatMap(left, () => flatMap(parser, (parser) => map(right, () => parser)));\n    }\n    Parser.delimited = delimited;\n    function separated(left, separator, right = left) {\n        return flatMap(left, (left) => flatMap(separator, () => map(right, (right) => [left, right])));\n    }\n    Parser.separated = separated;\n    /**\n     * Parse a separated list containing at least one item\n     *\n     * @param parser - Parser for the items in the list\n     * @param separator - Parser for the separator between items\n     * @param lower - Minimum number of items to parse, defaults to 1\n     * @param upper - Maximum number of items to parse, defaults to Infinity\n     */\n    function separatedList(parser, separator, lower = 1, upper = Infinity) {\n        return map(pair(parser, takeBetween(right(separator, parser), Math.max(0, lower - 1), Math.min(Infinity, upper - 1))), ([first, rest]) => alfa_array_1.Array.prepend(rest, first));\n    }\n    Parser.separatedList = separatedList;\n    function parseIf(refinement, parser, ifError) {\n        return (input, ...args) => parser(input, ...args).flatMap(([rest, result]) => refinement(result)\n            ? alfa_result_1.Ok.of([rest, result])\n            : alfa_result_1.Err.of(ifError(result)));\n    }\n    Parser.parseIf = parseIf;\n    function end(ifError) {\n        return (input) => {\n            for (const value of input) {\n                return alfa_result_1.Err.of(ifError(value));\n            }\n            return alfa_result_1.Result.of([input, undefined]);\n        };\n    }\n    Parser.end = end;\n    /**\n     * @deprecated Use `end()`\n     */\n    Parser.eof = end;\n})(Parser || (exports.Parser = Parser = {}));\n//# sourceMappingURL=parser.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-parser/src/parser.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-predicate/src/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-predicate/src/index.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/predicate.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-predicate/src/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-predicate/src/predicate.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-predicate/src/predicate.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Predicate = void 0;\nconst alfa_equatable_1 = __webpack_require__(/*! @siteimprove/alfa-equatable */ \"./node_modules/@siteimprove/alfa-equatable/src/index.js\");\n/**\n * @public\n */\nvar Predicate;\n(function (Predicate) {\n    function test(predicate, value, ...args) {\n        return predicate(value, ...args);\n    }\n    Predicate.test = test;\n    function fold(predicate, ifTrue, ifFalse, value, ...args) {\n        return predicate(value, ...args) ? ifTrue(value) : ifFalse(value);\n    }\n    Predicate.fold = fold;\n    function not(predicate) {\n        return (value, ...args) => !predicate(value, ...args);\n    }\n    Predicate.not = not;\n    function and(...predicates) {\n        return (value, ...args) => {\n            for (let i = 0, n = predicates.length; i < n; i++) {\n                if (!predicates[i](value, ...args)) {\n                    return false;\n                }\n            }\n            return true;\n        };\n    }\n    Predicate.and = and;\n    function or(...predicates) {\n        return (value, ...args) => {\n            for (let i = 0, n = predicates.length; i < n; i++) {\n                if (predicates[i](value, ...args)) {\n                    return true;\n                }\n            }\n            return false;\n        };\n    }\n    Predicate.or = or;\n    function xor(...predicates) {\n        return and(or(...predicates), not(and(...predicates)));\n    }\n    Predicate.xor = xor;\n    function nor(...predicates) {\n        return not(or(...predicates));\n    }\n    Predicate.nor = nor;\n    function nand(...predicates) {\n        return not(and(...predicates));\n    }\n    Predicate.nand = nand;\n    function equals(...values) {\n        return (other) => values.some((value) => alfa_equatable_1.Equatable.equals(other, value));\n    }\n    Predicate.equals = equals;\n    function property(property, predicate) {\n        return (value, ...args) => predicate(value[property], ...args);\n    }\n    Predicate.property = property;\n    function tee(predicate, callback) {\n        return (value, ...args) => {\n            const result = predicate(value, ...args);\n            callback(value, result, ...args);\n            return result;\n        };\n    }\n    Predicate.tee = tee;\n})(Predicate || (exports.Predicate = Predicate = {}));\n//# sourceMappingURL=predicate.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-predicate/src/predicate.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-record/src/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-record/src/index.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./record */ \"./node_modules/@siteimprove/alfa-record/src/record.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-record/src/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-record/src/record.js":
/*!*************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-record/src/record.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Record = void 0;\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_json_1 = __webpack_require__(/*! @siteimprove/alfa-json */ \"./node_modules/@siteimprove/alfa-json/src/index.js\");\nconst alfa_list_1 = __webpack_require__(/*! @siteimprove/alfa-list */ \"./node_modules/@siteimprove/alfa-list/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\n/**\n * @public\n */\nclass Record {\n    static of(properties) {\n        const keys = Object.keys(properties ?? {}).sort();\n        return new Record(new Map(alfa_iterable_1.Iterable.map(keys, (key, i) => [key, i])), keys, alfa_list_1.List.from(keys.map((key) => properties[key])));\n    }\n    constructor(indices, keys, values) {\n        this._indices = indices;\n        this._keys = keys;\n        this._values = values;\n    }\n    has(key) {\n        return this._indices.has(key);\n    }\n    get(key) {\n        const i = this._indices.get(key);\n        if (i === undefined) {\n            return alfa_option_1.None;\n        }\n        return this._values.get(i);\n    }\n    set(key, value) {\n        const i = this._indices.get(key);\n        if (i === undefined) {\n            return this;\n        }\n        return new Record(this._indices, this._keys, this._values.set(i, value));\n    }\n    reduce(reducer, accumulator) {\n        return alfa_iterable_1.Iterable.reduce(this, (accumulator, [key, value]) => reducer(accumulator, value, key), accumulator);\n    }\n    some(predicate) {\n        return alfa_iterable_1.Iterable.some(this, ([key, value]) => predicate(value, key));\n    }\n    every(predicate) {\n        return alfa_iterable_1.Iterable.every(this, ([key, value]) => predicate(value, key));\n    }\n    equals(value) {\n        return (value instanceof Record &&\n            value._keys.length === this._keys.length &&\n            value._keys.every((key, i) => key === this._keys[i]) &&\n            value._values.equals(this._values));\n    }\n    *keys() {\n        yield* this._keys;\n    }\n    *values() {\n        yield* this._values;\n    }\n    *entries() {\n        yield* this;\n    }\n    *[Symbol.iterator]() {\n        let i = 0;\n        for (const value of this._values) {\n            yield [this._keys[i++], value];\n        }\n    }\n    toArray() {\n        return [...this];\n    }\n    toJSON() {\n        const json = {};\n        for (const [key, value] of this) {\n            json[key] = alfa_json_1.Serializable.toJSON(value);\n        }\n        return json;\n    }\n    toString() {\n        const entries = this.toArray()\n            .map(([key, value]) => `${key}: ${value}`)\n            .join(\", \");\n        return `Record {${entries === \"\" ? \"\" : ` ${entries} `}}`;\n    }\n}\nexports.Record = Record;\n/**\n * @public\n */\n(function (Record) {\n    function isRecord(value) {\n        return value instanceof Record;\n    }\n    Record.isRecord = isRecord;\n    function from(entries) {\n        const record = {};\n        for (const [key, value] of entries) {\n            record[key] = value;\n        }\n        return Record.of(record);\n    }\n    Record.from = from;\n})(Record || (exports.Record = Record = {}));\n//# sourceMappingURL=record.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-record/src/record.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rectangle/src/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rectangle/src/index.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./rectangle */ \"./node_modules/@siteimprove/alfa-rectangle/src/rectangle.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rectangle/src/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rectangle/src/rectangle.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rectangle/src/rectangle.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Rectangle = void 0;\nconst { max, min } = Math;\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/DOMRect}\n *\n * @remarks\n * The y axis in the coordinate system on the HTML canvas is inverted so that\n * the y coordinates gets bigger further down the page.\n *\n * @public\n */\nclass Rectangle {\n    static of(x, y, width, height) {\n        return new Rectangle(x, y, width, height);\n    }\n    static empty() {\n        return this._empty;\n    }\n    static full() {\n        return this._full;\n    }\n    constructor(x, y, width, height) {\n        this._x = x;\n        this._y = y;\n        this._width = width;\n        this._height = height;\n    }\n    get x() {\n        return this._x;\n    }\n    get y() {\n        return this._y;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get top() {\n        // Infinity - Infinity is NaN, but here we want it to be -Infinity\n        if (this._y === Infinity && this._height === -Infinity) {\n            return -Infinity;\n        }\n        return this._height > 0 ? this._y : this._y + this._height;\n    }\n    get right() {\n        // -Infinity + Infinity is NaN, but here we want it to be Infinity\n        if (this._x === -Infinity && this._width === Infinity) {\n            return Infinity;\n        }\n        return this._width > 0 ? this._x + this._width : this._x;\n    }\n    get bottom() {\n        // -Infinity + Infinity is NaN, but here we want it to be Infinity\n        if (this._y === -Infinity && this._height === Infinity) {\n            return Infinity;\n        }\n        return this._height > 0 ? this._y + this._height : this._y;\n    }\n    get left() {\n        // Infinity - Infinity is NaN, but here we want it to be -Infinity\n        if (this._x === Infinity && this._width === -Infinity) {\n            return -Infinity;\n        }\n        return this._width > 0 ? this._x : this._x + this._width;\n    }\n    get center() {\n        // TODO: How to handle infinite rectangles?\n        return {\n            x: this._x + this._width / 2,\n            y: this._y + this._height / 2,\n        };\n    }\n    get area() {\n        return this._width * this._height;\n    }\n    isEmpty() {\n        return this.equals(Rectangle.empty());\n    }\n    isFull() {\n        return this.equals(Rectangle.full());\n    }\n    contains(other) {\n        if (other.isEmpty() || this.isFull()) {\n            return true;\n        }\n        return (this.left <= other.left &&\n            this.top <= other.top &&\n            other.right <= this.right &&\n            other.bottom <= this.bottom);\n    }\n    intersects(other) {\n        return (other.left <= this.right &&\n            other.top <= this.bottom &&\n            other.right >= this.left &&\n            other.bottom >= this.top);\n    }\n    union(other) {\n        if (this.contains(other)) {\n            return this;\n        }\n        if (other.contains(this)) {\n            return other;\n        }\n        const minLeft = min(this.left, other.left);\n        const minTop = min(this.top, other.top);\n        const maxRight = max(this.right, other.right);\n        const maxBottom = max(this.bottom, other.bottom);\n        return Rectangle.of(minLeft, minTop, maxRight - minLeft, maxBottom - minTop);\n    }\n    intersection(other) {\n        if (!this.intersects(other)) {\n            return Rectangle.empty();\n        }\n        if (this.contains(other)) {\n            return other;\n        }\n        if (other.contains(this)) {\n            return this;\n        }\n        const maxLeft = max(this.left, other.left);\n        const maxTop = max(this.top, other.top);\n        const minRight = min(this.right, other.right);\n        const minBottom = min(this.bottom, other.bottom);\n        return Rectangle.of(maxLeft, maxTop, minRight - maxLeft, minBottom - maxTop);\n    }\n    equals(value) {\n        return (value === this ||\n            (value instanceof Rectangle &&\n                value.top === this.top &&\n                value.left === this.left &&\n                value.bottom === this.bottom &&\n                value.right === this.right));\n    }\n    hash(hash) {\n        hash\n            .writeNumber(this._x)\n            .writeNumber(this._y)\n            .writeNumber(this._width)\n            .writeNumber(this._height);\n    }\n    toJSON() {\n        return {\n            type: \"rectangle\",\n            x: this._x,\n            y: this._y,\n            width: this._width,\n            height: this._height,\n        };\n    }\n}\nexports.Rectangle = Rectangle;\nRectangle._empty = new Rectangle(Infinity, Infinity, 0, 0);\nRectangle._full = new Rectangle(-Infinity, -Infinity, Infinity, Infinity);\n/**\n * @public\n */\n(function (Rectangle) {\n    function from(json) {\n        return Rectangle.of(json.x, json.y, json.width, json.height);\n    }\n    Rectangle.from = from;\n    function isRectangle(value) {\n        return value instanceof Rectangle;\n    }\n    Rectangle.isRectangle = isRectangle;\n    function union(...rectangles) {\n        return rectangles.reduce((previous, current) => previous.union(current), Rectangle.empty());\n    }\n    Rectangle.union = union;\n    function intersection(...rectangles) {\n        return rectangles.reduce((previous, current) => previous.intersection(current), Rectangle.full());\n    }\n    Rectangle.intersection = intersection;\n})(Rectangle || (exports.Rectangle = Rectangle = {}));\n//# sourceMappingURL=rectangle.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rectangle/src/rectangle.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-refinement/src/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-refinement/src/index.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./refinement */ \"./node_modules/@siteimprove/alfa-refinement/src/refinement.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-refinement/src/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-refinement/src/refinement.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-refinement/src/refinement.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Refinement = void 0;\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\n/**\n * @public\n */\nvar Refinement;\n(function (Refinement) {\n    Refinement.test = alfa_predicate_1.Predicate.test;\n    Refinement.fold = alfa_predicate_1.Predicate.fold;\n    Refinement.not = alfa_predicate_1.Predicate.not;\n    Refinement.and = alfa_predicate_1.Predicate.and;\n    Refinement.or = alfa_predicate_1.Predicate.or;\n    Refinement.xor = alfa_predicate_1.Predicate.xor;\n    Refinement.nor = alfa_predicate_1.Predicate.nor;\n    Refinement.nand = alfa_predicate_1.Predicate.nand;\n    Refinement.equals = alfa_predicate_1.Predicate.equals;\n    function isString(value) {\n        return typeof value === \"string\";\n    }\n    Refinement.isString = isString;\n    function isNumber(value) {\n        return typeof value === \"number\";\n    }\n    Refinement.isNumber = isNumber;\n    function isBigInt(value) {\n        return typeof value === \"bigint\";\n    }\n    Refinement.isBigInt = isBigInt;\n    function isBoolean(value) {\n        return typeof value === \"boolean\";\n    }\n    Refinement.isBoolean = isBoolean;\n    function isNull(value) {\n        return value === null;\n    }\n    Refinement.isNull = isNull;\n    function isUndefined(value) {\n        return value === undefined;\n    }\n    Refinement.isUndefined = isUndefined;\n    function isSymbol(value) {\n        return typeof value === \"symbol\";\n    }\n    Refinement.isSymbol = isSymbol;\n    function isFunction(value) {\n        return typeof value === \"function\";\n    }\n    Refinement.isFunction = isFunction;\n    function isObject(value) {\n        return typeof value === \"object\" && value !== null;\n    }\n    Refinement.isObject = isObject;\n    Refinement.isPrimitive = Refinement.or(isString, Refinement.or(isNumber, Refinement.or(isBigInt, Refinement.or(isBoolean, Refinement.or(isNull, Refinement.or(isUndefined, isSymbol))))));\n})(Refinement || (exports.Refinement = Refinement = {}));\n//# sourceMappingURL=refinement.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-refinement/src/refinement.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-result/src/err.js":
/*!**********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-result/src/err.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Err = void 0;\nconst alfa_equatable_1 = __webpack_require__(/*! @siteimprove/alfa-equatable */ \"./node_modules/@siteimprove/alfa-equatable/src/index.js\");\nconst alfa_json_1 = __webpack_require__(/*! @siteimprove/alfa-json */ \"./node_modules/@siteimprove/alfa-json/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst { not, test } = alfa_predicate_1.Predicate;\n/**\n * @public\n */\nclass Err {\n    static of(error) {\n        return new Err(error);\n    }\n    constructor(error) {\n        this._error = error;\n    }\n    isOk() {\n        return false;\n    }\n    isErr() {\n        return true;\n    }\n    map() {\n        return this;\n    }\n    mapErr(mapper) {\n        return new Err(mapper(this._error));\n    }\n    mapOrElse(ok, err) {\n        return err(this._error);\n    }\n    apply() {\n        return this;\n    }\n    flatMap() {\n        return this;\n    }\n    flatten() {\n        return this;\n    }\n    reduce(reducer, accumulator) {\n        return accumulator;\n    }\n    includes() {\n        return false;\n    }\n    includesErr(error) {\n        return alfa_equatable_1.Equatable.equals(this._error, error);\n    }\n    some() {\n        return false;\n    }\n    someErr(predicate) {\n        return test(predicate, this._error);\n    }\n    none() {\n        return true;\n    }\n    noneErr(predicate) {\n        return test(not(predicate), this._error);\n    }\n    every() {\n        return true;\n    }\n    everyErr(predicate) {\n        return test(predicate, this._error);\n    }\n    and() {\n        return this;\n    }\n    andThen() {\n        return this;\n    }\n    or(result) {\n        return result;\n    }\n    orElse(result) {\n        return result();\n    }\n    /**\n     * @internal\n     */\n    getUnsafe(message = \"Attempted to .getUnsafe() from Err\") {\n        throw new Error(message);\n    }\n    /**\n     * @internal\n     */\n    getErrUnsafe() {\n        return this._error;\n    }\n    getErr() {\n        return this._error;\n    }\n    getOr(value) {\n        return value;\n    }\n    getOrElse(value) {\n        return value();\n    }\n    getErrOr() {\n        return this._error;\n    }\n    getErrOrElse() {\n        return this._error;\n    }\n    ok() {\n        return alfa_option_1.None;\n    }\n    err() {\n        return alfa_option_1.Option.of(this._error);\n    }\n    tee() {\n        return this;\n    }\n    teeErr(callback) {\n        callback(this._error);\n        return this;\n    }\n    equals(value) {\n        return value instanceof Err && alfa_equatable_1.Equatable.equals(value._error, this._error);\n    }\n    hash(hash) {\n        hash.writeBoolean(false).writeUnknown(this._error);\n    }\n    *[Symbol.iterator]() { }\n    toJSON() {\n        return {\n            type: \"err\",\n            error: alfa_json_1.Serializable.toJSON(this._error),\n        };\n    }\n    toString() {\n        return `Err { ${this._error} }`;\n    }\n}\nexports.Err = Err;\n/**\n * @public\n */\n(function (Err) {\n    function isErr(value) {\n        return value instanceof Err;\n    }\n    Err.isErr = isErr;\n})(Err || (exports.Err = Err = {}));\n//# sourceMappingURL=err.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-result/src/err.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-result/src/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-result/src/index.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./err */ \"./node_modules/@siteimprove/alfa-result/src/err.js\"), exports);\n__exportStar(__webpack_require__(/*! ./ok */ \"./node_modules/@siteimprove/alfa-result/src/ok.js\"), exports);\n__exportStar(__webpack_require__(/*! ./result */ \"./node_modules/@siteimprove/alfa-result/src/result.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-result/src/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-result/src/ok.js":
/*!*********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-result/src/ok.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Ok = void 0;\nconst alfa_equatable_1 = __webpack_require__(/*! @siteimprove/alfa-equatable */ \"./node_modules/@siteimprove/alfa-equatable/src/index.js\");\nconst alfa_json_1 = __webpack_require__(/*! @siteimprove/alfa-json */ \"./node_modules/@siteimprove/alfa-json/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst { not, test } = alfa_predicate_1.Predicate;\n/**\n * @public\n */\nclass Ok {\n    static of(value) {\n        return new Ok(value);\n    }\n    constructor(value) {\n        this._value = value;\n    }\n    isOk() {\n        return true;\n    }\n    isErr() {\n        return false;\n    }\n    map(mapper) {\n        return new Ok(mapper(this._value));\n    }\n    mapErr() {\n        return this;\n    }\n    mapOrElse(ok) {\n        return ok(this._value);\n    }\n    apply(mapper) {\n        return mapper.map((mapper) => mapper(this._value));\n    }\n    flatMap(mapper) {\n        return mapper(this._value);\n    }\n    flatten() {\n        return this._value;\n    }\n    reduce(reducer, accumulator) {\n        return reducer(accumulator, this._value);\n    }\n    includes(value) {\n        return alfa_equatable_1.Equatable.equals(this._value, value);\n    }\n    includesErr() {\n        return false;\n    }\n    some(predicate) {\n        return test(predicate, this._value);\n    }\n    someErr() {\n        return false;\n    }\n    none(predicate) {\n        return test(not(predicate), this._value);\n    }\n    noneErr() {\n        return true;\n    }\n    every(predicate) {\n        return test(predicate, this._value);\n    }\n    everyErr() {\n        return true;\n    }\n    and(result) {\n        return result;\n    }\n    andThen(result) {\n        return result(this._value);\n    }\n    or() {\n        return this;\n    }\n    orElse() {\n        return this;\n    }\n    get() {\n        return this._value;\n    }\n    /**\n     * @internal\n     */\n    getUnsafe() {\n        return this._value;\n    }\n    /**\n     * @internal\n     */\n    getErrUnsafe(message = \"Attempted to .getErrUnsafe() from Ok\") {\n        throw new Error(message);\n    }\n    getOr() {\n        return this._value;\n    }\n    getOrElse() {\n        return this._value;\n    }\n    getErrOr(error) {\n        return error;\n    }\n    getErrOrElse(error) {\n        return error();\n    }\n    ok() {\n        return alfa_option_1.Option.of(this._value);\n    }\n    err() {\n        return alfa_option_1.None;\n    }\n    tee(callback) {\n        callback(this._value);\n        return this;\n    }\n    teeErr() {\n        return this;\n    }\n    equals(value) {\n        return value instanceof Ok && alfa_equatable_1.Equatable.equals(value._value, this._value);\n    }\n    hash(hash) {\n        hash.writeBoolean(true).writeUnknown(this._value);\n    }\n    *[Symbol.iterator]() {\n        yield this._value;\n    }\n    toJSON() {\n        return {\n            type: \"ok\",\n            value: alfa_json_1.Serializable.toJSON(this._value),\n        };\n    }\n    toString() {\n        return `Ok { ${this._value} }`;\n    }\n}\nexports.Ok = Ok;\n/**\n * @public\n */\n(function (Ok) {\n    function isOk(value) {\n        return value instanceof Ok;\n    }\n    Ok.isOk = isOk;\n})(Ok || (exports.Ok = Ok = {}));\n//# sourceMappingURL=ok.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-result/src/ok.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-result/src/result.js":
/*!*************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-result/src/result.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Result = void 0;\nconst err_1 = __webpack_require__(/*! ./err */ \"./node_modules/@siteimprove/alfa-result/src/err.js\");\nconst ok_1 = __webpack_require__(/*! ./ok */ \"./node_modules/@siteimprove/alfa-result/src/ok.js\");\n/**\n * @public\n */\nvar Result;\n(function (Result) {\n    function isResult(value) {\n        return isOk(value) || isErr(value);\n    }\n    Result.isResult = isResult;\n    function isOk(value) {\n        return ok_1.Ok.isOk(value);\n    }\n    Result.isOk = isOk;\n    function isErr(value) {\n        return err_1.Err.isErr(value);\n    }\n    Result.isErr = isErr;\n    function of(value) {\n        return ok_1.Ok.of(value);\n    }\n    Result.of = of;\n    function from(thunk) {\n        let value;\n        try {\n            value = thunk();\n        }\n        catch (error) {\n            return err_1.Err.of(error);\n        }\n        if (value instanceof Promise) {\n            return value\n                .then((value) => ok_1.Ok.of(value))\n                .catch((error) => err_1.Err.of(error));\n        }\n        return ok_1.Ok.of(value);\n    }\n    Result.from = from;\n})(Result || (exports.Result = Result = {}));\n//# sourceMappingURL=result.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-result/src/result.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/node_modules/@siteimprove/alfa-sequence/src/cons.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/node_modules/@siteimprove/alfa-sequence/src/cons.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Cons = void 0;\nconst alfa_array_1 = __webpack_require__(/*! @siteimprove/alfa-array */ \"./node_modules/@siteimprove/alfa-array/src/index.js\");\nconst alfa_comparable_1 = __webpack_require__(/*! @siteimprove/alfa-comparable */ \"./node_modules/@siteimprove/alfa-comparable/src/index.js\");\nconst alfa_equatable_1 = __webpack_require__(/*! @siteimprove/alfa-equatable */ \"./node_modules/@siteimprove/alfa-equatable/src/index.js\");\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_json_1 = __webpack_require__(/*! @siteimprove/alfa-json */ \"./node_modules/@siteimprove/alfa-json/src/index.js\");\nconst alfa_lazy_1 = __webpack_require__(/*! @siteimprove/alfa-lazy */ \"./node_modules/@siteimprove/alfa-lazy/src/index.js\");\nconst alfa_map_1 = __webpack_require__(/*! @siteimprove/alfa-map */ \"./node_modules/@siteimprove/alfa-map/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_set_1 = __webpack_require__(/*! @siteimprove/alfa-set */ \"./node_modules/@siteimprove/alfa-set/src/index.js\");\nconst sequence_1 = __webpack_require__(/*! ./sequence */ \"./node_modules/@siteimprove/alfa-rules/node_modules/@siteimprove/alfa-sequence/src/sequence.js\");\nconst nil_1 = __webpack_require__(/*! ./nil */ \"./node_modules/@siteimprove/alfa-rules/node_modules/@siteimprove/alfa-sequence/src/nil.js\");\nconst { not, equals } = alfa_predicate_1.Predicate;\nconst { compareComparable } = alfa_comparable_1.Comparable;\n/**\n * @public\n */\nclass Cons {\n    static of(head, tail = alfa_lazy_1.Lazy.force(nil_1.Nil)) {\n        return new Cons(head, tail);\n    }\n    constructor(head, tail) {\n        this._head = head;\n        this._tail = tail;\n    }\n    get size() {\n        return alfa_iterable_1.Iterable.size(this);\n    }\n    isEmpty() {\n        return false;\n    }\n    forEach(callback) {\n        alfa_iterable_1.Iterable.forEach(this, callback);\n    }\n    map(mapper, index = 0) {\n        return new Cons(mapper(this._head, index), this._tail.map((tail) => Cons.isCons(tail) ? tail.map(mapper, index + 1) : nil_1.Nil));\n    }\n    apply(mapper) {\n        return mapper.flatMap((mapper) => this.map(mapper));\n    }\n    flatMap(mapper, index = 0) {\n        let next = this;\n        while (true) {\n            const head = mapper(next._head, index++);\n            if (Cons.isCons(head)) {\n                return new Cons(head._head, head._tail.map((left) => {\n                    const right = next._tail.force();\n                    return Cons.isCons(right)\n                        ? left.concat(right.flatMap(mapper, index))\n                        : left;\n                }));\n            }\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return nil_1.Nil;\n            }\n        }\n    }\n    flatten() {\n        return this.flatMap((sequence) => sequence);\n    }\n    reduce(reducer, accumulator) {\n        let next = this;\n        let index = 0;\n        while (true) {\n            accumulator = reducer(accumulator, next._head, index++);\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                break;\n            }\n        }\n        return accumulator;\n    }\n    reduceWhile(predicate, reducer, accumulator) {\n        let next = this;\n        let index = 0;\n        while (predicate(next._head, index)) {\n            accumulator = reducer(accumulator, next._head, index++);\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                break;\n            }\n        }\n        return accumulator;\n    }\n    reduceUntil(predicate, reducer, accumulator) {\n        return this.reduceWhile(not(predicate), reducer, accumulator);\n    }\n    filter(predicate, index = 0) {\n        let next = this;\n        while (true) {\n            if (predicate(next._head, index++)) {\n                return new Cons(next._head, next._tail.map((tail) => Cons.isCons(tail) ? tail.filter(predicate, index) : nil_1.Nil));\n            }\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return nil_1.Nil;\n            }\n        }\n    }\n    reject(predicate) {\n        return this.filter(not(predicate));\n    }\n    find(predicate) {\n        let next = this;\n        let index = 0;\n        while (true) {\n            const head = next._head;\n            if (predicate(head, index++)) {\n                return alfa_option_1.Option.of(head);\n            }\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return alfa_option_1.None;\n            }\n        }\n    }\n    includes(value) {\n        return this.some(equals(value));\n    }\n    collect(mapper, index = 0) {\n        let next = this;\n        while (true) {\n            const value = mapper(next._head, index++);\n            if (value.isSome()) {\n                return new Cons(value.get(), next._tail.map((tail) => Cons.isCons(tail) ? tail.collect(mapper, index) : nil_1.Nil));\n            }\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return nil_1.Nil;\n            }\n        }\n    }\n    collectFirst(mapper) {\n        let next = this;\n        let index = 0;\n        while (true) {\n            const value = mapper(next._head, index++);\n            if (value.isSome()) {\n                return value;\n            }\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return alfa_option_1.None;\n            }\n        }\n    }\n    some(predicate) {\n        let next = this;\n        let index = 0;\n        while (true) {\n            if (predicate(next._head, index++)) {\n                return true;\n            }\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return false;\n            }\n        }\n    }\n    none(predicate) {\n        return this.every(not(predicate));\n    }\n    every(predicate) {\n        let next = this;\n        let index = 0;\n        while (true) {\n            if (!predicate(next._head, index++)) {\n                return false;\n            }\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return true;\n            }\n        }\n    }\n    count(predicate) {\n        return this.reduce((count, value, index) => (predicate(value, index) ? count + 1 : count), 0);\n    }\n    distinct(seen = alfa_set_1.Set.empty()) {\n        let next = this;\n        while (true) {\n            if (seen.has(next._head)) {\n                const tail = next._tail.force();\n                if (Cons.isCons(tail)) {\n                    next = tail;\n                }\n                else {\n                    return nil_1.Nil;\n                }\n            }\n            else {\n                return Cons.of(next._head, next._tail.map((tail) => Cons.isCons(tail) ? tail.distinct(seen.add(next._head)) : nil_1.Nil));\n            }\n        }\n    }\n    get(index) {\n        return index < 0 ? alfa_option_1.None : this.skip(index).first();\n    }\n    has(index) {\n        return this.get(index).isSome();\n    }\n    set(index, value) {\n        if (index < 0) {\n            return this;\n        }\n        if (index === 0) {\n            if (alfa_equatable_1.Equatable.equals(value, this._head)) {\n                return this;\n            }\n            return new Cons(value, this._tail);\n        }\n        return new Cons(this._head, this._tail.map((tail) => tail.set(index - 1, value)));\n    }\n    insert(index, value) {\n        if (index < 0) {\n            return this;\n        }\n        if (index === 0) {\n            return new Cons(value, alfa_lazy_1.Lazy.force(this));\n        }\n        return new Cons(this._head, this._tail.map((tail) => tail.set(index - 1, value)));\n    }\n    append(value) {\n        return new Cons(this._head, this._tail.map((tail) => tail.append(value)));\n    }\n    prepend(value) {\n        return new Cons(value, alfa_lazy_1.Lazy.force(this));\n    }\n    concat(iterable) {\n        const sequence = sequence_1.Sequence.from(iterable);\n        if (Cons.isCons(sequence)) {\n            return new Cons(this._head, this._tail.map((tail) => tail.concat(sequence)));\n        }\n        return this;\n    }\n    subtract(iterable) {\n        return this.filter((value) => !alfa_iterable_1.Iterable.includes(iterable, value));\n    }\n    intersect(iterable) {\n        return this.filter((value) => alfa_iterable_1.Iterable.includes(iterable, value));\n    }\n    tee(callback, ...args) {\n        callback(this, ...args);\n        return this;\n    }\n    zip(iterable) {\n        const sequence = sequence_1.Sequence.from(iterable);\n        if (Cons.isCons(sequence)) {\n            return new Cons([this._head, sequence._head], this._tail.map((tail) => tail.zip(sequence.rest())));\n        }\n        return nil_1.Nil;\n    }\n    first() {\n        return alfa_option_1.Option.of(this._head);\n    }\n    last() {\n        let next = this;\n        while (true) {\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return alfa_option_1.Option.of(next._head);\n            }\n        }\n    }\n    take(count) {\n        if (count <= 0) {\n            return nil_1.Nil;\n        }\n        return new Cons(this._head, count === 1\n            ? alfa_lazy_1.Lazy.force(nil_1.Nil)\n            : this._tail.map((tail) => Cons.isCons(tail) ? tail.take(count - 1) : nil_1.Nil));\n    }\n    takeWhile(predicate) {\n        return this.takeUntil(not(predicate));\n    }\n    takeUntil(predicate, index = 0) {\n        if (predicate(this._head, index)) {\n            return nil_1.Nil;\n        }\n        return new Cons(this._head, this._tail.map((tail) => Cons.isCons(tail)\n            ? tail.takeUntil(predicate, index + 1)\n            : tail.takeUntil(predicate)));\n    }\n    takeLast(count) {\n        return this.skip(this.size - count);\n    }\n    takeLastWhile(predicate) {\n        return this.reverse().takeWhile(predicate).reverse();\n    }\n    takeLastUntil(predicate) {\n        return this.takeLastWhile(not(predicate));\n    }\n    skip(count) {\n        let next = this;\n        while (count-- > 0) {\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return nil_1.Nil;\n            }\n        }\n        return next;\n    }\n    skipWhile(predicate) {\n        let next = this;\n        let index = 0;\n        while (predicate(next._head, index++)) {\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return nil_1.Nil;\n            }\n        }\n        return next;\n    }\n    skipUntil(predicate) {\n        return this.skipWhile(not(predicate));\n    }\n    skipLast(count) {\n        return this.take(this.size - count);\n    }\n    skipLastWhile(predicate) {\n        return this.reverse().skipWhile(predicate).reverse();\n    }\n    skipLastUntil(predicate) {\n        return this.skipLastWhile(not(predicate));\n    }\n    trim(predicate) {\n        return this.trimLeading(predicate).trimTrailing(predicate);\n    }\n    trimLeading(predicate) {\n        return this.skipWhile(predicate);\n    }\n    trimTrailing(predicate) {\n        return this.skipLastWhile(predicate);\n    }\n    rest() {\n        return this._tail.force();\n    }\n    slice(start, end) {\n        let slice = this.skip(start);\n        if (end !== undefined) {\n            slice = slice.take(end - start);\n        }\n        return slice;\n    }\n    reverse() {\n        return this.reduce((reversed, value) => new Cons(value, alfa_lazy_1.Lazy.force(reversed)), nil_1.Nil);\n    }\n    join(separator) {\n        let result = `${this._head}`;\n        let next = this;\n        while (true) {\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                result += `${separator}${tail._head}`;\n                next = tail;\n            }\n            else {\n                return result;\n            }\n        }\n    }\n    sort() {\n        return this.sortWith(compareComparable);\n    }\n    sortWith(comparer) {\n        return sequence_1.Sequence.fromArray(alfa_array_1.Array.sortWith(this.toArray(), comparer));\n    }\n    compare(iterable) {\n        return this.compareWith(iterable, alfa_comparable_1.Comparable.compare);\n    }\n    compareWith(iterable, comparer) {\n        return alfa_iterable_1.Iterable.compareWith(this, iterable, comparer);\n    }\n    groupBy(grouper) {\n        return this.reduce((groups, value, index) => {\n            const group = grouper(value, index);\n            return groups.set(group, new Cons(value, alfa_lazy_1.Lazy.force(groups.get(group).getOrElse(() => nil_1.Nil))));\n        }, alfa_map_1.Map.empty()).map((group) => group.reverse());\n    }\n    equals(value) {\n        if (!Cons.isCons(value)) {\n            return false;\n        }\n        let a = this;\n        let b = value;\n        while (true) {\n            if (!alfa_equatable_1.Equatable.equals(a._head, b._head)) {\n                return false;\n            }\n            const ta = a._tail.force();\n            const tb = b._tail.force();\n            if (Cons.isCons(ta) && Cons.isCons(tb)) {\n                a = ta;\n                b = tb;\n            }\n            else {\n                return ta === nil_1.Nil && tb === nil_1.Nil;\n            }\n        }\n    }\n    hash(hash) {\n        let size = 0;\n        for (const value of this) {\n            hash.writeUnknown(value);\n            size++;\n        }\n        hash.writeUint32(size);\n    }\n    *iterator() {\n        let next = this;\n        while (true) {\n            yield next._head;\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                break;\n            }\n        }\n    }\n    [Symbol.iterator]() {\n        return this.iterator();\n    }\n    toArray() {\n        const array = [];\n        let next = this;\n        while (true) {\n            array.push(next._head);\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return array;\n            }\n        }\n    }\n    toJSON() {\n        const json = [];\n        let next = this;\n        while (true) {\n            json.push(alfa_json_1.Serializable.toJSON(next._head));\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return json;\n            }\n        }\n    }\n    toString() {\n        return `Sequence [ ${this.join(\", \")} ]`;\n    }\n}\nexports.Cons = Cons;\n/**\n * @public\n */\n(function (Cons) {\n    function isCons(value) {\n        return value instanceof Cons;\n    }\n    Cons.isCons = isCons;\n})(Cons || (exports.Cons = Cons = {}));\n//# sourceMappingURL=cons.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/node_modules/@siteimprove/alfa-sequence/src/cons.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/node_modules/@siteimprove/alfa-sequence/src/index.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/node_modules/@siteimprove/alfa-sequence/src/index.js ***!
  \***************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./cons */ \"./node_modules/@siteimprove/alfa-rules/node_modules/@siteimprove/alfa-sequence/src/cons.js\"), exports);\n__exportStar(__webpack_require__(/*! ./nil */ \"./node_modules/@siteimprove/alfa-rules/node_modules/@siteimprove/alfa-sequence/src/nil.js\"), exports);\n__exportStar(__webpack_require__(/*! ./sequence */ \"./node_modules/@siteimprove/alfa-rules/node_modules/@siteimprove/alfa-sequence/src/sequence.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/node_modules/@siteimprove/alfa-sequence/src/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/node_modules/@siteimprove/alfa-sequence/src/nil.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/node_modules/@siteimprove/alfa-sequence/src/nil.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Nil = void 0;\nconst alfa_comparable_1 = __webpack_require__(/*! @siteimprove/alfa-comparable */ \"./node_modules/@siteimprove/alfa-comparable/src/index.js\");\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_map_1 = __webpack_require__(/*! @siteimprove/alfa-map */ \"./node_modules/@siteimprove/alfa-map/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst sequence_1 = __webpack_require__(/*! ./sequence */ \"./node_modules/@siteimprove/alfa-rules/node_modules/@siteimprove/alfa-sequence/src/sequence.js\");\nconst cons_1 = __webpack_require__(/*! ./cons */ \"./node_modules/@siteimprove/alfa-rules/node_modules/@siteimprove/alfa-sequence/src/cons.js\");\n/**\n * @public\n */\nexports.Nil = new (class Nil {\n    get size() {\n        return 0;\n    }\n    isEmpty() {\n        return true;\n    }\n    forEach() { }\n    map() {\n        return this;\n    }\n    apply() {\n        return this;\n    }\n    flatMap() {\n        return this;\n    }\n    flatten() {\n        return this;\n    }\n    reduce(reducer, accumulator) {\n        return accumulator;\n    }\n    reduceWhile(predicate, reducer, accumulator) {\n        return accumulator;\n    }\n    reduceUntil(predicate, reducer, accumulator) {\n        return accumulator;\n    }\n    filter() {\n        return this;\n    }\n    reject() {\n        return this;\n    }\n    find() {\n        return alfa_option_1.None;\n    }\n    includes() {\n        return false;\n    }\n    collect() {\n        return this;\n    }\n    collectFirst() {\n        return alfa_option_1.None;\n    }\n    some() {\n        return false;\n    }\n    none() {\n        return true;\n    }\n    every() {\n        return true;\n    }\n    count() {\n        return 0;\n    }\n    distinct() {\n        return this;\n    }\n    get() {\n        return alfa_option_1.None;\n    }\n    has() {\n        return false;\n    }\n    set() {\n        return this;\n    }\n    insert(index, value) {\n        return index === 0 ? cons_1.Cons.of(value) : this;\n    }\n    append(value) {\n        return cons_1.Cons.of(value);\n    }\n    prepend(value) {\n        return cons_1.Cons.of(value);\n    }\n    concat(iterable) {\n        if (iterable === this) {\n            return this;\n        }\n        return sequence_1.Sequence.from(iterable);\n    }\n    subtract() {\n        return this;\n    }\n    intersect() {\n        return this;\n    }\n    tee(callback, ...args) {\n        callback(this, ...args);\n        return this;\n    }\n    zip() {\n        return this;\n    }\n    first() {\n        return alfa_option_1.None;\n    }\n    last() {\n        return alfa_option_1.None;\n    }\n    take() {\n        return this;\n    }\n    takeWhile() {\n        return this;\n    }\n    takeUntil() {\n        return this;\n    }\n    takeLast() {\n        return this;\n    }\n    takeLastWhile() {\n        return this;\n    }\n    takeLastUntil() {\n        return this;\n    }\n    skip() {\n        return this;\n    }\n    skipWhile() {\n        return this;\n    }\n    skipUntil() {\n        return this;\n    }\n    skipLast() {\n        return this;\n    }\n    skipLastWhile() {\n        return this;\n    }\n    skipLastUntil() {\n        return this;\n    }\n    trim() {\n        return this;\n    }\n    trimLeading() {\n        return this;\n    }\n    trimTrailing() {\n        return this;\n    }\n    rest() {\n        return this;\n    }\n    slice() {\n        return this;\n    }\n    reverse() {\n        return this;\n    }\n    join() {\n        return \"\";\n    }\n    sort() {\n        return this;\n    }\n    sortWith() {\n        return this;\n    }\n    compare(iterable) {\n        return this.compareWith(iterable, alfa_comparable_1.Comparable.compare);\n    }\n    compareWith(iterable, comparer) {\n        return alfa_iterable_1.Iterable.compareWith(this, iterable, comparer);\n    }\n    groupBy() {\n        return alfa_map_1.Map.empty();\n    }\n    equals(value) {\n        return value instanceof Nil;\n    }\n    hash(hash) {\n        hash.writeUint32(0);\n    }\n    *iterator() { }\n    [Symbol.iterator]() {\n        return this.iterator();\n    }\n    toArray() {\n        return [];\n    }\n    toJSON() {\n        return [];\n    }\n    toString() {\n        return \"Sequence []\";\n    }\n})();\n//# sourceMappingURL=nil.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/node_modules/@siteimprove/alfa-sequence/src/nil.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/node_modules/@siteimprove/alfa-sequence/src/sequence.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/node_modules/@siteimprove/alfa-sequence/src/sequence.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Sequence = void 0;\nconst alfa_array_1 = __webpack_require__(/*! @siteimprove/alfa-array */ \"./node_modules/@siteimprove/alfa-array/src/index.js\");\nconst alfa_lazy_1 = __webpack_require__(/*! @siteimprove/alfa-lazy */ \"./node_modules/@siteimprove/alfa-lazy/src/index.js\");\nconst cons_1 = __webpack_require__(/*! ./cons */ \"./node_modules/@siteimprove/alfa-rules/node_modules/@siteimprove/alfa-sequence/src/cons.js\");\nconst nil_1 = __webpack_require__(/*! ./nil */ \"./node_modules/@siteimprove/alfa-rules/node_modules/@siteimprove/alfa-sequence/src/nil.js\");\n/**\n * @public\n */\nvar Sequence;\n(function (Sequence) {\n    function isSequence(value) {\n        return isCons(value) || isNil(value);\n    }\n    Sequence.isSequence = isSequence;\n    function isCons(value) {\n        return cons_1.Cons.isCons(value);\n    }\n    Sequence.isCons = isCons;\n    function isNil(value) {\n        return value === nil_1.Nil;\n    }\n    Sequence.isNil = isNil;\n    function of(head, tail) {\n        return cons_1.Cons.of(head, tail);\n    }\n    Sequence.of = of;\n    function empty() {\n        return nil_1.Nil;\n    }\n    Sequence.empty = empty;\n    function from(iterable) {\n        if (isSequence(iterable)) {\n            return iterable;\n        }\n        if (alfa_array_1.Array.isArray(iterable)) {\n            return fromArray(iterable);\n        }\n        return fromIterable(iterable);\n    }\n    Sequence.from = from;\n    function fromArray(array) {\n        let i = 0;\n        const tail = () => {\n            if (i >= array.length) {\n                return empty();\n            }\n            return of(array[i++], alfa_lazy_1.Lazy.of(tail));\n        };\n        return tail();\n    }\n    Sequence.fromArray = fromArray;\n    function fromIterable(iterable) {\n        return fromIterator(iterable[Symbol.iterator]());\n    }\n    Sequence.fromIterable = fromIterable;\n    function fromIterator(iterator) {\n        const tail = () => {\n            const head = iterator.next();\n            if (head.done === true) {\n                return empty();\n            }\n            return of(head.value, alfa_lazy_1.Lazy.of(tail));\n        };\n        return tail();\n    }\n    Sequence.fromIterator = fromIterator;\n})(Sequence || (exports.Sequence = Sequence = {}));\n//# sourceMappingURL=sequence.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/node_modules/@siteimprove/alfa-sequence/src/sequence.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/common/act/diagnostic.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/common/act/diagnostic.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Diagnostic = void 0;\nconst languages = __webpack_require__(/*! ../../sia-r109/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r109/rule.js\");\nconst labelAndName = __webpack_require__(/*! ../../sia-r14/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r14/rule.js\");\nconst roleAndRequiredAttributes = __webpack_require__(/*! ../../sia-r16/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r16/rule.js\");\nconst withRoleAndName = __webpack_require__(/*! ../../sia-r55/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r55/rule.js\");\nconst sameNames = __webpack_require__(/*! ../../sia-r56/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r56/rule.js\");\nconst withFirstHeading = __webpack_require__(/*! ../../sia-r61/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r61/rule.js\");\nconst distinguishingStyles = __webpack_require__(/*! ../../sia-r62/diagnostics */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r62/diagnostics.js\");\nconst matchingClasses = __webpack_require__(/*! ../../sia-r65/diagnostics */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r65/diagnostics.js\");\nconst withDeclaration = __webpack_require__(/*! ../../sia-r75/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r75/rule.js\");\nconst clippingAncestors = __webpack_require__(/*! ../../sia-r83/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r83/rule.js\");\n// R66, R69\nconst colorError = __webpack_require__(/*! ../dom/get-colors */ \"./node_modules/@siteimprove/alfa-rules/src/common/dom/get-colors.js\");\n// R17, R70, R90, R95, R42, R60, R68, R76, R91, R92, R93\nconst diagnostic = __webpack_require__(/*! ../../common/diagnostic */ \"./node_modules/@siteimprove/alfa-rules/src/common/diagnostic.js\");\n/**\n * @public\n */\nvar Diagnostic;\n(function (Diagnostic) {\n    Diagnostic.Languages = languages.Languages;\n    Diagnostic.LabelAndName = labelAndName.LabelAndName;\n    Diagnostic.RoleAndRequiredAttributes = roleAndRequiredAttributes.RoleAndRequiredAttributes;\n    Diagnostic.WithRoleAndName = withRoleAndName.WithRoleAndName;\n    Diagnostic.SameNames = sameNames.SameNames;\n    Diagnostic.WithFirstHeading = withFirstHeading.WithFirstHeading;\n    Diagnostic.DistinguishingStyles = distinguishingStyles.DistinguishingStyles;\n    Diagnostic.ElementDistinguishable = distinguishingStyles.ElementDistinguishable;\n    Diagnostic.ColorError = colorError.ColorError;\n    Diagnostic.ColorErrors = colorError.ColorErrors;\n    Diagnostic.MatchingClasses = matchingClasses.MatchingClasses;\n    Diagnostic.WithDeclaration = withDeclaration.WithDeclaration;\n    Diagnostic.ClippingAncestors = clippingAncestors.ClippingAncestors;\n    Diagnostic.Contrast = diagnostic.Contrast;\n    Diagnostic.TextSpacing = diagnostic.TextSpacing;\n    Diagnostic.WithBadElements = diagnostic.WithBadElements;\n    Diagnostic.WithRole = diagnostic.WithRole;\n    Diagnostic.WithName = diagnostic.WithName;\n    Diagnostic.WithOtherHeading = diagnostic.WithOtherHeading;\n})(Diagnostic || (exports.Diagnostic = Diagnostic = {}));\n//# sourceMappingURL=diagnostic.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/common/act/diagnostic.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.expectation = void 0;\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_thunk_1 = __webpack_require__(/*! @siteimprove/alfa-thunk */ \"./node_modules/@siteimprove/alfa-thunk/src/index.js\");\nfunction expectation(test, ifTrue, ifFalse, ifUnknown = alfa_thunk_1.Thunk.of(alfa_option_1.None)) {\n    switch (test) {\n        case true:\n            return ifTrue();\n        case false:\n            return ifFalse();\n        default:\n            return ifUnknown();\n    }\n}\nexports.expectation = expectation;\n//# sourceMappingURL=expectation.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/common/act/group.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/common/act/group.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Group = void 0;\nconst alfa_array_1 = __webpack_require__(/*! @siteimprove/alfa-array */ \"./node_modules/@siteimprove/alfa-array/src/index.js\");\nconst alfa_equatable_1 = __webpack_require__(/*! @siteimprove/alfa-equatable */ \"./node_modules/@siteimprove/alfa-equatable/src/index.js\");\nconst earl = __webpack_require__(/*! @siteimprove/alfa-earl */ \"./node_modules/@siteimprove/alfa-earl/src/index.js\");\nconst json = __webpack_require__(/*! @siteimprove/alfa-json */ \"./node_modules/@siteimprove/alfa-json/src/index.js\");\nconst sarif = __webpack_require__(/*! @siteimprove/alfa-sarif */ \"./node_modules/@siteimprove/alfa-sarif/src/index.js\");\n/**\n * @public\n */\nclass Group {\n    static of(members) {\n        return new Group(alfa_array_1.Array.from(members));\n    }\n    constructor(members) {\n        this._members = members;\n    }\n    get size() {\n        return this._members.length;\n    }\n    *[Symbol.iterator]() {\n        yield* this._members;\n    }\n    equals(value) {\n        return (value instanceof Group &&\n            value._members.length === this._members.length &&\n            value._members.every((member, i) => alfa_equatable_1.Equatable.equals(member, this._members[i])));\n    }\n    hash(hash) {\n        for (const member of this._members) {\n            member.hash(hash);\n        }\n    }\n    toJSON() {\n        return this._members.map((member) => json.Serializable.toJSON(member));\n    }\n    toEARL() {\n        return {\n            \"@context\": {\n                ptr: \"http://www.w3.org/2009/pointers#\",\n            },\n            \"@type\": [\"ptr:Pointer\", \"ptr:PointersGroup\", \"ptr:RelatedPointers\"],\n            \"ptr:groupPointer\": {\n                \"@list\": alfa_array_1.Array.collect(this._members, (member) => earl.Serializable.toEARL(member)),\n            },\n        };\n    }\n    toSARIF() {\n        return {\n            logicalLocations: alfa_array_1.Array.flatMap(this._members, (member) => sarif.Serializable.toSARIF(member)\n                .map((location) => location.logicalLocations ?? [])\n                .getOr([])),\n        };\n    }\n}\nexports.Group = Group;\n/**\n * @public\n */\n(function (Group) {\n    function isGroup(value) {\n        return value instanceof Group;\n    }\n    Group.isGroup = isGroup;\n})(Group || (exports.Group = Group = {}));\n//# sourceMappingURL=group.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/common/act/group.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/common/act/is-passed.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/common/act/is-passed.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isPassed = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nfunction isPassed(outcome) {\n    if (alfa_act_1.Outcome.isPassed(outcome)) {\n        return true;\n    }\n    if (alfa_act_1.Outcome.isFailed(outcome)) {\n        return false;\n    }\n    return undefined;\n}\nexports.isPassed = isPassed;\n//# sourceMappingURL=is-passed.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/common/act/is-passed.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/common/act/question.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/common/act/question.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Question = void 0;\nconst act = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\n/**\n * @public\n */\nvar Question;\n(function (Question) {\n    function of(uri, subject, contextOrMessage, messageOrOptions, options = {}) {\n        let context = subject;\n        let message;\n        if (\n        // We assume that no context will be a string.\n        // Since contexts are guaranteed to be test targets, this is OK. They are\n        // more likely to be text nodes that the actual text in it.\n        typeof contextOrMessage === \"string\") {\n            // We have message + options\n            message = contextOrMessage ?? Data[uri].message;\n            // Type is ensured by overloads\n            options = messageOrOptions;\n        }\n        else {\n            // We have context + message + options\n            context = contextOrMessage ?? subject;\n            // Type is ensured by overloads\n            message = messageOrOptions ?? Data[uri].message;\n        }\n        return act.Question.of(Data[uri].type, uri, message, subject, context, options);\n    }\n    Question.of = of;\n    const Data = {\n        // R15, R41, R81\n        \"reference-equivalent-resources\": {\n            type: \"boolean\",\n            message: `Do the [links/iframe] [resolve to/reference] equivalent resources?`,\n        },\n        // media rules (R27 [R22, R31], R30 [R23, R29], R35 [R26, R32, R33, R34],\n        //              R37 [R25, R31, R36], R38 [R24, R25, R31, R36], R50 [R48, R49])\n        \"has-audio\": {\n            // Also used in R50 [R48, R49]\n            type: \"boolean\",\n            message: `Does the \\`<video>\\` element have audio?`,\n        },\n        \"has-audio-track\": {\n            type: \"boolean\",\n            message: `Does the \\`<video>\\` element have an audio track that describes its visual information?`,\n        },\n        \"has-captions\": {\n            type: \"boolean\",\n            message: `Does the \\`<video>\\` element have captions that describe the content of the video?`,\n        },\n        \"has-description\": {\n            type: \"boolean\",\n            message: `Is the visual information of the [audio/video] available through its audio or a separate audio description track?`,\n        },\n        \"is-audio-streaming\": {\n            type: \"boolean\",\n            message: `Is the \\`<audio>\\` element streaming?`,\n        },\n        \"is-playing\": {\n            type: \"boolean\",\n            message: `Is the \\`<audio>\\` element currently playing?`,\n        },\n        \"is-video-streaming\": {\n            type: \"boolean\",\n            message: `Is the \\`<video>\\` element streaming?`,\n        },\n        label: {\n            type: \"node\",\n            message: `Where is the text that labels the [audio/video] element as a video alternative?`,\n        },\n        \"play-button\": {\n            type: \"node\",\n            message: `Where is the button that controls playback of the \\`<audio>\\` element?`,\n        },\n        \"text-alternative\": {\n            type: \"node\",\n            message: `Where is the text alternative of the [audio/video] element?`,\n        },\n        \"track-describes-video\": {\n            type: \"boolean\",\n            message: `Does at least 1 track describe the visual information of the \\`<video>\\` element, either in the language of the \\`<video>\\` element or the language of the page?`,\n        },\n        transcript: {\n            type: \"node\",\n            message: `Where is the transcript that describes the content of the [audio/video] element?`,\n        },\n        \"transcript-link\": {\n            type: \"node\",\n            message: `Where is the link pointing to the transcript that describes the content of the [audio/video] element?`,\n        },\n        // R39\n        \"name-describes-purpose\": {\n            type: \"boolean\",\n            message: `Does the accessible name of the \\`<(target.name]>\\` element describe its purpose?`,\n        },\n        // R50 [R48, R49]\n        \"audio-control-mechanism\": {\n            type: \"node\",\n            message: `Where is the mechanism that can pause or stop the audio of the \\`<[target.name]>\\` element?`,\n        },\n        \"is-above-duration-threshold\": {\n            type: \"boolean\",\n            message: `Does the \\`<[element.name]>\\` element have a duration of more than 3 seconds?`,\n        },\n        \"is-below-audio-duration-threshold\": {\n            type: \"boolean\",\n            message: `Does the \\`<[target.name]>\\` element have a total audio duration of less than 3 seconds?`,\n        },\n        // R55\n        \"is-content-equivalent\": {\n            type: \"boolean\",\n            message: `Do these [role] landmarks have the same or equivalent content?`,\n        },\n        // R65\n        \"has-focus-indicator\": {\n            type: \"boolean\",\n            message: `Does the element have a visible focus indicator?`,\n        },\n        // R66, R69\n        \"background-colors\": {\n            type: \"color[]\",\n            message: \"What are the background colors of the text node?\",\n        },\n        \"foreground-colors\": {\n            type: \"color[]\",\n            message: \"What are the foreground colors of the text node?\",\n        },\n        \"ignored-interposed-elements\": {\n            type: \"node[]\",\n            message: \"Which of these interposed descendants should be ignored?\",\n        },\n        // R87\n        \"first-tabbable-is-internal-link\": {\n            type: \"boolean\",\n            message: `Is the first tabbable element of the document an internal link?`,\n        },\n        \"first-tabbable-is-visible\": {\n            type: \"boolean\",\n            message: `Is the first tabbable element of the document visible if it's focused?`,\n        },\n        \"first-tabbable-reference\": {\n            type: \"node\",\n            message: `Where in the document does the first tabbable element point?`,\n        },\n        \"first-tabbable-reference-is-main\": {\n            type: \"boolean\",\n            message: `Does the first tabbable element of the document point to the main content?`,\n        },\n        // R82 (experimental)\n        \"error-indicators\": {\n            type: \"node[]\",\n            message: `Where are (all) the error indicators, if any, for the form field?`,\n        },\n        \"error-indicator-describing-resolution\": {\n            type: \"node\",\n            message: `Which of these error indicators describes, in text, the cause of the error or how to resolve it?`,\n        },\n        \"error-indicator-identifying-form-field\": {\n            type: \"node\",\n            message: \"Which of these error indicators identifies, in text, the form field it relates to?\",\n        },\n        // ER87 (experimental)\n        \"internal-reference\": {\n            type: \"node\",\n            message: `Where in the document does this element point?`,\n        },\n        \"is-start-of-main\": {\n            type: \"boolean\",\n            message: `Is this element at the start of the main content of the document?`,\n        },\n        \"is-visible-when-focused\": {\n            type: \"boolean\",\n            message: `Is this element visible when it's focused?`,\n        },\n        // R109 (experimental)\n        \"document-language\": {\n            type: \"string\",\n            message: \"What is the main language of the document?\",\n        },\n    };\n})(Question || (exports.Question = Question = {}));\n//# sourceMappingURL=question.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/common/act/question.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/common/applicability/audio.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/common/applicability/audio.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.audio = void 0;\nconst alfa_aria_1 = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst alfa_cache_1 = __webpack_require__(/*! @siteimprove/alfa-cache */ \"./node_modules/@siteimprove/alfa-cache/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_style_1 = __webpack_require__(/*! @siteimprove/alfa-style */ \"./node_modules/@siteimprove/alfa-style/src/index.js\");\nconst question_1 = __webpack_require__(/*! ../act/question */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/question.js\");\nconst { isPerceivableForAll } = alfa_aria_1.DOM;\nconst { isElement, hasName, hasNamespace, hasAttribute } = alfa_dom_1.Element;\nconst { and } = alfa_predicate_1.Predicate;\nconst { isRendered } = alfa_style_1.Style;\nconst { getElementDescendants } = alfa_dom_1.Query;\nconst cache = alfa_cache_1.Cache.empty();\nfunction audio(document, device) {\n    return cache.get(document, alfa_cache_1.Cache.empty).get(device, () => getElementDescendants(document, alfa_dom_1.Node.fullTree)\n        .filter(\n    // Non-rendered <audio> are not playing\n    and(hasNamespace(alfa_dom_1.Namespace.HTML), hasName(\"audio\"), isRendered(device)))\n        .map((element) => question_1.Question.of(\"is-audio-streaming\", element).map((isStreaming) => isStreaming\n        ? alfa_option_1.None\n        : question_1.Question.of(\"is-playing\", element)\n            .answerIf(hasAttribute(\"autoplay\"), true)\n            .map((isPlaying) => isPlaying\n            ? alfa_option_1.Option.of(element)\n            : question_1.Question.of(\"play-button\", element)\n                .answerIf(hasAttribute(\"controls\"), alfa_option_1.Option.of(element))\n                .map((playButton) => playButton.some(and(isElement, isPerceivableForAll(device)))\n                ? alfa_option_1.Option.of(element)\n                : alfa_option_1.None)))));\n}\nexports.audio = audio;\n//# sourceMappingURL=audio.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/common/applicability/audio.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/common/applicability/non-disabled-texts.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/common/applicability/non-disabled-texts.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.nonDisabledTexts = void 0;\nconst alfa_cache_1 = __webpack_require__(/*! @siteimprove/alfa-cache */ \"./node_modules/@siteimprove/alfa-cache/src/index.js\");\nconst alfa_aria_1 = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_refinement_1 = __webpack_require__(/*! @siteimprove/alfa-refinement */ \"./node_modules/@siteimprove/alfa-refinement/src/index.js\");\nconst alfa_sequence_1 = __webpack_require__(/*! @siteimprove/alfa-sequence */ \"./node_modules/@siteimprove/alfa-rules/node_modules/@siteimprove/alfa-sequence/src/index.js\");\nconst alfa_set_1 = __webpack_require__(/*! @siteimprove/alfa-set */ \"./node_modules/@siteimprove/alfa-set/src/index.js\");\nconst alfa_style_1 = __webpack_require__(/*! @siteimprove/alfa-style */ \"./node_modules/@siteimprove/alfa-style/src/index.js\");\nconst { hasRole, isSemanticallyDisabled } = alfa_aria_1.DOM;\nconst { hasNamespace, isElement } = alfa_dom_1.Element;\nconst { or, not } = alfa_predicate_1.Predicate;\nconst { and, test } = alfa_refinement_1.Refinement;\nconst { isVisible } = alfa_style_1.Style;\nconst { isText } = alfa_dom_1.Text;\nconst cache = alfa_cache_1.Cache.empty();\n/**\n * Return all text nodes that are neither:\n * * part of a disabled group or widget;\n * * part of the name of a disabled group or widget;\n *\n * @internal\n */\nfunction nonDisabledTexts(document, device) {\n    return cache.get(document, alfa_cache_1.Cache.empty).get(device, () => {\n        // Gather all text nodes used to name a disabled widget or group\n        const disabledWidgetNames = alfa_set_1.Set.from(document\n            // Find all disabled widgets and groups.\n            .descendants(alfa_dom_1.Node.fullTree)\n            .filter(and(isElement, isDisabledGroupOrWidget(device)))\n            // Find all text nodes that are part of their names\n            .flatMap((element) => alfa_aria_1.Node\n            .from(element, device)\n            .name.map((name) => alfa_sequence_1.Sequence.from(name.sourceNodes()).filter(isText))\n            .getOr(alfa_sequence_1.Sequence.empty())));\n        return alfa_sequence_1.Sequence.from(visit(document, device, disabledWidgetNames));\n    });\n}\nexports.nonDisabledTexts = nonDisabledTexts;\nfunction* visit(node, device, disabledWidgetNames) {\n    // If the node is a disabled group or widget, stop looking\n    if (test(and(isElement, or(not(hasNamespace(alfa_dom_1.Namespace.HTML)), isDisabledGroupOrWidget(device))), node)) {\n        return;\n    }\n    // If it is a visible text, not used in the name of a disabled widget,\n    // yield it.\n    if (test(and(isText, isVisible(device)), node) &&\n        !disabledWidgetNames.has(node)) {\n        yield node;\n    }\n    // Recurse into children\n    for (const child of node.children(alfa_dom_1.Node.fullTree)) {\n        yield* visit(child, device, disabledWidgetNames);\n    }\n}\nfunction isDisabledGroupOrWidget(device) {\n    return and(hasRole(device, (role) => role.isWidget() || role.is(\"group\")), isSemanticallyDisabled);\n}\n//# sourceMappingURL=non-disabled-texts.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/common/applicability/non-disabled-texts.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/common/applicability/role-attributes.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/common/applicability/role-attributes.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.roleAttributes = void 0;\nconst alfa_aria_1 = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst alfa_cache_1 = __webpack_require__(/*! @siteimprove/alfa-cache */ \"./node_modules/@siteimprove/alfa-cache/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst { isProgrammaticallyHidden } = alfa_aria_1.DOM;\nconst { hasAttribute, hasNamespace } = alfa_dom_1.Element;\nconst { and, not } = alfa_predicate_1.Predicate;\nconst { getElementDescendants } = alfa_dom_1.Query;\nconst cache = alfa_cache_1.Cache.empty();\n/**\n * @internal\n */\nfunction roleAttributes(document, device) {\n    return cache.get(document, alfa_cache_1.Cache.empty).get(device, () => getElementDescendants(document, alfa_dom_1.Node.fullTree)\n        .filter(and(hasNamespace(alfa_dom_1.Namespace.HTML, alfa_dom_1.Namespace.SVG), hasAttribute(\"role\", (value) => value.trim().length > 0), not(isProgrammaticallyHidden(device))))\n        // The previous filter ensures the existence of role.\n        .map((element) => element.attribute(\"role\").getUnsafe()));\n}\nexports.roleAttributes = roleAttributes;\n//# sourceMappingURL=role-attributes.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/common/applicability/role-attributes.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/common/applicability/text-with-inlined-important-property.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/common/applicability/text-with-inlined-important-property.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.textWithInlinedImportantProperty = void 0;\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_refinement_1 = __webpack_require__(/*! @siteimprove/alfa-refinement */ \"./node_modules/@siteimprove/alfa-refinement/src/index.js\");\nconst alfa_style_1 = __webpack_require__(/*! @siteimprove/alfa-style */ \"./node_modules/@siteimprove/alfa-style/src/index.js\");\nconst { hasNamespace, isElement } = alfa_dom_1.Element;\nconst { and } = alfa_refinement_1.Refinement;\nconst { hasSpecifiedStyle, isImportant, isVisible } = alfa_style_1.Style;\nconst { isText } = alfa_dom_1.Text;\n/**\n * @internal\n */\nfunction textWithInlinedImportantProperty(document, device, property) {\n    return (document\n        .descendants(alfa_dom_1.Node.fullTree)\n        .filter(and(isElement, hasNamespace(alfa_dom_1.Namespace.HTML)))\n        // We assume !important properties in style attribute are less frequent\n        // than visible text node children, and filter in that order.\n        .filter(and(\n    // The specified value is declared in a style attribute\n    hasSpecifiedStyle(property, (_, source) => \n    // A property is declared in a style attribute if\n    // its declaration has an owner element\n    source.some((declaration) => declaration.owner.isSome()), device), \n    // The computed value is important (`!important`)\n    isImportant(device, property), \n    // The element has visible text node children\n    (element) => element\n        .children(alfa_dom_1.Node.fullTree)\n        .some(and(isText, isVisible(device))))));\n}\nexports.textWithInlinedImportantProperty = textWithInlinedImportantProperty;\n//# sourceMappingURL=text-with-inlined-important-property.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/common/applicability/text-with-inlined-important-property.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/common/applicability/video.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/common/applicability/video.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.video = void 0;\nconst alfa_cache_1 = __webpack_require__(/*! @siteimprove/alfa-cache */ \"./node_modules/@siteimprove/alfa-cache/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_style_1 = __webpack_require__(/*! @siteimprove/alfa-style */ \"./node_modules/@siteimprove/alfa-style/src/index.js\");\nconst question_1 = __webpack_require__(/*! ../act/question */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/question.js\");\nconst { isElement, hasName, hasNamespace } = alfa_dom_1.Element;\nconst { and } = alfa_predicate_1.Predicate;\nconst { isVisible } = alfa_style_1.Style;\nconst { getElementDescendants } = alfa_dom_1.Query;\nconst visibleVideos = alfa_cache_1.Cache.empty();\nfunction video(document, device, options) {\n    const { audio, track } = options;\n    const videos = visibleVideos\n        .get(document, alfa_cache_1.Cache.empty)\n        .get(device, () => getElementDescendants(document, alfa_dom_1.Node.fullTree).filter(and(hasNamespace(alfa_dom_1.Namespace.HTML), hasName(\"video\"), isVisible(device))));\n    return (track === undefined\n        ? videos\n        : videos.filter(hasTrack(track.has, track.kind))).map((element) => question_1.Question.of(\"is-video-streaming\", element).map((isStreaming) => {\n        if (isStreaming) {\n            return alfa_option_1.None;\n        }\n        return question_1.Question.of(\"has-audio\", element).map((hasAudio) => audio.has === hasAudio ? alfa_option_1.Option.of(element) : alfa_option_1.None);\n    }));\n}\nexports.video = video;\nfunction hasTrack(has, kind) {\n    return (element) => has ===\n        element\n            .children()\n            .filter(isElement)\n            .some(and(hasName(\"track\"), (trackElement) => trackElement\n            .attribute(\"kind\")\n            // {@link https://html.spec.whatwg.org/multipage/media.html#attr-track-kind}\n            .map((kind) => kind\n            .enumerate(\"subtitles\", \"captions\", \"descriptions\", \"chapters\", \"metadata\")\n            // invalid value default\n            .getOr(\"metadata\"))\n            // missing value default\n            .getOr(\"subtitles\") === kind));\n}\n//# sourceMappingURL=video.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/common/applicability/video.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/common/applicability/with-document-element.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/common/applicability/with-document-element.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.withDocumentElement = void 0;\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_refinement_1 = __webpack_require__(/*! @siteimprove/alfa-refinement */ \"./node_modules/@siteimprove/alfa-refinement/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst { fold } = alfa_predicate_1.Predicate;\nconst { and } = alfa_refinement_1.Refinement;\n/**\n * Returns the document if it has an `<html>` child verifying the predicate.\n *\n * @internal\n */\nconst withDocumentElement = (document, predicate = () => true) => fold(alfa_dom_1.Node.hasChild(and(alfa_dom_1.Element.isDocumentElement, predicate)), () => alfa_option_1.Option.of(document), () => alfa_option_1.None, document);\nexports.withDocumentElement = withDocumentElement;\n//# sourceMappingURL=with-document-element.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/common/applicability/with-document-element.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/common/diagnostic.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/common/diagnostic.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/**\n * @internal\n */\n__exportStar(__webpack_require__(/*! ./diagnostic/contrast */ \"./node_modules/@siteimprove/alfa-rules/src/common/diagnostic/contrast.js\"), exports);\n__exportStar(__webpack_require__(/*! ./diagnostic/text-spacing */ \"./node_modules/@siteimprove/alfa-rules/src/common/diagnostic/text-spacing.js\"), exports);\n__exportStar(__webpack_require__(/*! ./diagnostic/with-bad-elements */ \"./node_modules/@siteimprove/alfa-rules/src/common/diagnostic/with-bad-elements.js\"), exports);\n__exportStar(__webpack_require__(/*! ./diagnostic/with-role */ \"./node_modules/@siteimprove/alfa-rules/src/common/diagnostic/with-role.js\"), exports);\n__exportStar(__webpack_require__(/*! ./diagnostic/with-name */ \"./node_modules/@siteimprove/alfa-rules/src/common/diagnostic/with-name.js\"), exports);\n__exportStar(__webpack_require__(/*! ./diagnostic/with-other-heading */ \"./node_modules/@siteimprove/alfa-rules/src/common/diagnostic/with-other-heading.js\"), exports);\n//# sourceMappingURL=diagnostic.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/common/diagnostic.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/common/diagnostic/contrast.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/common/diagnostic/contrast.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Contrast = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_comparable_1 = __webpack_require__(/*! @siteimprove/alfa-comparable */ \"./node_modules/@siteimprove/alfa-comparable/src/index.js\");\n/**\n * @public\n */\nclass Contrast extends alfa_act_1.Diagnostic {\n    static of(message, threshold = 4.5, pairings = []) {\n        return new Contrast(message, threshold, Array.from(pairings));\n    }\n    constructor(message, threshold, pairings) {\n        super(message);\n        this._threshold = threshold;\n        this._pairings = pairings;\n    }\n    get threshold() {\n        return this._threshold;\n    }\n    get pairings() {\n        return this._pairings;\n    }\n    equals(value) {\n        return (super.equals(value) &&\n            value instanceof Contrast &&\n            value._threshold === this._threshold &&\n            value._pairings.length === this._pairings.length &&\n            value._pairings.every((pairing, i) => pairing.equals(this._pairings[i])));\n    }\n    hash(hash) {\n        super.hash(hash);\n        hash.writeNumber(this._threshold);\n        // We don't hash the pairings as it may take too long.\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            threshold: this._threshold,\n            pairings: this._pairings.map((pairing) => pairing.toJSON()),\n        };\n    }\n}\nexports.Contrast = Contrast;\n/**\n * @public\n */\n(function (Contrast) {\n    /** @public (knip) */\n    function isContrast(value) {\n        return value instanceof Contrast;\n    }\n    Contrast.isContrast = isContrast;\n    class Pairing {\n        static of(color1, color2, contrast) {\n            return new Pairing(Color.of(...color1), Color.of(...color2), contrast);\n        }\n        constructor(color1, color2, contrast) {\n            this._color1 = color1;\n            this._color2 = color2;\n            this._contrast = contrast;\n        }\n        hash(hash) {\n            hash\n                .writeHashable(this._color1)\n                .writeHashable(this._color2)\n                .writeNumber(this._contrast);\n        }\n        get color1() {\n            return this._color1;\n        }\n        get color2() {\n            return this._color2;\n        }\n        get contrast() {\n            return this._contrast;\n        }\n        equals(value) {\n            return (value instanceof Pairing &&\n                value._color1.equals(this._color1) &&\n                value._color2.equals(this._color2) &&\n                value._contrast === this._contrast);\n        }\n        compare(value) {\n            if (this._contrast < value.contrast) {\n                return alfa_comparable_1.Comparison.Greater;\n            }\n            if (this._contrast > value.contrast) {\n                return alfa_comparable_1.Comparison.Less;\n            }\n            return alfa_comparable_1.Comparison.Equal;\n        }\n        toJSON() {\n            return {\n                color1: this._color1.toJSON(),\n                color2: this._color2.toJSON(),\n                contrast: this._contrast,\n            };\n        }\n    }\n    Contrast.Pairing = Pairing;\n    class Color {\n        static of(name, value) {\n            return new Color(name, value);\n        }\n        constructor(name, value) {\n            this._name = name;\n            this._value = value;\n        }\n        hash(hash) {\n            hash.writeString(this._name).writeHashable(this._value);\n        }\n        get name() {\n            return this._name;\n        }\n        get value() {\n            return this._value;\n        }\n        equals(value) {\n            return (value instanceof Color &&\n                value._name === this._name &&\n                value._value.equals(this._value));\n        }\n        toJSON() {\n            return {\n                name: this._name,\n                value: this._value.toJSON(),\n            };\n        }\n    }\n})(Contrast || (exports.Contrast = Contrast = {}));\n//# sourceMappingURL=contrast.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/common/diagnostic/contrast.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/common/diagnostic/text-spacing.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/common/diagnostic/text-spacing.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TextSpacing = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\n/**\n * @public\n */\nclass TextSpacing extends alfa_act_1.Diagnostic {\n    static of(message, property, value, fontSize, ratio, threshold, declaration, owner) {\n        return property === undefined\n            ? alfa_act_1.Diagnostic.of(message)\n            : new TextSpacing(message, property, value, fontSize, ratio, threshold, declaration, owner);\n    }\n    constructor(message, property, value, fontSize, ratio, threshold, declaration, owner) {\n        super(message);\n        this._property = property;\n        this._value = value;\n        this._fontSize = fontSize;\n        this._ratio = ratio;\n        this._threshold = threshold;\n        this._declaration = declaration;\n        this._owner = owner;\n    }\n    get property() {\n        return this._property;\n    }\n    get value() {\n        return this._value;\n    }\n    get fontSize() {\n        return this._fontSize;\n    }\n    get ratio() {\n        return this._ratio;\n    }\n    get threshold() {\n        return this._threshold;\n    }\n    get declaration() {\n        return this._declaration;\n    }\n    get owner() {\n        return this._owner;\n    }\n    equals(value) {\n        return (value instanceof TextSpacing &&\n            value._message === this._message &&\n            value._property === this._property &&\n            value._value.equals(this._value) &&\n            value._fontSize.equals(this._fontSize) &&\n            value._ratio === this._ratio &&\n            value._declaration.equals(this._declaration) &&\n            value._owner.equals(this._owner));\n    }\n    hash(hash) {\n        super.hash(hash);\n        this._owner.hash(hash);\n        hash.writeString(this._property);\n        hash.writeNumber(this._ratio);\n        hash.writeNumber(this._threshold);\n        hash.writeNumber(this._value.value);\n    }\n    toJSON() {\n        const value1 = this._value.toJSON();\n        return {\n            ...super.toJSON(),\n            property: this._property,\n            value: value1,\n            \"font-size\": this._fontSize.toJSON(),\n            ratio: this._ratio,\n            threshold: this._threshold,\n            declaration: this._declaration.toJSON(),\n            owner: this._owner.toJSON(),\n        };\n    }\n}\nexports.TextSpacing = TextSpacing;\n/**\n * @public\n */\n(function (TextSpacing) {\n    /** @public (knip) */\n    function isTextSpacing(value) {\n        return value instanceof TextSpacing;\n    }\n    TextSpacing.isTextSpacing = isTextSpacing;\n})(TextSpacing || (exports.TextSpacing = TextSpacing = {}));\n//# sourceMappingURL=text-spacing.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/common/diagnostic/text-spacing.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/common/diagnostic/with-bad-elements.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/common/diagnostic/with-bad-elements.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.WithBadElements = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_array_1 = __webpack_require__(/*! @siteimprove/alfa-array */ \"./node_modules/@siteimprove/alfa-array/src/index.js\");\n/**\n * @public\n */\nclass WithBadElements extends alfa_act_1.Diagnostic {\n    static of(message, errors = []) {\n        return new WithBadElements(message, alfa_array_1.Array.from(errors));\n    }\n    constructor(message, errors) {\n        super(message);\n        this._errors = errors;\n    }\n    get errors() {\n        return this._errors;\n    }\n    equals(value) {\n        return (value instanceof WithBadElements &&\n            value._message === this._message &&\n            alfa_array_1.Array.equals(value._errors, this._errors));\n    }\n    hash(hash) {\n        super.hash(hash);\n        this._errors.forEach((element) => element.hash(hash));\n    }\n    *[Symbol.iterator]() {\n        yield* this._errors;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            errors: this._errors.map((element) => element.path()),\n        };\n    }\n}\nexports.WithBadElements = WithBadElements;\n/**\n * @public\n */\n(function (WithBadElements) {\n    /** @public (knip) */\n    function isWithBadElements(value) {\n        return value instanceof WithBadElements;\n    }\n    WithBadElements.isWithBadElements = isWithBadElements;\n})(WithBadElements || (exports.WithBadElements = WithBadElements = {}));\n//# sourceMappingURL=with-bad-elements.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/common/diagnostic/with-bad-elements.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/common/diagnostic/with-name.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/common/diagnostic/with-name.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.WithName = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_aria_1 = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\n/**\n * @public\n */\nclass WithName extends alfa_act_1.Diagnostic {\n    static of(message, name) {\n        return name === undefined\n            ? new alfa_act_1.Diagnostic(message)\n            : new WithName(message, name);\n    }\n    constructor(message, name) {\n        super(message);\n        this._name = name;\n    }\n    get name() {\n        return this._name;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            name: this._name,\n        };\n    }\n}\nexports.WithName = WithName;\n/**\n * @public\n */\n(function (WithName) {\n    /**\n     * @public\n     */\n    function isWithName(value) {\n        return value instanceof WithName;\n    }\n    WithName.isWithName = isWithName;\n    function getName(element, device) {\n        return alfa_aria_1.Node.from(element, device).name.map((x) => x.value);\n    }\n    WithName.getName = getName;\n})(WithName || (exports.WithName = WithName = {}));\n//# sourceMappingURL=with-name.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/common/diagnostic/with-name.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/common/diagnostic/with-other-heading.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/common/diagnostic/with-other-heading.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.WithOtherHeading = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\n/**\n * @public\n */\nclass WithOtherHeading extends alfa_act_1.Diagnostic {\n    static of(message, otherHeading, currentLevel, otherLevel, otherPosition) {\n        return otherHeading === undefined ||\n            currentLevel === undefined ||\n            otherLevel === undefined ||\n            otherPosition === undefined\n            ? alfa_act_1.Diagnostic.of(message)\n            : new WithOtherHeading(message, otherHeading, currentLevel, otherLevel, otherPosition);\n    }\n    constructor(message, otherHeading, currentLevel, otherLevel, otherPosition) {\n        super(message);\n        this._otherHeading = otherHeading;\n        this._currentLevel = currentLevel;\n        this._otherLevel = otherLevel;\n        this._otherPosition = otherPosition;\n    }\n    get otherHeading() {\n        return this._otherHeading;\n    }\n    get currentHeadingLevel() {\n        return this._currentLevel;\n    }\n    get otherHeadingLevel() {\n        return this._otherLevel;\n    }\n    get otherPosition() {\n        return this._otherPosition;\n    }\n    equals(value) {\n        return (value instanceof WithOtherHeading &&\n            value._message === this._message &&\n            value._otherHeading.equals(this._otherHeading) &&\n            value._currentLevel === this._currentLevel &&\n            value._otherLevel === this._otherLevel &&\n            value._otherPosition === this._otherPosition);\n    }\n    hash(hash) {\n        super.hash(hash);\n        hash.writeNumber(this._currentLevel);\n        hash.writeNumber(this._otherLevel);\n        hash.writeString(this._otherPosition);\n        this._otherHeading.hash(hash);\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            otherHeading: this._otherHeading.toJSON(),\n            currentHeadingLevel: this._currentLevel,\n            otherHeadingLevel: this._otherLevel,\n            otherPosition: this._otherPosition,\n        };\n    }\n}\nexports.WithOtherHeading = WithOtherHeading;\n/**\n * @public\n */\n(function (WithOtherHeading) {\n    /**@public */\n    function isWithOtherHeading(value) {\n        return value instanceof WithOtherHeading;\n    }\n    WithOtherHeading.isWithOtherHeading = isWithOtherHeading;\n})(WithOtherHeading || (exports.WithOtherHeading = WithOtherHeading = {}));\n//# sourceMappingURL=with-other-heading.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/common/diagnostic/with-other-heading.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/common/diagnostic/with-role.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/common/diagnostic/with-role.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.WithRole = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_aria_1 = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\n/**\n * @public\n */\nclass WithRole extends alfa_act_1.Diagnostic {\n    static of(message, role) {\n        return role === undefined\n            ? new alfa_act_1.Diagnostic(message)\n            : new WithRole(message, role);\n    }\n    constructor(message, role) {\n        super(message);\n        this._role = role;\n    }\n    get role() {\n        return this._role;\n    }\n    equals(value) {\n        return (value instanceof WithRole &&\n            value._message === this._message &&\n            value._role === this._role);\n    }\n    hash(hash) {\n        super.hash(hash);\n        hash.writeString(this._role);\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            role: this._role,\n        };\n    }\n}\nexports.WithRole = WithRole;\n/**\n * @public\n */\n(function (WithRole) {\n    /** @public (knip) */\n    function isWithRole(value) {\n        return value instanceof WithRole;\n    }\n    WithRole.isWithRole = isWithRole;\n    function getRoleName(element, device) {\n        return alfa_aria_1.Node.from(element, device)\n            .role.map((role) => role.name)\n            .getOr(\"generic\");\n    }\n    WithRole.getRoleName = getRoleName;\n})(WithRole || (exports.WithRole = WithRole = {}));\n//# sourceMappingURL=with-role.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/common/diagnostic/with-role.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/common/dom/get-colors.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/common/dom/get-colors.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/**\n * @internal\n */\n__exportStar(__webpack_require__(/*! ./get-colors/color */ \"./node_modules/@siteimprove/alfa-rules/src/common/dom/get-colors/color.js\"), exports);\n__exportStar(__webpack_require__(/*! ./get-colors/color-error */ \"./node_modules/@siteimprove/alfa-rules/src/common/dom/get-colors/color-error.js\"), exports);\n__exportStar(__webpack_require__(/*! ./get-colors/get-background */ \"./node_modules/@siteimprove/alfa-rules/src/common/dom/get-colors/get-background.js\"), exports);\n__exportStar(__webpack_require__(/*! ./get-colors/get-foreground */ \"./node_modules/@siteimprove/alfa-rules/src/common/dom/get-colors/get-foreground.js\"), exports);\n__exportStar(__webpack_require__(/*! ./get-colors/get-layers */ \"./node_modules/@siteimprove/alfa-rules/src/common/dom/get-colors/get-layers.js\"), exports);\n//# sourceMappingURL=get-colors.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/common/dom/get-colors.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/common/dom/get-colors/color-error.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/common/dom/get-colors/color-error.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ColorError = exports.ColorErrors = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_array_1 = __webpack_require__(/*! @siteimprove/alfa-array */ \"./node_modules/@siteimprove/alfa-array/src/index.js\");\nconst alfa_equatable_1 = __webpack_require__(/*! @siteimprove/alfa-equatable */ \"./node_modules/@siteimprove/alfa-equatable/src/index.js\");\nconst alfa_json_1 = __webpack_require__(/*! @siteimprove/alfa-json */ \"./node_modules/@siteimprove/alfa-json/src/index.js\");\nconst alfa_sequence_1 = __webpack_require__(/*! @siteimprove/alfa-sequence */ \"./node_modules/@siteimprove/alfa-rules/node_modules/@siteimprove/alfa-sequence/src/index.js\");\n/**\n * @public\n */\nclass ColorErrors extends alfa_act_1.Diagnostic {\n    static of(messageOrErrors) {\n        return typeof messageOrErrors === \"string\"\n            ? alfa_act_1.Diagnostic.of(messageOrErrors)\n            : new ColorErrors(\"Could not fully resolve colors\", alfa_array_1.Array.copy(messageOrErrors));\n    }\n    constructor(message, errors) {\n        super(message);\n        this._errors = errors;\n    }\n    get errors() {\n        return this._errors;\n    }\n    equals(value) {\n        return (value instanceof ColorErrors &&\n            value._message === this._message &&\n            alfa_array_1.Array.equals(value._errors, this._errors));\n    }\n    hash(hash) {\n        super.hash(hash);\n        this._errors.forEach((error) => error.hash(hash));\n    }\n    toJSON() {\n        return { ...super.toJSON(), errors: alfa_array_1.Array.toJSON(this._errors) };\n    }\n}\nexports.ColorErrors = ColorErrors;\n/**\n * @public\n */\n(function (ColorErrors) {\n    /**@public */\n    function isColorErrors(value) {\n        return value instanceof ColorErrors;\n    }\n    ColorErrors.isColorErrors = isColorErrors;\n    function prepend(old, cur) {\n        return ColorErrors.of([\n            ...cur,\n            ...old\n                .err()\n                .map((old) => old.errors)\n                .getOr([]),\n        ]);\n    }\n    ColorErrors.prepend = prepend;\n})(ColorErrors || (exports.ColorErrors = ColorErrors = {}));\n/**\n * @public\n */\nclass ColorError extends alfa_act_1.Diagnostic {\n    constructor(message, element, type, kind) {\n        super(message);\n        this._element = element;\n        this._type = type;\n        this._kind = kind;\n    }\n    get element() {\n        return this._element;\n    }\n    get type() {\n        return this._type;\n    }\n    get kind() {\n        return this._kind;\n    }\n    equals(value) {\n        return (value instanceof ColorError &&\n            value._message === this._message &&\n            value._element.equals(this._element) &&\n            value._type === this._type &&\n            value._kind === this._kind);\n    }\n    hash(hash) {\n        super.hash(hash);\n        this._element.hash(hash);\n        hash.writeString(this._kind);\n        hash.writeString(this._type);\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            element: this._element.toJSON(),\n            type: this._type,\n            kind: this._kind,\n        };\n    }\n}\nexports.ColorError = ColorError;\n/**\n * @public\n */\n(function (ColorError) {\n    /**@public */\n    function isColorError(value) {\n        return value instanceof ColorError;\n    }\n    ColorError.isColorError = isColorError;\n    /**\n     * @internal\n     * Most color error are just about one CSS property.\n     */\n    class WithProperty extends ColorError {\n        static of(message, diagnostic) {\n            return diagnostic !== undefined\n                ? new WithProperty(message, diagnostic.type, diagnostic.kind, diagnostic.element, diagnostic.property, diagnostic.value)\n                : alfa_act_1.Diagnostic.of(message);\n        }\n        constructor(message, type, kind, element, proprety, value) {\n            super(message, element, type, kind);\n            this._property = proprety;\n            this._value = value;\n        }\n        get property() {\n            return this._property;\n        }\n        get value() {\n            return this._value;\n        }\n        equals(value) {\n            return (super.equals(value) &&\n                value instanceof WithProperty &&\n                value._property === this._property &&\n                alfa_equatable_1.Equatable.equals(value._value, this._value));\n        }\n        toJSON() {\n            return {\n                ...super.toJSON(),\n                property: this._property,\n                value: alfa_json_1.Serializable.toJSON(this._value),\n            };\n        }\n    }\n    ColorError.WithProperty = WithProperty;\n    /**\n     * @public\n     */\n    (function (WithProperty) {\n        function from(type, kind, property, message) {\n            return (element, value) => WithProperty.of(message, { type, kind, element, property, value });\n        }\n        WithProperty.from = from;\n        function isWithProperty(value) {\n            return value instanceof WithProperty;\n        }\n        WithProperty.isWithProperty = isWithProperty;\n    })(WithProperty = ColorError.WithProperty || (ColorError.WithProperty = {}));\n    ColorError.isWithProperty = WithProperty.isWithProperty;\n    ColorError.unresolvableBackgroundColor = WithProperty.from(\"layer\", \"unresolvable-background-color\", \"background-color\", \"Could not resolve background-color\");\n    ColorError.backgroundSize = WithProperty.from(\"layer\", \"background-size\", \"background-size\", \"A background-size was encountered\");\n    ColorError.externalBackgroundImage = WithProperty.from(\"layer\", \"background-image\", \"background-image\", \"A background-image with a url() was encountered\");\n    ColorError.nonStaticPosition = WithProperty.from(\"layer\", \"non-static\", \"position\", \"A non-statically positioned element was encountered\");\n    ColorError.unresolvableForegroundColor = WithProperty.from(\"foreground\", \"unresolvable-foreground-color\", \"color\", \"Could not resolve foreground color\");\n    ColorError.textShadow = WithProperty.from(\"background\", \"text-shadow\", \"text-shadow\", \"A text-shadow was encountered\");\n    /**\n     * @public\n     * We want both the value of background-image and the unresolvable stop\n     */\n    class HasUnresolvableGradientStop extends WithProperty {\n        static create(element, value, color) {\n            return new HasUnresolvableGradientStop(element, value, color);\n        }\n        constructor(element, value, color) {\n            super(\"Could not resolve gradient color stop\", \"layer\", \"unresolvable-gradient\", element, \"background-image\", value);\n            this._color = color;\n        }\n        get color() {\n            return this._color;\n        }\n        equals(value) {\n            return (super.equals(value) &&\n                value instanceof HasUnresolvableGradientStop &&\n                value._color.equals(this._color));\n        }\n        toJSON() {\n            return {\n                ...super.toJSON(),\n                color: this._color.toJSON(),\n            };\n        }\n    }\n    ColorError.HasUnresolvableGradientStop = HasUnresolvableGradientStop;\n    /**\n     * @public\n     */\n    (function (HasUnresolvableGradientStop) {\n        function isUnresolvableGradientStop(value) {\n            return value instanceof HasUnresolvableGradientStop;\n        }\n        HasUnresolvableGradientStop.isUnresolvableGradientStop = isUnresolvableGradientStop;\n    })(HasUnresolvableGradientStop = ColorError.HasUnresolvableGradientStop || (ColorError.HasUnresolvableGradientStop = {}));\n    ColorError.unresolvableGradientStop = HasUnresolvableGradientStop.create, ColorError.isUnresolvableGradientStop = HasUnresolvableGradientStop.isUnresolvableGradientStop;\n    /**\n     * @public\n     * This one does not depend on a CSS property, but on some other elements\n     */\n    class HasInterposedDescendants extends ColorError {\n        static of(message, element, positionedDescendants) {\n            return element !== undefined && positionedDescendants !== undefined\n                ? new HasInterposedDescendants(message, element, alfa_sequence_1.Sequence.from(positionedDescendants))\n                : alfa_act_1.Diagnostic.of(message);\n        }\n        constructor(message, element, positionedDescendants) {\n            super(message, element, \"layer\", \"interposed-descendant\");\n            this._positionedDescendants = positionedDescendants;\n        }\n        get positionedDescendants() {\n            return this._positionedDescendants;\n        }\n        equals(value) {\n            return (super.equals(value) &&\n                value instanceof HasInterposedDescendants &&\n                value._positionedDescendants.equals(this._positionedDescendants));\n        }\n        toJSON() {\n            return {\n                ...super.toJSON(),\n                positionedDescendants: this._positionedDescendants.toJSON(),\n            };\n        }\n    }\n    ColorError.HasInterposedDescendants = HasInterposedDescendants;\n    /**\n     * @public\n     */\n    (function (HasInterposedDescendants) {\n        function from(offsetParent, positionedDescendants) {\n            return HasInterposedDescendants.of(\"An interposed descendant element was encountered\", offsetParent, positionedDescendants);\n        }\n        HasInterposedDescendants.from = from;\n        function isInterposedDescendants(value) {\n            return value instanceof HasInterposedDescendants;\n        }\n        HasInterposedDescendants.isInterposedDescendants = isInterposedDescendants;\n    })(HasInterposedDescendants = ColorError.HasInterposedDescendants || (ColorError.HasInterposedDescendants = {}));\n    ColorError.interposedDescendants = HasInterposedDescendants.from, ColorError.isInterposedDescendants = HasInterposedDescendants.isInterposedDescendants;\n})(ColorError || (exports.ColorError = ColorError = {}));\n//# sourceMappingURL=color-error.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/common/dom/get-colors/color-error.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/common/dom/get-colors/color.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/common/dom/get-colors/color.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Color = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\n/**\n * @public\n */\nvar Color;\n(function (Color) {\n    function resolve(color, style) {\n        switch (color.type) {\n            case \"keyword\":\n                if (color.value === \"currentcolor\") {\n                    color = style.computed(\"color\").value;\n                    if (color.type === \"color\") {\n                        return alfa_option_1.Option.of(alfa_css_1.RGB.of(color.red, color.green, color.blue, alfa_css_1.Percentage.of(color.alpha.value)));\n                    }\n                }\n                if (color.value === \"canvastext\") {\n                    return alfa_option_1.Option.of(alfa_css_1.RGB.of(alfa_css_1.Percentage.of(0), alfa_css_1.Percentage.of(0), alfa_css_1.Percentage.of(0), alfa_css_1.Percentage.of(1)));\n                }\n                return alfa_option_1.None;\n            case \"color\":\n                return alfa_option_1.Option.of(alfa_css_1.RGB.of(color.red, color.green, color.blue, alfa_css_1.Percentage.of(color.alpha.value)));\n        }\n    }\n    Color.resolve = resolve;\n    /**\n     * {@link https://drafts.fxtf.org/compositing-1/#simplealphacompositing}\n     */\n    function composite(foreground, background, opacity) {\n        const foregroundOpacity = foreground.alpha.value * opacity;\n        if (foregroundOpacity === 1) {\n            return foreground;\n        }\n        const alpha = background.alpha.value * (1 - foregroundOpacity);\n        const [red, green, blue] = [\n            [foreground.red, background.red],\n            [foreground.green, background.green],\n            [foreground.blue, background.blue],\n        ].map(([a, b]) => a.value * foregroundOpacity + b.value * alpha);\n        return alfa_css_1.RGB.of(alfa_css_1.Percentage.of(red), alfa_css_1.Percentage.of(green), alfa_css_1.Percentage.of(blue), alfa_css_1.Percentage.of(foregroundOpacity + alpha));\n    }\n    Color.composite = composite;\n})(Color || (exports.Color = Color = {}));\n//# sourceMappingURL=color.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/common/dom/get-colors/color.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/common/dom/get-colors/get-background.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/common/dom/get-colors/get-background.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getBackground = void 0;\nconst alfa_cache_1 = __webpack_require__(/*! @siteimprove/alfa-cache */ \"./node_modules/@siteimprove/alfa-cache/src/index.js\");\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_selector_1 = __webpack_require__(/*! @siteimprove/alfa-selector */ \"./node_modules/@siteimprove/alfa-selector/src/index.js\");\nconst alfa_set_1 = __webpack_require__(/*! @siteimprove/alfa-set */ \"./node_modules/@siteimprove/alfa-set/src/index.js\");\nconst alfa_style_1 = __webpack_require__(/*! @siteimprove/alfa-style */ \"./node_modules/@siteimprove/alfa-style/src/index.js\");\nconst color_error_1 = __webpack_require__(/*! ./color-error */ \"./node_modules/@siteimprove/alfa-rules/src/common/dom/get-colors/color-error.js\");\nconst get_layers_1 = __webpack_require__(/*! ./get-layers */ \"./node_modules/@siteimprove/alfa-rules/src/common/dom/get-colors/get-layers.js\");\nconst { isVisibleShadow } = alfa_style_1.Style;\nconst backgroundCacheWithFakeOpacity = alfa_cache_1.Cache.empty();\nconst backgroundCacheWithDefaultOpacity = alfa_cache_1.Cache.empty();\n/**\n * Get the background colors of an element by :\n * 1. gathering all layers, until a fully opaque one is found.\n * 2. merging them into one composite color\n *\n * @public\n */\nfunction getBackground(element, device, context = alfa_selector_1.Context.empty(), opacity, ignoredInterposedDescendants = alfa_set_1.Set.empty()) {\n    const textShadow = alfa_style_1.Style.from(element, device, context).computed(\"text-shadow\").value;\n    const cache = opacity === undefined\n        ? backgroundCacheWithDefaultOpacity\n        : backgroundCacheWithFakeOpacity;\n    return cache\n        .get(device, alfa_cache_1.Cache.empty)\n        .get(context, alfa_cache_1.Cache.empty)\n        .get(ignoredInterposedDescendants, alfa_cache_1.Cache.empty)\n        .get(element, () => {\n        let error = alfa_option_1.None;\n        // If the element has a visible text-shadow, we don't try to guess how it looks.\n        if (textShadow.type === \"list\" &&\n            alfa_iterable_1.Iterable.some(textShadow, (shadow) => isVisibleShadow(shadow))) {\n            error = alfa_option_1.Option.of(color_error_1.ColorError.textShadow(element, textShadow));\n        }\n        // We want to gather layers errors even if we've already found one error.\n        const layersColors = get_layers_1.Layer.getLayers(element, device, context, opacity, ignoredInterposedDescendants);\n        return error.isNone() && layersColors.isOk()\n            ? layersColors.map((layers) => layers.reduce(get_layers_1.Layer.merge, [white]))\n            : alfa_result_1.Err.of(color_error_1.ColorErrors.prepend(layersColors, error));\n    });\n}\nexports.getBackground = getBackground;\n// We make the initial backdrop solid white as this can be assumed\n// to be the color of the canvas onto which the other backgrounds\n// are rendered.\nconst white = alfa_css_1.RGB.of(alfa_css_1.Percentage.of(1), alfa_css_1.Percentage.of(1), alfa_css_1.Percentage.of(1), alfa_css_1.Percentage.of(1));\n//# sourceMappingURL=get-background.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/common/dom/get-colors/get-background.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/common/dom/get-colors/get-foreground.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/common/dom/get-colors/get-foreground.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getForeground = void 0;\nconst alfa_cache_1 = __webpack_require__(/*! @siteimprove/alfa-cache */ \"./node_modules/@siteimprove/alfa-cache/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_selector_1 = __webpack_require__(/*! @siteimprove/alfa-selector */ \"./node_modules/@siteimprove/alfa-selector/src/index.js\");\nconst alfa_set_1 = __webpack_require__(/*! @siteimprove/alfa-set */ \"./node_modules/@siteimprove/alfa-set/src/index.js\");\nconst alfa_style_1 = __webpack_require__(/*! @siteimprove/alfa-style */ \"./node_modules/@siteimprove/alfa-style/src/index.js\");\nconst color_1 = __webpack_require__(/*! ./color */ \"./node_modules/@siteimprove/alfa-rules/src/common/dom/get-colors/color.js\");\nconst color_error_1 = __webpack_require__(/*! ./color-error */ \"./node_modules/@siteimprove/alfa-rules/src/common/dom/get-colors/color-error.js\");\nconst get_background_1 = __webpack_require__(/*! ./get-background */ \"./node_modules/@siteimprove/alfa-rules/src/common/dom/get-colors/get-background.js\");\nconst { isElement } = alfa_dom_1.Element;\nconst foregroundCache = alfa_cache_1.Cache.empty();\n/**\n * Get the foreground colors of an element by:\n * 1. get the color property\n * 2. merge it with the background colors, according to opacity.\n *\n * @public\n */\nfunction getForeground(element, device, context = alfa_selector_1.Context.empty(), ignoredInterposedDescendants = alfa_set_1.Set.empty()) {\n    return foregroundCache\n        .get(device, alfa_cache_1.Cache.empty)\n        .get(context, alfa_cache_1.Cache.empty)\n        .get(ignoredInterposedDescendants, alfa_cache_1.Cache.empty)\n        .get(element, () => {\n        let error = alfa_option_1.None;\n        const style = alfa_style_1.Style.from(element, device, context);\n        let foregroundColor = style.computed(\"color\").value;\n        let parent = element.parent().filter(isElement);\n        const isCurrentColor = (color) => color.type === \"keyword\" && color.value === \"currentcolor\";\n        while (parent.isSome() && isCurrentColor(foregroundColor)) {\n            foregroundColor = alfa_style_1.Style.from(parent.get(), device, context).computed(\"color\").value;\n            parent = parent.get().parent().filter(isElement);\n        }\n        const color = color_1.Color.resolve(foregroundColor, style);\n        if (color.isNone()) {\n            error = alfa_option_1.Option.of(color_error_1.ColorError.unresolvableForegroundColor(element, foregroundColor));\n        }\n        const opacity = style.computed(\"opacity\").value;\n        // If the color is not transparent, and the element is fully opaque,\n        // then we do not need to dig further\n        if (color.isSome() && color.get().alpha.value * opacity.value === 1) {\n            return alfa_result_1.Result.of([color.get()]);\n        }\n        // If the foreground color is (partly) transparent, we need to merge it\n        // with its background and subsequent layers.\n        //\n        // The opacity of the element is applied to all its content, including\n        // the text. This means that we must first compute the foreground color\n        // as if the element was opaque (just handling the alpha channel of the\n        // fore- and backgrounds), and then use the opacity to blend in the\n        // previous layers.\n        // First, we gather the background colors, even if we did not manage to\n        // get a foreground colors, in order to have a list of all ColorError on\n        // the way.\n        const backgroundColors = (0, get_background_1.getBackground)(element, device, context, 1, ignoredInterposedDescendants);\n        // If we have both foreground and background color, we can merge them.\n        if (color.isSome() && backgroundColors.isOk()) {\n            // The background color may itself have an alpha channel, independently\n            // of the opacity of the element, and this alpha channel needs to be\n            // taken into account (as well as the alpha/opacity of all previous layers).\n            const colors = backgroundColors.map((background) => background.map((backdrop) => color_1.Color.composite(color.get(), backdrop, 1)));\n            // Finally, we need to merge again, this time using the opacity of the\n            // current element.\n            for (const parent of element.parent(alfa_dom_1.Node.flatTree).filter(isElement)) {\n                return colors.flatMap((colors) => (0, get_background_1.getBackground)(parent, device, context, undefined, ignoredInterposedDescendants).map((background) => colors.flatMap((color) => background.map((backdrop) => color_1.Color.composite(color, backdrop, opacity.value)))));\n            }\n            // If there is no parent, we just return the colors found so far.\n            return colors;\n        }\n        else {\n            // We are missing either foreground or background.\n            return alfa_result_1.Err.of(color_error_1.ColorErrors.prepend(backgroundColors, error));\n        }\n    });\n}\nexports.getForeground = getForeground;\n//# sourceMappingURL=get-foreground.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/common/dom/get-colors/get-foreground.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/common/dom/get-colors/get-layers.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/common/dom/get-colors/get-layers.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Layer = void 0;\nconst alfa_array_1 = __webpack_require__(/*! @siteimprove/alfa-array */ \"./node_modules/@siteimprove/alfa-array/src/index.js\");\nconst alfa_cache_1 = __webpack_require__(/*! @siteimprove/alfa-cache */ \"./node_modules/@siteimprove/alfa-cache/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_selector_1 = __webpack_require__(/*! @siteimprove/alfa-selector */ \"./node_modules/@siteimprove/alfa-selector/src/index.js\");\nconst alfa_set_1 = __webpack_require__(/*! @siteimprove/alfa-set */ \"./node_modules/@siteimprove/alfa-set/src/index.js\");\nconst alfa_style_1 = __webpack_require__(/*! @siteimprove/alfa-style */ \"./node_modules/@siteimprove/alfa-style/src/index.js\");\nconst get_interposed_descendant_1 = __webpack_require__(/*! ../get-interposed-descendant */ \"./node_modules/@siteimprove/alfa-rules/src/common/dom/get-interposed-descendant.js\");\nconst color_1 = __webpack_require__(/*! ./color */ \"./node_modules/@siteimprove/alfa-rules/src/common/dom/get-colors/color.js\");\nconst color_error_1 = __webpack_require__(/*! ./color-error */ \"./node_modules/@siteimprove/alfa-rules/src/common/dom/get-colors/color-error.js\");\nconst { isElement } = alfa_dom_1.Element;\nconst { hasTransparentBackground, isPositioned } = alfa_style_1.Style;\n/**\n * @public\n */\nclass Layer {\n    static of(colors, opacity) {\n        return new Layer(alfa_array_1.Array.from(colors), opacity);\n    }\n    constructor(colors, opacity) {\n        this._colors = colors;\n        this._opacity = opacity;\n    }\n    get colors() {\n        return this._colors;\n    }\n    get opacity() {\n        return this._opacity;\n    }\n}\nexports.Layer = Layer;\n/**\n * @public\n */\n(function (Layer) {\n    const layersCacheWithFakeOpacity = alfa_cache_1.Cache.empty();\n    const layersCacheWithDefaultOpacity = alfa_cache_1.Cache.empty();\n    /**\n     * Gather all background layers of an element.\n     * The layers can be set both by the element's own background property, and\n     * by its ancestors, depending on transparency.\n     * Since we do not have layout information, we simply assume that the DOM tree\n     * ancestry mimics the actual layout of boxes.\n     */\n    function getLayers(element, device, context = alfa_selector_1.Context.empty(), \n    // Possible override of the element's opacity.\n    opacity, ignoredInterposedDescendants = alfa_set_1.Set.empty()) {\n        const cache = opacity === undefined\n            ? layersCacheWithDefaultOpacity\n            : layersCacheWithFakeOpacity;\n        return cache\n            .get(device, alfa_cache_1.Cache.empty)\n            .get(context, alfa_cache_1.Cache.empty)\n            .get(ignoredInterposedDescendants, alfa_cache_1.Cache.empty)\n            .get(element, () => {\n            const style = alfa_style_1.Style.from(element, device, context);\n            const currentLayers = getCurrentLayers(element, device, context, opacity);\n            const layers = currentLayers.getOr([]);\n            const errors = currentLayers.getErrOr([]);\n            // If the current layer is fully opaque, no need to go further\n            if (errors.length === 0 &&\n                layers.length > 0 &&\n                layers.every((layer) => layer.opacity === 1 &&\n                    layer.colors.every((color) => color.alpha.value === 1))) {\n                return alfa_result_1.Result.of(layers);\n            }\n            // If the current element is positioned,\n            // we don't know exactly where it stands and bail out.\n            if (isPositioned(device, \"absolute\", \"fixed\")(element)) {\n                errors.push(color_error_1.ColorError.nonStaticPosition(element, style.computed(\"position\").value));\n            }\n            // If the current element has interposed descendants that:\n            // 1. have non-transparent background; and\n            // 2. should not be ignored,\n            // we don't know exactly where they are and bail out.\n            const interposedDescendants = (0, get_interposed_descendant_1.getInterposedDescendant)(device, element)\n                .reject(hasTransparentBackground(device))\n                .reject(ignoredInterposedDescendants.has.bind(ignoredInterposedDescendants));\n            if (!interposedDescendants.isEmpty()) {\n                errors.push(color_error_1.ColorError.interposedDescendants(element, interposedDescendants));\n            }\n            // If the background layer does not have a lower layer that is fully opaque,\n            // we need to also locate the layers sitting behind, i.e. one the parent.\n            for (const parent of element.parent(alfa_dom_1.Node.flatTree).filter(isElement)) {\n                const layersColors = getLayers(parent, device, context, \n                // The opacity override only applies to the last layer, so it is not\n                // used in the recursive calls\n                undefined, ignoredInterposedDescendants);\n                return errors.length === 0\n                    ? layersColors.map((parentLayers) => parentLayers.concat(layers))\n                    : alfa_result_1.Err.of(color_error_1.ColorErrors.prepend(layersColors, errors));\n            }\n            // If there is no parent, this means we're at the root. In that case,\n            // we simply return the layers we've found so far.\n            return errors.length === 0\n                ? alfa_result_1.Result.of(layers)\n                : alfa_result_1.Err.of(color_error_1.ColorErrors.of(errors));\n        });\n    }\n    Layer.getLayers = getLayers;\n    /**\n     * Merge colors in a layer with colors in an existing backdrop.\n     */\n    function merge(backdrops, layer) {\n        return layer.colors.reduce((layers, color) => layers.concat(backdrops.map((backdrop) => color_1.Color.composite(color, backdrop, layer.opacity))), []);\n    }\n    Layer.merge = merge;\n    /**\n     * Get the layers defined on a element (in its background property).\n     *\n     * @private\n     */\n    function getCurrentLayers(element, device, context = alfa_selector_1.Context.empty(), \n    // Possible override of the element's opacity.\n    opacity) {\n        const style = alfa_style_1.Style.from(element, device, context);\n        const backgroundColor = style.computed(\"background-color\").value;\n        const backgroundImage = style.computed(\"background-image\").value;\n        const backgroundSize = style.computed(\"background-size\").value;\n        const color = color_1.Color.resolve(backgroundColor, style);\n        opacity = opacity ?? style.computed(\"opacity\").value.value;\n        const layers = [];\n        const errors = [];\n        if (color.isSome()) {\n            layers.push(Layer.of([color.get()], opacity));\n        }\n        else {\n            errors.push(color_error_1.ColorError.unresolvableBackgroundColor(element, backgroundColor));\n        }\n        for (const image of backgroundImage) {\n            if (image.type === \"keyword\") {\n                continue;\n            }\n            // We currently have no way of extracting colors from images, so we simply\n            // bail out if we encounter a background image.\n            if (image.image.type === \"url\") {\n                errors.push(color_error_1.ColorError.externalBackgroundImage(element, backgroundImage));\n                continue;\n            }\n            // If there is a background-size, we currently have no way of guessing\n            // whether it is large enough to go under the text or not.\n            // So we simply bail out.\n            if (!backgroundSize.equals(style.initial(\"background-size\").value)) {\n                errors.push(color_error_1.ColorError.backgroundSize(element, backgroundSize));\n                continue;\n            }\n            // For each gradient, we extract all color stops into a background layer of\n            // their own. As gradients need a start and an end point, there will always\n            // be at least two color stops.\n            const stops = [];\n            for (const item of image.image.items) {\n                if (item.type === \"stop\") {\n                    const color = color_1.Color.resolve(item.color, style);\n                    if (color.isSome()) {\n                        stops.push(color.get());\n                    }\n                    else {\n                        errors.push(color_error_1.ColorError.unresolvableGradientStop(element, backgroundImage, item.color));\n                    }\n                }\n            }\n            layers.push(Layer.of(stops, opacity));\n        }\n        return errors.length === 0 ? alfa_result_1.Result.of(layers) : alfa_result_1.Err.of(errors);\n    }\n})(Layer || (exports.Layer = Layer = {}));\n//# sourceMappingURL=get-layers.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/common/dom/get-colors/get-layers.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/common/dom/get-interposed-descendant.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/common/dom/get-interposed-descendant.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getInterposedDescendant = void 0;\nconst alfa_cache_1 = __webpack_require__(/*! @siteimprove/alfa-cache */ \"./node_modules/@siteimprove/alfa-cache/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_refinement_1 = __webpack_require__(/*! @siteimprove/alfa-refinement */ \"./node_modules/@siteimprove/alfa-refinement/src/index.js\");\nconst alfa_sequence_1 = __webpack_require__(/*! @siteimprove/alfa-sequence */ \"./node_modules/@siteimprove/alfa-rules/node_modules/@siteimprove/alfa-sequence/src/index.js\");\nconst alfa_style_1 = __webpack_require__(/*! @siteimprove/alfa-style */ \"./node_modules/@siteimprove/alfa-style/src/index.js\");\nconst { isElement } = alfa_dom_1.Element;\nconst { and } = alfa_refinement_1.Refinement;\nconst { getOffsetParent, isPositioned, isVisible } = alfa_style_1.Style;\n// For each device and document's root, we store a map from the offset parents\n// to its interposed descendants.\n// Due to the definition of offset parent, searching a subtree rooted at element\n// can easily find interposed descendants of *other* elements. In order to not\n// waste the time spent to find them, it is simpler to fill the cache for a full\n// document tree at once.\n// Since offset parents stay within the same document, there is no need to\n// escape document boundaries.\nconst cache = alfa_cache_1.Cache.empty();\nfunction getInterposedDescendant(device, element) {\n    const root = element.root(alfa_dom_1.Node.flatTree);\n    return cache\n        .get(device, alfa_cache_1.Cache.empty)\n        .get(root, () => root\n        .inclusiveDescendants(alfa_dom_1.Node.flatTree)\n        // Find all absolutely positioned elements.\n        .filter(and(isElement, and(isPositioned(device, \"absolute\", \"fixed\"), isVisible(device))))\n        // Only keep the ones who have an offset parent\n        .filter((element) => getOffsetParent(element, device).isSome())\n        // Group the result by the offset parent\n        // getOffsetParent is cached, so this is not expensive.\n        // getOffsetParent is guaranteed to be Some by the previous filter.\n        .groupBy((element) => getOffsetParent(element, device).getUnsafe()))\n        .get(element)\n        .getOr(alfa_sequence_1.Sequence.empty());\n}\nexports.getInterposedDescendant = getInterposedDescendant;\n//# sourceMappingURL=get-interposed-descendant.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/common/dom/get-interposed-descendant.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/common/expectation/contrast.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/common/expectation/contrast.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.contrast = exports.hasSufficientContrast = exports.hasSufficientContrastDeprecated = void 0;\nconst alfa_cache_1 = __webpack_require__(/*! @siteimprove/alfa-cache */ \"./node_modules/@siteimprove/alfa-cache/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_set_1 = __webpack_require__(/*! @siteimprove/alfa-set */ \"./node_modules/@siteimprove/alfa-set/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst group_1 = __webpack_require__(/*! ../act/group */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/group.js\");\nconst question_1 = __webpack_require__(/*! ../act/question */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/question.js\");\nconst contrast_1 = __webpack_require__(/*! ../diagnostic/contrast */ \"./node_modules/@siteimprove/alfa-rules/src/common/diagnostic/contrast.js\");\nconst get_colors_1 = __webpack_require__(/*! ../dom/get-colors */ \"./node_modules/@siteimprove/alfa-rules/src/common/dom/get-colors.js\");\nconst contrast_2 = __webpack_require__(/*! ../outcome/contrast */ \"./node_modules/@siteimprove/alfa-rules/src/common/outcome/contrast.js\");\nconst predicate_1 = __webpack_require__(/*! ../predicate */ \"./node_modules/@siteimprove/alfa-rules/src/common/predicate.js\");\nconst { isElement } = alfa_dom_1.Element;\nconst { flatMap, map, takeWhile } = alfa_iterable_1.Iterable;\nconst { min, max, round } = Math;\n/**\n * @deprecated This is only used in the deprecated R66v1 and R69v1.\n */\nfunction hasSufficientContrastDeprecated(target, device, largeTextThreshold, normalTextThreshold) {\n    // Associated Applicability should ensure that target have Element as parent.\n    // Additionally, stray text nodes should not exist in our use case and we'd\n    // rather crash if finding one.\n    const parent = target.parent(alfa_dom_1.Node.flatTree).getUnsafe();\n    const foregrounds = question_1.Question.of(\"foreground-colors\", target).answerIf((0, get_colors_1.getForeground)(parent, device));\n    const backgrounds = question_1.Question.of(\"background-colors\", target).answerIf((0, get_colors_1.getBackground)(parent, device));\n    const threshold = (0, predicate_1.isLargeText)(device)(target)\n        ? largeTextThreshold\n        : normalTextThreshold;\n    return {\n        1: foregrounds.map((foregrounds) => backgrounds.map((backgrounds) => {\n            const { pairings, highest } = getPairings(foregrounds, backgrounds);\n            return (0, expectation_1.expectation)(\n            // Accept if  single pairing is good enough.\n            highest >= threshold, () => contrast_2.Contrast.HasSufficientContrast(highest, threshold, pairings), () => contrast_2.Contrast.HasInsufficientContrast(highest, threshold, pairings));\n        })),\n    };\n}\nexports.hasSufficientContrastDeprecated = hasSufficientContrastDeprecated;\n/**\n * @internal\n */\nfunction hasSufficientContrast(target, device, largeTextThreshold, normalTextThreshold) {\n    // Associated Applicability should ensure that target have Element as parent.\n    // Additionally, stray text nodes should not exist in our use case and we'd\n    // rather crash if finding one.\n    const parent = target.parent(alfa_dom_1.Node.flatTree).getUnsafe();\n    // We try to compute foreground and background colors first.\n    // If they resolve correctly, we're happy and do not need to ask anything.\n    // But if they do have interposed descendants, we need to ask which ones to\n    // ignore, and recompute colors.\n    // When no interposed descendants are encountered, the second call to\n    // getBackground/getForeground should trigger a cache hit and be cheap since\n    // Set.empty() is a static value.\n    const foreground = (0, get_colors_1.getForeground)(parent, device)\n        // if we cannot resolve automatically\n        .err()\n        .map((errors) => flatMap(\n    // We only keep the initial \"interposed-descendants\" problems. As soon as we\n    // encounter some other problem, the \"ignored-interposed-elements\" question\n    // won't solve it, and we'll ask for colors anyway. So there is no need to ask\n    // \"ignored-interposed-elements\" for them.\n    takeWhile(errors.errors, get_colors_1.ColorError.isInterposedDescendants), \n    // and keep the interposed elements.\n    (error) => error.positionedDescendants))\n        .getOr([]);\n    const background = (0, get_colors_1.getBackground)(parent, device)\n        .err()\n        .map((errors) => flatMap(takeWhile(errors.errors, get_colors_1.ColorError.isInterposedDescendants), (error) => error.positionedDescendants))\n        .getOr([]);\n    // We use a set to dedupe elements, it is likely that the same are interposed\n    // for foreground and background.\n    const interposedDescendants = alfa_set_1.Set.from(foreground).concat(background);\n    const ignoredInterposedElements = question_1.Question.of(\"ignored-interposed-elements\", group_1.Group.of(interposedDescendants), target).answerIf(getIntersectors(parent, interposedDescendants, device).map((intersectors) => interposedDescendants.subtract(intersectors)));\n    const foregrounds = question_1.Question.of(\"foreground-colors\", target);\n    const backgrounds = question_1.Question.of(\"background-colors\", target);\n    const threshold = (0, predicate_1.isLargeText)(device)(target)\n        ? largeTextThreshold\n        : normalTextThreshold;\n    return {\n        1: ignoredInterposedElements.map((ignored) => {\n            const ignoredInterposed = alfa_set_1.Set.from(ignored).filter(isElement);\n            return foregrounds\n                .answerIf((0, get_colors_1.getForeground)(parent, device, undefined, ignoredInterposed))\n                .map((foregrounds) => backgrounds\n                .answerIf((0, get_colors_1.getBackground)(parent, device, undefined, undefined, ignoredInterposed))\n                .map((backgrounds) => {\n                const { pairings, highest } = getPairings(foregrounds, backgrounds);\n                return (0, expectation_1.expectation)(\n                // Accept if  single pairing is good enough.\n                highest >= threshold, () => contrast_2.Contrast.HasSufficientContrast(highest, threshold, pairings), () => contrast_2.Contrast.HasInsufficientContrast(highest, threshold, pairings));\n            }));\n        }),\n    };\n}\nexports.hasSufficientContrast = hasSufficientContrast;\nconst cache = alfa_cache_1.Cache.empty();\n/**\n * For each FG and each BG color, compute the contrast and store the pairing\n */\nfunction getPairings(foregrounds, backgrounds) {\n    return cache.get(foregrounds, alfa_cache_1.Cache.empty).get(backgrounds, () => {\n        const pairings = [\n            ...flatMap(foregrounds, (foreground) => map(backgrounds, (background) => contrast_1.Contrast.Pairing.of([\"foreground\", foreground], [\"background\", background], contrast(foreground, background)))),\n        ];\n        const highest = pairings.reduce((highest, pairing) => max(highest, pairing.contrast), 0);\n        return { pairings, highest };\n    });\n}\n/**\n * {@link https://w3c.github.io/wcag/guidelines/#dfn-relative-luminance}\n */\nfunction luminance(color) {\n    const [red, green, blue] = [color.red, color.green, color.blue].map((c) => {\n        const component = c.type === \"number\" ? c.value / 0xff : c.value;\n        return component <= 0.03928\n            ? component / 12.92\n            : Math.pow((component + 0.055) / 1.055, 2.4);\n    });\n    return 0.2126 * red + 0.7152 * green + 0.0722 * blue;\n}\n/**\n * {@link https://w3c.github.io/wcag/guidelines/#dfn-contrast-ratio}\n *\n * @internal\n */\nfunction contrast(foreground, background) {\n    const lf = luminance(foreground);\n    const lb = luminance(background);\n    const contrast = (max(lf, lb) + 0.05) / (min(lf, lb) + 0.05);\n    return round(contrast * 100) / 100;\n}\nexports.contrast = contrast;\n/**\n * Finds elements from a collection of candidate that intersect with a given element\n *\n * @remarks\n * If either the element or one of the `candidates` doesn't have layout, we can't fully decide intersection and return `None`.\n */\nfunction getIntersectors(element, candidates, device) {\n    // If the collection of candidates is empty we don't need layout to determine that there are no intersectors\n    if (alfa_iterable_1.Iterable.isEmpty(candidates)) {\n        return alfa_option_1.Option.of(candidates);\n    }\n    const elementBox = element.getBoundingBox(device);\n    if (!elementBox.isSome() ||\n        alfa_iterable_1.Iterable.some(candidates, (candidate) => candidate.getBoundingBox(device).isNone())) {\n        return alfa_option_1.None;\n    }\n    return alfa_option_1.Option.of(alfa_iterable_1.Iterable.filter(candidates, (canditate) => elementBox\n        .get()\n        .intersects(canditate.getBoundingBox(device).getUnsafe())));\n}\n//# sourceMappingURL=contrast.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/common/expectation/contrast.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/common/expectation/get-refresh-time.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/common/expectation/get-refresh-time.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getRefreshTime = void 0;\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst whitespace = /\\s/;\nconst digit = /\\d/;\n/**\n * Parse the content attribute of a <meta http-equiv=\"refresh\" content =\"…\" /> element\n * and return the time before the refresh occurs.\n *\n * {@link https://html.spec.whatwg.org/#attr-meta-http-equiv-refresh}\n */\nfunction getRefreshTime(content) {\n    if (content.length === 0) {\n        return alfa_option_1.None;\n    }\n    let i = 0;\n    while (whitespace.test(content[i])) {\n        i++;\n    }\n    const start = i;\n    while (digit.test(content[i])) {\n        i++;\n    }\n    if (start === i) {\n        return alfa_option_1.None;\n    }\n    const next = content[i];\n    // As long as the time of the refresh is ended correctly, the URL won't matter\n    // in terms of the validity of the refresh. If the URL is therefore invalid,\n    // the refresh will simply redirect to the current page.\n    if (next !== undefined && next !== \";\" && next !== \",\") {\n        return alfa_option_1.None;\n    }\n    return alfa_option_1.Option.of(parseInt(content.substring(start, i), 10));\n}\nexports.getRefreshTime = getRefreshTime;\n//# sourceMappingURL=get-refresh-time.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/common/expectation/get-refresh-time.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/common/expectation/is-wide-enough.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/common/expectation/is-wide-enough.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = exports.isWideEnough = void 0;\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_style_1 = __webpack_require__(/*! @siteimprove/alfa-style */ \"./node_modules/@siteimprove/alfa-style/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst text_spacing_1 = __webpack_require__(/*! ../diagnostic/text-spacing */ \"./node_modules/@siteimprove/alfa-rules/src/common/diagnostic/text-spacing.js\");\n/**\n * @internal\n */\nfunction isWideEnough(target, device, property, threshold) {\n    const style = alfa_style_1.Style.from(target, device);\n    const fontSize = style.computed(\"font-size\").value;\n    const value = style.computed(property).value;\n    // The source is guaranteed to exist by the hasSpecifiedStyle\n    // filter in Applicability.\n    const declaration = style.computed(property).source.getUnsafe();\n    let ratio;\n    let used;\n    switch (value.type) {\n        case \"length\":\n            used = value;\n            ratio = value.value / fontSize.value;\n            break;\n        case \"number\":\n            used = fontSize.scale(value.value);\n            ratio = value.value;\n            break;\n        case \"keyword\":\n            // Used value for font-size of `normal` is 1.2 times font-size.\n            used = fontSize.scale(1.2);\n            ratio = 1.2;\n    }\n    return {\n        1: (0, expectation_1.expectation)(ratio >= threshold, () => Outcomes.IsWideEnough(property, used, fontSize, ratio, threshold, declaration, \n        // The owner is guaranteed to exist by the hasSpecifiedStyle\n        // filter in Applicability.\n        declaration.owner.getUnsafe()), () => Outcomes.IsNotWideEnough(property, used, fontSize, ratio, threshold, declaration, \n        // The owner is guaranteed to exist by the hasSpecifiedStyle\n        // filter in Applicability.\n        declaration.owner.getUnsafe())),\n    };\n}\nexports.isWideEnough = isWideEnough;\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.IsWideEnough = (prop, value, fontSize, ratio, threshold, declaration, owner) => alfa_result_1.Ok.of(text_spacing_1.TextSpacing.of(`${prop} is at least ${threshold} times the font-size`, prop, value, fontSize, ratio, threshold, declaration, owner));\n    Outcomes.IsNotWideEnough = (prop, value, fontSize, ratio, threshold, declaration, owner) => alfa_result_1.Err.of(text_spacing_1.TextSpacing.of(`${prop} is less than ${threshold} times the font-size`, prop, value, fontSize, ratio, threshold, declaration, owner));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n//# sourceMappingURL=is-wide-enough.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/common/expectation/is-wide-enough.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/common/expectation/media-text-alternative.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/common/expectation/media-text-alternative.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = exports.videoTextAlternative = exports.audioTextAlternative = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_aria_1 = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst question_1 = __webpack_require__(/*! ../act/question */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/question.js\");\nconst { isPerceivableForAll } = alfa_aria_1.DOM;\nfunction mediaTextAlternative(alt, label, device, kind) {\n    return {\n        1: alt.map((alt) => (0, expectation_1.expectation)(alt.isSome(), () => (0, expectation_1.expectation)(alt.some(isPerceivableForAll(device)), () => Outcomes.HasPerceivableAlternative(kind), () => Outcomes.HasNonPerceivableAlternative(kind)), () => Outcomes.HasNoAlternative(kind))),\n        2: label.map((label) => (0, expectation_1.expectation)(label.isSome(), () => (0, expectation_1.expectation)(label.some(isPerceivableForAll(device)), () => Outcomes.HasPerceivableLabel(kind), () => Outcomes.HasNonPerceivableLabel(kind)), () => Outcomes.HasNoLabel(kind))),\n    };\n}\n// keeping the next two functions separate because question should be split in two at some point.\nfunction audioTextAlternative(target, device) {\n    const alt = question_1.Question.of(\"text-alternative\", target, `Where is the text alternative of the \\`<audio>\\` element?`);\n    const label = question_1.Question.of(\"label\", target, `Where is the text that labels the \\`<audio>\\` element as an audio alternative?`);\n    return mediaTextAlternative(alt, label, device, \"<audio>\");\n}\nexports.audioTextAlternative = audioTextAlternative;\nfunction videoTextAlternative(target, device) {\n    const alt = question_1.Question.of(\"text-alternative\", target, `Where is the text alternative of the \\`<video>\\` element?`);\n    const label = question_1.Question.of(\"label\", target, `Where is the text that labels the \\`<video>\\` element as a video alternative?`);\n    return mediaTextAlternative(alt, label, device, \"<video>\");\n}\nexports.videoTextAlternative = videoTextAlternative;\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.HasPerceivableAlternative = (kind) => alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The \\`${kind}\\` element has a text alternative that is perceivable`));\n    Outcomes.HasNonPerceivableAlternative = (kind) => alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The \\`${kind}\\` element has a text alternative that is not perceivable`));\n    Outcomes.HasNoAlternative = (kind) => alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The \\`${kind}\\` element has no text alternative`));\n    Outcomes.HasPerceivableLabel = (kind) => alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The \\`${kind}\\` element is labelled as an alternative for text and the label is perceivable`));\n    Outcomes.HasNonPerceivableLabel = (kind) => alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The \\`${kind}\\` element is labelled as an alternative for text, but the label is not perceivable`));\n    Outcomes.HasNoLabel = (kind) => alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The \\`${kind}\\` element is not labelled as an alternative for text`));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n//# sourceMappingURL=media-text-alternative.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/common/expectation/media-text-alternative.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/common/expectation/media-transcript.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/common/expectation/media-transcript.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = exports.videoTranscript = exports.audioTranscript = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_aria_1 = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst question_1 = __webpack_require__(/*! ../act/question */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/question.js\");\nconst { isPerceivableForAll } = alfa_aria_1.DOM;\nconst { isElement } = alfa_dom_1.Element;\nconst { and } = alfa_predicate_1.Predicate;\nfunction mediaTranscript(transcript, transcriptLink, device, kind) {\n    return {\n        1: transcript.map((transcript) => {\n            if (transcript.isNone()) {\n                return transcriptLink.map((transcriptLink) => {\n                    if (transcriptLink.isNone()) {\n                        return alfa_option_1.Option.of(Outcomes.HasNoTranscriptLink(kind));\n                    }\n                    if (transcriptLink\n                        .filter(and(isElement, isPerceivableForAll(device)))\n                        .isNone()) {\n                        return alfa_option_1.Option.of(Outcomes.HasNonPerceivableLink(kind));\n                    }\n                    return alfa_option_1.Option.of(Outcomes.HasPerceivableLink(kind));\n                });\n            }\n            return (0, expectation_1.expectation)(transcript.some(and(isElement, isPerceivableForAll(device))), () => Outcomes.HasPerceivableTranscript(kind), () => Outcomes.HasNonPerceivableTranscript(kind));\n        }),\n    };\n}\nfunction audioTranscript(target, device) {\n    const alt = question_1.Question.of(\"transcript\", target, `Where is the transcript that describes the content of the \\`<audio>\\` element?`);\n    const label = question_1.Question.of(\"transcript-link\", target, `Where is the link pointing to a perceivable transcript that describes the content of the \\`<audio>\\` element?`);\n    return mediaTranscript(alt, label, device, \"<audio>\");\n}\nexports.audioTranscript = audioTranscript;\nfunction videoTranscript(target, device) {\n    const alt = question_1.Question.of(\"transcript\", target, `Where is the transcript that describes the content of the \\`<video>\\` element?`);\n    const label = question_1.Question.of(\"transcript-link\", target, `Where is the link pointing to a perceivable transcript that describes the content of the \\`<video>\\` element?`);\n    return mediaTranscript(alt, label, device, \"<video>\");\n}\nexports.videoTranscript = videoTranscript;\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.HasPerceivableTranscript = (kind) => alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The \\`${kind}\\` element has a transcript that is perceivable`));\n    Outcomes.HasPerceivableLink = (kind) => alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The \\`${kind}\\` element has a link that is perceivable`));\n    Outcomes.HasNoTranscriptLink = (kind) => alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The \\`${kind}\\` element does not have a transcript`));\n    Outcomes.HasNonPerceivableLink = (kind) => alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The \\`${kind}\\` has a link to transcript, but the link is not perceivable`));\n    Outcomes.HasNonPerceivableTranscript = (kind) => alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The \\`${kind}\\` element has a transcript that is not perceivable`));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n//# sourceMappingURL=media-transcript.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/common/expectation/media-transcript.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/common/expectation/video-description-track-accurate.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/common/expectation/video-description-track-accurate.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = exports.videoDescriptionTrackAccurate = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst question_1 = __webpack_require__(/*! ../act/question */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/question.js\");\nfunction videoDescriptionTrackAccurate(target) {\n    return {\n        1: question_1.Question.of(\"track-describes-video\", target).map((trackDescribesVideo) => (0, expectation_1.expectation)(trackDescribesVideo, () => Outcomes.HasDescriptionTrack, () => Outcomes.HasNoDescriptionTrack)),\n    };\n}\nexports.videoDescriptionTrackAccurate = videoDescriptionTrackAccurate;\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.HasDescriptionTrack = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The \\`<video>\\` element has a track that describes its visual information\n    in the language of the \\`<video>\\` element or the page`));\n    Outcomes.HasNoDescriptionTrack = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The \\`<video>\\` element does not have a track that describes its visual\n    information in the language of the \\`<video>\\` element or the page`));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n//# sourceMappingURL=video-description-track-accurate.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/common/expectation/video-description-track-accurate.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/common/normalize.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/common/normalize.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.normalize = void 0;\nfunction normalize(input) {\n    return input.trim().toLowerCase().replace(/\\s+/g, \" \");\n}\nexports.normalize = normalize;\n//# sourceMappingURL=normalize.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/common/normalize.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/common/outcome/contrast.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/common/outcome/contrast.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Contrast = void 0;\nconst contrast_1 = __webpack_require__(/*! ../diagnostic/contrast */ \"./node_modules/@siteimprove/alfa-rules/src/common/diagnostic/contrast.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nvar Contrast;\n(function (Contrast) {\n    Contrast.HasSufficientContrast = (highest, threshold, pairings) => alfa_result_1.Ok.of(contrast_1.Contrast.of(`The highest possible contrast of the text is ${highest}:1 which is\n        above the required contrast of ${threshold}:1`, threshold, pairings));\n    Contrast.HasInsufficientContrast = (highest, threshold, pairings) => alfa_result_1.Err.of(contrast_1.Contrast.of(`The highest possible contrast of the text is ${highest}:1 which is\n        below the required contrast of ${threshold}:1`, threshold, pairings));\n})(Contrast || (exports.Contrast = Contrast = {}));\n//# sourceMappingURL=contrast.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/common/outcome/contrast.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/common/outcome/refresh-delay.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/common/outcome/refresh-delay.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.RefreshDelay = void 0;\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nvar RefreshDelay;\n(function (RefreshDelay) {\n    RefreshDelay.HasImmediateRefresh = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The refresh or redirect happens immediately`));\n    RefreshDelay.HasTwentyHoursDelayedRefresh = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The refresh or redirect happens after 20 hours or more`));\n    RefreshDelay.HasDelayedRefresh = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The refresh or redirect is delayed`));\n})(RefreshDelay || (exports.RefreshDelay = RefreshDelay = {}));\n//# sourceMappingURL=refresh-delay.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/common/outcome/refresh-delay.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/common/predicate.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/common/predicate.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./predicate/is-large-text */ \"./node_modules/@siteimprove/alfa-rules/src/common/predicate/is-large-text.js\"), exports);\n__exportStar(__webpack_require__(/*! ./predicate/is-at-the-start */ \"./node_modules/@siteimprove/alfa-rules/src/common/predicate/is-at-the-start.js\"), exports);\n__exportStar(__webpack_require__(/*! ./predicate/is-whitespace */ \"./node_modules/@siteimprove/alfa-rules/src/common/predicate/is-whitespace.js\"), exports);\n__exportStar(__webpack_require__(/*! ./predicate/reference-same-resource */ \"./node_modules/@siteimprove/alfa-rules/src/common/predicate/reference-same-resource.js\"), exports);\n//# sourceMappingURL=predicate.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/common/predicate.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/common/predicate/is-aria-controls-optional.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/common/predicate/is-aria-controls-optional.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isAriaControlsOptional = void 0;\nconst alfa_aria_1 = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst { hasAttribute, hasRole } = alfa_aria_1.Node;\nconst { and } = alfa_predicate_1.Predicate;\n/**\n * `aria-controls` is marked as required on `combobox` in ARIA 1.2, not in ARIA\n * 1.3. Additionally, the authoring practice essentially only consider it\n * when the combobox is expanded.\n * {@link https://www.w3.org/WAI/ARIA/apg/patterns/combobox/#wai-ariaroles,states,andproperties}\n *\n * We rely on `aria-expanded` being set correctly to detect the need.\n *\n * @internal\n */\nexports.isAriaControlsOptional = and(hasRole(\"combobox\"), hasAttribute(\"aria-expanded\", (expanded) => expanded !== \"true\"));\n//# sourceMappingURL=is-aria-controls-optional.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/common/predicate/is-aria-controls-optional.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/common/predicate/is-at-the-start.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/common/predicate/is-at-the-start.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isAtTheStart = void 0;\nconst alfa_aria_1 = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst alfa_device_1 = __webpack_require__(/*! @siteimprove/alfa-device */ \"./node_modules/@siteimprove/alfa-device/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst { isPerceivableForAll } = alfa_aria_1.DOM;\nconst { isContent } = alfa_dom_1.Element;\nconst { and } = alfa_predicate_1.Predicate;\n/**\n * {@link https://act-rules.github.io/glossary/#just-before}\n *\n * ACT rules requires the second node to be perceivable content.\n * Since we cannot really enforce that at type level, and plan to use that\n * with `<main>` as second node, we extend the concept to \"at the start\":\n *\n * there is no perceivable *content* between the first (included) and\n * second (excluded) of the nodes, in tree order in the flat tree.\n *\n * Thus:\n * * [N1, …, N2] => N1 is at the start of N2 if no perceivable in [N1, …, N2[\n * * [N2, …, N1] => N1 is at the start of N2 if no perceivable in [N2, …, N1[\n * In both cases, jumping to N1 give access to all the perceivable nodes\n * after N2, and no more.\n *\n * Perceivable containers (e.g. <div><span>Hello</span></div>) are actually OK,\n * only perceivable actual content is bad.\n *\n * Note that the def is actually symmetrical, but N2 is conceptually a\n * container (`<main>`) while N1 is a single point (an anchor),\n * hence the asymmetry in the code.\n *\n * Complexity: the size of the subtree anchored at the lowest common ancestor.\n */\nfunction isAtTheStart(node2, device = alfa_device_1.Device.standard()) {\n    return (node1) => !alfa_dom_1.Node.getNodesBetween(node1, node2, {\n        includeFirst: true,\n        includeSecond: false,\n    }).some(and(isPerceivableForAll(device), isContent(alfa_dom_1.Node.fullTree)));\n}\nexports.isAtTheStart = isAtTheStart;\n//# sourceMappingURL=is-at-the-start.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/common/predicate/is-at-the-start.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/common/predicate/is-large-text.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/common/predicate/is-large-text.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isLargeText = void 0;\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_style_1 = __webpack_require__(/*! @siteimprove/alfa-style */ \"./node_modules/@siteimprove/alfa-style/src/index.js\");\nconst { isElement } = alfa_dom_1.Element;\n/**\n * {@link https://w3c.github.io/wcag/guidelines/#dfn-large-scale}\n *\n * @remarks\n * Due to potential rounding issues in the px -> pt conversion,\n * we accept anything which is within 0.001pt of the threshold.\n */\nfunction isLargeText(device) {\n    return (text) => {\n        const parent = text.parent(alfa_dom_1.Node.flatTree).filter(isElement);\n        if (!parent.isSome()) {\n            return false;\n        }\n        const style = alfa_style_1.Style.from(parent.get(), device);\n        const size = style.computed(\"font-size\").value.withUnit(\"pt\");\n        if (size.value > 17.999 /* >= 18 */) {\n            return true;\n        }\n        const weight = style.computed(\"font-weight\").value;\n        return size.value > 13.999 /* >= 14 */ && weight.value >= 700;\n    };\n}\nexports.isLargeText = isLargeText;\n//# sourceMappingURL=is-large-text.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/common/predicate/is-large-text.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/common/predicate/is-whitespace.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/common/predicate/is-whitespace.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isWhitespace = void 0;\nconst isWhitespace = (string) => string.length > 0 && string.trim().length === 0;\nexports.isWhitespace = isWhitespace;\n//# sourceMappingURL=is-whitespace.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/common/predicate/is-whitespace.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/common/predicate/reference-same-resource.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/common/predicate/reference-same-resource.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.referenceSameResource = void 0;\nconst alfa_url_1 = __webpack_require__(/*! @siteimprove/alfa-url */ \"./node_modules/@siteimprove/alfa-url/src/index.js\");\n/**\n * Check if two elements reference the same resource.\n */\nfunction referenceSameResource(base) {\n    return (a, b) => {\n        if (a.name === b.name) {\n            switch (a.name) {\n                case \"a\":\n                case \"area\":\n                    return a\n                        .attribute(\"href\")\n                        .some((a) => alfa_url_1.URL.parse(a.value, base).some((a) => b\n                        .attribute(\"href\")\n                        .some((b) => alfa_url_1.URL.parse(b.value, base).some((b) => a.equals(b)))));\n                case \"iframe\":\n                    return (a\n                        .attribute(\"srcdoc\")\n                        .some((a) => b.attribute(\"srcdoc\").some((b) => a.value === b.value)) ||\n                        a\n                            .attribute(\"src\")\n                            .some((a) => alfa_url_1.URL.parse(a.value, base).some((a) => b\n                            .attribute(\"src\")\n                            .some((b) => alfa_url_1.URL.parse(b.value, base).some((b) => a.equals(b))))));\n            }\n        }\n        return false;\n    };\n}\nexports.referenceSameResource = referenceSameResource;\n//# sourceMappingURL=reference-same-resource.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/common/predicate/reference-same-resource.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/deprecated.js":
/*!****************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/deprecated.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DR69 = exports.DR66 = exports.DR36 = exports.DR34 = exports.DR18 = exports.DR6 = void 0;\nconst rule_1 = __webpack_require__(/*! ./sia-dr6/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-dr6/rule.js\");\nexports.DR6 = rule_1.default;\nconst rule_2 = __webpack_require__(/*! ./sia-dr18/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-dr18/rule.js\");\nexports.DR18 = rule_2.default;\nconst rule_3 = __webpack_require__(/*! ./sia-dr34/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-dr34/rule.js\");\nexports.DR34 = rule_3.default;\nconst rule_4 = __webpack_require__(/*! ./sia-dr36/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-dr36/rule.js\");\nexports.DR36 = rule_4.default;\nconst rule_5 = __webpack_require__(/*! ./sia-dr66/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-dr66/rule.js\");\nexports.DR66 = rule_5.default;\nconst rule_6 = __webpack_require__(/*! ./sia-dr69/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-dr69/rule.js\");\nexports.DR69 = rule_6.default;\n//# sourceMappingURL=deprecated.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/deprecated.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/experimental.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/experimental.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.R109 = exports.R82 = exports.ER87 = void 0;\nconst rule_1 = __webpack_require__(/*! ./sia-er87/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-er87/rule.js\");\nexports.ER87 = rule_1.default;\nconst rule_2 = __webpack_require__(/*! ./sia-r82/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r82/rule.js\");\nexports.R82 = rule_2.default;\nconst rule_3 = __webpack_require__(/*! ./sia-r109/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r109/rule.js\");\nexports.R109 = rule_3.default;\n//# sourceMappingURL=experimental.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/experimental.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/index.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Rules = exports.deprecatedRules = exports.experimentalRules = void 0;\nconst alfa_record_1 = __webpack_require__(/*! @siteimprove/alfa-record */ \"./node_modules/@siteimprove/alfa-record/src/index.js\");\nconst alfa_sequence_1 = __webpack_require__(/*! @siteimprove/alfa-sequence */ \"./node_modules/@siteimprove/alfa-rules/node_modules/@siteimprove/alfa-sequence/src/index.js\");\n__exportStar(__webpack_require__(/*! ./tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\"), exports);\nconst experimentalRules = __webpack_require__(/*! ./experimental */ \"./node_modules/@siteimprove/alfa-rules/src/experimental.js\");\nexports.experimentalRules = experimentalRules;\nconst deprecatedRules = __webpack_require__(/*! ./deprecated */ \"./node_modules/@siteimprove/alfa-rules/src/deprecated.js\");\nexports.deprecatedRules = deprecatedRules;\nconst rules = __webpack_require__(/*! ./rules */ \"./node_modules/@siteimprove/alfa-rules/src/rules.js\");\n/**\n * An immutable record of individual rules. The type of each individual rule is\n * preserved in the record.\n *\n * @public\n */\nexports.Rules = alfa_record_1.Record.of(rules);\n/**\n * A list of all available rules joined under a single type. The type of each\n * rule is not preserved in the list as the types have been flattened.\n *\n * @public\n */\nconst FlattenedRules = alfa_sequence_1.Sequence.from(exports.Rules.values());\nexports[\"default\"] = FlattenedRules;\n__exportStar(__webpack_require__(/*! ./common/act/diagnostic */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/diagnostic.js\"), exports);\n__exportStar(__webpack_require__(/*! ./common/act/group */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/group.js\"), exports);\n__exportStar(__webpack_require__(/*! ./common/act/question */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/question.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/rules.js":
/*!***********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/rules.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.R55 = exports.R54 = exports.R53 = exports.R50 = exports.R49 = exports.R48 = exports.R47 = exports.R46 = exports.R45 = exports.R44 = exports.R43 = exports.R42 = exports.R41 = exports.R40 = exports.R39 = exports.R38 = exports.R37 = exports.R35 = exports.R33 = exports.R32 = exports.R31 = exports.R30 = exports.R29 = exports.R28 = exports.R27 = exports.R26 = exports.R25 = exports.R24 = exports.R23 = exports.R22 = exports.R21 = exports.R20 = exports.R19 = exports.R18 = exports.R17 = exports.R16 = exports.R15 = exports.R14 = exports.R13 = exports.R12 = exports.R11 = exports.R10 = exports.R9 = exports.R8 = exports.R7 = exports.R5 = exports.R4 = exports.R3 = exports.R2 = exports.R1 = void 0;\nexports.R110 = exports.R96 = exports.R95 = exports.R94 = exports.R93 = exports.R92 = exports.R91 = exports.R90 = exports.R87 = exports.R86 = exports.R85 = exports.R84 = exports.R83 = exports.R81 = exports.R80 = exports.R79 = exports.R78 = exports.R77 = exports.R76 = exports.R75 = exports.R74 = exports.R73 = exports.R72 = exports.R71 = exports.R70 = exports.R69 = exports.R68 = exports.R67 = exports.R66 = exports.R65 = exports.R64 = exports.R63 = exports.R62 = exports.R61 = exports.R60 = exports.R59 = exports.R57 = exports.R56 = void 0;\nconst rule_1 = __webpack_require__(/*! ./sia-r1/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r1/rule.js\");\nexports.R1 = rule_1.default;\nconst rule_2 = __webpack_require__(/*! ./sia-r2/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r2/rule.js\");\nexports.R2 = rule_2.default;\nconst rule_3 = __webpack_require__(/*! ./sia-r3/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r3/rule.js\");\nexports.R3 = rule_3.default;\nconst rule_4 = __webpack_require__(/*! ./sia-r4/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r4/rule.js\");\nexports.R4 = rule_4.default;\nconst rule_5 = __webpack_require__(/*! ./sia-r5/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r5/rule.js\");\nexports.R5 = rule_5.default;\nconst rule_6 = __webpack_require__(/*! ./sia-r7/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r7/rule.js\");\nexports.R7 = rule_6.default;\nconst rule_7 = __webpack_require__(/*! ./sia-r8/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r8/rule.js\");\nexports.R8 = rule_7.default;\nconst rule_8 = __webpack_require__(/*! ./sia-r9/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r9/rule.js\");\nexports.R9 = rule_8.default;\nconst rule_9 = __webpack_require__(/*! ./sia-r10/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r10/rule.js\");\nexports.R10 = rule_9.default;\nconst rule_10 = __webpack_require__(/*! ./sia-r11/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r11/rule.js\");\nexports.R11 = rule_10.default;\nconst rule_11 = __webpack_require__(/*! ./sia-r12/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r12/rule.js\");\nexports.R12 = rule_11.default;\nconst rule_12 = __webpack_require__(/*! ./sia-r13/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r13/rule.js\");\nexports.R13 = rule_12.default;\nconst rule_13 = __webpack_require__(/*! ./sia-r14/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r14/rule.js\");\nexports.R14 = rule_13.default;\nconst rule_14 = __webpack_require__(/*! ./sia-r15/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r15/rule.js\");\nexports.R15 = rule_14.default;\nconst rule_15 = __webpack_require__(/*! ./sia-r16/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r16/rule.js\");\nexports.R16 = rule_15.default;\nconst rule_16 = __webpack_require__(/*! ./sia-r17/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r17/rule.js\");\nexports.R17 = rule_16.default;\nconst rule_17 = __webpack_require__(/*! ./sia-r18/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r18/rule.js\");\nexports.R18 = rule_17.default;\nconst rule_18 = __webpack_require__(/*! ./sia-r19/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r19/rule.js\");\nexports.R19 = rule_18.default;\nconst rule_19 = __webpack_require__(/*! ./sia-r20/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r20/rule.js\");\nexports.R20 = rule_19.default;\nconst rule_20 = __webpack_require__(/*! ./sia-r21/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r21/rule.js\");\nexports.R21 = rule_20.default;\nconst rule_21 = __webpack_require__(/*! ./sia-r22/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r22/rule.js\");\nexports.R22 = rule_21.default;\nconst rule_22 = __webpack_require__(/*! ./sia-r23/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r23/rule.js\");\nexports.R23 = rule_22.default;\nconst rule_23 = __webpack_require__(/*! ./sia-r24/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r24/rule.js\");\nexports.R24 = rule_23.default;\nconst rule_24 = __webpack_require__(/*! ./sia-r25/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r25/rule.js\");\nexports.R25 = rule_24.default;\nconst rule_25 = __webpack_require__(/*! ./sia-r26/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r26/rule.js\");\nexports.R26 = rule_25.default;\nconst rule_26 = __webpack_require__(/*! ./sia-r27/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r27/rule.js\");\nexports.R27 = rule_26.default;\nconst rule_27 = __webpack_require__(/*! ./sia-r28/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r28/rule.js\");\nexports.R28 = rule_27.default;\nconst rule_28 = __webpack_require__(/*! ./sia-r29/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r29/rule.js\");\nexports.R29 = rule_28.default;\nconst rule_29 = __webpack_require__(/*! ./sia-r30/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r30/rule.js\");\nexports.R30 = rule_29.default;\nconst rule_30 = __webpack_require__(/*! ./sia-r31/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r31/rule.js\");\nexports.R31 = rule_30.default;\nconst rule_31 = __webpack_require__(/*! ./sia-r32/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r32/rule.js\");\nexports.R32 = rule_31.default;\nconst rule_32 = __webpack_require__(/*! ./sia-r33/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r33/rule.js\");\nexports.R33 = rule_32.default;\nconst rule_33 = __webpack_require__(/*! ./sia-r35/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r35/rule.js\");\nexports.R35 = rule_33.default;\nconst rule_34 = __webpack_require__(/*! ./sia-r37/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r37/rule.js\");\nexports.R37 = rule_34.default;\nconst rule_35 = __webpack_require__(/*! ./sia-r38/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r38/rule.js\");\nexports.R38 = rule_35.default;\nconst rule_36 = __webpack_require__(/*! ./sia-r39/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r39/rule.js\");\nexports.R39 = rule_36.default;\nconst rule_37 = __webpack_require__(/*! ./sia-r40/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r40/rule.js\");\nexports.R40 = rule_37.default;\nconst rule_38 = __webpack_require__(/*! ./sia-r41/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r41/rule.js\");\nexports.R41 = rule_38.default;\nconst rule_39 = __webpack_require__(/*! ./sia-r42/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r42/rule.js\");\nexports.R42 = rule_39.default;\nconst rule_40 = __webpack_require__(/*! ./sia-r43/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r43/rule.js\");\nexports.R43 = rule_40.default;\nconst rule_41 = __webpack_require__(/*! ./sia-r44/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r44/rule.js\");\nexports.R44 = rule_41.default;\nconst rule_42 = __webpack_require__(/*! ./sia-r45/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r45/rule.js\");\nexports.R45 = rule_42.default;\nconst rule_43 = __webpack_require__(/*! ./sia-r46/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r46/rule.js\");\nexports.R46 = rule_43.default;\nconst rule_44 = __webpack_require__(/*! ./sia-r47/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r47/rule.js\");\nexports.R47 = rule_44.default;\nconst rule_45 = __webpack_require__(/*! ./sia-r48/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r48/rule.js\");\nexports.R48 = rule_45.default;\nconst rule_46 = __webpack_require__(/*! ./sia-r49/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r49/rule.js\");\nexports.R49 = rule_46.default;\nconst rule_47 = __webpack_require__(/*! ./sia-r50/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r50/rule.js\");\nexports.R50 = rule_47.default;\nconst rule_48 = __webpack_require__(/*! ./sia-r53/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r53/rule.js\");\nexports.R53 = rule_48.default;\nconst rule_49 = __webpack_require__(/*! ./sia-r54/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r54/rule.js\");\nexports.R54 = rule_49.default;\nconst rule_50 = __webpack_require__(/*! ./sia-r55/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r55/rule.js\");\nexports.R55 = rule_50.default;\nconst rule_51 = __webpack_require__(/*! ./sia-r56/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r56/rule.js\");\nexports.R56 = rule_51.default;\nconst rule_52 = __webpack_require__(/*! ./sia-r57/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r57/rule.js\");\nexports.R57 = rule_52.default;\nconst rule_53 = __webpack_require__(/*! ./sia-r59/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r59/rule.js\");\nexports.R59 = rule_53.default;\nconst rule_54 = __webpack_require__(/*! ./sia-r60/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r60/rule.js\");\nexports.R60 = rule_54.default;\nconst rule_55 = __webpack_require__(/*! ./sia-r61/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r61/rule.js\");\nexports.R61 = rule_55.default;\nconst rule_56 = __webpack_require__(/*! ./sia-r62/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r62/rule.js\");\nexports.R62 = rule_56.default;\nconst rule_57 = __webpack_require__(/*! ./sia-r63/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r63/rule.js\");\nexports.R63 = rule_57.default;\nconst rule_58 = __webpack_require__(/*! ./sia-r64/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r64/rule.js\");\nexports.R64 = rule_58.default;\nconst rule_59 = __webpack_require__(/*! ./sia-r65/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r65/rule.js\");\nexports.R65 = rule_59.default;\nconst rule_60 = __webpack_require__(/*! ./sia-r66/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r66/rule.js\");\nexports.R66 = rule_60.default;\nconst rule_61 = __webpack_require__(/*! ./sia-r67/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r67/rule.js\");\nexports.R67 = rule_61.default;\nconst rule_62 = __webpack_require__(/*! ./sia-r68/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r68/rule.js\");\nexports.R68 = rule_62.default;\nconst rule_63 = __webpack_require__(/*! ./sia-r69/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r69/rule.js\");\nexports.R69 = rule_63.default;\nconst rule_64 = __webpack_require__(/*! ./sia-r70/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r70/rule.js\");\nexports.R70 = rule_64.default;\nconst rule_65 = __webpack_require__(/*! ./sia-r71/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r71/rule.js\");\nexports.R71 = rule_65.default;\nconst rule_66 = __webpack_require__(/*! ./sia-r72/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r72/rule.js\");\nexports.R72 = rule_66.default;\nconst rule_67 = __webpack_require__(/*! ./sia-r73/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r73/rule.js\");\nexports.R73 = rule_67.default;\nconst rule_68 = __webpack_require__(/*! ./sia-r74/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r74/rule.js\");\nexports.R74 = rule_68.default;\nconst rule_69 = __webpack_require__(/*! ./sia-r75/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r75/rule.js\");\nexports.R75 = rule_69.default;\nconst rule_70 = __webpack_require__(/*! ./sia-r76/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r76/rule.js\");\nexports.R76 = rule_70.default;\nconst rule_71 = __webpack_require__(/*! ./sia-r77/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r77/rule.js\");\nexports.R77 = rule_71.default;\nconst rule_72 = __webpack_require__(/*! ./sia-r78/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r78/rule.js\");\nexports.R78 = rule_72.default;\nconst rule_73 = __webpack_require__(/*! ./sia-r79/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r79/rule.js\");\nexports.R79 = rule_73.default;\nconst rule_74 = __webpack_require__(/*! ./sia-r80/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r80/rule.js\");\nexports.R80 = rule_74.default;\nconst rule_75 = __webpack_require__(/*! ./sia-r81/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r81/rule.js\");\nexports.R81 = rule_75.default;\nconst rule_76 = __webpack_require__(/*! ./sia-r83/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r83/rule.js\");\nexports.R83 = rule_76.default;\nconst rule_77 = __webpack_require__(/*! ./sia-r84/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r84/rule.js\");\nexports.R84 = rule_77.default;\nconst rule_78 = __webpack_require__(/*! ./sia-r85/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r85/rule.js\");\nexports.R85 = rule_78.default;\nconst rule_79 = __webpack_require__(/*! ./sia-r86/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r86/rule.js\");\nexports.R86 = rule_79.default;\nconst rule_80 = __webpack_require__(/*! ./sia-r87/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r87/rule.js\");\nexports.R87 = rule_80.default;\nconst rule_81 = __webpack_require__(/*! ./sia-r90/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r90/rule.js\");\nexports.R90 = rule_81.default;\nconst rule_82 = __webpack_require__(/*! ./sia-r91/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r91/rule.js\");\nexports.R91 = rule_82.default;\nconst rule_83 = __webpack_require__(/*! ./sia-r92/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r92/rule.js\");\nexports.R92 = rule_83.default;\nconst rule_84 = __webpack_require__(/*! ./sia-r93/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r93/rule.js\");\nexports.R93 = rule_84.default;\nconst rule_85 = __webpack_require__(/*! ./sia-r94/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r94/rule.js\");\nexports.R94 = rule_85.default;\nconst rule_86 = __webpack_require__(/*! ./sia-r95/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r95/rule.js\");\nexports.R95 = rule_86.default;\nconst rule_87 = __webpack_require__(/*! ./sia-r96/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r96/rule.js\");\nexports.R96 = rule_87.default;\nconst rule_88 = __webpack_require__(/*! ./sia-r110/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r110/rule.js\");\nexports.R110 = rule_88.default;\n//# sourceMappingURL=rules.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/rules.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-dr18/rule.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-dr18/rule.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_aria_1 = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_sequence_1 = __webpack_require__(/*! @siteimprove/alfa-sequence */ \"./node_modules/@siteimprove/alfa-rules/node_modules/@siteimprove/alfa-sequence/src/index.js\");\nconst alfa_set_1 = __webpack_require__(/*! @siteimprove/alfa-set */ \"./node_modules/@siteimprove/alfa-set/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst aria = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst { hasRole, isIncludedInTheAccessibilityTree } = alfa_aria_1.DOM;\nconst { hasDisplaySize, hasInputType } = alfa_dom_1.Element;\nconst { test, property } = alfa_predicate_1.Predicate;\nconst { getElementDescendants } = alfa_dom_1.Query;\n/**\n * @deprecated Use SIA-R18 version 2 instead\n */\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r18\",\n    requirements: [alfa_wcag_1.Technique.of(\"ARIA5\")],\n    tags: [tags_1.Scope.Component, tags_1.Stability.Deprecated],\n    evaluate({ device, document }) {\n        const global = alfa_set_1.Set.from(alfa_aria_1.Role.of(\"roletype\").supportedAttributes);\n        return {\n            applicability() {\n                return getElementDescendants(document, alfa_dom_1.Node.fullTree)\n                    .filter(isIncludedInTheAccessibilityTree(device))\n                    .flatMap((element) => alfa_sequence_1.Sequence.from(element.attributes).filter(property(\"name\", aria.Attribute.isName)));\n            },\n            expectations(target) {\n                return {\n                    1: (0, expectation_1.expectation)(global.has(target.name) ||\n                        test(hasRole(device, (role) => role.isAttributeSupported(target.name)), \n                        // Since the attribute was found on a element, it has a owner.\n                        target.owner.getUnsafe()) ||\n                        ariaHtmlAllowed(target), () => Outcomes.IsAllowed, () => Outcomes.IsNotAllowed),\n                };\n            },\n        };\n    },\n});\nfunction ariaHtmlAllowed(target) {\n    const attributeName = target.name;\n    for (const element of target.owner) {\n        switch (element.name) {\n            case \"body\":\n                return alfa_aria_1.Role.of(\"document\").isAttributeSupported(attributeName);\n            case \"input\":\n                return (hasInputType(\"date\", \"datetime-local\", \"email\", \"month\", \"password\", \"time\", \"week\")(element) && alfa_aria_1.Role.of(\"textbox\").isAttributeSupported(attributeName));\n            case \"select\":\n                return ((hasDisplaySize((size) => size !== 1)(element) &&\n                    alfa_aria_1.Role.of(\"combobox\").isAttributeSupported(attributeName)) ||\n                    alfa_aria_1.Role.of(\"menu\").isAttributeSupported(attributeName));\n            case \"video\":\n                return alfa_aria_1.Role.of(\"application\").isAttributeSupported(attributeName);\n        }\n    }\n    return false;\n}\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.IsAllowed = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The attribute is allowed for the element on which it is specified`));\n    Outcomes.IsNotAllowed = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The attribute is not allowed for the element on which it is specified`));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-dr18/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-dr34/rule.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-dr34/rule.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst video_1 = __webpack_require__(/*! ../common/applicability/video */ \"./node_modules/@siteimprove/alfa-rules/src/common/applicability/video.js\");\nconst video_description_track_accurate_1 = __webpack_require__(/*! ../common/expectation/video-description-track-accurate */ \"./node_modules/@siteimprove/alfa-rules/src/common/expectation/video-description-track-accurate.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r34\",\n    requirements: [alfa_wcag_1.Technique.of(\"H96\")],\n    tags: [tags_1.Scope.Component, tags_1.Stability.Deprecated],\n    evaluate({ device, document }) {\n        return {\n            applicability() {\n                return (0, video_1.video)(document, device, {\n                    audio: { has: false },\n                    track: { has: true, kind: \"descriptions\" },\n                });\n            },\n            expectations(target) {\n                return (0, video_description_track_accurate_1.videoDescriptionTrackAccurate)(target);\n            },\n        };\n    },\n});\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-dr34/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-dr36/rule.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-dr36/rule.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst video_1 = __webpack_require__(/*! ../common/applicability/video */ \"./node_modules/@siteimprove/alfa-rules/src/common/applicability/video.js\");\nconst video_description_track_accurate_1 = __webpack_require__(/*! ../common/expectation/video-description-track-accurate */ \"./node_modules/@siteimprove/alfa-rules/src/common/expectation/video-description-track-accurate.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r36\",\n    requirements: [alfa_wcag_1.Technique.of(\"G78\"), alfa_wcag_1.Technique.of(\"H96\")],\n    tags: [tags_1.Scope.Component, tags_1.Stability.Deprecated],\n    evaluate({ device, document }) {\n        return {\n            applicability() {\n                return (0, video_1.video)(document, device, {\n                    audio: { has: true },\n                    track: { has: true, kind: \"descriptions\" },\n                });\n            },\n            expectations(target) {\n                return (0, video_description_track_accurate_1.videoDescriptionTrackAccurate)(target);\n            },\n        };\n    },\n});\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-dr36/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-dr6/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-dr6/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_iana_1 = __webpack_require__(/*! @siteimprove/alfa-iana */ \"./node_modules/@siteimprove/alfa-iana/src/index.js\");\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst { hasAttribute, isDocumentElement } = alfa_dom_1.Element;\nconst { isEmpty } = alfa_iterable_1.Iterable;\nconst { and, not, tee, test } = alfa_predicate_1.Predicate;\n/**\n * @deprecated\n * This rule has been deprecated because `xml:lang` attribute are not used\n * anymore.\n */\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r6\",\n    requirements: [alfa_wcag_1.Criterion.of(\"3.1.1\")],\n    tags: [tags_1.Scope.Page, tags_1.Stability.Deprecated],\n    evaluate({ document }) {\n        // These will be set at most once since the rule only applies to the document element\n        let cachedLang;\n        let cachedXmlLang;\n        return {\n            applicability() {\n                return document\n                    .children()\n                    .filter(isDocumentElement)\n                    .filter((element) => test(and(hasAttribute(\"lang\", (value) => alfa_iana_1.Language.parse(value)\n                    .tee((lang) => {\n                    cachedLang = lang;\n                })\n                    .isOk()), hasAttribute(\"xml:lang\", tee(not(isEmpty), (xmlLang) => {\n                    cachedXmlLang = xmlLang;\n                }))), element));\n            },\n            expectations(target) {\n                // `cachedLang` and `cachedXmlLang` are set by the applicability\n                return {\n                    1: (0, expectation_1.expectation)(alfa_iana_1.Language.parse(cachedXmlLang).every((xmlLang) => xmlLang.primary.equals(cachedLang.primary)), () => Outcomes.HasMatchingLanguages, () => Outcomes.HasNonMatchingLanguages),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.HasMatchingLanguages = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The \\`lang\\` and \\`xml:lang\\` attributes have matching primary language subtags`));\n    Outcomes.HasNonMatchingLanguages = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The \\`lang\\` and \\`xml:lang\\` attributes do not have matching primary language subtags`));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-dr6/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-dr66/rule.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-dr66/rule.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst non_disabled_texts_1 = __webpack_require__(/*! ../common/applicability/non-disabled-texts */ \"./node_modules/@siteimprove/alfa-rules/src/common/applicability/non-disabled-texts.js\");\nconst contrast_1 = __webpack_require__(/*! ../common/expectation/contrast */ \"./node_modules/@siteimprove/alfa-rules/src/common/expectation/contrast.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\n/**\n * @deprecated Use SIA-R66 version 2 instead\n */\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r66\",\n    requirements: [alfa_wcag_1.Criterion.of(\"1.4.6\")],\n    tags: [tags_1.Scope.Component, tags_1.Stability.Deprecated],\n    evaluate({ device, document }) {\n        return {\n            applicability() {\n                return (0, non_disabled_texts_1.nonDisabledTexts)(document, device);\n            },\n            expectations(target) {\n                return (0, contrast_1.hasSufficientContrastDeprecated)(target, device, 4.5, 7);\n            },\n        };\n    },\n});\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-dr66/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-dr69/rule.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-dr69/rule.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst non_disabled_texts_1 = __webpack_require__(/*! ../common/applicability/non-disabled-texts */ \"./node_modules/@siteimprove/alfa-rules/src/common/applicability/non-disabled-texts.js\");\nconst contrast_1 = __webpack_require__(/*! ../common/expectation/contrast */ \"./node_modules/@siteimprove/alfa-rules/src/common/expectation/contrast.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\n/**\n * @deprecated Use SIA-R69 version 2 instead\n */\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r69\",\n    requirements: [alfa_wcag_1.Criterion.of(\"1.4.3\"), alfa_wcag_1.Criterion.of(\"1.4.6\")],\n    tags: [tags_1.Scope.Component, tags_1.Stability.Deprecated],\n    evaluate({ device, document }) {\n        return {\n            applicability() {\n                return (0, non_disabled_texts_1.nonDisabledTexts)(document, device);\n            },\n            expectations(target) {\n                return (0, contrast_1.hasSufficientContrastDeprecated)(target, device, 3, 4.5);\n            },\n        };\n    },\n});\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-dr69/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-er87/rule.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-er87/rule.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_aria_1 = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_refinement_1 = __webpack_require__(/*! @siteimprove/alfa-refinement */ \"./node_modules/@siteimprove/alfa-refinement/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_selector_1 = __webpack_require__(/*! @siteimprove/alfa-selector */ \"./node_modules/@siteimprove/alfa-selector/src/index.js\");\nconst alfa_style_1 = __webpack_require__(/*! @siteimprove/alfa-style */ \"./node_modules/@siteimprove/alfa-style/src/index.js\");\nconst alfa_url_1 = __webpack_require__(/*! @siteimprove/alfa-url */ \"./node_modules/@siteimprove/alfa-url/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst question_1 = __webpack_require__(/*! ../common/act/question */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/question.js\");\nconst predicate_1 = __webpack_require__(/*! ../common/predicate */ \"./node_modules/@siteimprove/alfa-rules/src/common/predicate.js\");\nconst with_document_element_1 = __webpack_require__(/*! ../common/applicability/with-document-element */ \"./node_modules/@siteimprove/alfa-rules/src/common/applicability/with-document-element.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst { hasRole, isIgnored } = alfa_aria_1.DOM;\nconst { hasName, isElement } = alfa_dom_1.Element;\nconst { and } = alfa_refinement_1.Refinement;\nconst { isTabbable, isVisible } = alfa_style_1.Style;\nconst { getElementDescendants } = alfa_dom_1.Query;\n/**\n * This version of R87 ask questions whose subject is not the target of the rule.\n * The context of the question is still the test target (the document), but the\n * subjects can be various elements (the first focusable element, or its\n * destination once it's been identified as a link).\n * This needs changes in Dory, Nemo, and likely databases to be stored;\n * this needs changes in the Page Report to be able to highlight an element\n * different from the test target.\n */\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r87\",\n    requirements: [alfa_wcag_1.Technique.of(\"G1\")],\n    tags: [tags_1.Scope.Page, tags_1.Stability.Experimental, tags_1.Version.of(2)],\n    evaluate({ device, document, response }) {\n        return {\n            applicability() {\n                return (0, with_document_element_1.withDocumentElement)(document);\n            },\n            expectations(target) {\n                const firstTabbable = target.tabOrder().find(isTabbable(device));\n                if (!firstTabbable.isSome()) {\n                    return { 1: Outcomes.HasNoTabbable };\n                }\n                const element = firstTabbable.get();\n                // Is \"reference\" at the start of the main content?\n                const isAtTheStartOfMain = (reference) => {\n                    // Find the closest Element ancestor of the reference.\n                    const destination = reference\n                        .inclusiveAncestors(alfa_dom_1.Node.fullTree)\n                        .find(isElement);\n                    if (!destination.isSome()) {\n                        return Outcomes.FirstTabbableIsNotLinkToContent;\n                    }\n                    const askIsMain = question_1.Question.of(\"is-start-of-main\", destination.get(), target);\n                    // there can be more than one element with a role of main, going to any of these is OK.\n                    const isAtStart = document\n                        .inclusiveDescendants(alfa_dom_1.Node.flatTree)\n                        .filter(and(isElement, hasRole(device, \"main\")))\n                        .some((main) => (0, predicate_1.isAtTheStart)(main, device)(reference));\n                    return askIsMain.answerIf(isAtStart, true).map((isMain) => (0, expectation_1.expectation)(isMain, () => Outcomes.FirstTabbableIsLinkToContent, () => Outcomes.FirstTabbableIsNotLinkToContent));\n                };\n                const askReference = question_1.Question.of(\"internal-reference\", element, target);\n                // The URL pointed by element.\n                const url = hasName(\"a\", \"area\")(element)\n                    ? element\n                        .attribute(\"href\")\n                        .flatMap((attribute) => alfa_url_1.URL.parse(attribute.value, response.url).ok())\n                    : alfa_option_1.None;\n                // The internal node (if any) this URL resolves to.\n                const reference = url\n                    .filter(isInternalURL(response.url))\n                    .flatMap((url) => url.fragment.flatMap((fragment) => getElementDescendants(element.root()).find((element) => element.id.includes(fragment))));\n                // Is the first tabbable a link to main content?\n                const isSkipLink = () => askReference\n                    // If the reference was automatically found, send it.\n                    //\n                    // The question expects an Option<Node> answer, so we cannot\n                    // just .answerIf(reference) as this would only send a Node.\n                    .answerIf(reference.isSome(), reference)\n                    .map((ref) => (0, expectation_1.expectation)(\n                // Oracle may still answer None to the question.\n                ref.isSome(), \n                // We are in the ifTrue branch of the expectation, but TS\n                // can't narrow the type.\n                () => isAtTheStartOfMain(ref.getUnsafe()), () => Outcomes.FirstTabbableIsNotInternalLink));\n                const askIsVisible = question_1.Question.of(\"is-visible-when-focused\", element, target);\n                return {\n                    1: (0, expectation_1.expectation)(isIgnored(device)(element), () => Outcomes.FirstTabbableIsIgnored, () => (0, expectation_1.expectation)(hasRole(device, (role) => role.is(\"link\"))(element), () => \n                    // No need to check if element is tabbable because this was\n                    // already checked at the very start of expectation.\n                    askIsVisible\n                        .answerIf(isVisible(device, alfa_selector_1.Context.focus(element))(element), true)\n                        .map((isVisible) => (0, expectation_1.expectation)(isVisible, isSkipLink, () => Outcomes.FirstTabbableIsNotVisible)), () => Outcomes.FirstTabbableIsNotLink)),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.HasNoTabbable = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The document has no tabbable descendants`));\n    Outcomes.FirstTabbableIsNotLink = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The first tabbable element in the document is not a semantic link`));\n    Outcomes.FirstTabbableIsNotInternalLink = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The first tabbable element in the document is not an internal link`));\n    Outcomes.FirstTabbableIsIgnored = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The first tabbable element in the document is not included in the\n      accessibility tree`));\n    Outcomes.FirstTabbableIsNotVisible = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The first tabbable element in the document is not visible when on focus`));\n    Outcomes.FirstTabbableIsLinkToContent = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The first tabbable element in the document is a keyboard actionable link\n      that is included in the accessibility tree and links to the main block of\n      content of the document`));\n    Outcomes.FirstTabbableIsNotLinkToContent = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The first tabbable element in the document is a keyboard actionable link\n      that is included in the accessibility tree, but does not link to the main\n      block of content of the document`));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\nfunction isInternalURL(base) {\n    return (url) => url.fragment.isSome() &&\n        url.withoutFragment().equals(base.withoutFragment());\n}\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-er87/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r1/rule.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r1/rule.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst with_document_element_1 = __webpack_require__(/*! ../common/applicability/with-document-element */ \"./node_modules/@siteimprove/alfa-rules/src/common/applicability/with-document-element.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst { hasName, hasNamespace } = alfa_dom_1.Element;\nconst { hasTextContent } = alfa_dom_1.Node;\nconst { and } = alfa_predicate_1.Predicate;\nconst { getElementDescendants } = alfa_dom_1.Query;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r1\",\n    requirements: [\n        alfa_wcag_1.Criterion.of(\"2.4.2\"),\n        alfa_wcag_1.Technique.of(\"G88\"),\n        alfa_wcag_1.Technique.of(\"H25\"),\n    ],\n    tags: [tags_1.Scope.Page, tags_1.Stability.Stable],\n    evaluate({ document }) {\n        return {\n            applicability() {\n                return (0, with_document_element_1.withDocumentElement)(document);\n            },\n            expectations(target) {\n                const title = getElementDescendants(target).find(and(hasNamespace(alfa_dom_1.Namespace.HTML), hasName(\"title\")));\n                return {\n                    1: (0, expectation_1.expectation)(title.isSome(), () => Outcomes.HasTitle, () => Outcomes.HasNoTitle),\n                    2: (0, expectation_1.expectation)(title.some(hasTextContent()), () => Outcomes.HasNonEmptyTitle, () => Outcomes.HasEmptyTitle),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.HasTitle = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The document has at least one \\`<title>\\` element`));\n    Outcomes.HasNoTitle = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The document does not have a \\`<title>\\` element`));\n    Outcomes.HasNonEmptyTitle = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The first \\`<title>\\` element has text content`));\n    Outcomes.HasEmptyTitle = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The first \\`<title>\\` element has no text content`));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r1/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r10/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r10/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_aria_1 = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst alfa_array_1 = __webpack_require__(/*! @siteimprove/alfa-array */ \"./node_modules/@siteimprove/alfa-array/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_slice_1 = __webpack_require__(/*! @siteimprove/alfa-slice */ \"./node_modules/@siteimprove/alfa-slice/src/index.js\");\nconst alfa_style_1 = __webpack_require__(/*! @siteimprove/alfa-style */ \"./node_modules/@siteimprove/alfa-style/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst dom = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst normalize_1 = __webpack_require__(/*! ../common/normalize */ \"./node_modules/@siteimprove/alfa-rules/src/common/normalize.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst { hasRole, isPerceivableForAll } = alfa_aria_1.DOM;\nconst { hasAttribute, hasInputType, hasName, hasNamespace } = alfa_dom_1.Element;\nconst { and, or, not } = alfa_predicate_1.Predicate;\nconst { isTabbable } = alfa_style_1.Style;\nconst { either, end, option, right, parseIf } = alfa_parser_1.Parser;\nconst { getElementDescendants } = alfa_dom_1.Query;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r10\",\n    requirements: [alfa_wcag_1.Criterion.of(\"1.3.5\")],\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    evaluate({ device, document }) {\n        return {\n            applicability() {\n                return (getElementDescendants(document, dom.Node.fullTree)\n                    .filter(and(hasNamespace(alfa_dom_1.Namespace.HTML), hasName(\"input\", \"select\", \"textarea\"), not(hasInputType(\"hidden\", \"button\", \"submit\", \"reset\")), hasAttribute(\"autocomplete\", hasTokens), hasAttribute(\"autocomplete\", (autocomplete) => (0, normalize_1.normalize)(autocomplete) !== \"on\" &&\n                    (0, normalize_1.normalize)(autocomplete) !== \"off\"), or(isTabbable(device), hasRole(device, (role) => role.isWidget())), isPerceivableForAll(device), (element) => alfa_aria_1.Node.from(element, device)\n                    .attribute(\"aria-disabled\")\n                    .none((disabled) => disabled.value === \"true\")))\n                    // The big second filter ensure that autocomplete exists\n                    .map((element) => element.attribute(\"autocomplete\").getUnsafe()));\n            },\n            expectations(target) {\n                return {\n                    1: (0, expectation_1.expectation)(isValidAutocomplete(target), () => Outcomes.HasValidValue, () => Outcomes.HasNoValidValue),\n                };\n            },\n        };\n    },\n});\nfunction hasTokens(input) {\n    return input.trim() !== \"\" && input.split(/\\s+/).length > 0;\n}\n/**\n * {@link https://html.spec.whatwg.org/multipage/#autofill-detail-tokens}\n */\nconst isValidAutocomplete = (autocomplete) => {\n    const tokens = autocomplete.value.toLowerCase().trim().split(/\\s+/);\n    // The following line comments each refers to the corresponding position in the HTML specification linked above at the time of writing\n    const parse = right(option(section), // 1.\n    right(option(addressType), // 2.\n    right(\n    // 3.\n    either(unmodifiable, // 3.a\n    right(option(modifier) /*3.b.1*/, modifiable /*3.b.2*/)), right(option(webauthn), // 4.\n    end((token) => `Expected EOF, but got ${token}`)))));\n    return parse(alfa_slice_1.Slice.of(tokens)).isOk();\n};\nconst unmodifiables = alfa_array_1.Array.from([\n    \"name\",\n    \"honorific-prefix\",\n    \"given-name\",\n    \"additional-name\",\n    \"family-name\",\n    \"honorific-suffix\",\n    \"nickname\",\n    \"username\",\n    \"new-password\",\n    \"current-password\",\n    \"one-time-code\",\n    \"organization-title\",\n    \"organization\",\n    \"street-address\",\n    \"address-line1\",\n    \"address-line2\",\n    \"address-line3\",\n    \"address-level4\",\n    \"address-level3\",\n    \"address-level2\",\n    \"address-level1\",\n    \"country\",\n    \"country-name\",\n    \"postal-code\",\n    \"cc-name\",\n    \"cc-given-name\",\n    \"cc-additional-name\",\n    \"cc-family-name\",\n    \"cc-number\",\n    \"cc-exp\",\n    \"cc-exp-month\",\n    \"cc-exp-year\",\n    \"cc-csc\",\n    \"cc-type\",\n    \"transaction-currency\",\n    \"transaction-amount\",\n    \"language\",\n    \"bday\",\n    \"bday-day\",\n    \"bday-month\",\n    \"bday-year\",\n    \"sex\",\n    \"url\",\n    \"photo\",\n]);\nconst modifiables = alfa_array_1.Array.from([\n    \"tel\",\n    \"tel-country-code\",\n    \"tel-national\",\n    \"tel-area-code\",\n    \"tel-local\",\n    \"tel-local-prefix\",\n    \"tel-local-suffix\",\n    \"tel-extension\",\n    \"email\",\n    \"impp\",\n]);\nconst modifiers = alfa_array_1.Array.from([\"home\", \"work\", \"mobile\", \"fax\", \"pager\"]);\nconst parseFirst = (input) => input\n    .first()\n    .map((token) => alfa_result_1.Ok.of([input.rest(), token]))\n    .getOr(alfa_result_1.Err.of(\"No token left\"));\nfunction parserOf(tokens) {\n    return parseIf((token) => tokens.includes(token), parseFirst, (token) => `Expected valid token, but got ${token}`);\n}\nconst addressType = parserOf([\"shipping\", \"billing\"]);\nconst unmodifiable = parserOf(unmodifiables);\nconst section = parseIf((token) => token.startsWith(\"section-\"), parseFirst, (token) => `Expected token beginning with \\`section-\\`, but got ${token}`);\nconst modifiable = parserOf(modifiables);\nconst modifier = parserOf(modifiers);\nconst webauthn = parserOf([\"webauthn\"]);\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.HasValidValue = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The \\`autocomplete\\` attribute has a valid value`));\n    Outcomes.HasNoValidValue = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The \\`autocomplete\\` attribute does not have a valid value`));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r10/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r109/rule.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r109/rule.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Languages = exports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_iana_1 = __webpack_require__(/*! @siteimprove/alfa-iana */ \"./node_modules/@siteimprove/alfa-iana/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst question_1 = __webpack_require__(/*! ../common/act/question */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/question.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst with_document_element_1 = __webpack_require__(/*! ../common/applicability/with-document-element */ \"./node_modules/@siteimprove/alfa-rules/src/common/applicability/with-document-element.js\");\nconst { hasAttribute } = alfa_dom_1.Element;\n/**\n * This rule always asks for the language of the page, and compares it with\n * the `lang` attribute. This is not a nice experience for the end user and\n * shouldn't be used until backend can automatically determine the answer.\n */\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r109\",\n    requirements: [alfa_wcag_1.Criterion.of(\"3.1.1\"), alfa_wcag_1.Technique.of(\"H57\")],\n    tags: [tags_1.Scope.Page, tags_1.Stability.Experimental],\n    evaluate({ document }) {\n        let programmaticLanguage;\n        return {\n            applicability() {\n                return (0, with_document_element_1.withDocumentElement)(document, hasAttribute(\"lang\", (lang) => alfa_iana_1.Language.parse(lang)\n                    .tee((lang) => {\n                    programmaticLanguage = lang;\n                })\n                    .isOk()));\n            },\n            expectations(target) {\n                return {\n                    1: question_1.Question.of(\"document-language\", target).map((language) => alfa_iana_1.Language.parse(language).mapOrElse((naturalLanguage) => (0, expectation_1.expectation)(programmaticLanguage.primary.equals(naturalLanguage.primary), () => Outcomes.HasCorrectLang(programmaticLanguage, naturalLanguage), () => Outcomes.HasIncorrectLang(programmaticLanguage, naturalLanguage)), (_) => alfa_option_1.Option.of(Outcomes.HasNoLanguage(programmaticLanguage)))),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.HasCorrectLang = (programmatic, natural) => alfa_result_1.Ok.of(Languages.of(`The document's \\`lang\\` attribute (${programmatic}) matches its language (${natural})`, programmatic, natural));\n    Outcomes.HasIncorrectLang = (programmatic, natural) => alfa_result_1.Err.of(Languages.of(`The document's \\`lang\\` attribute (${programmatic}) does not match its language (${natural})`, programmatic, natural));\n    Outcomes.HasNoLanguage = (programmatic) => alfa_result_1.Err.of(Languages.of(\"The document has no identifiable natural language\", programmatic));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n/**\n * @public\n */\nclass Languages extends alfa_act_1.Diagnostic {\n    static of(message, programmatic = alfa_iana_1.Language.of(alfa_iana_1.Language.Primary.of(\"en\")), natural) {\n        return new Languages(message, programmatic, alfa_option_1.Option.from(natural));\n    }\n    constructor(message, programmatic, natural) {\n        super(message);\n        this._programmatic = programmatic;\n        this._natural = natural;\n    }\n    get programmatic() {\n        return this._programmatic;\n    }\n    get natural() {\n        return this._natural;\n    }\n    equals(value) {\n        return (value instanceof Languages &&\n            value._message === this._message &&\n            value._programmatic.equals(this._programmatic) &&\n            value._natural.equals(this._natural));\n    }\n    hash(hash) {\n        super.hash(hash);\n        hash.writeString(this._programmatic.primary.name);\n        this._natural.forEach((lang) => hash.writeString(lang.primary.name));\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            programmatic: this._programmatic.toJSON(),\n            natural: this._natural.toJSON(),\n        };\n    }\n}\nexports.Languages = Languages;\n/**\n * @public\n */\n(function (Languages) {\n    /**@public */\n    function isLanguages(value) {\n        return value instanceof Languages;\n    }\n    Languages.isLanguages = isLanguages;\n})(Languages || (exports.Languages = Languages = {}));\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r109/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r11/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r11/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_aria_1 = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst { hasNonEmptyAccessibleName, hasRole, isIncludedInTheAccessibilityTree } = alfa_aria_1.DOM;\nconst { hasNamespace } = alfa_dom_1.Element;\nconst { and } = alfa_predicate_1.Predicate;\nconst { getElementDescendants } = alfa_dom_1.Query;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r11\",\n    requirements: [\n        alfa_wcag_1.Criterion.of(\"2.4.4\"),\n        alfa_wcag_1.Criterion.of(\"2.4.9\"),\n        alfa_wcag_1.Criterion.of(\"4.1.2\"),\n        alfa_wcag_1.Technique.of(\"G91\"),\n    ],\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    evaluate({ device, document }) {\n        return {\n            applicability() {\n                return getElementDescendants(document, alfa_dom_1.Node.fullTree).filter(and(hasNamespace(alfa_dom_1.Namespace.HTML), hasRole(device, (role) => role.is(\"link\")), isIncludedInTheAccessibilityTree(device)));\n            },\n            expectations(target) {\n                return {\n                    1: (0, expectation_1.expectation)(hasNonEmptyAccessibleName(device)(target), () => Outcomes.HasName, () => Outcomes.HasNoName),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.HasName = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The link has an accessible name`));\n    Outcomes.HasNoName = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The link does not have an accessible name`));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r11/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r110/rule.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r110/rule.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_aria_1 = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst role_attributes_1 = __webpack_require__(/*! ../common/applicability/role-attributes */ \"./node_modules/@siteimprove/alfa-rules/src/common/applicability/role-attributes.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r110\",\n    requirements: [\n        alfa_wcag_1.Criterion.of(\"1.3.1\"),\n        alfa_wcag_1.Technique.of(\"ARIA4\"),\n        alfa_wcag_1.Technique.of(\"G108\"),\n    ],\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    evaluate({ device, document }) {\n        return {\n            applicability() {\n                return (0, role_attributes_1.roleAttributes)(document, device);\n            },\n            expectations(target) {\n                return {\n                    1: (0, expectation_1.expectation)(target\n                        .tokens()\n                        .some((token) => alfa_aria_1.Role.isName(token) && alfa_aria_1.Role.of(token).isConcrete()), () => Outcomes.HasValidRole, () => Outcomes.HasNoValidRole),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.HasValidRole = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The element has a at least one valid role`));\n    Outcomes.HasNoValidRole = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The element does not have a valid role`));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r110/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r12/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r12/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_aria_1 = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst { hasNonEmptyAccessibleName, hasRole, isIncludedInTheAccessibilityTree } = alfa_aria_1.DOM;\nconst { hasInputType, hasNamespace } = alfa_dom_1.Element;\nconst { and, not } = alfa_predicate_1.Predicate;\nconst { getElementDescendants } = alfa_dom_1.Query;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r12\",\n    requirements: [alfa_wcag_1.Criterion.of(\"4.1.2\")],\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    evaluate({ device, document }) {\n        return {\n            applicability() {\n                return getElementDescendants(document, alfa_dom_1.Node.fullTree).filter(and(not(hasInputType(\"image\")), hasNamespace(alfa_dom_1.Namespace.HTML), hasRole(device, \"button\"), isIncludedInTheAccessibilityTree(device)));\n            },\n            expectations(target) {\n                return {\n                    1: (0, expectation_1.expectation)(hasNonEmptyAccessibleName(device)(target), () => Outcomes.HasName, () => Outcomes.HasNoName),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.HasName = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The button has an accessible name`));\n    Outcomes.HasNoName = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The button does not have an accessible name`));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r12/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r13/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r13/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_aria_1 = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst { hasNonEmptyAccessibleName, isIncludedInTheAccessibilityTree, isMarkedDecorative, } = alfa_aria_1.DOM;\nconst { hasName, hasNamespace, hasTabIndex } = alfa_dom_1.Element;\nconst { and, not } = alfa_predicate_1.Predicate;\nconst { getElementDescendants } = alfa_dom_1.Query;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r13\",\n    requirements: [alfa_wcag_1.Criterion.of(\"4.1.2\")],\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    evaluate({ device, document }) {\n        return {\n            applicability() {\n                return getElementDescendants(document, alfa_dom_1.Node.fullTree).filter(and(hasNamespace(alfa_dom_1.Namespace.HTML), hasName(\"iframe\"), isIncludedInTheAccessibilityTree(device), not(hasTabIndex((n) => n < 0)), not(isMarkedDecorative)));\n            },\n            expectations(target) {\n                return {\n                    1: (0, expectation_1.expectation)(hasNonEmptyAccessibleName(device)(target), () => Outcomes.HasName, () => Outcomes.HasNoName),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.HasName = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The \\`<iframe>\\` has an accessible name`));\n    Outcomes.HasNoName = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The \\`<iframe>\\` does not have an accessible name`));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r13/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r14/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r14/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.LabelAndName = exports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_aria_1 = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_style_1 = __webpack_require__(/*! @siteimprove/alfa-style */ \"./node_modules/@siteimprove/alfa-style/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst normalize_1 = __webpack_require__(/*! ../common/normalize */ \"./node_modules/@siteimprove/alfa-rules/src/common/normalize.js\");\nconst predicate_1 = __webpack_require__(/*! ../common/predicate */ \"./node_modules/@siteimprove/alfa-rules/src/common/predicate.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst { hasAccessibleName, hasRole, isPerceivableForAll } = alfa_aria_1.DOM;\nconst { hasAttribute, hasNamespace, hasName, isElement } = alfa_dom_1.Element;\nconst { isText } = alfa_dom_1.Text;\nconst { hasDescendant } = alfa_dom_1.Node;\nconst { and, test, not } = alfa_predicate_1.Predicate;\nconst { isFocusable, isRendered } = alfa_style_1.Style;\nconst { getElementDescendants } = alfa_dom_1.Query;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r14\",\n    requirements: [alfa_wcag_1.Criterion.of(\"2.5.3\"), alfa_wcag_1.Technique.of(\"G208\")],\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    evaluate({ device, document }) {\n        return {\n            applicability() {\n                return getElementDescendants(document, alfa_dom_1.Node.fullTree).filter(and(hasNamespace(alfa_dom_1.Namespace.HTML, alfa_dom_1.Namespace.SVG), hasAttribute((attribute) => attribute.name === \"aria-label\" ||\n                    attribute.name === \"aria-labelledby\"), isFocusable(device), hasRole(device, (role) => role.isWidget() && role.isNamedBy(\"contents\")), hasDescendant(and(alfa_dom_1.Text.isText, isPerceivableForAll(device)), alfa_dom_1.Node.flatTree)));\n            },\n            expectations(target) {\n                // Removes all punctuation (underscore, hyphen, brackets, quotation marks, etc)\n                // and normalise\n                function removePunctuationAndNormalise(input) {\n                    return (0, normalize_1.normalize)(input.replace(/\\p{P}|\\p{S}|\\p{Cf}/gu, \"\"));\n                }\n                const textContent = removePunctuationAndNormalise(getPerceivableInnerTextFromElement(target, device));\n                let name = \"\";\n                const accessibleNameIncludesTextContent = test(hasAccessibleName(device, (accessibleName) => {\n                    name = removePunctuationAndNormalise(accessibleName.value);\n                    return name.includes(textContent);\n                }), target);\n                return {\n                    1: (0, expectation_1.expectation)(accessibleNameIncludesTextContent, () => Outcomes.VisibleIsInName(textContent, name), () => Outcomes.VisibleIsNotInName(textContent, name)),\n                };\n            },\n        };\n    },\n});\n/**\n * {@link https://alfa.siteimprove.com/terms/visible-inner-text}\n */\nfunction getPerceivableInnerTextFromTextNode(text, device) {\n    if (isPerceivableForAll(device)(text)) {\n        return text.data;\n    }\n    if (and(not(isPerceivableForAll(device)), isRendered(device))(text) &&\n        (0, predicate_1.isWhitespace)(text.data)) {\n        return \" \";\n    }\n    return \"\";\n}\nfunction getPerceivableInnerTextFromElement(element, device) {\n    if (!isRendered(device)(element)) {\n        return \"\";\n    }\n    if (hasName(\"br\")(element)) {\n        return \"\\n\";\n    }\n    if (hasName(\"p\")(element)) {\n        return \"\\n\" + childrenPerceivableText(element, device) + \"\\n\";\n    }\n    const display = alfa_style_1.Style.from(element, device).computed(\"display\").value;\n    const { values: [outside], // this covers both outside and internal specified.\n     } = display;\n    if (outside.value === \"block\" || outside.value === \"table-caption\") {\n        return \"\\n\" + childrenPerceivableText(element, device) + \"\\n\";\n    }\n    if (outside.value === \"table-cell\" || outside.value === \"table-row\") {\n        return \" \" + childrenPerceivableText(element, device) + \" \";\n    }\n    return childrenPerceivableText(element, device);\n}\nfunction childrenPerceivableText(node, device) {\n    let result = \"\";\n    for (const child of node.children(alfa_dom_1.Node.flatTree)) {\n        if (isText(child)) {\n            result = result + getPerceivableInnerTextFromTextNode(child, device);\n        }\n        else if (isElement(child)) {\n            result = result + getPerceivableInnerTextFromElement(child, device);\n        }\n        else {\n            result = result + childrenPerceivableText(child, device);\n        }\n    }\n    //Returning the whole text from its children\n    return result;\n}\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.VisibleIsInName = (textContent, name) => alfa_result_1.Ok.of(LabelAndName.of(`The visible text content of the element is included within its accessible name`, textContent, name));\n    Outcomes.VisibleIsNotInName = (textContent, name) => alfa_result_1.Err.of(LabelAndName.of(`The visible text content of the element is not included within its accessible name`, textContent, name));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n/**\n * @public\n */\nclass LabelAndName extends alfa_act_1.Diagnostic {\n    static of(message, textContent = \"\", name = \"\") {\n        return new LabelAndName(message, textContent, name);\n    }\n    constructor(message, textContent, name) {\n        super(message);\n        this._textContent = textContent;\n        this._name = name;\n    }\n    get textContent() {\n        return this._textContent;\n    }\n    get name() {\n        return this._name;\n    }\n    equals(value) {\n        return (value instanceof LabelAndName &&\n            value._message === this._message &&\n            value._textContent === this._textContent &&\n            value._name === this._name);\n    }\n    hash(hash) {\n        super.hash(hash);\n        hash.writeString(this._name);\n        hash.writeString(this._textContent);\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            textContent: this._textContent,\n            name: this._name,\n        };\n    }\n}\nexports.LabelAndName = LabelAndName;\n/**\n * @public\n */\n(function (LabelAndName) {\n    /**@public */\n    function isLabelAndName(value) {\n        return value instanceof LabelAndName;\n    }\n    LabelAndName.isLabelAndName = isLabelAndName;\n})(LabelAndName || (exports.LabelAndName = LabelAndName = {}));\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r14/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r15/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r15/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_aria_1 = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst dom = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst group_1 = __webpack_require__(/*! ../common/act/group */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/group.js\");\nconst question_1 = __webpack_require__(/*! ../common/act/question */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/question.js\");\nconst predicate_1 = __webpack_require__(/*! ../common/predicate */ \"./node_modules/@siteimprove/alfa-rules/src/common/predicate.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst diagnostic_1 = __webpack_require__(/*! ../common/diagnostic */ \"./node_modules/@siteimprove/alfa-rules/src/common/diagnostic.js\");\nconst normalize_1 = __webpack_require__(/*! ../common/normalize */ \"./node_modules/@siteimprove/alfa-rules/src/common/normalize.js\");\nconst { hasNonEmptyAccessibleName, isIncludedInTheAccessibilityTree } = alfa_aria_1.DOM;\nconst { hasName, hasNamespace } = alfa_dom_1.Element;\nconst { and } = alfa_predicate_1.Predicate;\nconst { getElementDescendants } = alfa_dom_1.Query;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r15\",\n    requirements: [alfa_wcag_1.Criterion.of(\"4.1.2\")],\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    evaluate({ device, document, response }) {\n        return {\n            applicability() {\n                return getElementDescendants(document, dom.Node.fullTree)\n                    .filter(and(hasName(\"iframe\"), hasNamespace(alfa_dom_1.Namespace.HTML), isIncludedInTheAccessibilityTree(device), hasNonEmptyAccessibleName(device)))\n                    .groupBy((iframe) => alfa_aria_1.Node.from(iframe, device).name.map((name) => (0, normalize_1.normalize)(name.value)))\n                    .filter((elements) => elements.size > 1)\n                    .map(group_1.Group.of)\n                    .values();\n            },\n            expectations(target) {\n                const embedSameResource = [...target].every((element, i, elements) => \n                // This is either the first element...\n                i === 0 ||\n                    // ...or an element that embeds the same resource as the element\n                    // before it.\n                    (0, predicate_1.referenceSameResource)(response.url)(element, elements[i - 1]));\n                const name = diagnostic_1.WithName.getName(alfa_iterable_1.Iterable.first(target).getUnsafe(), // Existence of first element is guaranteed by applicability\n                device).getUnsafe(); // Existence of accessible name is guaranteed by applicability\n                return {\n                    1: (0, expectation_1.expectation)(embedSameResource, () => Outcomes.EmbedSameResources(name), () => question_1.Question.of(\"reference-equivalent-resources\", target, \"Do the <iframe> elements embed equivalent resources?\", {\n                        diagnostic: diagnostic_1.WithName.of(\"Do the <iframe> elements embed equivalent resources?\", name),\n                    }).map((embedEquivalentResources) => (0, expectation_1.expectation)(embedEquivalentResources, () => Outcomes.EmbedEquivalentResources(name), () => Outcomes.EmbedDifferentResources(name)))),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.EmbedSameResources = (name) => alfa_result_1.Ok.of(diagnostic_1.WithName.of(`The \\`<iframe>\\` elements embed the same resource`, name));\n    Outcomes.EmbedEquivalentResources = (name) => alfa_result_1.Ok.of(diagnostic_1.WithName.of(`The \\`<iframe>\\` elements embed equivalent resources`, name));\n    Outcomes.EmbedDifferentResources = (name) => alfa_result_1.Err.of(diagnostic_1.WithName.of(`The \\`<iframe>\\` elements do not embed the same or equivalent resources`, name));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r15/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r16/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r16/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = exports.RoleAndRequiredAttributes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_aria_1 = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst alfa_array_1 = __webpack_require__(/*! @siteimprove/alfa-array */ \"./node_modules/@siteimprove/alfa-array/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_style_1 = __webpack_require__(/*! @siteimprove/alfa-style */ \"./node_modules/@siteimprove/alfa-style/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst aria = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst is_aria_controls_optional_1 = __webpack_require__(/*! ../common/predicate/is-aria-controls-optional */ \"./node_modules/@siteimprove/alfa-rules/src/common/predicate/is-aria-controls-optional.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst { hasNonDefaultRole, isIncludedInTheAccessibilityTree } = alfa_aria_1.DOM;\nconst { hasNamespace } = alfa_dom_1.Element;\nconst { isEmpty } = alfa_iterable_1.Iterable;\nconst { and, property } = alfa_predicate_1.Predicate;\nconst { isFocusable } = alfa_style_1.Style;\nconst { getElementDescendants } = alfa_dom_1.Query;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r16\",\n    requirements: [\n        alfa_wcag_1.Criterion.of(\"1.3.1\"),\n        alfa_wcag_1.Criterion.of(\"4.1.2\"),\n        alfa_wcag_1.Technique.of(\"ARIA5\"),\n    ],\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    evaluate({ device, document }) {\n        return {\n            applicability() {\n                return getElementDescendants(document, alfa_dom_1.Node.composedNested)\n                    .filter(and(hasNamespace(alfa_dom_1.Namespace.HTML, alfa_dom_1.Namespace.SVG), hasNonDefaultRole))\n                    .filter(isIncludedInTheAccessibilityTree(device));\n            },\n            expectations(target) {\n                return { 1: hasRequiredValues(device, target) };\n            },\n        };\n    },\n});\nfunction hasRequiredValues(device, element) {\n    const node = aria.Node.from(element, device);\n    for (const role of node.role) {\n        // The `separator` role is poorly architected in the sense that its\n        // inheritance and attribute requirements depend on aspects of the element\n        // carrying the role. If the element is not focusable, the `separator`\n        // role has no required attributes.\n        if (role.is(\"separator\") && !isFocusable(device)(element)) {\n            return Outcomes.HasAllStates(role.name, [], []);\n        }\n        const required = role.requiredAttributes;\n        const missing = [];\n        let result = true;\n        for (const attribute of required) {\n            // We need to keep going through all attributes to gather all the missing\n            // ones\n            if (node.attribute(attribute).every(property(\"value\", isEmpty)) &&\n                !((0, is_aria_controls_optional_1.isAriaControlsOptional)(node) && attribute === \"aria-controls\")) {\n                missing.push(attribute);\n                result = false;\n            }\n        }\n        return result\n            ? Outcomes.HasAllStates(role.name, required, missing)\n            : Outcomes.HasNotAllStates(role.name, required, missing);\n    }\n    // If there is no role for the node, we have a problem; applicability ensures\n    // the presence of a role. Throwing a Failed result to trigger looking into it\n    return Outcomes.RuleError;\n}\n/**\n * @public\n */\nclass RoleAndRequiredAttributes extends alfa_act_1.Diagnostic {\n    static of(message, role, requiredAttributes, missingAttributes) {\n        return role === undefined\n            ? alfa_act_1.Diagnostic.of(message)\n            : new RoleAndRequiredAttributes(message, role, \n            // Presence is ensured by the overload\n            requiredAttributes, missingAttributes);\n    }\n    constructor(message, role, requiredAttributes, missingAttributes) {\n        super(message);\n        this._role = role;\n        this._requiredAttributes = requiredAttributes;\n        this._missingAttributes = missingAttributes;\n    }\n    get role() {\n        return this._role;\n    }\n    get requiredAttributes() {\n        return this._requiredAttributes;\n    }\n    get missingAttributes() {\n        return this._missingAttributes;\n    }\n    equals(value) {\n        return (value instanceof RoleAndRequiredAttributes &&\n            value._message === this._message &&\n            value._role === this._role &&\n            alfa_array_1.Array.equals(value._requiredAttributes, this._requiredAttributes) &&\n            alfa_array_1.Array.equals(value._missingAttributes, this._missingAttributes));\n    }\n    hash(hash) {\n        super.hash(hash);\n        hash.writeString(this._role);\n        this._requiredAttributes.forEach((attr) => hash.writeString(attr));\n        this._missingAttributes.forEach((attr) => hash.writeString(attr));\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            role: this._role,\n            attributes: {\n                required: alfa_array_1.Array.copy(this._requiredAttributes),\n                missing: alfa_array_1.Array.copy(this._missingAttributes),\n            },\n        };\n    }\n}\nexports.RoleAndRequiredAttributes = RoleAndRequiredAttributes;\n/**\n * @public\n */\n(function (RoleAndRequiredAttributes) {\n    /**@public */\n    function isRoleAndRequiredAttributes(value) {\n        return value instanceof RoleAndRequiredAttributes;\n    }\n    RoleAndRequiredAttributes.isRoleAndRequiredAttributes = isRoleAndRequiredAttributes;\n})(RoleAndRequiredAttributes || (exports.RoleAndRequiredAttributes = RoleAndRequiredAttributes = {}));\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.HasAllStates = (role, required, missing) => alfa_result_1.Ok.of(RoleAndRequiredAttributes.of(\"The element has all required states and properties\", role, required, missing));\n    Outcomes.HasNotAllStates = (role, required, missing) => alfa_result_1.Err.of(RoleAndRequiredAttributes.of(\"The element does not have all required states and properties\", role, required, missing));\n    // This should never happen\n    Outcomes.RuleError = alfa_result_1.Err.of(RoleAndRequiredAttributes.of(\"\", \"generic\", [], []));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r16/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r17/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r17/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_refinement_1 = __webpack_require__(/*! @siteimprove/alfa-refinement */ \"./node_modules/@siteimprove/alfa-refinement/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_style_1 = __webpack_require__(/*! @siteimprove/alfa-style */ \"./node_modules/@siteimprove/alfa-style/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst with_bad_elements_1 = __webpack_require__(/*! ../common/diagnostic/with-bad-elements */ \"./node_modules/@siteimprove/alfa-rules/src/common/diagnostic/with-bad-elements.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst { hasAttribute, isElement } = alfa_dom_1.Element;\nconst { equals } = alfa_predicate_1.Predicate;\nconst { and } = alfa_refinement_1.Refinement;\nconst { isTabbable } = alfa_style_1.Style;\nconst { getElementDescendants } = alfa_dom_1.Query;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r17\",\n    requirements: [alfa_wcag_1.Criterion.of(\"4.1.2\")],\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    evaluate({ device, document }) {\n        return {\n            applicability() {\n                return getElementDescendants(document, alfa_dom_1.Node.fullTree).filter(hasAttribute(\"aria-hidden\", equals(\"true\")));\n            },\n            expectations(target) {\n                const tabbable = target\n                    .inclusiveDescendants(alfa_dom_1.Node.flatTree)\n                    .filter(and(isElement, isTabbable(device)));\n                return {\n                    1: (0, expectation_1.expectation)(tabbable.isEmpty(), () => Outcomes.IsNotTabbable, () => Outcomes.IsTabbable(tabbable)),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.IsNotTabbable = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The element is neither tabbable nor has tabbable descendants`));\n    Outcomes.IsTabbable = (errors) => alfa_result_1.Err.of(with_bad_elements_1.WithBadElements.of(`The element is either tabbable or has tabbable descendants`, errors));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r17/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r18/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r18/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_aria_1 = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_sequence_1 = __webpack_require__(/*! @siteimprove/alfa-sequence */ \"./node_modules/@siteimprove/alfa-rules/node_modules/@siteimprove/alfa-sequence/src/index.js\");\nconst alfa_set_1 = __webpack_require__(/*! @siteimprove/alfa-set */ \"./node_modules/@siteimprove/alfa-set/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst aria = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst { hasRole, isIncludedInTheAccessibilityTree } = alfa_aria_1.DOM;\nconst { hasDisplaySize, hasInputType } = alfa_dom_1.Element;\nconst { test, property } = alfa_predicate_1.Predicate;\nconst { getElementDescendants } = alfa_dom_1.Query;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r18\",\n    requirements: [alfa_wcag_1.Technique.of(\"ARIA5\")],\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable, tags_1.Version.of(2)],\n    evaluate({ device, document }) {\n        const global = alfa_set_1.Set.from(alfa_aria_1.Role.of(\"roletype\").supportedAttributes);\n        return {\n            applicability() {\n                return getElementDescendants(document, alfa_dom_1.Node.fullTree)\n                    .filter(isIncludedInTheAccessibilityTree(device))\n                    .flatMap((element) => alfa_sequence_1.Sequence.from(element.attributes).filter(property(\"name\", aria.Attribute.isName)));\n            },\n            expectations(target) {\n                // Since the attribute was found on a element, it has a owner.\n                const owner = target.owner.getUnsafe();\n                return {\n                    1: (0, expectation_1.expectation)(global.has(target.name) ||\n                        test(hasRole(device, (role) => role.isAttributeSupported(target.name)), owner) ||\n                        ariaHtmlAllowed(target), () => Outcomes.IsAllowed, () => Outcomes.IsNotAllowed),\n                    2: (0, expectation_1.expectation)(test(hasRole(device, (role) => role.isAttributeProhibited(target.name)), owner), () => Outcomes.IsProhibited, () => Outcomes.IsNotProhibited),\n                };\n            },\n        };\n    },\n});\nfunction allowedForInputType(attributeName) {\n    return hasInputType((inputType) => {\n        switch (inputType) {\n            case \"color\":\n                return attributeName === \"aria-disabled\";\n            case \"date\":\n            case \"datetime-local\":\n            case \"email\":\n            case \"month\":\n            case \"password\":\n            case \"time\":\n            case \"week\":\n                return alfa_aria_1.Role.of(\"textbox\").isAttributeSupported(attributeName);\n            case \"file\":\n                return (attributeName === \"aria-disabled\" ||\n                    attributeName === \"aria-invalid\" ||\n                    attributeName === \"aria-required\");\n            default:\n                return false;\n        }\n    });\n}\nfunction ariaHtmlAllowed(target) {\n    const attributeName = target.name;\n    for (const element of target.owner) {\n        switch (element.name) {\n            case \"body\":\n                return alfa_aria_1.Role.of(\"document\").isAttributeSupported(attributeName);\n            case \"input\":\n                return allowedForInputType(attributeName)(element);\n            case \"select\":\n                return ((hasDisplaySize((size) => size !== 1)(element) &&\n                    alfa_aria_1.Role.of(\"combobox\").isAttributeSupported(attributeName)) ||\n                    alfa_aria_1.Role.of(\"menu\").isAttributeSupported(attributeName));\n            case \"video\":\n                return alfa_aria_1.Role.of(\"application\").isAttributeSupported(attributeName);\n        }\n    }\n    return false;\n}\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.IsAllowed = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The attribute is allowed for the element on which it is specified`));\n    Outcomes.IsNotAllowed = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The attribute is not allowed for the element on which it is specified`));\n    Outcomes.IsProhibited = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The attribute is prohibited for the element on which it is specified`));\n    Outcomes.IsNotProhibited = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The attribute is not prohibited for the element on which it is specified`));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r18/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r19/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r19/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_sequence_1 = __webpack_require__(/*! @siteimprove/alfa-sequence */ \"./node_modules/@siteimprove/alfa-rules/node_modules/@siteimprove/alfa-sequence/src/index.js\");\nconst aria = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst is_aria_controls_optional_1 = __webpack_require__(/*! ../common/predicate/is-aria-controls-optional */ \"./node_modules/@siteimprove/alfa-rules/src/common/predicate/is-aria-controls-optional.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst { hasNamespace } = alfa_dom_1.Element;\nconst { isEmpty } = alfa_iterable_1.Iterable;\nconst { and, not, equals, property } = alfa_predicate_1.Predicate;\nconst { getElementDescendants } = alfa_dom_1.Query;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r19\",\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    evaluate({ device, document }) {\n        return {\n            applicability() {\n                return getElementDescendants(document, alfa_dom_1.Node.composedNested)\n                    .filter(hasNamespace(alfa_dom_1.Namespace.HTML, alfa_dom_1.Namespace.SVG))\n                    .flatMap((element) => alfa_sequence_1.Sequence.from(element.attributes).filter(and(property(\"name\", aria.Attribute.isName), property(\"value\", not(isEmpty)))));\n            },\n            expectations(target) {\n                // We know from the Applicability that this is an `aria-*` attribute.\n                const { name, value } = target;\n                const attribute = aria.Attribute.of(name, value);\n                // The owner is ensured because the applicability search for elements and\n                // then look for their attributes.\n                const owner = target.owner.getUnsafe();\n                return {\n                    1: (0, expectation_1.expectation)(isValid(attribute) &&\n                        isAttributeOptionalOrValid(attribute, owner, device), () => Outcomes.HasValidValue, () => Outcomes.HasNoValidValue),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.HasValidValue = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The attribute has a valid value`));\n    Outcomes.HasNoValidValue = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The attribute does not have a valid value`));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\nfunction isValid(attribute) {\n    const { type, value, options } = attribute;\n    switch (type) {\n        case \"true-false\":\n            return value === \"true\" || value === \"false\";\n        case \"true-false-undefined\":\n            return value === \"true\" || value === \"false\" || value === \"undefined\";\n        case \"tristate\":\n            return value === \"true\" || value === \"false\" || value === \"mixed\";\n        case \"id-reference\":\n            return !/\\s+/.test(value);\n        case \"id-reference-list\":\n            return true;\n        case \"integer\":\n            return /^[+-]?\\d+$/.test(value);\n        case \"number\":\n            return /^[+-]?\\d+(\\.\\d+)?$/.test(value);\n        case \"string\":\n            return true;\n        case \"token\":\n            return value === \"undefined\" || options.some(equals(value));\n        case \"token-list\":\n            return value.split(/\\s+/).every((value) => options.some(equals(value)));\n    }\n}\nfunction treeHasId(id, node) {\n    // Since ID are scoped to tree, we need no traversal option to find the root.\n    return alfa_dom_1.Query.getElementIdMap(node.root()).has(id);\n}\n/**\n * false if an aria-* attribute is:\n * * required on its owner's role; and\n * * of type id reference (list); and\n * * pointing to non-existing id; and\n * * not `aria-controls` on closed `combobox`, which is an exception.\n */\nfunction isAttributeOptionalOrValid(attribute, owner, device) {\n    const node = aria.Node.from(owner, device);\n    for (const role of node.role) {\n        const { name, type, value } = attribute;\n        if ((0, is_aria_controls_optional_1.isAriaControlsOptional)(node) && name === \"aria-controls\") {\n            return true;\n        }\n        if (role.isAttributeRequired(name) &&\n            (type === \"id-reference\" || type === \"id-reference-list\")) {\n            // This is a required attribute with an ID ref (list) value, one of the tokens\n            // must exist as an ID in the same tree.\n            // Note: as of ARIA 1.2, this is only aria-controls on scrollbar…\n            return value.split(\" \").some((token) => treeHasId(token.trim(), owner));\n        }\n        // The attribute either is not required, or does not have an ID ref (list) type,\n        // so this is good\n        return true;\n    }\n    // The owner has no role, so this is good\n    return true;\n}\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r19/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r2/rule.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r2/rule.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_aria_1 = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst { hasNonEmptyAccessibleName, hasRole, isIncludedInTheAccessibilityTree } = alfa_aria_1.DOM;\nconst { hasNamespace } = alfa_dom_1.Element;\nconst { and } = alfa_predicate_1.Predicate;\nconst { getElementDescendants } = alfa_dom_1.Query;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r2\",\n    requirements: [\n        alfa_wcag_1.Criterion.of(\"1.1.1\"),\n        alfa_wcag_1.Technique.of(\"G94\"),\n        alfa_wcag_1.Technique.of(\"G95\"),\n    ],\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    evaluate({ device, document }) {\n        return {\n            applicability() {\n                return getElementDescendants(document, alfa_dom_1.Node.fullTree).filter(and(hasNamespace(alfa_dom_1.Namespace.HTML), hasRole(device, \"img\"), isIncludedInTheAccessibilityTree(device)));\n            },\n            expectations(target) {\n                return {\n                    1: (0, expectation_1.expectation)(hasNonEmptyAccessibleName(device)(target), () => Outcomes.HasAccessibleName, () => Outcomes.HasNoAccessibleName),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.HasAccessibleName = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The image has an accessible name`));\n    Outcomes.HasNoAccessibleName = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The image does not have an accessible name`));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r2/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r20/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r20/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_sequence_1 = __webpack_require__(/*! @siteimprove/alfa-sequence */ \"./node_modules/@siteimprove/alfa-rules/node_modules/@siteimprove/alfa-sequence/src/index.js\");\nconst aria = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst { getElementDescendants } = alfa_dom_1.Query;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r20\",\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    evaluate({ document }) {\n        return {\n            applicability() {\n                return getElementDescendants(document, alfa_dom_1.Node.composedNested).flatMap((element) => alfa_sequence_1.Sequence.from(element.attributes).filter((attribute) => attribute.name.startsWith(\"aria-\")));\n            },\n            expectations(target) {\n                const exists = aria.Attribute.isName(target.name);\n                return {\n                    1: (0, expectation_1.expectation)(exists, () => Outcomes.IsDefined, () => Outcomes.IsNotDefined),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.IsDefined = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The attribute is defined`));\n    Outcomes.IsNotDefined = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The attribute is not defined`));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r20/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r21/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r21/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_aria_1 = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst role_attributes_1 = __webpack_require__(/*! ../common/applicability/role-attributes */ \"./node_modules/@siteimprove/alfa-rules/src/common/applicability/role-attributes.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r21\",\n    requirements: [alfa_wcag_1.Technique.of(\"ARIA4\"), alfa_wcag_1.Technique.of(\"G108\")],\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    evaluate({ device, document }) {\n        return {\n            applicability() {\n                return (0, role_attributes_1.roleAttributes)(document, device);\n            },\n            expectations(target) {\n                return {\n                    1: (0, expectation_1.expectation)(target\n                        .tokens()\n                        .every((token) => alfa_aria_1.Role.isName(token) && alfa_aria_1.Role.of(token).isConcrete()), () => Outcomes.HasValidRole, () => Outcomes.HasNoValidRole),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.HasValidRole = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The element has only valid roles`));\n    Outcomes.HasNoValidRole = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The element does not have at least one valid role`));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r21/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r22/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r22/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst video_1 = __webpack_require__(/*! ../common/applicability/video */ \"./node_modules/@siteimprove/alfa-rules/src/common/applicability/video.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst question_1 = __webpack_require__(/*! ../common/act/question */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/question.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r22\",\n    requirements: [alfa_wcag_1.Technique.of(\"G87\"), alfa_wcag_1.Technique.of(\"G93\"), alfa_wcag_1.Technique.of(\"H95\")],\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    evaluate({ device, document }) {\n        return {\n            applicability() {\n                return (0, video_1.video)(document, device, { audio: { has: true } });\n            },\n            expectations(target) {\n                return {\n                    1: question_1.Question.of(\"has-captions\", target).map((hasCaptions) => (0, expectation_1.expectation)(hasCaptions, () => Outcomes.HasCaptions, () => Outcomes.HasNoCaptions)),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.HasCaptions = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The \\`<video>\\` element has captions`));\n    Outcomes.HasNoCaptions = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The \\`<video>\\` element does not have captions`));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r22/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r23/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r23/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst audio_1 = __webpack_require__(/*! ../common/applicability/audio */ \"./node_modules/@siteimprove/alfa-rules/src/common/applicability/audio.js\");\nconst media_transcript_1 = __webpack_require__(/*! ../common/expectation/media-transcript */ \"./node_modules/@siteimprove/alfa-rules/src/common/expectation/media-transcript.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r23\",\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    evaluate({ document, device }) {\n        return {\n            applicability() {\n                return (0, audio_1.audio)(document, device);\n            },\n            expectations(target) {\n                return (0, media_transcript_1.audioTranscript)(target, device);\n            },\n        };\n    },\n});\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r23/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r24/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r24/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst video_1 = __webpack_require__(/*! ../common/applicability/video */ \"./node_modules/@siteimprove/alfa-rules/src/common/applicability/video.js\");\nconst media_transcript_1 = __webpack_require__(/*! ../common/expectation/media-transcript */ \"./node_modules/@siteimprove/alfa-rules/src/common/expectation/media-transcript.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r24\",\n    requirements: [alfa_wcag_1.Criterion.of(\"1.2.8\"), alfa_wcag_1.Technique.of(\"G69\")],\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    evaluate({ device, document }) {\n        return {\n            applicability() {\n                return (0, video_1.video)(document, device, { audio: { has: true } });\n            },\n            expectations(target) {\n                return (0, media_transcript_1.videoTranscript)(target, device);\n            },\n        };\n    },\n});\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r24/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r25/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r25/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst video_1 = __webpack_require__(/*! ../common/applicability/video */ \"./node_modules/@siteimprove/alfa-rules/src/common/applicability/video.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst question_1 = __webpack_require__(/*! ../common/act/question */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/question.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r25\",\n    requirements: [alfa_wcag_1.Technique.of(\"G8\"), alfa_wcag_1.Technique.of(\"G78\"), alfa_wcag_1.Technique.of(\"G173\")],\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    evaluate({ device, document }) {\n        return {\n            applicability() {\n                return (0, video_1.video)(document, device, { audio: { has: true } });\n            },\n            expectations(target) {\n                return {\n                    1: question_1.Question.of(\"has-description\", target, `Is the visual information of the \\`<video>\\` available through its audio or a separate audio description track?`).map((hasAudio) => (0, expectation_1.expectation)(hasAudio, () => Outcomes.HasInformativeAudio, () => Outcomes.HasNoInformativeAudio)),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.HasInformativeAudio = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The visual information of the \\`<video>\\` element is available through audio`));\n    Outcomes.HasNoInformativeAudio = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The visual information of the \\`<video>\\` element is not available through audio`));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r25/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r26/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r26/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst video_1 = __webpack_require__(/*! ../common/applicability/video */ \"./node_modules/@siteimprove/alfa-rules/src/common/applicability/video.js\");\nconst media_text_alternative_1 = __webpack_require__(/*! ../common/expectation/media-text-alternative */ \"./node_modules/@siteimprove/alfa-rules/src/common/expectation/media-text-alternative.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r26\",\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    evaluate({ device, document }) {\n        return {\n            applicability() {\n                return (0, video_1.video)(document, device, { audio: { has: false } });\n            },\n            expectations(target) {\n                return (0, media_text_alternative_1.videoTextAlternative)(target, device);\n            },\n        };\n    },\n});\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r26/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r27/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r27/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_trilean_1 = __webpack_require__(/*! @siteimprove/alfa-trilean */ \"./node_modules/@siteimprove/alfa-trilean/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst is_passed_1 = __webpack_require__(/*! ../common/act/is-passed */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/is-passed.js\");\nconst rule_1 = __webpack_require__(/*! ../sia-r22/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r22/rule.js\");\nconst rule_2 = __webpack_require__(/*! ../sia-r31/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r31/rule.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nexports[\"default\"] = alfa_act_1.Rule.Composite.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r27\",\n    requirements: [\n        alfa_wcag_1.Criterion.of(\"1.2.2\"),\n        alfa_wcag_1.Technique.of(\"G87\"),\n        alfa_wcag_1.Technique.of(\"G93\"),\n        alfa_wcag_1.Technique.of(\"H95\"),\n    ],\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    composes: [rule_1.default, rule_2.default],\n    evaluate: () => {\n        return {\n            expectations(outcomes) {\n                return {\n                    1: (0, expectation_1.expectation)(alfa_trilean_1.Trilean.some(outcomes, is_passed_1.isPassed), () => Outcomes.HasTextAlternative, () => Outcomes.HasNoTextAlternative),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.HasTextAlternative = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The \\`<video>\\` element has a text alternative for its audio content`));\n    Outcomes.HasNoTextAlternative = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The \\`<video>\\` element has no text alternative for its audio content`));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r27/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r28/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r28/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_aria_1 = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst { hasAccessibleName, isIncludedInTheAccessibilityTree } = alfa_aria_1.DOM;\nconst { hasInputType, hasNamespace } = alfa_dom_1.Element;\nconst { and, test } = alfa_predicate_1.Predicate;\nconst { getElementDescendants } = alfa_dom_1.Query;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r28\",\n    requirements: [\n        alfa_wcag_1.Criterion.of(\"1.1.1\"),\n        alfa_wcag_1.Criterion.of(\"4.1.2\"),\n        alfa_wcag_1.Technique.of(\"G94\"),\n        alfa_wcag_1.Technique.of(\"G95\"),\n    ],\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    evaluate({ device, document }) {\n        return {\n            applicability() {\n                return getElementDescendants(document, alfa_dom_1.Node.fullTree).filter(and(hasNamespace(alfa_dom_1.Namespace.HTML), hasInputType(\"image\"), isIncludedInTheAccessibilityTree(device)));\n            },\n            expectations(target) {\n                return {\n                    1: (0, expectation_1.expectation)(test(\n                    // Rejecting default name\n                    hasAccessibleName(device, (name) => name.source.length !== 0), target), () => Outcomes.HasAccessibleName, () => Outcomes.HasNoAccessibleName),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.HasAccessibleName = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The \\`<input type=\"image\">\\` element has an accessible name`));\n    Outcomes.HasNoAccessibleName = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The \\`<input type=\"image\">\\` element does not have an accessible name`));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r28/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r29/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r29/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst audio_1 = __webpack_require__(/*! ../common/applicability/audio */ \"./node_modules/@siteimprove/alfa-rules/src/common/applicability/audio.js\");\nconst media_text_alternative_1 = __webpack_require__(/*! ../common/expectation/media-text-alternative */ \"./node_modules/@siteimprove/alfa-rules/src/common/expectation/media-text-alternative.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r29\",\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    evaluate({ device, document }) {\n        return {\n            applicability() {\n                return (0, audio_1.audio)(document, device);\n            },\n            expectations(target) {\n                return (0, media_text_alternative_1.audioTextAlternative)(target, device);\n            },\n        };\n    },\n});\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r29/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r3/rule.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r3/rule.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst { isEmpty } = alfa_iterable_1.Iterable;\nconst { not, test } = alfa_predicate_1.Predicate;\nconst { hasId, hasUniqueId } = alfa_dom_1.Element;\nconst { getElementDescendants } = alfa_dom_1.Query;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r3\",\n    requirements: [alfa_wcag_1.Criterion.of(\"4.1.1\"), alfa_wcag_1.Technique.of(\"H93\")],\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    evaluate({ document }) {\n        return {\n            applicability() {\n                return getElementDescendants(document, alfa_dom_1.Node.composedNested).filter(hasId(not(isEmpty)));\n            },\n            expectations(target) {\n                return {\n                    1: (0, expectation_1.expectation)(test(hasUniqueId, target), () => Outcomes.HasUniqueId, () => Outcomes.HasNonUniqueId),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.HasUniqueId = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The element has a unique ID`));\n    Outcomes.HasNonUniqueId = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The element does not have a unique ID`));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r3/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r30/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r30/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_trilean_1 = __webpack_require__(/*! @siteimprove/alfa-trilean */ \"./node_modules/@siteimprove/alfa-trilean/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst is_passed_1 = __webpack_require__(/*! ../common/act/is-passed */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/is-passed.js\");\nconst rule_1 = __webpack_require__(/*! ../sia-r23/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r23/rule.js\");\nconst rule_2 = __webpack_require__(/*! ../sia-r29/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r29/rule.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nexports[\"default\"] = alfa_act_1.Rule.Composite.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r30\",\n    requirements: [alfa_wcag_1.Criterion.of(\"1.2.1\"), alfa_wcag_1.Technique.of(\"G158\")],\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    composes: [rule_1.default, rule_2.default],\n    evaluate() {\n        return {\n            expectations(outcomes) {\n                return {\n                    1: (0, expectation_1.expectation)(alfa_trilean_1.Trilean.some(outcomes, is_passed_1.isPassed), () => Outcomes.HasTextAlternative, () => Outcomes.HasNoTextAlternative),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.HasTextAlternative = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The \\`<audio>\\` element has a text alternative`));\n    Outcomes.HasNoTextAlternative = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The \\`<audio>\\` element does not have a text alternative`));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r30/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r31/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r31/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst video_1 = __webpack_require__(/*! ../common/applicability/video */ \"./node_modules/@siteimprove/alfa-rules/src/common/applicability/video.js\");\nconst media_text_alternative_1 = __webpack_require__(/*! ../common/expectation/media-text-alternative */ \"./node_modules/@siteimprove/alfa-rules/src/common/expectation/media-text-alternative.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r31\",\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    evaluate({ device, document }) {\n        return {\n            applicability() {\n                return (0, video_1.video)(document, device, { audio: { has: true } });\n            },\n            expectations(target) {\n                return (0, media_text_alternative_1.videoTextAlternative)(target, device);\n            },\n        };\n    },\n});\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r31/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r32/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r32/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst video_1 = __webpack_require__(/*! ../common/applicability/video */ \"./node_modules/@siteimprove/alfa-rules/src/common/applicability/video.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst question_1 = __webpack_require__(/*! ../common/act/question */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/question.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r32\",\n    requirements: [alfa_wcag_1.Technique.of(\"G166\")],\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    evaluate({ device, document }) {\n        return {\n            applicability() {\n                return (0, video_1.video)(document, device, { audio: { has: false } });\n            },\n            expectations(target) {\n                return {\n                    1: question_1.Question.of(\"has-audio-track\", target).map((hasAudioTrack) => (0, expectation_1.expectation)(hasAudioTrack, () => Outcomes.HasDescriptiveAudio, () => Outcomes.HasNoDescriptiveAudio)),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.HasDescriptiveAudio = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The \\`<video>\\` element has an audio track that describes its visual\n      information`));\n    Outcomes.HasNoDescriptiveAudio = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The \\`<video>\\` element does not have an audio track that describes its\n      visual information`));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r32/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r33/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r33/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst video_1 = __webpack_require__(/*! ../common/applicability/video */ \"./node_modules/@siteimprove/alfa-rules/src/common/applicability/video.js\");\nconst media_transcript_1 = __webpack_require__(/*! ../common/expectation/media-transcript */ \"./node_modules/@siteimprove/alfa-rules/src/common/expectation/media-transcript.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r33\",\n    requirements: [alfa_wcag_1.Technique.of(\"G159\")],\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    evaluate: ({ device, document }) => {\n        return {\n            applicability() {\n                return (0, video_1.video)(document, device, { audio: { has: false } });\n            },\n            expectations(target) {\n                return (0, media_transcript_1.videoTranscript)(target, device);\n            },\n        };\n    },\n});\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r33/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r35/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r35/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_trilean_1 = __webpack_require__(/*! @siteimprove/alfa-trilean */ \"./node_modules/@siteimprove/alfa-trilean/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst is_passed_1 = __webpack_require__(/*! ../common/act/is-passed */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/is-passed.js\");\nconst rule_1 = __webpack_require__(/*! ../sia-r26/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r26/rule.js\");\nconst rule_2 = __webpack_require__(/*! ../sia-r32/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r32/rule.js\");\nconst rule_3 = __webpack_require__(/*! ../sia-r33/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r33/rule.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nexports[\"default\"] = alfa_act_1.Rule.Composite.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r35\",\n    requirements: [\n        alfa_wcag_1.Criterion.of(\"1.2.1\"),\n        alfa_wcag_1.Technique.of(\"G159\"),\n        alfa_wcag_1.Technique.of(\"G166\"),\n    ],\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    composes: [rule_1.default, rule_2.default, rule_3.default],\n    evaluate() {\n        return {\n            expectations(outcomes) {\n                return {\n                    1: (0, expectation_1.expectation)(alfa_trilean_1.Trilean.some(outcomes, is_passed_1.isPassed), () => Outcomes.HasAlternative, () => Outcomes.HasNoAlternative),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.HasAlternative = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The \\`<video>\\` element has an alternative`));\n    Outcomes.HasNoAlternative = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The \\`<video>\\` element does not have an alternative`));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r35/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r37/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r37/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_trilean_1 = __webpack_require__(/*! @siteimprove/alfa-trilean */ \"./node_modules/@siteimprove/alfa-trilean/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst is_passed_1 = __webpack_require__(/*! ../common/act/is-passed */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/is-passed.js\");\nconst rule_1 = __webpack_require__(/*! ../sia-r25/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r25/rule.js\");\nconst rule_2 = __webpack_require__(/*! ../sia-r31/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r31/rule.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nexports[\"default\"] = alfa_act_1.Rule.Composite.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r37\",\n    requirements: [\n        alfa_wcag_1.Criterion.of(\"1.2.5\"),\n        alfa_wcag_1.Technique.of(\"G8\"),\n        alfa_wcag_1.Technique.of(\"G78\"),\n        alfa_wcag_1.Technique.of(\"G173\"),\n    ],\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    composes: [rule_1.default, rule_2.default],\n    evaluate() {\n        return {\n            expectations(outcomes) {\n                return {\n                    1: (0, expectation_1.expectation)(alfa_trilean_1.Trilean.some(outcomes, is_passed_1.isPassed), () => Outcomes.HasAudioDescription, () => Outcomes.HasNoAudioDescription),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.HasAudioDescription = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The \\`<video>\\` element has an audio description`));\n    Outcomes.HasNoAudioDescription = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The \\`<video>\\` element does not have an audio description`));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r37/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r38/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r38/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_trilean_1 = __webpack_require__(/*! @siteimprove/alfa-trilean */ \"./node_modules/@siteimprove/alfa-trilean/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst is_passed_1 = __webpack_require__(/*! ../common/act/is-passed */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/is-passed.js\");\nconst rule_1 = __webpack_require__(/*! ../sia-r24/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r24/rule.js\");\nconst rule_2 = __webpack_require__(/*! ../sia-r25/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r25/rule.js\");\nconst rule_3 = __webpack_require__(/*! ../sia-r31/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r31/rule.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nexports[\"default\"] = alfa_act_1.Rule.Composite.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r38\",\n    requirements: [\n        alfa_wcag_1.Criterion.of(\"1.2.3\"),\n        alfa_wcag_1.Criterion.of(\"1.2.5\"),\n        alfa_wcag_1.Criterion.of(\"1.2.8\"),\n        alfa_wcag_1.Technique.of(\"G8\"),\n        alfa_wcag_1.Technique.of(\"G69\"),\n        alfa_wcag_1.Technique.of(\"G78\"),\n        alfa_wcag_1.Technique.of(\"G173\"),\n    ],\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    composes: [rule_1.default, rule_2.default, rule_3.default],\n    evaluate() {\n        return {\n            expectations(outcomes) {\n                return {\n                    1: (0, expectation_1.expectation)(alfa_trilean_1.Trilean.some(outcomes, is_passed_1.isPassed), () => Outcomes.HasAlternative, () => Outcomes.HasNoAlternative),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.HasAlternative = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The \\`<video>\\` element has an audio or text alternative`));\n    Outcomes.HasNoAlternative = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The \\`<video>\\` element does not have an audio or text alternative`));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r38/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r39/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r39/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_aria_1 = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst question_1 = __webpack_require__(/*! ../common/act/question */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/question.js\");\nconst diagnostic_1 = __webpack_require__(/*! ../common/diagnostic */ \"./node_modules/@siteimprove/alfa-rules/src/common/diagnostic.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst { hasAccessibleName, isIncludedInTheAccessibilityTree } = alfa_aria_1.DOM;\nconst { hasInputType, hasName, hasNamespace } = alfa_dom_1.Element;\nconst { and, or, test } = alfa_predicate_1.Predicate;\nconst { getElementDescendants } = alfa_dom_1.Query;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r39\",\n    requirements: [\n        alfa_wcag_1.Criterion.of(\"1.1.1\"),\n        alfa_wcag_1.Technique.of(\"G94\"),\n        alfa_wcag_1.Technique.of(\"G95\"),\n    ],\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    evaluate({ device, document }) {\n        return {\n            applicability() {\n                return getElementDescendants(document, alfa_dom_1.Node.fullTree).filter(and(hasNamespace(alfa_dom_1.Namespace.HTML), or(hasName(\"img\"), and(hasName(\"input\"), hasInputType(\"image\"))), isIncludedInTheAccessibilityTree(device), (element) => test(hasAccessibleName(device, (accessibleName) => element\n                    .attribute(\"src\")\n                    .map((attr) => getFilename(attr.value))\n                    .some((filename) => filename.toLowerCase() ===\n                    accessibleName.value.toLowerCase().trim())), element)));\n            },\n            expectations(target) {\n                const accName = diagnostic_1.WithName.getName(target, device).getUnsafe(); // Existence of accessible name is guaranteed by applicability\n                return {\n                    1: question_1.Question.of(\"name-describes-purpose\", target, `Does the accessible name of the \\`<${target.name}>\\` element describe its purpose?`, {\n                        diagnostic: diagnostic_1.WithName.of(`Does the accessible name of the \\`<${target.name}>\\` element describe its purpose?`, accName),\n                    }).map((nameDescribesPurpose) => (0, expectation_1.expectation)(nameDescribesPurpose, () => Outcomes.NameIsDescriptive(target.name, accName), () => Outcomes.NameIsNotDescriptive(target.name, accName))),\n                };\n            },\n        };\n    },\n});\nfunction getFilename(path) {\n    const base = path.substring(path.lastIndexOf(\"/\") + 1);\n    const params = base.indexOf(\"?\");\n    if (params !== -1) {\n        return base.substring(0, params).trim();\n    }\n    return base.trim();\n}\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.NameIsDescriptive = (name, accName) => alfa_result_1.Ok.of(diagnostic_1.WithName.of(`The accessible name of the \\`<${name}>\\` element describes its purpose`, accName));\n    Outcomes.NameIsNotDescriptive = (name, accName) => alfa_result_1.Err.of(diagnostic_1.WithName.of(`The accessible name of the \\`<${name}>\\` element does not describe its purpose`, accName));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r39/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r4/rule.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r4/rule.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst predicate_1 = __webpack_require__(/*! ../common/predicate */ \"./node_modules/@siteimprove/alfa-rules/src/common/predicate.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst { hasAttribute, isDocumentElement } = alfa_dom_1.Element;\nconst { isEmpty } = alfa_iterable_1.Iterable;\nconst { nor } = alfa_predicate_1.Predicate;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r4\",\n    requirements: [alfa_wcag_1.Criterion.of(\"3.1.1\"), alfa_wcag_1.Technique.of(\"H57\")],\n    tags: [tags_1.Scope.Page, tags_1.Stability.Stable],\n    evaluate({ document }) {\n        return {\n            applicability() {\n                return document.children().filter(isDocumentElement);\n            },\n            expectations(target) {\n                return {\n                    1: (0, expectation_1.expectation)(hasAttribute(\"lang\", nor(isEmpty, predicate_1.isWhitespace))(target), () => Outcomes.HasLanguage, () => Outcomes.HasNoLanguage),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.HasLanguage = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The \\`lang\\` attribute exists and is neither empty nor only whitespace`));\n    Outcomes.HasNoLanguage = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The \\`lang\\` attribute is either missing, empty, or only whitespace`));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r4/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r40/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r40/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_aria_1 = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst { hasIncorrectRoleWithoutName, hasNonEmptyAccessibleName, hasRole, isIncludedInTheAccessibilityTree, } = alfa_aria_1.DOM;\nconst { and } = alfa_predicate_1.Predicate;\nconst { getElementDescendants } = alfa_dom_1.Query;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r40\",\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    evaluate({ device, document }) {\n        return {\n            applicability() {\n                return (getElementDescendants(document, alfa_dom_1.Node.fullTree)\n                    .filter(and(hasRole(device, (role) => role.is(\"region\")), isIncludedInTheAccessibilityTree(device)))\n                    // circumventing https://github.com/Siteimprove/alfa/issues/298\n                    .reject(hasIncorrectRoleWithoutName(device)));\n            },\n            expectations(target) {\n                return {\n                    1: (0, expectation_1.expectation)(hasNonEmptyAccessibleName(device)(target), () => Outcomes.HasName, () => Outcomes.HasNoName),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.HasName = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The region has an accessible name`));\n    Outcomes.HasNoName = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The region does not have an accessible name`));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r40/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r41/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r41/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_aria_1 = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst dom = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst group_1 = __webpack_require__(/*! ../common/act/group */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/group.js\");\nconst question_1 = __webpack_require__(/*! ../common/act/question */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/question.js\");\nconst predicate_1 = __webpack_require__(/*! ../common/predicate */ \"./node_modules/@siteimprove/alfa-rules/src/common/predicate.js\");\nconst normalize_1 = __webpack_require__(/*! ../common/normalize */ \"./node_modules/@siteimprove/alfa-rules/src/common/normalize.js\");\nconst diagnostic_1 = __webpack_require__(/*! ../common/diagnostic */ \"./node_modules/@siteimprove/alfa-rules/src/common/diagnostic.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst { hasNonEmptyAccessibleName, hasRole, isIncludedInTheAccessibilityTree } = alfa_aria_1.DOM;\nconst { hasNamespace } = alfa_dom_1.Element;\nconst { and } = alfa_predicate_1.Predicate;\nconst { getElementDescendants } = alfa_dom_1.Query;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r41\",\n    requirements: [alfa_wcag_1.Criterion.of(\"2.4.9\")],\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    evaluate({ device, document, response }) {\n        return {\n            applicability() {\n                return getElementDescendants(document, dom.Node.fullTree)\n                    .filter(and(hasNamespace(alfa_dom_1.Namespace.HTML, alfa_dom_1.Namespace.SVG), hasRole(device, (role) => role.is(\"link\")), isIncludedInTheAccessibilityTree(device), hasNonEmptyAccessibleName(device)))\n                    .groupBy((element) => alfa_aria_1.Node.from(element, device).name.map((name) => (0, normalize_1.normalize)(name.value)))\n                    .filter((elements) => elements.size > 1)\n                    .map(group_1.Group.of)\n                    .values();\n            },\n            expectations(target) {\n                const name = diagnostic_1.WithName.getName(alfa_iterable_1.Iterable.first(target).getUnsafe(), // Existence of first element is guaranteed by applicability\n                device).getUnsafe(); // Existence of accessible name is guaranteed by applicability\n                const embedSameResource = [...target].every((element, i, elements) => {\n                    // This is either the first element...\n                    return (i === 0 ||\n                        // ...or an element that embeds the same resource as the element\n                        // before it.\n                        (0, predicate_1.referenceSameResource)(response.url)(element, elements[i - 1]));\n                });\n                return {\n                    1: (0, expectation_1.expectation)(embedSameResource, () => Outcomes.ResolveSameResource(name), () => question_1.Question.of(\"reference-equivalent-resources\", target, `Do the links resolve to equivalent resources?`, {\n                        diagnostic: diagnostic_1.WithName.of(`Do the links resolve to equivalent resources?`, name),\n                    }).map((embedEquivalentResources) => (0, expectation_1.expectation)(embedEquivalentResources, () => Outcomes.ResolveEquivalentResource(name), () => Outcomes.ResolveDifferentResource(name)))),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.ResolveSameResource = (name) => alfa_result_1.Ok.of(diagnostic_1.WithName.of(`The links resolve to the same resource`, name));\n    Outcomes.ResolveEquivalentResource = (name) => alfa_result_1.Ok.of(diagnostic_1.WithName.of(`The links resolve to equivalent resources`, name));\n    Outcomes.ResolveDifferentResource = (name) => alfa_result_1.Err.of(diagnostic_1.WithName.of(`The links do not resolve to the same or equivalent resources`, name));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r41/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r42/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r42/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_aria_1 = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst aria = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst with_role_1 = __webpack_require__(/*! ../common/diagnostic/with-role */ \"./node_modules/@siteimprove/alfa-rules/src/common/diagnostic/with-role.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst { hasRole, isIncludedInTheAccessibilityTree } = alfa_aria_1.DOM;\nconst { isElement, hasNamespace } = alfa_dom_1.Element;\nconst { and } = alfa_predicate_1.Predicate;\nconst { getElementDescendants } = alfa_dom_1.Query;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r42\",\n    requirements: [alfa_wcag_1.Criterion.of(\"1.3.1\")],\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    evaluate({ device, document }) {\n        return {\n            applicability() {\n                return getElementDescendants(document, alfa_dom_1.Node.fullTree).filter(and(hasNamespace(alfa_dom_1.Namespace.HTML, alfa_dom_1.Namespace.SVG), isIncludedInTheAccessibilityTree(device), hasRole(device, (role) => role.hasRequiredParent())));\n            },\n            expectations(target) {\n                return {\n                    1: (0, expectation_1.expectation)(hasRequiredParent(device)(target), () => Outcomes.IsOwnedByContextRole(with_role_1.WithRole.getRoleName(target, device)), () => Outcomes.IsNotOwnedByContextRole(with_role_1.WithRole.getRoleName(target, device))),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.IsOwnedByContextRole = (role) => alfa_result_1.Ok.of(with_role_1.WithRole.of(`The element is owned by an element of its required context role`, role));\n    Outcomes.IsNotOwnedByContextRole = (role) => alfa_result_1.Err.of(with_role_1.WithRole.of(`The element is not owned by an element of its required context role`, role));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\nfunction hasRequiredParent(device) {\n    return (element) => {\n        const node = aria.Node.from(element, device);\n        return node.role\n            .filter((role) => role.hasRequiredParent())\n            .every((role) => node.parent().some(isRequiredParent(role.requiredParent)));\n    };\n}\nfunction isRequiredParent(requiredParent) {\n    return (node) => requiredParent.some((roles) => isRequiredParent(roles)(node));\n    function isRequiredParent(requiredParent) {\n        return (node) => {\n            const [role, ...rest] = requiredParent;\n            if (node.role.some(alfa_aria_1.Role.hasName(role))) {\n                return (rest.length === 0 ||\n                    node\n                        .parent()\n                        .filter((node) => isElement(node.node))\n                        .some(isRequiredParent(rest)));\n            }\n            return false;\n        };\n    }\n}\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r42/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r43/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r43/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_aria_1 = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst { hasExplicitRole, hasNonEmptyAccessibleName, isIncludedInTheAccessibilityTree, } = alfa_aria_1.DOM;\nconst { hasNamespace } = alfa_dom_1.Element;\nconst { and } = alfa_predicate_1.Predicate;\nconst { getElementDescendants } = alfa_dom_1.Query;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r43\",\n    requirements: [alfa_wcag_1.Criterion.of(\"1.1.1\")],\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    evaluate({ document, device }) {\n        return {\n            applicability() {\n                return getElementDescendants(document, alfa_dom_1.Node.fullTree).filter(and(hasNamespace(alfa_dom_1.Namespace.SVG), hasExplicitRole(\"img\", \"graphics-document\", \"graphics-symbol\"), isIncludedInTheAccessibilityTree(device)));\n            },\n            expectations(target) {\n                return {\n                    1: (0, expectation_1.expectation)(hasNonEmptyAccessibleName(device)(target), () => Outcomes.HasName(target.name), () => Outcomes.HasNoName(target.name)),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.HasName = (target) => alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The \\`<${target}>\\` element has an accessible name`));\n    Outcomes.HasNoName = (target) => alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The \\`<${target}>\\` element does not have an accessible name`));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r43/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r44/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r44/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_affine_1 = __webpack_require__(/*! @siteimprove/alfa-affine */ \"./node_modules/@siteimprove/alfa-affine/src/index.js\");\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_device_1 = __webpack_require__(/*! @siteimprove/alfa-device */ \"./node_modules/@siteimprove/alfa-device/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_math_1 = __webpack_require__(/*! @siteimprove/alfa-math */ \"./node_modules/@siteimprove/alfa-math/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_style_1 = __webpack_require__(/*! @siteimprove/alfa-style */ \"./node_modules/@siteimprove/alfa-style/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst { isElement } = alfa_dom_1.Element;\nconst { some } = alfa_iterable_1.Iterable;\nconst { abs, acos, PI } = Math;\nconst { or } = alfa_predicate_1.Predicate;\nconst { hasComputedStyle, isVisible } = alfa_style_1.Style;\nconst { getElementDescendants } = alfa_dom_1.Query;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r44\",\n    requirements: [alfa_wcag_1.Criterion.of(\"1.3.4\")],\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    evaluate({ device, document }) {\n        let landscape;\n        let portrait;\n        if (device.viewport.orientation === alfa_device_1.Viewport.Orientation.Landscape) {\n            landscape = device;\n            portrait = alfa_device_1.Device.of(device.type, alfa_device_1.Viewport.of(device.viewport.width, device.viewport.height, alfa_device_1.Viewport.Orientation.Portrait), device.display);\n        }\n        else {\n            portrait = device;\n            landscape = alfa_device_1.Device.of(device.type, alfa_device_1.Viewport.of(device.viewport.width, device.viewport.height, alfa_device_1.Viewport.Orientation.Landscape), device.display);\n        }\n        return {\n            applicability() {\n                return getElementDescendants(document, alfa_dom_1.Node.fullTree)\n                    .filter(isVisible(device))\n                    .filter(or(hasConditionalRotation(landscape), hasConditionalRotation(portrait)));\n            },\n            expectations(target) {\n                const rotation = getRelativeRotation(target, landscape, portrait).map((rotation) => alfa_math_1.Real.round(rotation));\n                return {\n                    1: (0, expectation_1.expectation)(rotation.every((rotation) => rotation !== 90 && rotation !== 270), () => Outcomes.RotationNotLocked, () => Outcomes.RotationLocked),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.RotationNotLocked = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The element is not locked in orientation`));\n    Outcomes.RotationLocked = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The element is locked in orientation`));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\nfunction hasConditionalRotation(device) {\n    return or(hasComputedStyle(\"transform\", (value, source) => \n    // The only keyword value is \"none\", which is no rotation\n    !alfa_css_1.Keyword.isKeyword(value) &&\n        source.some(isOrientationConditional) &&\n        some(value, (transform) => transform.kind === \"rotate\" || transform.kind === \"matrix\"), device), hasComputedStyle(\"rotate\", (value, source) => \n    // The only keyword value is \"none\", which is no rotation\n    !alfa_css_1.Keyword.isKeyword(value) && source.some(isOrientationConditional), device));\n}\nfunction isOrientationConditional(declaration) {\n    return some(declaration.ancestors(), (rule) => alfa_dom_1.MediaRule.isMediaRule(rule) &&\n        some(rule.queries.queries, (query) => query.condition.some(hasOrientationCondition)));\n}\nfunction hasOrientationCondition(condition) {\n    for (const feature of condition) {\n        if (feature.name === \"orientation\" &&\n            feature.value.some((value) => value.matches(alfa_css_1.Keyword.of(\"landscape\")) ||\n                value.matches(alfa_css_1.Keyword.of(\"portrait\")))) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction getRotation(element, device) {\n    const parent = element.parent(alfa_dom_1.Node.flatTree).filter(isElement);\n    const rotation = parent.isNone()\n        ? alfa_option_1.Option.of(0)\n        : parent.flatMap((parent) => getRotation(parent, device));\n    return rotation.flatMap((rotation) => {\n        const style = alfa_style_1.Style.from(element, device);\n        // rotate is applied before transform,\n        // see https://w3c.github.io/csswg-drafts/css-transforms-2/#ctm\n        const rotate = style.computed(\"rotate\").value;\n        if (!alfa_css_1.Keyword.isKeyword(rotate)) {\n            const { x, y, angle } = rotate;\n            if (x.value !== 0 || y.value !== 0) {\n                // If the rotation is not purely around the z axis, we bail out immediately\n                // and do not try to see what it looks like.\n                // This may lead to incorrect results if the x/y rotation is cancelled\n                // by a counter-rotation.\n                return alfa_option_1.None;\n            }\n            rotation += angle.value;\n        }\n        const transform = style.computed(\"transform\").value;\n        if (alfa_css_1.Keyword.isKeyword(transform)) {\n            return alfa_option_1.Option.of(rotation);\n        }\n        for (const fn of transform) {\n            switch (fn.kind) {\n                case \"rotate\": {\n                    const { x, y, angle } = fn;\n                    if (x.value !== 0 || y.value !== 0) {\n                        // If the rotation is not purely around the z axis, we bail out immediately\n                        // and do not try to see what it looks like.\n                        // This may lead to incorrect results if the x/y rotation is cancelled\n                        // by a counter-rotation.\n                        return alfa_option_1.None;\n                    }\n                    rotation += angle.value;\n                    break;\n                }\n                case \"matrix\": {\n                    const decomposed = alfa_affine_1.Transformation.of(fn.values.map((row) => row.map((number) => number.value))).decompose();\n                    if (!decomposed.isSome()) {\n                        continue;\n                    }\n                    const [x, y, , w] = decomposed.get().rotate;\n                    if (x !== 0 || y !== 0) {\n                        return alfa_option_1.None;\n                    }\n                    const angle = (2 * acos(w) * 180) / PI;\n                    rotation += angle;\n                }\n            }\n        }\n        return alfa_option_1.Option.of(alfa_math_1.Real.modulo(rotation, 360));\n    });\n}\nfunction getRelativeRotation(element, left, right) {\n    return getRotation(element, left).flatMap((left) => getRotation(element, right).map((right) => alfa_math_1.Real.modulo(abs(left - right), 360)));\n}\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r44/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r45/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r45/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_aria_1 = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst alfa_cache_1 = __webpack_require__(/*! @siteimprove/alfa-cache */ \"./node_modules/@siteimprove/alfa-cache/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_map_1 = __webpack_require__(/*! @siteimprove/alfa-map */ \"./node_modules/@siteimprove/alfa-map/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst { hasRole, isPerceivableForAll } = alfa_aria_1.DOM;\nconst { hasAttribute, hasId, hasName, hasNamespace } = alfa_dom_1.Element;\nconst { and, equals } = alfa_predicate_1.Predicate;\nconst { getElementDescendants } = alfa_dom_1.Query;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r45\",\n    requirements: [alfa_wcag_1.Criterion.of(\"1.3.1\"), alfa_wcag_1.Technique.of(\"H43\")],\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    evaluate({ device, document }) {\n        const cellsCache = alfa_cache_1.Cache.empty();\n        const headers = getElementDescendants(document)\n            .filter(and(hasNamespace(alfa_dom_1.Namespace.HTML), hasName(\"table\"), isPerceivableForAll(device), hasRole(device, (role) => role.is(\"table\"))))\n            .reduce((headers, table) => {\n            const cells = cellsCache\n                .get(table, () => getElementDescendants(table).filter(and(hasNamespace(alfa_dom_1.Namespace.HTML), hasName(\"td\", \"th\"))))\n                .filter(hasAttribute(\"headers\"));\n            for (const cell of cells) {\n                // The previous filter ensures that headers exists.\n                headers = headers.set(cell.attribute(\"headers\").getUnsafe(), table);\n            }\n            return headers;\n        }, alfa_map_1.Map.empty());\n        return {\n            applicability() {\n                return headers.keys();\n            },\n            expectations(target) {\n                // targets are headers' key, so there is something in the map.\n                const table = headers.get(target).getUnsafe();\n                const ids = target.tokens();\n                const cells = cellsCache\n                    .get(table, () => getElementDescendants(table).filter(and(hasNamespace(alfa_dom_1.Namespace.HTML), hasName(\"td\", \"th\"))))\n                    .filter(hasId(equals(...ids)));\n                return {\n                    1: (0, expectation_1.expectation)(\n                    // Each token refers to a different cell in the same table if the\n                    // number of identified cells is equal to the number of IDs.\n                    cells.size === ids.size, () => Outcomes.HeadersRefersToCellInTable, () => Outcomes.HeadersDoesNotReferToCellsInTable),\n                    2: (0, expectation_1.expectation)(cells.every((cell) => !target.owner.some(equals(cell))), () => Outcomes.HeadersDoesNotRefersToSelf, () => Outcomes.HeadersRefersToSelf),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.HeadersRefersToCellInTable = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The \\`headers\\` attribute refers to cells in the same \\`<table>\\``));\n    Outcomes.HeadersDoesNotReferToCellsInTable = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The \\`headers\\` attribute refers to cells not present in the same \\`<table>\\``));\n    Outcomes.HeadersDoesNotRefersToSelf = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The \\`headers\\` attribute does not refer to the cell defining it`));\n    Outcomes.HeadersRefersToSelf = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The \\`headers\\` attribute refers to the cell defining it`));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r45/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r46/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r46/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_aria_1 = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_map_1 = __webpack_require__(/*! @siteimprove/alfa-map */ \"./node_modules/@siteimprove/alfa-map/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_table_1 = __webpack_require__(/*! @siteimprove/alfa-table */ \"./node_modules/@siteimprove/alfa-table/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst { hasRole, isIncludedInTheAccessibilityTree, isPerceivableForAll } = alfa_aria_1.DOM;\nconst { hasName, hasNamespace } = alfa_dom_1.Element;\nconst { and } = alfa_predicate_1.Predicate;\nconst { getElementDescendants } = alfa_dom_1.Query;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r46\",\n    requirements: [alfa_wcag_1.Criterion.of(\"1.3.1\"), alfa_wcag_1.Technique.of(\"H43\")],\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    evaluate({ device, document }) {\n        let data = alfa_map_1.Map.empty();\n        return {\n            *applicability() {\n                const tables = getElementDescendants(document).filter(and(hasNamespace(alfa_dom_1.Namespace.HTML), hasName(\"table\"), isIncludedInTheAccessibilityTree(device)));\n                for (const table of tables) {\n                    const model = alfa_table_1.Table.from(table);\n                    const headers = getElementDescendants(table).filter(and(hasNamespace(alfa_dom_1.Namespace.HTML), hasName(\"th\"), hasRole(device, \"rowheader\", \"columnheader\"), isPerceivableForAll(device)));\n                    for (const header of headers) {\n                        for (const cell of model.cells.find((cell) => cell.element.equals(header))) {\n                            data = data.set(header, [cell, model]);\n                            yield header;\n                        }\n                    }\n                }\n            },\n            expectations(target) {\n                // data has been set just before yielding targets\n                const [header, table] = data.get(target).getUnsafe();\n                return {\n                    1: (0, expectation_1.expectation)(table.cells.some((cell) => \n                    // Does there exists a cell with the target as one of its headers?\n                    hasRole(device, (role) => role.is(\"cell\"))(cell.element) &&\n                        cell.headers.some((slot) => slot.equals(header.anchor))), () => Outcomes.IsAssignedToDataCell, () => Outcomes.IsNotAssignedToDataCell),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.IsAssignedToDataCell = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The header cell is assigned to a cell`));\n    Outcomes.IsNotAssignedToDataCell = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The header cell is not assigned to any cell`));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r46/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r47/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r47/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_map_1 = __webpack_require__(/*! @siteimprove/alfa-map */ \"./node_modules/@siteimprove/alfa-map/src/index.js\");\nconst alfa_math_1 = __webpack_require__(/*! @siteimprove/alfa-math */ \"./node_modules/@siteimprove/alfa-math/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_set_1 = __webpack_require__(/*! @siteimprove/alfa-set */ \"./node_modules/@siteimprove/alfa-set/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst { hasAttribute, hasName, hasNamespace } = alfa_dom_1.Element;\nconst { and, equals } = alfa_predicate_1.Predicate;\nconst { getElementDescendants } = alfa_dom_1.Query;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r47\",\n    requirements: [\n        alfa_wcag_1.Criterion.of(\"1.4.4\"),\n        // The 1.4.10 secondary mapping is missing in ACT rules\n        // https://github.com/act-rules/act-rules.github.io/issues/2025\n        // Commenting it out as it would otherwise invalidate our implementation\n        // in the reports.\n        // Criterion.of(\"1.4.10\"),\n    ],\n    tags: [tags_1.Scope.Page, tags_1.Stability.Stable],\n    evaluate({ document }) {\n        let maximumScaleMap = alfa_map_1.Map.empty();\n        let userScalableMap = alfa_map_1.Map.empty();\n        return {\n            applicability() {\n                return (getElementDescendants(document)\n                    .filter(and(hasNamespace(alfa_dom_1.Namespace.HTML), hasName(\"meta\"), hasAttribute(\"name\", equals(\"viewport\")), hasAttribute(\"content\")))\n                    // Compute the required properties and register them, reject the\n                    // element if none are defined.\n                    .filter((meta) => {\n                    const properties = parsePropertiesList(\n                    // The previous filter ensures there is a content.\n                    meta.attribute(\"content\").getUnsafe().value.toLowerCase());\n                    const scale = parseMaximumScale(properties.get(\"maximum-scale\"));\n                    const scalable = parseUserScalable(properties.get(\"user-scalable\"));\n                    // Since we look at each `<meta>` once, no need to check for\n                    // pre-existing key in the Maps.\n                    scale.forEach((scale) => {\n                        maximumScaleMap = maximumScaleMap.set(meta, scale);\n                    });\n                    scalable.forEach((scalable) => {\n                        userScalableMap = userScalableMap.set(meta, scalable);\n                    });\n                    return scale.or(scalable).isSome();\n                }));\n            },\n            expectations(target) {\n                return {\n                    1: (0, expectation_1.expectation)(maximumScaleMap.get(target).every((scale) => scale >= 2) &&\n                        userScalableMap\n                            .get(target)\n                            .every((scalable) => scalable !== \"fixed\"), () => Outcomes.MetaDoesNotPreventZoom, () => Outcomes.MetaDoesPreventZoom),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.MetaDoesNotPreventZoom = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The \\`<meta>\\` element does not restrict the ability to zoom`));\n    Outcomes.MetaDoesPreventZoom = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The \\`<meta>\\` element restricts the ability to zoom`));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n/**\n * Parses a list of \"name=value\" properties.\n *\n * {@link https://www.w3.org/TR/css-device-adapt-1/#parsing-algorithm}\n *\n * @remarks\n * This seems to be the iOS/Safari algorithm and other browsers might handle it\n * in unknown ways. The algorithm considers \"foo bar =  = === foobar\" as a valid\n * string for \"foo=foobar\"\n */\nfunction parsePropertiesList(propertiesList) {\n    let valueMap = alfa_map_1.Map.empty();\n    const whitespace = [\" \", \"\\xa0\", \"\\t\", \"\\n\", \"\\f\", \"\\r\", \"\\v\"];\n    const separator = [\",\", \";\"];\n    const equal = [\"=\"];\n    const sepSet = alfa_set_1.Set.from(separator);\n    const allSpecial = alfa_set_1.Set.of(...whitespace, ...separator, ...equal);\n    const separatorAndEqual = alfa_set_1.Set.of(...separator, ...equal);\n    const notSeparator = alfa_set_1.Set.of(...whitespace, ...equal);\n    const { length } = propertiesList;\n    let i = 0;\n    let start;\n    let name;\n    let value;\n    while (i < length) {\n        // Find the start of the next name\n        while (i < length && allSpecial.has(propertiesList[i])) {\n            i++;\n        }\n        // Parse the name of the property\n        start = i;\n        while (i < length && !allSpecial.has(propertiesList[i])) {\n            i++;\n        }\n        name = propertiesList.substring(start, i);\n        // Find a separator (end of property) or equal sign\n        while (i < length && !separatorAndEqual.has(propertiesList[i])) {\n            i++;\n        }\n        // Skip all further ignored or equal characters\n        while (i < length && notSeparator.has(propertiesList[i])) {\n            i++;\n        }\n        // If we are hitting a separator, the current property has just a name and\n        // no value, move on\n        if (!sepSet.has(propertiesList[i])) {\n            // Parse the value of the property\n            start = i;\n            while (i < length && !allSpecial.has(propertiesList[i])) {\n                i++;\n            }\n            value = propertiesList.substring(start, i);\n            if (value.length > 0) {\n                valueMap = valueMap.set(name, value);\n            }\n        }\n    }\n    return valueMap;\n}\n/**\n * Parse a \"maximum-scale\" property.\n *\n * {@link https://www.w3.org/TR/css-device-adapt-1/#min-scale-max-scale}\n *\n * @remarks\n * This seems to be the iOS/Safari algorithm and other browsers might handle it\n * in unknown ways.\n */\nfunction parseMaximumScale(scale) {\n    return scale.flatMap((scale) => {\n        switch (scale) {\n            case \"yes\":\n                return alfa_option_1.Option.of(1);\n            case \"device-width\":\n            case \"device-height\":\n                return alfa_option_1.Option.of(10);\n            case \"no\":\n                return alfa_option_1.Option.of(0.1);\n            default:\n                const scaleValue = Number(scale);\n                if (scaleValue < 0) {\n                    return alfa_option_1.None;\n                }\n                return alfa_option_1.Option.of(isNaN(scaleValue) ? 0.1 : alfa_math_1.Real.clamp(scaleValue, 0.1, 10));\n        }\n    });\n}\n/**\n * Parse a \"user-scalable\" property according.\n *\n * {@link https://www.w3.org/TR/css-device-adapt-1/#user-scalable}\n *\n * @remark\n * This seems to be the iOS/Safari algorithm and other browsers might handle it\n * in unknown ways.\n */\nfunction parseUserScalable(scalable) {\n    return scalable.map((scalable) => {\n        switch (scalable) {\n            case \"yes\":\n            case \"device-width\":\n            case \"device-height\":\n                return \"zoom\";\n            case \"no\":\n                return \"fixed\";\n            default:\n                const scalableValue = Number(scalable);\n                return scalableValue <= -1 || scalableValue >= 1 ? \"zoom\" : \"fixed\";\n        }\n    });\n}\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r47/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r48/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r48/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_refinement_1 = __webpack_require__(/*! @siteimprove/alfa-refinement */ \"./node_modules/@siteimprove/alfa-refinement/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst question_1 = __webpack_require__(/*! ../common/act/question */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/question.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst { hasAttribute, hasName, hasNamespace, isElement } = alfa_dom_1.Element;\nconst { or, nor } = alfa_predicate_1.Predicate;\nconst { and } = alfa_refinement_1.Refinement;\nconst { getElementDescendants } = alfa_dom_1.Query;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r48\",\n    requirements: [alfa_wcag_1.Technique.of(\"G60\")],\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    evaluate({ document }) {\n        return {\n            applicability() {\n                return getElementDescendants(document, alfa_dom_1.Node.composedNested)\n                    .filter(and(hasNamespace(alfa_dom_1.Namespace.HTML), hasName(\"audio\", \"video\"), hasAttribute(\"autoplay\"), nor(hasAttribute(\"paused\"), hasAttribute(\"muted\")), or(hasAttribute(\"src\"), alfa_dom_1.Node.hasChild(and(isElement, hasName(\"source\"))))))\n                    .map((element) => {\n                    const isAboveDurationThreshold = question_1.Question.of(\"is-above-duration-threshold\", element, `Does the \\`<${element.name}>\\` element have a duration of more than 3 seconds?`).map((isAboveDurationThreshold) => isAboveDurationThreshold ? alfa_option_1.Option.of(element) : alfa_option_1.None);\n                    if (element.name === \"audio\") {\n                        return isAboveDurationThreshold;\n                    }\n                    else {\n                        return question_1.Question.of(\"has-audio\", element, `Does the \\`<${element.name}>\\` element contain audio?`).map((hasAudio) => (hasAudio ? isAboveDurationThreshold : alfa_option_1.None));\n                    }\n                });\n            },\n            expectations(target) {\n                return {\n                    1: question_1.Question.of(\"is-below-audio-duration-threshold\", target, `Does the \\`<${target.name}>\\` element have a total audio duration of less than 3 seconds?`).map((isBelowAudioDurationThreshold) => (0, expectation_1.expectation)(isBelowAudioDurationThreshold, () => Outcomes.DurationBelowThreshold(target.name), () => Outcomes.DurationAboveThreshold(target.name))),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.DurationBelowThreshold = (name) => alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The total duration of audio output of the \\`<${name}>\\` element does\n        not exceed 3 seconds`));\n    Outcomes.DurationAboveThreshold = (name) => alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The total duration of audio output of the \\`<${name}>\\` element exceeds\n        3 seconds`));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r48/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r49/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r49/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_aria_1 = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_refinement_1 = __webpack_require__(/*! @siteimprove/alfa-refinement */ \"./node_modules/@siteimprove/alfa-refinement/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst question_1 = __webpack_require__(/*! ../common/act/question */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/question.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst { hasNonEmptyAccessibleName, isPerceivableForAll } = alfa_aria_1.DOM;\nconst { hasAttribute, hasName, hasNamespace, isElement } = alfa_dom_1.Element;\nconst { or, nor, equals } = alfa_predicate_1.Predicate;\nconst { and } = alfa_refinement_1.Refinement;\nconst { getElementDescendants } = alfa_dom_1.Query;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r49\",\n    requirements: [alfa_wcag_1.Technique.of(\"G170\")],\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    evaluate({ document, device }) {\n        return {\n            applicability() {\n                return getElementDescendants(document, alfa_dom_1.Node.composedNested)\n                    .filter(and(hasNamespace(alfa_dom_1.Namespace.HTML), hasName(\"audio\", \"video\"), hasAttribute(\"autoplay\"), nor(hasAttribute(\"paused\"), hasAttribute(\"muted\")), or(hasAttribute(\"src\"), alfa_dom_1.Node.hasChild(and(isElement, hasName(\"source\"))))))\n                    .map((element) => {\n                    const isAboveDurationThreshold = question_1.Question.of(\"is-above-duration-threshold\", element, `Does the \\`<${element.name}>\\` element have a duration of more than 3 seconds?`).map((isAboveDurationThreshold) => isAboveDurationThreshold ? alfa_option_1.Option.of(element) : alfa_option_1.None);\n                    if (element.name === \"audio\") {\n                        return isAboveDurationThreshold;\n                    }\n                    else {\n                        return question_1.Question.of(\"has-audio\", element, `Does the \\`<${element.name}>\\` element contain audio?`).map((hasAudio) => (hasAudio ? isAboveDurationThreshold : alfa_option_1.None));\n                    }\n                });\n            },\n            expectations(target) {\n                return {\n                    1: question_1.Question.of(\"audio-control-mechanism\", target, `Where is the mechanism that can pause or stop the audio of the \\`<${target.name}>\\` element?`)\n                        // If the applicable <video> or <audio> element uses native controls\n                        // we assume that the mechanism is the element itself.\n                        .answerIf(target.attribute(\"controls\").isSome(), alfa_option_1.Option.of(target))\n                        .map((mechanism) => (0, expectation_1.expectation)(mechanism.isSome(), () => (0, expectation_1.expectation)(mechanism.some(and(isElement, and(isPerceivableForAll(device), \n                    // The mechanism is either the applicable <video> or\n                    // <audio> element itself, in which case we assume the\n                    // native controls provide accessible names, or it has\n                    // a non-empty accessible name.\n                    or(equals(target), hasNonEmptyAccessibleName(device))))), () => Outcomes.HasPerceivablePauseMechanism(target.name), () => Outcomes.HasNonPerceivablePauseMechanism(target.name)), () => Outcomes.HasNoPauseMechanism(target.name))),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.HasPerceivablePauseMechanism = (name) => alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The \\`<${name}>\\` element has a mechanism to pause or stop audio and\n        the mechanism is perceivable`));\n    Outcomes.HasNonPerceivablePauseMechanism = (name) => alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The \\`<${name}>\\` element has a mechanism to pause or stop audio but\n        the mechanism is not perceivable`));\n    Outcomes.HasNoPauseMechanism = (name) => alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The \\`<${name}>\\` element does not have a mechanism to pause or stop\n        audio`));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r49/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r5/rule.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r5/rule.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_iana_1 = __webpack_require__(/*! @siteimprove/alfa-iana */ \"./node_modules/@siteimprove/alfa-iana/src/index.js\");\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst predicate_1 = __webpack_require__(/*! ../common/predicate */ \"./node_modules/@siteimprove/alfa-rules/src/common/predicate.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst { hasAttribute, isDocumentElement } = alfa_dom_1.Element;\nconst { isEmpty } = alfa_iterable_1.Iterable;\nconst { nor } = alfa_predicate_1.Predicate;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r5\",\n    requirements: [alfa_wcag_1.Criterion.of(\"3.1.1\"), alfa_wcag_1.Technique.of(\"H57\")],\n    tags: [tags_1.Scope.Page, tags_1.Stability.Stable],\n    evaluate({ document }) {\n        return {\n            applicability() {\n                return (document\n                    .children()\n                    .filter(isDocumentElement)\n                    .filter(hasAttribute(\"lang\", nor(isEmpty, predicate_1.isWhitespace)))\n                    // The previous filter ensures that lang exists\n                    .map((element) => element.attribute(\"lang\").getUnsafe()));\n            },\n            expectations(target) {\n                return {\n                    1: (0, expectation_1.expectation)(alfa_iana_1.Language.parse(target.value).isOk(), () => Outcomes.HasValidLanguage, () => Outcomes.HasNoValidLanguage),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.HasValidLanguage = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The \\`lang\\` attribute has a valid primary language tag`));\n    Outcomes.HasNoValidLanguage = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The \\`lang\\` attribute does not have a valid primary language tag`));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r5/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r50/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r50/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_trilean_1 = __webpack_require__(/*! @siteimprove/alfa-trilean */ \"./node_modules/@siteimprove/alfa-trilean/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst is_passed_1 = __webpack_require__(/*! ../common/act/is-passed */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/is-passed.js\");\nconst rule_1 = __webpack_require__(/*! ../sia-r48/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r48/rule.js\");\nconst rule_2 = __webpack_require__(/*! ../sia-r49/rule */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r49/rule.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nexports[\"default\"] = alfa_act_1.Rule.Composite.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r50\",\n    requirements: [\n        alfa_wcag_1.Criterion.of(\"1.4.2\"),\n        alfa_wcag_1.Technique.of(\"G60\"),\n        alfa_wcag_1.Technique.of(\"G170\"),\n        alfa_wcag_1.Technique.of(\"G171\"),\n    ],\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    composes: [rule_1.default, rule_2.default],\n    evaluate() {\n        return {\n            expectations(outcomes) {\n                return {\n                    1: (0, expectation_1.expectation)(alfa_trilean_1.Trilean.some(outcomes, is_passed_1.isPassed), () => Outcomes.AutoplayGood, () => Outcomes.AutoplayBad),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.AutoplayGood = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The total duration of the autoplaying audio output of the element either\n      lasts no longer than 3 seconds or a mechanism to pause or stop the audio\n      is available`));\n    Outcomes.AutoplayBad = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The total duration of the autoplaying audio output of the element lasts\n      longer than 3 seconds and no mechanism to pause or stop the audio is\n      available`));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r50/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r53/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r53/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_aria_1 = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst diagnostic_1 = __webpack_require__(/*! ../common/diagnostic */ \"./node_modules/@siteimprove/alfa-rules/src/common/diagnostic.js\");\nconst { hasHeadingLevel, hasRole, isIncludedInTheAccessibilityTree } = alfa_aria_1.DOM;\nconst { and, equals, tee } = alfa_predicate_1.Predicate;\nconst { getElementDescendants } = alfa_dom_1.Query;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r53\",\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    evaluate({ device, document }) {\n        const headings = getElementDescendants(document, alfa_dom_1.Node.flatTree).filter(and(hasRole(device, \"heading\"), isIncludedInTheAccessibilityTree(device)));\n        return {\n            applicability() {\n                return headings.skip(1);\n            },\n            expectations(target) {\n                // * The target is in headings by construction of the applicability.\n                // * The first element of heading is not a target due to the .skip(1)\n                // * Therefore headings contain at least on element before the target.\n                const previousHeading = headings\n                    .takeUntil(equals(target))\n                    .last()\n                    .getUnsafe();\n                let previousLevel = -1;\n                let currentLevel = -1;\n                return {\n                    1: (0, expectation_1.expectation)(hasHeadingLevel(device, tee((currentLevel) => hasHeadingLevel(device, tee((previousLevel) => previousLevel >= currentLevel - 1, (p) => (previousLevel = p)))(previousHeading), (c) => (currentLevel = c)))(target), () => Outcomes.IsStructured(previousHeading, currentLevel, previousLevel), () => Outcomes.IsNotStructured(previousHeading, currentLevel, previousLevel)),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.IsStructured = (previousHeading, currentLevel, previousLevel) => alfa_result_1.Ok.of(diagnostic_1.WithOtherHeading.of(`The heading is correctly ordered`, alfa_option_1.Option.of(previousHeading), currentLevel, previousLevel, \"previous\"));\n    Outcomes.IsNotStructured = (previousHeading, currentLevel, previousLevel) => alfa_result_1.Err.of(diagnostic_1.WithOtherHeading.of(`The heading skips one or more levels`, alfa_option_1.Option.of(previousHeading), currentLevel, previousLevel, \"previous\"));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r53/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r54/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r54/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_aria_1 = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst dom = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst { isIncludedInTheAccessibilityTree } = alfa_aria_1.DOM;\nconst { and } = alfa_predicate_1.Predicate;\nconst { getElementDescendants } = alfa_dom_1.Query;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r54\",\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    evaluate({ device, document }) {\n        return {\n            applicability() {\n                return getElementDescendants(document, dom.Node.fullTree).filter(and(isIncludedInTheAccessibilityTree(device), (element) => alfa_aria_1.Node.from(element, device)\n                    .attribute(\"aria-live\")\n                    .some((attribute) => attribute.value === \"assertive\"), (element) => !getElementDescendants(element, dom.Node.fullTree).isEmpty()));\n            },\n            expectations(target) {\n                return {\n                    1: (0, expectation_1.expectation)(alfa_aria_1.Node.from(target, device)\n                        .attribute(\"aria-atomic\")\n                        .some((attribute) => attribute.value.toLowerCase() === \"true\"), () => Outcomes.IsAtomic, () => Outcomes.IsNotAtomic),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.IsAtomic = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(\"The assertive region is atomic\"));\n    Outcomes.IsNotAtomic = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(\"The assertive region is not atomic\"));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r54/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r55/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r55/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.WithRoleAndName = exports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_aria_1 = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst dom = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst group_1 = __webpack_require__(/*! ../common/act/group */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/group.js\");\nconst question_1 = __webpack_require__(/*! ../common/act/question */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/question.js\");\nconst with_role_1 = __webpack_require__(/*! ../common/diagnostic/with-role */ \"./node_modules/@siteimprove/alfa-rules/src/common/diagnostic/with-role.js\");\nconst normalize_1 = __webpack_require__(/*! ../common/normalize */ \"./node_modules/@siteimprove/alfa-rules/src/common/normalize.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst { hasIncorrectRoleWithoutName, hasRole, isIncludedInTheAccessibilityTree, } = alfa_aria_1.DOM;\nconst { hasNamespace } = alfa_dom_1.Element;\nconst { and, equals } = alfa_predicate_1.Predicate;\nconst { getElementDescendants } = alfa_dom_1.Query;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r55\",\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    evaluate({ device, document }) {\n        return {\n            applicability() {\n                return (getElementDescendants(document, dom.Node.fullTree)\n                    .filter(and(hasNamespace(equals(alfa_dom_1.Namespace.HTML)), isIncludedInTheAccessibilityTree(device), hasRole(device, (role) => role.is(\"landmark\"))))\n                    // circumventing https://github.com/Siteimprove/alfa/issues/298\n                    .reject(hasIncorrectRoleWithoutName(device))\n                    // We first group by name, under the assumption that duplicated\n                    // names are less frequent than duplicated roles.\n                    .groupBy((landmark) => alfa_aria_1.Node.from(landmark, device).name.map((name) => (0, normalize_1.normalize)(name.value)))\n                    .filter((landmarks) => landmarks.size > 1)\n                    // Next, we group by role.\n                    .flatMap((sameName) => sameName\n                    // We have filtered by having a role, and can safely get it.\n                    .groupBy((landmark) => alfa_aria_1.Node.from(landmark, device).role.getUnsafe()))\n                    .filter((elements) => elements.size > 1)\n                    .map(group_1.Group.of)\n                    .values());\n            },\n            expectations(target) {\n                // Empty groups have been filtered out already, so we can safely get the\n                // first element\n                const first = alfa_aria_1.Node.from(alfa_iterable_1.Iterable.first(target).getUnsafe(), device);\n                const role = first.role.map((role) => role.name).getOr(\"generic\");\n                const name = first.name.map((name) => name.value).getOr(\"\");\n                const sameResource = question_1.Question.of(\"is-content-equivalent\", target, `Do these ${role} landmarks have the same or equivalent content?`, {\n                    diagnostic: WithRoleAndName.of(`Do these ${role} landmarks have the same or equivalent content?`, role, name),\n                });\n                return {\n                    1: sameResource.map((same) => (0, expectation_1.expectation)(same, () => Outcomes.SameResource(role, name), () => Outcomes.DifferentResources(role, name))),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.SameResource = (role, name) => alfa_result_1.Ok.of(WithRoleAndName.of(`No two \\`${role}\\` have the same name and different content.`, role, name));\n    Outcomes.DifferentResources = (role, name) => alfa_result_1.Err.of(WithRoleAndName.of(`Some \\`${role}\\` have the same name and different content.`, role, name));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n/**\n * @public\n */\nclass WithRoleAndName extends with_role_1.WithRole {\n    static of(message, role, name) {\n        return role === undefined\n            ? new alfa_act_1.Diagnostic(message)\n            : name === undefined\n                ? new with_role_1.WithRole(message, role)\n                : new WithRoleAndName(message, role, name);\n    }\n    constructor(message, role, name) {\n        super(message, role);\n        this._name = name;\n    }\n    get name() {\n        return this._name;\n    }\n    equals(value) {\n        return (value instanceof WithRoleAndName &&\n            value._message === this._message &&\n            value._role === this._role &&\n            value._name === this._name);\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            name: this._name,\n        };\n    }\n}\nexports.WithRoleAndName = WithRoleAndName;\n/**\n * @public\n */\n(function (WithRoleAndName) {\n    /**@public */\n    function isWithRoleAndName(value) {\n        return value instanceof WithRoleAndName;\n    }\n    WithRoleAndName.isWithRoleAndName = isWithRoleAndName;\n})(WithRoleAndName || (exports.WithRoleAndName = WithRoleAndName = {}));\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r55/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r56/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r56/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SameNames = exports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_aria_1 = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst alfa_array_1 = __webpack_require__(/*! @siteimprove/alfa-array */ \"./node_modules/@siteimprove/alfa-array/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_list_1 = __webpack_require__(/*! @siteimprove/alfa-list */ \"./node_modules/@siteimprove/alfa-list/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst dom = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst group_1 = __webpack_require__(/*! ../common/act/group */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/group.js\");\nconst normalize_1 = __webpack_require__(/*! ../common/normalize */ \"./node_modules/@siteimprove/alfa-rules/src/common/normalize.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst { hasIncorrectRoleWithoutName, hasRole, isIncludedInTheAccessibilityTree, } = alfa_aria_1.DOM;\nconst { hasNamespace } = alfa_dom_1.Element;\nconst { and, equals } = alfa_predicate_1.Predicate;\nconst { getElementDescendants } = alfa_dom_1.Query;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r56\",\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    evaluate({ device, document }) {\n        return {\n            applicability() {\n                return (getElementDescendants(document, dom.Node.fullTree)\n                    .filter(and(hasNamespace(equals(alfa_dom_1.Namespace.HTML)), isIncludedInTheAccessibilityTree(device), hasRole(device, (role) => role.is(\"landmark\"))))\n                    // circumventing https://github.com/Siteimprove/alfa/issues/298\n                    .reject(hasIncorrectRoleWithoutName(device))\n                    // We have already filter by having a landmark role.\n                    .groupBy((landmark) => alfa_aria_1.Node.from(landmark, device).role.getUnsafe())\n                    .filter((elements) => elements.size > 1)\n                    .map(group_1.Group.of)\n                    .values());\n            },\n            expectations(target) {\n                // Empty groups have been filtered out already, so we can safely get the\n                // first element\n                const role = alfa_aria_1.Node.from(alfa_iterable_1.Iterable.first(target).getUnsafe(), device)\n                    .role.map((role) => role.name)\n                    .getOr(\"generic\");\n                const byNames = alfa_list_1.List.from(target)\n                    .groupBy((landmark) => alfa_aria_1.Node.from(landmark, device).name.map((name) => (0, normalize_1.normalize)(name.value)))\n                    .filter((landmarks) => landmarks.size > 1);\n                return {\n                    1: (0, expectation_1.expectation)(byNames.size === 0, () => Outcomes.differentNames(role), () => Outcomes.sameNames(role, byNames.values())),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.differentNames = (role) => alfa_result_1.Ok.of(SameNames.of(`No two \\`${role}\\` have the same name.`, role, []));\n    Outcomes.sameNames = (role, errors) => alfa_result_1.Err.of(SameNames.of(`Some \\`${role}\\` have the same name.`, role, errors));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n/**\n * @public\n */\nclass SameNames extends alfa_act_1.Diagnostic {\n    static of(message, role = \"none\", errors = []) {\n        return new SameNames(message, role, alfa_array_1.Array.from(errors).map(alfa_list_1.List.from));\n    }\n    constructor(message, role, errors) {\n        super(message);\n        this._role = role;\n        this._errors = errors;\n    }\n    get role() {\n        return this._role;\n    }\n    *[Symbol.iterator]() {\n        yield* this._errors;\n    }\n    equals(value) {\n        return (value instanceof SameNames &&\n            value._message === this._message &&\n            value._role === this._role &&\n            value._errors.every((list, idx) => list.equals(this._errors[idx])));\n    }\n    hash(hash) {\n        super.hash(hash);\n        hash.writeString(this._role);\n        this._errors.forEach((element) => element.hash(hash));\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            role: this._role,\n            errors: alfa_array_1.Array.toJSON(this._errors),\n        };\n    }\n}\nexports.SameNames = SameNames;\n/**\n * @public\n */\n(function (SameNames) {\n    /**@public */\n    function isSameNames(value) {\n        return value instanceof SameNames;\n    }\n    SameNames.isSameNames = isSameNames;\n})(SameNames || (exports.SameNames = SameNames = {}));\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r56/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r57/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r57/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_aria_1 = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_refinement_1 = __webpack_require__(/*! @siteimprove/alfa-refinement */ \"./node_modules/@siteimprove/alfa-refinement/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_style_1 = __webpack_require__(/*! @siteimprove/alfa-style */ \"./node_modules/@siteimprove/alfa-style/src/index.js\");\nconst dom = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst predicate_1 = __webpack_require__(/*! ../common/predicate */ \"./node_modules/@siteimprove/alfa-rules/src/common/predicate.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst { hasIncorrectRoleWithoutName, hasRole, isIncludedInTheAccessibilityTree, } = alfa_aria_1.DOM;\nconst { isElement } = alfa_dom_1.Element;\nconst { isEmpty } = alfa_iterable_1.Iterable;\nconst { nor, not, or, property, test } = alfa_predicate_1.Predicate;\nconst { and } = alfa_refinement_1.Refinement;\nconst { isTabbable } = alfa_style_1.Style;\nconst { isText } = alfa_dom_1.Text;\nconst { getElementDescendants } = alfa_dom_1.Query;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r57\",\n    tags: [tags_1.Scope.Page, tags_1.Stability.Stable],\n    evaluate({ document, device }) {\n        const firstTabbable = document\n            .tabOrder()\n            .filter(isTabbable(device))\n            .first();\n        return {\n            *applicability() {\n                if (getElementDescendants(document, dom.Node.fullTree).some(and(hasRole(device, (role) => role.isLandmark()), \n                // Circumventing https://github.com/Siteimprove/alfa/issues/298\n                not(hasIncorrectRoleWithoutName(device))))) {\n                    yield* document\n                        .descendants(dom.Node.fullTree)\n                        .filter(isText)\n                        .filter(and(property(\"data\", nor(isEmpty, predicate_1.isWhitespace)), isIncludedInTheAccessibilityTree(device)));\n                }\n            },\n            expectations(target) {\n                // First ancestor in the accessibility tree which is dialog or landmark\n                const role = alfa_aria_1.Node.from(target, device)\n                    .ancestors()\n                    .find(or(\n                // landmark\n                and((ancestor) => ancestor.role.some((role) => role.isLandmark()), \n                // Circumventing https://github.com/Siteimprove/alfa/issues/298\n                // by discarding the \"landmark\" ancestor if the role is incorrect\n                (ancestor) => test(and(isElement, not(hasIncorrectRoleWithoutName(device))), ancestor.node)), \n                // dialog\n                (ancestor) => ancestor.role.some((role) => role.is(\"dialog\"))))\n                    .flatMap((ancestor) => ancestor.role);\n                return {\n                    1: (0, expectation_1.expectation)(role.some((role) => role.isLandmark()), () => Outcomes.IsIncludedInLandmark, () => (0, expectation_1.expectation)(role.some((role) => role.is(\"dialog\")), () => Outcomes.IsIncludedInDialog, () => (0, expectation_1.expectation)(firstTabbable.some((element) => element.isInclusiveAncestorOf(target, dom.Node.flatTree)), () => Outcomes.IsIncludedInFirstFocusableElement, () => Outcomes.IsNotIncludedInLandmark))),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.IsIncludedInLandmark = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The text is included in a landmark region`));\n    Outcomes.IsIncludedInDialog = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The text is included in a dialog`));\n    Outcomes.IsIncludedInFirstFocusableElement = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The text is included in the first focusable element`));\n    Outcomes.IsNotIncludedInLandmark = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The text is not included in a landmark region`));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r57/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r59/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r59/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_aria_1 = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst with_document_element_1 = __webpack_require__(/*! ../common/applicability/with-document-element */ \"./node_modules/@siteimprove/alfa-rules/src/common/applicability/with-document-element.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst { hasRole } = alfa_aria_1.DOM;\nconst { hasNamespace } = alfa_dom_1.Element;\nconst { and } = alfa_predicate_1.Predicate;\nconst { getElementDescendants } = alfa_dom_1.Query;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r59\",\n    tags: [tags_1.Scope.Page, tags_1.Stability.Stable],\n    evaluate({ device, document }) {\n        return {\n            applicability() {\n                return (0, with_document_element_1.withDocumentElement)(document);\n            },\n            expectations(target) {\n                const hasHeadings = getElementDescendants(target, alfa_dom_1.Node.flatTree).some(and(hasNamespace(alfa_dom_1.Namespace.HTML), hasRole(device, \"heading\")));\n                return {\n                    1: (0, expectation_1.expectation)(hasHeadings, () => Outcomes.HasOneHeading, () => Outcomes.HasNoHeadings),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.HasOneHeading = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The document has at least one heading element`));\n    Outcomes.HasNoHeadings = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The document does not have a heading element`));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r59/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r60/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r60/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_aria_1 = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_map_1 = __webpack_require__(/*! @siteimprove/alfa-map */ \"./node_modules/@siteimprove/alfa-map/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_refinement_1 = __webpack_require__(/*! @siteimprove/alfa-refinement */ \"./node_modules/@siteimprove/alfa-refinement/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst with_role_1 = __webpack_require__(/*! ../common/diagnostic/with-role */ \"./node_modules/@siteimprove/alfa-rules/src/common/diagnostic/with-role.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst { hasNonEmptyAccessibleName, hasRole, isIncludedInTheAccessibilityTree } = alfa_aria_1.DOM;\nconst { isElement, hasNamespace } = alfa_dom_1.Element;\nconst { and } = alfa_refinement_1.Refinement;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r60\",\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    evaluate({ device, document }) {\n        return {\n            applicability() {\n                // Records how many form input are within each \"group\"\n                let groups = alfa_map_1.Map.empty();\n                function visit(node, group) {\n                    if (isElement(node)) {\n                        // If we're under a group and find a form input, count it.\n                        group.forEach((group) => {\n                            if (and(isIncludedInTheAccessibilityTree(device), isFormInput(device))(node)) {\n                                groups = groups.set(group, groups.get(group).getOr(0) + 1);\n                            }\n                        });\n                        // If we find a group, remember it before descending\n                        if (and(hasNamespace(alfa_dom_1.Namespace.HTML), hasRole(device, (role) => role.is(\"group\")))(node)) {\n                            group = alfa_option_1.Option.of(node);\n                        }\n                    }\n                    // Recursively visit children\n                    for (const child of node.children(alfa_dom_1.Node.fullTree)) {\n                        visit(child, group);\n                    }\n                }\n                visit(document, alfa_option_1.None);\n                // Only keep the groups with at least two form input descendants\n                return groups.filter((n) => n >= 2).keys();\n            },\n            expectations(target) {\n                // Presence of a role is guaranteed by Applicability\n                const role = alfa_aria_1.Node.from(target, device).role.getUnsafe().name;\n                return {\n                    1: (0, expectation_1.expectation)(hasNonEmptyAccessibleName(device)(target), () => Outcomes.HasAccessibleName(role), () => Outcomes.HasNoAccessibleName(role)),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.HasAccessibleName = (role) => alfa_result_1.Ok.of(with_role_1.WithRole.of(`The grouping element has an accessible name`, role));\n    Outcomes.HasNoAccessibleName = (role) => alfa_result_1.Err.of(with_role_1.WithRole.of(`The grouping element has an accessible name`, role));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\nfunction isFormInput(device) {\n    return hasRole(device, \"checkbox\", \"combobox\", \"listbox\", \"menuitemcheckbox\", \"menuitemradio\", \"radio\", \"searchbox\", \"slider\", \"spinbutton\", \"switch\", \"textbox\");\n}\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r60/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r61/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r61/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.WithFirstHeading = exports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_aria_1 = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_refinement_1 = __webpack_require__(/*! @siteimprove/alfa-refinement */ \"./node_modules/@siteimprove/alfa-refinement/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst with_document_element_1 = __webpack_require__(/*! ../common/applicability/with-document-element */ \"./node_modules/@siteimprove/alfa-rules/src/common/applicability/with-document-element.js\");\nconst { hasRole, isIncludedInTheAccessibilityTree } = alfa_aria_1.DOM;\nconst { isElement } = alfa_dom_1.Element;\nconst { and } = alfa_refinement_1.Refinement;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r61\",\n    tags: [tags_1.Scope.Page, tags_1.Stability.Stable],\n    evaluate({ device, document }) {\n        const firstHeading = document\n            .descendants(alfa_dom_1.Node.flatTree)\n            .filter(and(isElement, isIncludedInTheAccessibilityTree(device)))\n            .find(hasRole(device, \"heading\"));\n        return {\n            applicability() {\n                return (0, with_document_element_1.withDocumentElement)(document, () => firstHeading.isSome());\n            },\n            expectations(target) {\n                // The heading is guaranteed to exist because of the test in Applicability\n                const heading = firstHeading.getUnsafe();\n                const level = alfa_aria_1.Node\n                    .from(heading, device)\n                    .attribute(\"aria-level\")\n                    .map((level) => Number(level.value))\n                    .getOr(0);\n                return {\n                    1: (0, expectation_1.expectation)(level === 1, () => Outcomes.StartWithLevel1Heading(heading, level), () => Outcomes.StartWithHigherLevelHeading(heading, level)),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.StartWithLevel1Heading = (heading, level) => alfa_result_1.Ok.of(WithFirstHeading.of(`The document starts with a level 1 heading`, heading, level));\n    Outcomes.StartWithHigherLevelHeading = (heading, level) => alfa_result_1.Err.of(WithFirstHeading.of(`The document does not start with a level 1 heading`, heading, level));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n/**\n * @public\n */\nclass WithFirstHeading extends alfa_act_1.Diagnostic {\n    static of(message, firstHeading, level) {\n        return firstHeading === undefined || level === undefined\n            ? alfa_act_1.Diagnostic.of(message)\n            : new WithFirstHeading(message, firstHeading, level);\n    }\n    constructor(message, firstHeading, level) {\n        super(message);\n        this._firstHeading = firstHeading;\n        this._level = level;\n    }\n    get firstHeading() {\n        return this._firstHeading;\n    }\n    get firstHeadingLevel() {\n        return this._level;\n    }\n    equals(value) {\n        return (value instanceof WithFirstHeading &&\n            value._message === this._message &&\n            value._firstHeading.equals(this._firstHeading) &&\n            value._level === this._level);\n    }\n    hash(hash) {\n        super.hash(hash);\n        hash.writeNumber(this._level);\n        this._firstHeading.hash(hash);\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            firstHeading: this._firstHeading.toJSON(),\n            firstHeadingLevel: this._level,\n        };\n    }\n}\nexports.WithFirstHeading = WithFirstHeading;\n/**\n * @public\n */\n(function (WithFirstHeading) {\n    /**@public */\n    function isWithFirstHeading(value) {\n        return value instanceof WithFirstHeading;\n    }\n    WithFirstHeading.isWithFirstHeading = isWithFirstHeading;\n})(WithFirstHeading || (exports.WithFirstHeading = WithFirstHeading = {}));\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r61/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r62/diagnostics.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r62/diagnostics.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DistinguishingStyles = exports.ElementDistinguishable = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_array_1 = __webpack_require__(/*! @siteimprove/alfa-array */ \"./node_modules/@siteimprove/alfa-array/src/index.js\");\nconst alfa_map_1 = __webpack_require__(/*! @siteimprove/alfa-map */ \"./node_modules/@siteimprove/alfa-map/src/index.js\");\nconst alfa_selector_1 = __webpack_require__(/*! @siteimprove/alfa-selector */ \"./node_modules/@siteimprove/alfa-selector/src/index.js\");\nconst alfa_sequence_1 = __webpack_require__(/*! @siteimprove/alfa-sequence */ \"./node_modules/@siteimprove/alfa-rules/node_modules/@siteimprove/alfa-sequence/src/index.js\");\nconst alfa_style_1 = __webpack_require__(/*! @siteimprove/alfa-style */ \"./node_modules/@siteimprove/alfa-style/src/index.js\");\nconst serialise_1 = __webpack_require__(/*! ./serialise */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r62/serialise.js\");\n/**\n * @public\n */\nclass ElementDistinguishable {\n    static of(distinguishingProperties = [], style = [], pairings = []) {\n        return new ElementDistinguishable(alfa_array_1.Array.from(distinguishingProperties), alfa_map_1.Map.from(style), alfa_array_1.Array.from(pairings));\n    }\n    constructor(distinguishingProperties, style, pairings) {\n        this._distinguishingProperties = distinguishingProperties;\n        this._style = style;\n        this._pairings = pairings;\n    }\n    get distinguishingProperties() {\n        return this._distinguishingProperties;\n    }\n    get style() {\n        return this._style;\n    }\n    get pairings() {\n        return this._pairings;\n    }\n    withDistinguishingProperties(distinguishingProperties) {\n        return ElementDistinguishable.of([...this._distinguishingProperties, ...distinguishingProperties], this._style, this._pairings);\n    }\n    withStyle(...styles) {\n        return ElementDistinguishable.of(this._distinguishingProperties, [...this._style, ...styles], this._pairings);\n    }\n    withPairings(pairings) {\n        return ElementDistinguishable.of(this._distinguishingProperties, this._style, pairings);\n    }\n    equals(value) {\n        return (value instanceof ElementDistinguishable &&\n            value._style.equals(this._style) &&\n            alfa_array_1.Array.equals(value._pairings, this._pairings) &&\n            alfa_array_1.Array.equals(value._distinguishingProperties, this._distinguishingProperties));\n    }\n    hash(hash) {\n        alfa_array_1.Array.hash(this._distinguishingProperties, hash);\n        this._style.hash(hash);\n        alfa_array_1.Array.hash(this._pairings, hash);\n    }\n    toJSON() {\n        return {\n            distinguishingProperties: alfa_array_1.Array.toJSON(this._distinguishingProperties),\n            style: this._style.toJSON(),\n            pairings: alfa_array_1.Array.toJSON(this._pairings),\n        };\n    }\n}\nexports.ElementDistinguishable = ElementDistinguishable;\n/**\n * @public\n */\n(function (ElementDistinguishable) {\n    function from(element, device, target, context = alfa_selector_1.Context.empty(), distinguishingProperties, pairings) {\n        const style = alfa_style_1.Style.from(element, device, context);\n        const border = [\"color\", \"style\", \"width\"].map((property) => serialise_1.Serialise.borderShorthand(style, property));\n        const cursor = context.isHovered(target)\n            ? [[\"cursor\", serialise_1.Serialise.getLonghand(style, \"cursor\")]]\n            : [];\n        return ElementDistinguishable.of(distinguishingProperties, [\n            ...border,\n            ...cursor,\n            [\"color\", serialise_1.Serialise.getLonghand(style, \"color\")],\n            [\"font\", serialise_1.Serialise.font(style)],\n            [\n                \"vertical-align\",\n                serialise_1.Serialise.getLonghand(style, \"vertical-align\"),\n            ],\n            [\"background\", serialise_1.Serialise.background(style)],\n            [\"outline\", serialise_1.Serialise.outline(style)],\n            [\"text-decoration\", serialise_1.Serialise.textDecoration(style)],\n            [\"box-shadow\", serialise_1.Serialise.boxShadow(style)],\n        ].filter(([_, value]) => value !== \"\"), alfa_array_1.Array.sort(alfa_array_1.Array.from(pairings)));\n    }\n    ElementDistinguishable.from = from;\n})(ElementDistinguishable || (exports.ElementDistinguishable = ElementDistinguishable = {}));\n/**\n * @public\n */\nclass DistinguishingStyles extends alfa_act_1.Diagnostic {\n    static of(message, defaultStyles = alfa_sequence_1.Sequence.empty(), hoverStyles = alfa_sequence_1.Sequence.empty(), focusStyles = alfa_sequence_1.Sequence.empty()) {\n        return new DistinguishingStyles(message, alfa_sequence_1.Sequence.from(defaultStyles), alfa_sequence_1.Sequence.from(hoverStyles), alfa_sequence_1.Sequence.from(focusStyles));\n    }\n    constructor(message, defaultStyles, hoverStyles, focusStyles) {\n        super(message);\n        this._defaultStyles = defaultStyles;\n        this._hoverStyles = hoverStyles;\n        this._focusStyles = focusStyles;\n    }\n    get defaultStyles() {\n        return this._defaultStyles;\n    }\n    get hoverStyles() {\n        return this._hoverStyles;\n    }\n    get focusStyles() {\n        return this._focusStyles;\n    }\n    equals(value) {\n        return (value instanceof DistinguishingStyles &&\n            value._defaultStyles.equals(this._defaultStyles) &&\n            value._hoverStyles.equals(this._hoverStyles) &&\n            value._focusStyles.equals(this._focusStyles));\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            defaultStyle: this._defaultStyles.toJSON(),\n            hoverStyle: this._hoverStyles.toJSON(),\n            focusStyle: this._focusStyles.toJSON(),\n        };\n    }\n}\nexports.DistinguishingStyles = DistinguishingStyles;\n/**\n * @public\n */\n(function (DistinguishingStyles) {\n    /**@public */\n    function isDistinguishingStyles(value) {\n        return value instanceof DistinguishingStyles;\n    }\n    DistinguishingStyles.isDistinguishingStyles = isDistinguishingStyles;\n})(DistinguishingStyles || (exports.DistinguishingStyles = DistinguishingStyles = {}));\n//# sourceMappingURL=diagnostics.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r62/diagnostics.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r62/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r62/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_aria_1 = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst alfa_array_1 = __webpack_require__(/*! @siteimprove/alfa-array */ \"./node_modules/@siteimprove/alfa-array/src/index.js\");\nconst alfa_cache_1 = __webpack_require__(/*! @siteimprove/alfa-cache */ \"./node_modules/@siteimprove/alfa-cache/src/index.js\");\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_list_1 = __webpack_require__(/*! @siteimprove/alfa-list */ \"./node_modules/@siteimprove/alfa-list/src/index.js\");\nconst alfa_map_1 = __webpack_require__(/*! @siteimprove/alfa-map */ \"./node_modules/@siteimprove/alfa-map/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_refinement_1 = __webpack_require__(/*! @siteimprove/alfa-refinement */ \"./node_modules/@siteimprove/alfa-refinement/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_selector_1 = __webpack_require__(/*! @siteimprove/alfa-selector */ \"./node_modules/@siteimprove/alfa-selector/src/index.js\");\nconst alfa_sequence_1 = __webpack_require__(/*! @siteimprove/alfa-sequence */ \"./node_modules/@siteimprove/alfa-rules/node_modules/@siteimprove/alfa-sequence/src/index.js\");\nconst alfa_set_1 = __webpack_require__(/*! @siteimprove/alfa-set */ \"./node_modules/@siteimprove/alfa-set/src/index.js\");\nconst alfa_style_1 = __webpack_require__(/*! @siteimprove/alfa-style */ \"./node_modules/@siteimprove/alfa-style/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst contrast_1 = __webpack_require__(/*! ../common/diagnostic/contrast */ \"./node_modules/@siteimprove/alfa-rules/src/common/diagnostic/contrast.js\");\nconst contrast_2 = __webpack_require__(/*! ../common/expectation/contrast */ \"./node_modules/@siteimprove/alfa-rules/src/common/expectation/contrast.js\");\nconst get_colors_1 = __webpack_require__(/*! ../common/dom/get-colors */ \"./node_modules/@siteimprove/alfa-rules/src/common/dom/get-colors.js\");\nconst predicate_1 = __webpack_require__(/*! ../common/predicate */ \"./node_modules/@siteimprove/alfa-rules/src/common/predicate.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst diagnostics_1 = __webpack_require__(/*! ./diagnostics */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r62/diagnostics.js\");\nconst { hasRole } = alfa_aria_1.DOM;\nconst { isElement } = alfa_dom_1.Element;\nconst { or, not, test, tee } = alfa_predicate_1.Predicate;\nconst { and } = alfa_refinement_1.Refinement;\nconst { hasBorder, hasBoxShadow, hasComputedStyle, hasOutline, hasTextDecoration, isVisible, } = alfa_style_1.Style;\nconst { isText } = alfa_dom_1.Text;\nlet distinguishingProperties = alfa_map_1.Map.empty();\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r62\",\n    requirements: [alfa_wcag_1.Criterion.of(\"1.4.1\")],\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable, tags_1.Version.of(2)],\n    evaluate({ device, document }) {\n        // Contains links (key) and their containing paragraph (value)\n        let containers = alfa_map_1.Map.empty();\n        return {\n            applicability() {\n                // Contains links (key) and the parents of the textnodes the links contain (value)\n                let linkText = alfa_map_1.Map.empty();\n                // Contains containers (key) and the parents of the text nodes\n                // (not included in links) the containers have (value)\n                let nonLinkText = alfa_map_1.Map.empty();\n                gather(document, alfa_option_1.None, alfa_option_1.None);\n                return getApplicableLinks();\n                function gather(node, container, link) {\n                    const isLink = hasRole(device, (role) => role.is(\"link\"));\n                    const isParagraph = hasRole(device, \"paragraph\");\n                    if (isElement(node)) {\n                        if (container.isSome() && isLink(node)) {\n                            // For each link, store its containing paragraph\n                            containers = containers.set(node, container.get());\n                            link = alfa_option_1.Option.of(node);\n                        }\n                        // Otherwise, if the element is a paragraph element with non-link text\n                        // content then start collecting applicable elements.\n                        if (isParagraph(node)) {\n                            if (test(hasNonLinkText(device), node)) {\n                                // Start gathering links inside a paragraph with non-link text.\n                                container = alfa_option_1.Option.of(node);\n                            }\n                            else {\n                                // Stop gathering inside a paragraph without non-link text.\n                                container = alfa_option_1.None;\n                            }\n                        }\n                    }\n                    else {\n                        const isTextNode = test(and(isText, isVisible(device)), node);\n                        const parent = node.parent().filter(isElement);\n                        if (isTextNode && container.isSome() && parent.isSome()) {\n                            // For each link, store the parent of the text nodes it contains\n                            if (link.isSome()) {\n                                linkText = linkText.set(link.get(), linkText\n                                    .get(link.get())\n                                    .getOr(alfa_set_1.Set.empty())\n                                    .add(parent.get()));\n                            }\n                            // For each container, store the parent of the text nodes it contains\n                            else {\n                                nonLinkText = nonLinkText.set(container.get(), nonLinkText\n                                    .get(container.get())\n                                    .getOr(alfa_set_1.Set.empty())\n                                    .add(parent.get()));\n                            }\n                        }\n                    }\n                    for (const child of node.children(alfa_dom_1.Node.fullTree)) {\n                        gather(child, container, link);\n                    }\n                }\n                function* getApplicableLinks() {\n                    // Check if foreground is the same with the parent <p> element\n                    const hasDifferentForeground = (link, container) => (0, get_colors_1.getForeground)(link, device).none((linkColors) => \n                    // If the link has a foreground with the alpha channel less than 1 and background gradient color\n                    // then the rule is applicable as we can't tell for sure if it ever has the same foreground with a link\n                    // that might have the same foreground and gradient background, but with different gradient type or spread\n                    linkColors.length === 1 &&\n                        (0, get_colors_1.getForeground)(container, device).some((containerColors) => \n                        // Similarly to the link, we assume the rule is applicable if the container has more than one foreground color\n                        containerColors.length === 1 &&\n                            linkColors[0].equals(containerColors[0])));\n                    for (const [link, linkTexts] of linkText) {\n                        const nonLinkTexts = containers\n                            .get(link)\n                            .flatMap((container) => nonLinkText.get(container))\n                            // At this point, we should always have something, still\n                            // safeguarding against any weird case.\n                            .getOrElse(alfa_set_1.Set.empty);\n                        if (linkTexts.some((linkElement) => nonLinkTexts.some((nonLinkElement) => hasDifferentForeground(linkElement, nonLinkElement)))) {\n                            yield link;\n                        }\n                    }\n                }\n            },\n            expectations(target) {\n                const nonLinkElements = containers\n                    .get(target)\n                    .map((node) => node\n                    .inclusiveDescendants(alfa_dom_1.Node.fullTree)\n                    .filter(and(isElement, hasNonLinkText(device))))\n                    .getOrElse(alfa_sequence_1.Sequence.empty);\n                const linkElements = target\n                    // All descendants of the link.\n                    .inclusiveDescendants(alfa_dom_1.Node.fullTree)\n                    .filter(isElement)\n                    // Plus those ancestors who don't include non-link text.\n                    .concat(target\n                    .ancestors(alfa_dom_1.Node.fullTree)\n                    .takeWhile(and(isElement, not(hasNonLinkText(device)))));\n                const hasDistinguishingStyle = (context = alfa_selector_1.Context.empty()) => alfa_set_1.Set.from(linkElements.map((link) => {\n                    // If the link element is distinguishable from at least one\n                    // non-link element, this is good enough.\n                    // Note that ACT rules draft requires the link-element to be\n                    // distinguishable from *all* non-link elements in order to be good.\n                    const hasDistinguishableStyle = nonLinkElements.some((container) => Distinguishable.isDistinguishable(container, target, device, context)\n                        .map((isDistinguishable) => isDistinguishable(link))\n                        .some((distinguishable) => distinguishable));\n                    const distinguishableContrast = alfa_set_1.Set.from(nonLinkElements.flatMap((container) => alfa_sequence_1.Sequence.from(Distinguishable.getPairwiseContrast(container, link, device, context))));\n                    const properties = distinguishingProperties\n                        .get(context)\n                        .flatMap((elementMap) => elementMap.get(link))\n                        .getOrElse(() => alfa_list_1.List.empty());\n                    return hasDistinguishableStyle\n                        ? alfa_result_1.Ok.of(diagnostics_1.ElementDistinguishable.from(link, device, target, context, properties, distinguishableContrast))\n                        : alfa_result_1.Err.of(diagnostics_1.ElementDistinguishable.from(link, device, target, context, properties, distinguishableContrast));\n                }))\n                    .toArray()\n                    // sort the Ok before the Err, relative order doesn't matter.\n                    .sort((a, b) => (b.isOk() ? 1 : -1));\n                // The context needs to be set on the *target*, not on its ancestors\n                // or descendants\n                const isDefaultDistinguishable = hasDistinguishingStyle();\n                const isHoverDistinguishable = hasDistinguishingStyle(alfa_selector_1.Context.hover(target));\n                const isFocusDistinguishable = hasDistinguishingStyle(alfa_selector_1.Context.focus(target));\n                return {\n                    1: (0, expectation_1.expectation)(\n                    // If at least one link element is good, this is enough. The sorting\n                    // guarantees it is first in the array.\n                    isDefaultDistinguishable[0].isOk() &&\n                        isHoverDistinguishable[0].isOk() &&\n                        isFocusDistinguishable[0].isOk(), () => Outcomes.IsDistinguishable(isDefaultDistinguishable, isHoverDistinguishable, isFocusDistinguishable), () => Outcomes.IsNotDistinguishable(isDefaultDistinguishable, isHoverDistinguishable, isFocusDistinguishable)),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    // We could tweak typing to ensure that isDistinguishable only accepts Ok and\n    // that isNotDistinguishable has at least one Err.\n    // This would requires changing the expectation since it does not refine\n    // and is thus probably not worth the effort.\n    Outcomes.IsDistinguishable = (defaultStyles, hoverStyles, focusStyles) => alfa_result_1.Ok.of(diagnostics_1.DistinguishingStyles.of(`The link is distinguishable from the surrounding text`, defaultStyles, hoverStyles, focusStyles));\n    Outcomes.IsNotDistinguishable = (defaultStyles, hoverStyles, focusStyles) => alfa_result_1.Err.of(diagnostics_1.DistinguishingStyles.of(`The link is not distinguishable from the surrounding text`, defaultStyles, hoverStyles, focusStyles));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\nconst hasNonLinkTextCache = alfa_cache_1.Cache.empty();\nfunction hasNonLinkText(device) {\n    return function hasNonLinkText(element) {\n        return hasNonLinkTextCache.get(element, () => {\n            //  If we are already below a link, escape.\n            if (element.inclusiveAncestors(alfa_dom_1.Node.flatTree).some(and(isElement, hasRole(device, (role) => role.is(\"link\"))))) {\n                return false;\n            }\n            const children = element.children(alfa_dom_1.Node.flatTree);\n            // If we've found text with more than whitespaces, we're done.\n            if (children.some(and(isText, and(isVisible(device), (text) => !(0, predicate_1.isWhitespace)(text.data))))) {\n                return true;\n            }\n            // Otherwise, go down.\n            return (children\n                .filter(isElement)\n                .reject(hasRole(device, (role) => role.is(\"link\")))\n                // We've found nested paragraphs. While this is not really allowed by\n                // HTML specs, it does happen…\n                // In such a case, the inner paragraph would itself be a potential container\n                // and any text in it should be registered with it, not with the outer one\n                .reject(hasRole(device, \"paragraph\"))\n                .some(hasNonLinkText));\n        });\n    };\n}\nvar Distinguishable;\n(function (Distinguishable) {\n    function isDistinguishable(container, target, device, context = alfa_selector_1.Context.empty()) {\n        let predicates = [\n            // Things like text decoration and backgrounds risk blending with the\n            // container element. We therefore need to check if these can be distinguished\n            // from what the container element might itself set.\n            [\"background\", hasDistinguishableBackground(container, device, context)],\n            [\"contrast\", hasDistinguishableContrast(container, device, context)],\n            [\"font\", hasDistinguishableFont(container, device, context)],\n            [\n                \"text-decoration\",\n                hasDistinguishableTextDecoration(container, device, context),\n            ],\n            [\n                \"vertical-align\",\n                hasDistinguishableVerticalAlign(container, device, context),\n            ],\n            // We consider the mere presence of borders, box-shadows or outlines on the element as\n            // distinguishable features. There's of course a risk of these blending with\n            // other features of the container element, such as its background, but this\n            // should hopefully not happen (too often) in practice. When it does, we\n            // risk false negatives.\n            [\"border\", hasBorder(device, context)],\n            [\n                \"box-shadow\",\n                hasBoxShadow(device, context), //Checks for color != transparent and spread => 0\n            ],\n            [\"outline\", hasOutline(device, context)],\n        ];\n        if (context.isHovered(target)) {\n            predicates = [\n                ...predicates,\n                [\"cursor\", hasDistinguishableCursor(container, device, context)],\n            ];\n        }\n        return predicates.map(([name, predicate]) => tee(predicate, (link, result) => {\n            if (result) {\n                let linkToProperties = distinguishingProperties\n                    .get(context)\n                    .getOr(alfa_map_1.Map.empty());\n                const properties = linkToProperties\n                    .get(link)\n                    .getOr(alfa_list_1.List.empty())\n                    .append(name);\n                distinguishingProperties = distinguishingProperties.set(context, linkToProperties.set(link, properties));\n            }\n        }));\n    }\n    Distinguishable.isDistinguishable = isDistinguishable;\n    function hasDistinguishableTextDecoration(container, device, context) {\n        return (element) => test(not(hasTextDecoration(device, context)), container) &&\n            test(hasTextDecoration(device, context), element);\n    }\n    /**\n     * Check if an element has a distinguishable background from the given container\n     * element.\n     *\n     * @remarks\n     * This predicate currently only considers `background-color` and\n     * `background-image` as a possibly distinguishable background. Other\n     * `background-*` properties should ideally also be considered.\n     *\n     * Additionally, this predicate do not handle transparency in the topmost layer.\n     * The exact same (partly transparent) `background-color` or `background-image`\n     * could be on top of a different (opaque) background and thus creates a\n     * difference. However, in these cases the (lower layer) distinguishing\n     * background would be on an ancestor of the link but of no non-link text (in\n     * order to be distinguishing), so should be found when looking at the ancestors\n     * of the link.\n     *\n     * Lastly, this does not account for absolutely positioned backgrounds from\n     * random nodes in the DOM. Using these to push an image below links in\n     * paragraph sounds so crazy (from a sheer code maintenance point of view) that\n     * this hopefully won't be a problem.\n     */\n    function hasDistinguishableBackground(container, device, context) {\n        const colorReference = alfa_style_1.Style.from(container, device, context).computed(\"background-color\").value;\n        const imageReference = alfa_style_1.Style.from(container, device, context).computed(\"background-image\").value;\n        return (link) => {\n            const color = alfa_style_1.Style.from(link, device, context).computed(\"background-color\").value;\n            const image = alfa_style_1.Style.from(link, device, context).computed(\"background-image\").value;\n            // If the background is fully transparent or there is no `background-image` set on the link,\n            // we assume it will end up being the same as the container. Intermediate backgrounds may change\n            // that, but these would need to be set on ancestor of the link and of\n            // no non-link text, so will be caught in one of the other comparisons.\n            const hasBackground = !(alfa_css_1.Keyword.isKeyword(image.values[0]) &&\n                image.values[0].equals(alfa_css_1.Keyword.of(\"none\")) &&\n                alfa_css_1.Color.isTransparent(color));\n            // Any difference in `background-image` is considered enough. If different\n            // `background-image` ultimately yield the same background (e.g. the same\n            // image at two different URLs), this creates false negatives.\n            // When there is no `background-image` set on the link, we consider it to be the same as the container's\n            const hasDifferentBackgroundFromContainer = !(color.equals(colorReference) && image.equals(imageReference));\n            return hasDifferentBackgroundFromContainer && hasBackground;\n        };\n    }\n    function getPairwiseContrast(container, link, device, context = alfa_selector_1.Context.empty()) {\n        return (0, get_colors_1.getForeground)(container, device, context)\n            .map((containerColors) => [\n            ...alfa_array_1.Array.flatMap(containerColors, (containerColor) => (0, get_colors_1.getForeground)(link, device, context)\n                .map((linkColors) => alfa_array_1.Array.map(linkColors, (linkColor) => contrast_1.Contrast.Pairing.of([\"container\", containerColor], [\"link\", linkColor], (0, contrast_2.contrast)(containerColor, linkColor))))\n                .getOr([])),\n        ])\n            .getOr([]);\n    }\n    Distinguishable.getPairwiseContrast = getPairwiseContrast;\n    function hasDistinguishableContrast(container, device, context = alfa_selector_1.Context.empty()) {\n        return (link) => {\n            for (const contrastPairing of getPairwiseContrast(container, link, device, context)) {\n                // If at least one of the contrast values are bigger than the threshold, the link is marked distinguisable\n                if (contrastPairing.contrast >= 3) {\n                    return true;\n                }\n            }\n            return false;\n        };\n    }\n    /**\n     * Check if an element has a different font weight or family than its container.\n     *\n     * This is brittle and imperfect but removes a strong pain point until we find\n     * a better solution.\n     */\n    function hasDistinguishableFont(container, device, context) {\n        const style = alfa_style_1.Style.from(container, device, context);\n        const referenceWeight = style.computed(\"font-weight\").value;\n        const referenceFamily = alfa_option_1.Option.from(style.computed(\"font-family\").value.values[0]);\n        return or(hasComputedStyle(\"font-weight\", not((weight) => weight.equals(referenceWeight)), device, context), hasComputedStyle(\"font-family\", not((family) => alfa_option_1.Option.from(family.values[0]).equals(referenceFamily)), device, context));\n    }\n    function hasDistinguishableVerticalAlign(container, device, context) {\n        const reference = alfa_style_1.Style.from(container, device, context).computed(\"vertical-align\").value;\n        return hasComputedStyle(\"vertical-align\", not((alignment) => alignment.equals(reference)), device, context);\n    }\n    function hasDistinguishableCursor(container, device, context) {\n        // Checking if there is a custom cursor, otherwise grabbing the built-in\n        function getFirstCursor(style) {\n            return style.values[0].values.length !== 0\n                ? style.values[0].values[0]\n                : style.values[1];\n        }\n        const containerCursorStyle = alfa_style_1.Style.from(container, device, context).computed(\"cursor\").value;\n        // We assume that the first custom cursor, if any, will never fail to load\n        // and thus don't try to default further.\n        const reference = getFirstCursor(containerCursorStyle);\n        return hasComputedStyle(\"cursor\", not((cursor) => getFirstCursor(cursor).equals(reference)), device, context);\n    }\n})(Distinguishable || (Distinguishable = {}));\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r62/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r62/serialise.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r62/serialise.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Serialise = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_style_1 = __webpack_require__(/*! @siteimprove/alfa-style */ \"./node_modules/@siteimprove/alfa-style/src/index.js\");\nconst normalize_1 = __webpack_require__(/*! ../common/normalize */ \"./node_modules/@siteimprove/alfa-rules/src/common/normalize.js\");\n/**\n * @internal\n *\n * CSS properties serialisation helpers.\n * These may be better suited with the actual properties in alfa-style.\n **/\nvar Serialise;\n(function (Serialise) {\n    // Trying to reduce the footprint of the result by exporting shorthands\n    // rather than longhands, and avoiding to export values that are the same\n    // as the initial value of the property.\n    function borderShorthand(style, property) {\n        const shorthand = `border-${property}`;\n        function getLongHand(side) {\n            return style.computed(`border-${side}-${property}`).toString();\n        }\n        let top = getLongHand(\"top\");\n        let right = getLongHand(\"right\");\n        let bottom = getLongHand(\"bottom\");\n        let left = getLongHand(\"left\");\n        if (left === right) {\n            left = \"\";\n            if (bottom === top) {\n                bottom = \"\";\n                if (right === top) {\n                    right = \"\";\n                    if (top === alfa_style_1.Longhands.get(`border-top-${property}`).initial.toString()) {\n                        top = \"\";\n                    }\n                }\n            }\n        }\n        return [shorthand, `${top} ${right} ${bottom} ${left}`.trim()];\n    }\n    Serialise.borderShorthand = borderShorthand;\n    function getLonghand(style, name) {\n        const property = style.computed(name).toString();\n        return property === alfa_style_1.Longhands.get(name).initial.toString() ? \"\" : property;\n    }\n    Serialise.getLonghand = getLonghand;\n    function outline(style) {\n        return (0, normalize_1.normalize)([\"color\", \"style\", \"width\"]\n            .map((property) => getLonghand(style, `outline-${property}`))\n            .join(\" \"));\n    }\n    Serialise.outline = outline;\n    // While text-decoration-style and text-decoration-thickness are not\n    // important for deciding if there is a text-decoration, they are important\n    // for rendering the link with the correct styling.\n    function textDecoration(style) {\n        return (0, normalize_1.normalize)([\"line\", \"color\", \"style\", \"thickness\"]\n            .map((property) => getLonghand(style, `text-decoration-${property}`))\n            .join(\" \"));\n    }\n    Serialise.textDecoration = textDecoration;\n    function boxShadow(style) {\n        const boxShadow = style.computed(\"box-shadow\").value;\n        if (alfa_css_1.Keyword.isKeyword(boxShadow)) {\n            return \"\";\n        }\n        const serializedShadows = [];\n        for (const shadow of boxShadow) {\n            const { vertical, horizontal, blur, spread, isInset, color } = shadow;\n            const omitBlur = alfa_css_1.Numeric.isZero(spread) && alfa_css_1.Numeric.isZero(blur);\n            const omitSpread = alfa_css_1.Numeric.isZero(spread);\n            const blurToString = omitBlur ? \"\" : blur.toString();\n            const spreadToString = omitSpread ? \"\" : spread.toString();\n            const insetToString = isInset ? \"inset\" : \"\";\n            const colorToString = alfa_css_1.Keyword.isKeyword(color) ? \"\" : `${color}`;\n            const serialized = (0, normalize_1.normalize)(`${horizontal.toString()} ${vertical.toString()} ${blurToString} ${spreadToString} ${colorToString} ${insetToString}`);\n            serializedShadows.push(serialized);\n        }\n        return serializedShadows.join(\", \");\n    }\n    Serialise.boxShadow = boxShadow;\n    function font(style) {\n        const optional = [\"style\", \"weight\"]\n            .map((property) => getLonghand(style, `font-${property}`))\n            .join(\" \");\n        const size = style.computed(\"font-size\");\n        const family = style.computed(\"font-family\");\n        if (optional !== \" \") {\n            // Optional properties were changed, need to output the mandatory ones.\n            return (0, normalize_1.normalize)(`${optional} ${size} ${family}`);\n        }\n        if (size.value.equals(alfa_style_1.Longhands.get(\"font-size\").initial.value) &&\n            family.value.values[0].equals(alfa_style_1.Longhands.get(\"font-family\").initial.values[0])) {\n            // Both mandatory properties are set to their initial values.\n            // Since optional properties also are, we can skip `font` altogether.\n            return \"\";\n        }\n        // Optional properties were not changed but some mandatory ones were.\n        return (0, normalize_1.normalize)(`${size} ${family}`);\n    }\n    Serialise.font = font;\n    // Only background-color and background-image are used for deciding if the\n    // link is distinguishable, but all longhands are needed for rendering it\n    // with the correct style.\n    function background(style) {\n        // Most properties are layered and need special handling.\n        const attachment = style.computed(\"background-attachment\").value.values;\n        const clip = style.computed(\"background-clip\").value.values;\n        const image = style.computed(\"background-image\").value.values;\n        const origin = style.computed(\"background-origin\").value.values;\n        const positionX = style.computed(\"background-position-x\").value.values;\n        const positionY = style.computed(\"background-position-y\").value.values;\n        const repeatX = style.computed(\"background-repeat-x\").value.values;\n        const repeatY = style.computed(\"background-repeat-y\").value.values;\n        const size = style.computed(\"background-size\").value.values;\n        function getValue(array, n, property) {\n            // Longhands with missing layers use the same value as their first layer\n            const value = `${array?.[n] ?? array[0]}`;\n            if (property === undefined) {\n                return value;\n            }\n            return value === alfa_style_1.Longhands.get(property).initial.toString() ? \"\" : value;\n        }\n        function getSize(n) {\n            const value = getValue(size, n, \"background-size\");\n            return value === \"\" ? \"\" : \" / \" + value;\n        }\n        function getPosition(n) {\n            const posX = getValue(positionX, n, \"background-position-x\");\n            const posY = getValue(positionY, n, \"background-position-y\");\n            // If there is a posY, we need to keep posX anyway\n            const value = (posX === \"\" && posY !== \"\" ? \"0px\" : posX) + \" \" + posY;\n            // If there is a size, we need to keep a position anyway\n            // size does contain a leading space.\n            // value hasn't been trimmed and contains one space if empty.\n            const size = getSize(n);\n            return size === \"\" ? value : (value === \" \" ? \"0px 0px\" : value) + size;\n        }\n        function getRepeat(n) {\n            // Due to the one value syntax, we can't easily fallback on initial value.\n            const value = getValue(repeatX, n) + \" \" + getValue(repeatY, n);\n            switch (value) {\n                case \"repeat no-repeat\":\n                    return \"repeat-x\";\n                case \"no-repeat repeat\":\n                    return \"repeat-y\";\n                case \"repeat repeat\":\n                    return \"\"; // initial value\n                case \"space space\":\n                    return \"space\";\n                case \"round round\":\n                    return \"round\";\n                case \"no-repeat no-repeat\":\n                    return \"no-repeat\";\n                default:\n                    return value;\n            }\n        }\n        function getBoxes(n) {\n            const originBox = getValue(origin, n);\n            const clipBox = getValue(clip, n);\n            return originBox === clipBox\n                ? // Since they have different initial value, they can't be both at their\n                    // initial value and therefore we need to output something\n                    originBox\n                : originBox === alfa_style_1.Longhands.get(\"background-origin\").initial.toString() &&\n                    clipBox === alfa_style_1.Longhands.get(\"background-clip\").initial.toString()\n                    ? // They are both at their initial value and nothing is needed\n                        \"\"\n                    : // They are different and at least one is not initial, hence needed;\n                        // we can't skip one without the remaining value leaking to both.\n                        originBox + \" \" + clipBox;\n        }\n        function getLayer(n) {\n            const imageValue = getValue(image, n);\n            // If there is no image the rest doesn't matter (color is handled later).\n            return imageValue === \"none\"\n                ? \"\"\n                : `${imageValue} ${getPosition(n)} ${getRepeat(n)} ${getValue(attachment, n, \"background-attachment\")} ${getBoxes(n)}`;\n        }\n        const layers = image.map((_, i) => getLayer(i));\n        // `background-color` is added to the last layer\n        layers[layers.length - 1] =\n            getLonghand(style, \"background-color\") + \" \" + layers[layers.length - 1];\n        return layers\n            .map(normalize_1.normalize)\n            .filter((layer) => layer !== \"\")\n            .join(\", \");\n    }\n    Serialise.background = background;\n})(Serialise || (exports.Serialise = Serialise = {}));\n//# sourceMappingURL=serialise.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r62/serialise.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r63/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r63/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_aria_1 = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst { hasNonEmptyAccessibleName, isIncludedInTheAccessibilityTree } = alfa_aria_1.DOM;\nconst { hasName, hasNamespace } = alfa_dom_1.Element;\nconst { and } = alfa_predicate_1.Predicate;\nconst { getElementDescendants } = alfa_dom_1.Query;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r63\",\n    requirements: [alfa_wcag_1.Criterion.of(\"1.1.1\")],\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    evaluate({ device, document }) {\n        return {\n            applicability() {\n                return getElementDescendants(document, alfa_dom_1.Node.fullTree).filter(and(hasNamespace(alfa_dom_1.Namespace.HTML), hasName(\"object\"), isIncludedInTheAccessibilityTree(device), embedsMedia));\n            },\n            expectations(target) {\n                return {\n                    1: (0, expectation_1.expectation)(hasNonEmptyAccessibleName(device)(target), () => Outcomes.HasName, () => Outcomes.HasNoName),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.HasName = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The \\`<object>\\` element has an accessible name`));\n    Outcomes.HasNoName = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The \\`<object>\\` element does not have an accessible name`));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\nfunction embedsMedia(element) {\n    return (element\n        // If there is a type attribute, use it, even if the value is incorrect\n        .attribute(\"type\")\n        .map((type) => MediaMIMEType.includes(type.value.split(\"/\")[0]))\n        // Otherwise, look at the file extension in the URL in the data attribute.\n        .getOrElse(() => element\n        .attribute(\"data\")\n        .some((data) => MediaFileExtension.includes(data.value.split(\".\").splice(-1)[0]))));\n}\n/**\n * {@see https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types}\n * {@see https://www.iana.org/assignments/media-types/media-types.xhtml}\n * We restrict ourselves to common types, but will expand the list if needed.\n */\nconst MediaMIMEType = [\"audio\", \"image\", \"video\"];\nconst MediaFileExtension = [\n    \"aac\",\n    \"avif\",\n    \"avi\",\n    \"bmp\",\n    \"gif\",\n    \"ico\",\n    \"jpeg\",\n    \"jpg\",\n    \"mid\",\n    \"midi\",\n    \"mp3\",\n    \"mp4\",\n    \"mpeg\",\n    \"oga\",\n    \"ogv\",\n    \"opus\",\n    \"png\",\n    \"svg\",\n    \"tif\",\n    \"tiff\",\n    \"ts\",\n    \"wav\",\n    \"weba\",\n    \"webm\",\n    \"webp\",\n    \"3gp\",\n    \"3GPP\",\n    \"3g2\",\n    \"3GPP2\",\n];\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r63/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r64/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r64/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_aria_1 = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst { hasNonEmptyAccessibleName, hasRole, isIncludedInTheAccessibilityTree } = alfa_aria_1.DOM;\nconst { hasNamespace } = alfa_dom_1.Element;\nconst { and } = alfa_predicate_1.Predicate;\nconst { getElementDescendants } = alfa_dom_1.Query;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r64\",\n    requirements: [alfa_wcag_1.Criterion.of(\"1.3.1\"), alfa_wcag_1.Technique.of(\"H42\")],\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    evaluate({ device, document }) {\n        return {\n            applicability() {\n                return getElementDescendants(document, alfa_dom_1.Node.fullTree).filter(and(hasNamespace(alfa_dom_1.Namespace.HTML), hasRole(device, \"heading\"), isIncludedInTheAccessibilityTree(device)));\n            },\n            expectations(target) {\n                return {\n                    1: (0, expectation_1.expectation)(hasNonEmptyAccessibleName(device)(target), () => Outcomes.HasAccessibleName, () => Outcomes.HasNoAccessibleName),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.HasAccessibleName = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The heading has an accessible name`));\n    Outcomes.HasNoAccessibleName = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The heading does not have an accessible name`));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r64/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r65/diagnostics.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r65/diagnostics.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MatchingClasses = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_map_1 = __webpack_require__(/*! @siteimprove/alfa-map */ \"./node_modules/@siteimprove/alfa-map/src/index.js\");\n/**\n * @public\n */\nclass MatchingClasses extends alfa_act_1.Diagnostic {\n    static of(message, matchingTargets = alfa_map_1.Map.empty(), matchingNonTargets = alfa_map_1.Map.empty()) {\n        return new MatchingClasses(message, matchingTargets, matchingNonTargets);\n    }\n    constructor(message, matchingTargets, matchingNonTargets) {\n        super(message);\n        this._matchingTargets = matchingTargets;\n        this._matchingNonTargets = matchingNonTargets;\n    }\n    get matchingTargets() {\n        return this._matchingTargets;\n    }\n    get matchingNonTargets() {\n        return this._matchingNonTargets;\n    }\n    equals(value) {\n        return (value instanceof MatchingClasses &&\n            value._matchingTargets.equals(this._matchingTargets) &&\n            value._matchingNonTargets.equals(this._matchingNonTargets));\n    }\n    hash(hash) {\n        super.hash(hash);\n        this._matchingTargets.hash(hash);\n        this._matchingNonTargets.hash(hash);\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            matchingTargets: this._matchingTargets.toJSON(),\n            matchingNonTargets: this._matchingNonTargets.toJSON(),\n        };\n    }\n}\nexports.MatchingClasses = MatchingClasses;\n/**\n * @public\n */\n(function (MatchingClasses) {\n    /**@public */\n    function isMatchingClasses(value) {\n        return value instanceof MatchingClasses;\n    }\n    MatchingClasses.isMatchingClasses = isMatchingClasses;\n})(MatchingClasses || (exports.MatchingClasses = MatchingClasses = {}));\n//# sourceMappingURL=diagnostics.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r65/diagnostics.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r65/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r65/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_equatable_1 = __webpack_require__(/*! @siteimprove/alfa-equatable */ \"./node_modules/@siteimprove/alfa-equatable/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_refinement_1 = __webpack_require__(/*! @siteimprove/alfa-refinement */ \"./node_modules/@siteimprove/alfa-refinement/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_selector_1 = __webpack_require__(/*! @siteimprove/alfa-selector */ \"./node_modules/@siteimprove/alfa-selector/src/index.js\");\nconst alfa_style_1 = __webpack_require__(/*! @siteimprove/alfa-style */ \"./node_modules/@siteimprove/alfa-style/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst question_1 = __webpack_require__(/*! ../common/act/question */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/question.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst diagnostics_1 = __webpack_require__(/*! ./diagnostics */ \"./node_modules/@siteimprove/alfa-rules/src/sia-r65/diagnostics.js\");\nconst { isElement } = alfa_dom_1.Element;\nconst { isKeyword } = alfa_css_1.Keyword;\nconst { or, test, xor, not } = alfa_predicate_1.Predicate;\nconst { and } = alfa_refinement_1.Refinement;\nconst { hasBorder, hasBoxShadow, hasOutline, hasTextDecoration, isTabbable } = alfa_style_1.Style;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r65\",\n    requirements: [alfa_wcag_1.Criterion.of(\"2.4.7\")],\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    evaluate({ device, document }) {\n        const tabbables = document.tabOrder().filter(isTabbable(device));\n        const matchingTargets = tabbables\n            .flatMap((tabbable) => tabbable.classes)\n            .groupBy((c) => c)\n            .map((list) => list.size);\n        const matchingNonTargets = document\n            .descendants()\n            .filter(and(isElement, not((element) => tabbables.includes(element))))\n            .flatMap((nonTarget) => nonTarget.classes)\n            .groupBy((c) => c)\n            .map((list) => list.size);\n        return {\n            applicability() {\n                return tabbables;\n            },\n            expectations(target) {\n                const askFocusIndicator = question_1.Question.of(\"has-focus-indicator\", target);\n                return {\n                    1: askFocusIndicator\n                        .answerIf(hasFocusIndicator(device)(target), true)\n                        .map((hasFocusIndicator) => (0, expectation_1.expectation)(hasFocusIndicator, () => Outcomes.HasFocusIndicator(matchingTargets, matchingNonTargets), () => Outcomes.HasNoFocusIndicator(matchingTargets, matchingNonTargets))),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.HasFocusIndicator = (matchingTargets, matchingNonTargets) => alfa_result_1.Ok.of(diagnostics_1.MatchingClasses.of(`The element has a visible focus indicator`, matchingTargets, matchingNonTargets));\n    Outcomes.HasNoFocusIndicator = (matchingTargets, matchingNonTargets) => alfa_result_1.Err.of(diagnostics_1.MatchingClasses.of(`The element does not have a visible focus indicator`, matchingTargets, matchingNonTargets));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\nfunction hasFocusIndicator(device) {\n    return (element) => {\n        const withFocus = alfa_selector_1.Context.focus(element);\n        return element\n            .inclusiveDescendants(alfa_dom_1.Node.flatTree)\n            .concat(element.ancestors(alfa_dom_1.Node.flatTree))\n            .filter(isElement)\n            .some(or(\n        // For these properties, we assume that the difference is to set it or remove it, not to make small changes on it.\n        xor(hasOutline(device), hasOutline(device, withFocus)), xor(hasTextDecoration(device), hasTextDecoration(device, withFocus)), xor(hasBoxShadow(device), hasBoxShadow(device, withFocus)), \n        // These properties are essentially always set, so any difference in the color is good enough.\n        hasDifferentColors(device, withFocus), hasDifferentBackgroundColors(device, withFocus), \n        // Any difference in border is accepted\n        hasDifferentBorder(device, withFocus)));\n    };\n}\nfunction hasDifferentColors(device, context1 = alfa_selector_1.Context.empty(), context2 = alfa_selector_1.Context.empty()) {\n    return function hasDifferentColors(element) {\n        const color1 = alfa_style_1.Style.from(element, device, context1).computed(\"color\");\n        const color2 = alfa_style_1.Style.from(element, device, context2).computed(\"color\");\n        // keywords can get tricky and may ultimately yield the same used value,\n        // to keep on the safe side, we let the user decide if one color is a keyword.\n        if (isKeyword(color1) || isKeyword(color2)) {\n            return false;\n        }\n        return !color1.value.equals(color2.value);\n    };\n}\nfunction hasDifferentBackgroundColors(device, context1 = alfa_selector_1.Context.empty(), context2 = alfa_selector_1.Context.empty()) {\n    return function hasDifferentBackgroundColors(element) {\n        const color1 = alfa_style_1.Style.from(element, device, context1).computed(\"background-color\");\n        const color2 = alfa_style_1.Style.from(element, device, context2).computed(\"background-color\");\n        // Keywords can get tricky and may ultimately yield the same used value,\n        // to keep on the safe side, if one color is a keyword we let the user decide.\n        if (isKeyword(color1) || isKeyword(color2)) {\n            return false;\n        }\n        // Technically, different solid backgrounds could render as the same color if one is fully transparent\n        // and the parent happens to have the same color… We Assume that this won't happen often…\n        return !color1.value.equals(color2.value);\n    };\n}\nfunction hasDifferentBorder(device, context1 = alfa_selector_1.Context.empty(), context2 = alfa_selector_1.Context.empty()) {\n    return function hasDifferentBorder(element) {\n        const style1 = alfa_style_1.Style.from(element, device, context1);\n        const style2 = alfa_style_1.Style.from(element, device, context2);\n        // If 0 or 1 has border, the answer is easy.\n        const hasBorder1 = test(hasBorder(device, context1), element);\n        const hasBorder2 = test(hasBorder(device, context2), element);\n        if (hasBorder1 !== hasBorder2) {\n            // only one has border\n            return true;\n        }\n        if (!hasBorder1 && !hasBorder2) {\n            // none has border\n            return false;\n        }\n        // They both have border, we need to dig the values\n        // We consider any difference in any of the border-* longhand as enough\n        for (const side of [\"top\", \"right\", \"bottom\", \"left\"]) {\n            for (const effect of [\"color\", \"style\", \"width\"]) {\n                const longhand = `border-${side}-${effect}`;\n                const border1 = style1.computed(longhand);\n                const border2 = style2.computed(longhand);\n                // We avoid keyword resolution for color,\n                // but we need it for style. The none=hidden conflict has been solved\n                // by hasBorder so any difference in style is enough.\n                if (!((effect === \"color\" &&\n                    (isKeyword(border1) || isKeyword(border2))) ||\n                    alfa_equatable_1.Equatable.equals(border1.value, border2.value))) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n}\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r65/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r66/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r66/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst non_disabled_texts_1 = __webpack_require__(/*! ../common/applicability/non-disabled-texts */ \"./node_modules/@siteimprove/alfa-rules/src/common/applicability/non-disabled-texts.js\");\nconst contrast_1 = __webpack_require__(/*! ../common/expectation/contrast */ \"./node_modules/@siteimprove/alfa-rules/src/common/expectation/contrast.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r66\",\n    requirements: [alfa_wcag_1.Criterion.of(\"1.4.6\")],\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable, tags_1.Version.of(2)],\n    evaluate({ device, document }) {\n        return {\n            applicability() {\n                return (0, non_disabled_texts_1.nonDisabledTexts)(document, device);\n            },\n            expectations(target) {\n                return (0, contrast_1.hasSufficientContrast)(target, device, 4.5, 7);\n            },\n        };\n    },\n});\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r66/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r67/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r67/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_aria_1 = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst dom = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst { isMarkedDecorative } = alfa_aria_1.DOM;\nconst { hasName, hasNamespace } = alfa_dom_1.Element;\nconst { and, or, not } = alfa_predicate_1.Predicate;\nconst { getElementDescendants } = alfa_dom_1.Query;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r67\",\n    requirements: [alfa_wcag_1.Criterion.of(\"1.1.1\")],\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    evaluate({ device, document }) {\n        return {\n            applicability() {\n                return getElementDescendants(document, dom.Node.fullTree).filter(and(or(and(hasNamespace(alfa_dom_1.Namespace.HTML), hasName(\"img\")), and(hasNamespace(alfa_dom_1.Namespace.SVG), hasName(\"svg\"))), isMarkedDecorative));\n            },\n            expectations(target) {\n                return {\n                    1: (0, expectation_1.expectation)(alfa_aria_1.Node.from(target, device).role.some(not((role) => role.isPresentational())), () => Outcomes.IsExposed, () => Outcomes.IsNotExposed),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.IsNotExposed = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The element is marked as decorative and is not exposed`));\n    Outcomes.IsExposed = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The element is marked as decorative but is exposed`));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r67/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r68/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r68/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_aria_1 = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_refinement_1 = __webpack_require__(/*! @siteimprove/alfa-refinement */ \"./node_modules/@siteimprove/alfa-refinement/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst aria = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst with_role_1 = __webpack_require__(/*! ../common/diagnostic/with-role */ \"./node_modules/@siteimprove/alfa-rules/src/common/diagnostic/with-role.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst { hasRole, isIncludedInTheAccessibilityTree } = alfa_aria_1.DOM;\nconst { hasAttribute, hasNamespace, isElement } = alfa_dom_1.Element;\nconst { and, equals } = alfa_refinement_1.Refinement;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r68\",\n    requirements: [alfa_wcag_1.Criterion.of(\"1.3.1\")],\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    evaluate({ device, document }) {\n        return {\n            applicability() {\n                return visit(document, device);\n            },\n            expectations(target) {\n                return {\n                    1: (0, expectation_1.expectation)(hasRequiredChildren(device)(target), () => Outcomes.HasCorrectOwnedElements(with_role_1.WithRole.getRoleName(target, device)), () => Outcomes.HasIncorrectOwnedElements(with_role_1.WithRole.getRoleName(target, device))),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.HasCorrectOwnedElements = (role) => alfa_result_1.Ok.of(with_role_1.WithRole.of(`The element owns elements as required by its semantic role`, role));\n    Outcomes.HasIncorrectOwnedElements = (role) => alfa_result_1.Err.of(with_role_1.WithRole.of(`The element owns no elements as required by its semantic role`, role));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\nfunction hasRequiredChildren(device) {\n    return (element) => {\n        const node = aria.Node.from(element, device);\n        return node.role\n            .filter((role) => role.hasRequiredChildren())\n            .every((role) => node\n            .children()\n            .filter((node) => isElement(node.node))\n            .some(isRequiredChild(role.requiredChildren)));\n    };\n}\nfunction isRequiredChild(requiredChildren) {\n    return (node) => requiredChildren.some((roles) => isRequiredChild(roles)(node));\n    function isRequiredChild(requiredChildren) {\n        return (node) => {\n            const [role, ...rest] = requiredChildren;\n            if (node.role.some(alfa_aria_1.Role.hasName(role))) {\n                return (rest.length === 0 ||\n                    node\n                        .children()\n                        .filter((node) => isElement(node.node))\n                        .some(isRequiredChild(rest)));\n            }\n            return false;\n        };\n    }\n}\n/**\n * Collect all descendants of the given node where the descendant:\n *\n * - is a HTML or SVG element, included in the accessibility tree, with a role\n *   requiring specific children; and\n * - does not have an `aria-busy` ancestor.\n */\nfunction* visit(node, device) {\n    if (and(isElement, hasAttribute(\"aria-busy\", equals(\"true\")))(node)) {\n        return;\n    }\n    if (and(isElement, and(hasNamespace(alfa_dom_1.Namespace.HTML, alfa_dom_1.Namespace.SVG), isIncludedInTheAccessibilityTree(device), hasRole(device, (role) => role.hasRequiredChildren())))(node)) {\n        yield node;\n    }\n    for (const child of node.children(alfa_dom_1.Node.fullTree)) {\n        yield* visit(child, device);\n    }\n}\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r68/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r69/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r69/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst non_disabled_texts_1 = __webpack_require__(/*! ../common/applicability/non-disabled-texts */ \"./node_modules/@siteimprove/alfa-rules/src/common/applicability/non-disabled-texts.js\");\nconst contrast_1 = __webpack_require__(/*! ../common/expectation/contrast */ \"./node_modules/@siteimprove/alfa-rules/src/common/expectation/contrast.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r69\",\n    requirements: [alfa_wcag_1.Criterion.of(\"1.4.3\"), alfa_wcag_1.Criterion.of(\"1.4.6\")],\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable, tags_1.Version.of(2)],\n    evaluate({ device, document }) {\n        return {\n            applicability() {\n                return (0, non_disabled_texts_1.nonDisabledTexts)(document, device);\n            },\n            expectations(target) {\n                return (0, contrast_1.hasSufficientContrast)(target, device, 3, 4.5);\n            },\n        };\n    },\n});\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r69/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r7/rule.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r7/rule.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_aria_1 = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_iana_1 = __webpack_require__(/*! @siteimprove/alfa-iana */ \"./node_modules/@siteimprove/alfa-iana/src/index.js\");\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_refinement_1 = __webpack_require__(/*! @siteimprove/alfa-refinement */ \"./node_modules/@siteimprove/alfa-refinement/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_sequence_1 = __webpack_require__(/*! @siteimprove/alfa-sequence */ \"./node_modules/@siteimprove/alfa-rules/node_modules/@siteimprove/alfa-sequence/src/index.js\");\nconst alfa_style_1 = __webpack_require__(/*! @siteimprove/alfa-style */ \"./node_modules/@siteimprove/alfa-style/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst predicate_1 = __webpack_require__(/*! ../common/predicate */ \"./node_modules/@siteimprove/alfa-rules/src/common/predicate.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst { hasAccessibleName, isIncludedInTheAccessibilityTree } = alfa_aria_1.DOM;\nconst { hasAttribute, hasName, hasNamespace, isElement } = alfa_dom_1.Element;\nconst { isEmpty } = alfa_iterable_1.Iterable;\nconst { not, or } = alfa_predicate_1.Predicate;\nconst { and, test } = alfa_refinement_1.Refinement;\nconst { isVisible } = alfa_style_1.Style;\nconst { isText } = alfa_dom_1.Text;\nconst { getElementDescendants } = alfa_dom_1.Query;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r7\",\n    requirements: [alfa_wcag_1.Criterion.of(\"3.1.2\"), alfa_wcag_1.Technique.of(\"H58\")],\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    evaluate({ device, document }) {\n        return {\n            applicability() {\n                function* visit(node, lang) {\n                    if (test(and(isElement, hasAttribute(\"lang\", not(isEmpty))), node)) {\n                        lang = node.attribute(\"lang\");\n                    }\n                    if (lang.isSome()) {\n                        const isVisibleText = and(isText, and(or(isVisible(device), isIncludedInTheAccessibilityTree(device)), (text) => !(0, predicate_1.isWhitespace)(text.data)));\n                        const isElementWithAccessibleName = and(isElement, hasAccessibleName(device, (accessibleName) => !(0, predicate_1.isWhitespace)(accessibleName.value)));\n                        if (test(or(isVisibleText, isElementWithAccessibleName), node)) {\n                            yield* lang;\n                        }\n                    }\n                    for (const child of node.children(alfa_dom_1.Node.flatTree)) {\n                        yield* visit(child, lang);\n                    }\n                }\n                return getElementDescendants(document, alfa_dom_1.Node.fullTree)\n                    .filter(and(hasNamespace(alfa_dom_1.Namespace.HTML), hasName(\"body\")))\n                    .flatMap((element) => alfa_sequence_1.Sequence.from(visit(element, alfa_option_1.None)))\n                    .distinct();\n            },\n            expectations(target) {\n                return {\n                    1: (0, expectation_1.expectation)(alfa_iana_1.Language.parse(target.value).isOk(), () => Outcomes.HasValidLanguage, () => Outcomes.HasNoValidLanguage),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.HasValidLanguage = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The \\`lang\\` attribute has a valid primary language subtag`));\n    Outcomes.HasNoValidLanguage = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The \\`lang\\` attribute does not have a valid primary language subtag`));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r7/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r70/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r70/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_style_1 = __webpack_require__(/*! @siteimprove/alfa-style */ \"./node_modules/@siteimprove/alfa-style/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst with_bad_elements_1 = __webpack_require__(/*! ../common/diagnostic/with-bad-elements */ \"./node_modules/@siteimprove/alfa-rules/src/common/diagnostic/with-bad-elements.js\");\nconst with_document_element_1 = __webpack_require__(/*! ../common/applicability/with-document-element */ \"./node_modules/@siteimprove/alfa-rules/src/common/applicability/with-document-element.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst { hasName, hasNamespace } = alfa_dom_1.Element;\nconst { and } = alfa_predicate_1.Predicate;\nconst { isRendered } = alfa_style_1.Style;\nconst { getElementDescendants } = alfa_dom_1.Query;\nconst isDeprecated = hasName(\"acronym\", \"applet\", \"basefont\", \"bgsound\", \"big\", \"blink\", \"center\", \"content\", \"dir\", \"font\", \"frame\", \"frameset\", \"image\", \"keygen\", \"marquee\", \"menuitem\", \"nobr\", \"noembed\", \"noframes\", \"plaintext\", \"rb\", \"rtc\", \"shadow\", \"spacer\", \"strike\", \"tt\", \"xmp\");\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r70\",\n    tags: [tags_1.Scope.Page, tags_1.Stability.Stable],\n    evaluate({ device, document }) {\n        return {\n            applicability() {\n                return (0, with_document_element_1.withDocumentElement)(document);\n            },\n            expectations(target) {\n                const deprecatedElements = getElementDescendants(target, alfa_dom_1.Node.fullTree).filter(and(hasNamespace(alfa_dom_1.Namespace.HTML), isDeprecated, isRendered(device)));\n                return {\n                    1: (0, expectation_1.expectation)(deprecatedElements.isEmpty(), () => Outcomes.HasNoDeprecatedElement, () => Outcomes.HasDeprecatedElements(deprecatedElements)),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.HasNoDeprecatedElement = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The document doesn't contain any deprecated elements`));\n    Outcomes.HasDeprecatedElements = (errors) => alfa_result_1.Err.of(with_bad_elements_1.WithBadElements.of(`The document contains deprecated elements`, errors));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r70/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r71/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r71/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_aria_1 = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_style_1 = __webpack_require__(/*! @siteimprove/alfa-style */ \"./node_modules/@siteimprove/alfa-style/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst { hasRole } = alfa_aria_1.DOM;\nconst { and, test } = alfa_predicate_1.Predicate;\nconst { isVisible, hasComputedStyle } = alfa_style_1.Style;\nconst { getElementDescendants } = alfa_dom_1.Query;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r71\",\n    requirements: [alfa_wcag_1.Criterion.of(\"1.4.8\")],\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    evaluate({ device, document }) {\n        return {\n            applicability() {\n                return getElementDescendants(document, alfa_dom_1.Node.fullTree).filter(and(hasRole(device, \"paragraph\"), isVisible(device)));\n            },\n            expectations(target) {\n                return {\n                    1: (0, expectation_1.expectation)(test(isNotJustified(device), target), () => Outcomes.IsNotJustified, () => Outcomes.IsJustified),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.IsNotJustified = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The text of the paragraph is not justified`));\n    Outcomes.IsJustified = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The text of the paragraph is justified`));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\nfunction isNotJustified(device) {\n    return hasComputedStyle(\"text-align\", (align) => align.value !== \"justify\", device);\n}\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r71/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r72/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r72/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_aria_1 = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_style_1 = __webpack_require__(/*! @siteimprove/alfa-style */ \"./node_modules/@siteimprove/alfa-style/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst { hasRole } = alfa_aria_1.DOM;\nconst { and, test } = alfa_predicate_1.Predicate;\nconst { isVisible, hasComputedStyle } = alfa_style_1.Style;\nconst { getElementDescendants } = alfa_dom_1.Query;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r72\",\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    evaluate({ device, document }) {\n        return {\n            applicability() {\n                return getElementDescendants(document, alfa_dom_1.Node.fullTree).filter(and(hasRole(device, \"paragraph\"), isVisible(device)));\n            },\n            expectations(target) {\n                return {\n                    1: (0, expectation_1.expectation)(test(isNotUpperCased(device), target), () => Outcomes.IsNotUppercased, () => Outcomes.IsUppercased),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.IsNotUppercased = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The text of the paragraph is not uppercased`));\n    Outcomes.IsUppercased = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The text of the paragraph is uppercased`));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\nfunction isNotUpperCased(device) {\n    return hasComputedStyle(\"text-transform\", (transform) => transform.value !== \"uppercase\", device);\n}\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r72/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r73/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r73/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_aria_1 = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_style_1 = __webpack_require__(/*! @siteimprove/alfa-style */ \"./node_modules/@siteimprove/alfa-style/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst { hasRole } = alfa_aria_1.DOM;\nconst { and } = alfa_predicate_1.Predicate;\nconst { isVisible } = alfa_style_1.Style;\nconst { getElementDescendants } = alfa_dom_1.Query;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r73\",\n    requirements: [alfa_wcag_1.Criterion.of(\"1.4.8\")],\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    evaluate({ device, document }) {\n        return {\n            applicability() {\n                return getElementDescendants(document, alfa_dom_1.Node.fullTree).filter(and(hasRole(device, \"paragraph\"), isVisible(device)));\n            },\n            expectations(target) {\n                const style = alfa_style_1.Style.from(target, device);\n                const { value: lineHeight } = style.computed(\"line-height\");\n                let outcome = Outcomes.IsNormal;\n                switch (lineHeight.type) {\n                    case \"number\":\n                        outcome =\n                            lineHeight.value >= 1.5\n                                ? Outcomes.IsSufficient\n                                : Outcomes.IsInsufficient;\n                        break;\n                    case \"length\": {\n                        const { value: fontSize } = style.computed(\"font-size\");\n                        outcome =\n                            lineHeight.value / fontSize.value >= 1.5\n                                ? Outcomes.IsSufficient\n                                : Outcomes.IsInsufficient;\n                    }\n                }\n                return {\n                    1: alfa_option_1.Option.of(outcome),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.IsSufficient = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The line height of the paragraph is at least 1.5`));\n    Outcomes.IsInsufficient = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The line height of the paragraph is less than 1.5`));\n    Outcomes.IsNormal = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The line height of the paragraph is \\`normal\\` which will result in\n      a line height of less than 1.5`));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r73/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r74/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r74/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_aria_1 = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_style_1 = __webpack_require__(/*! @siteimprove/alfa-style */ \"./node_modules/@siteimprove/alfa-style/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst { hasRole } = alfa_aria_1.DOM;\nconst { and } = alfa_predicate_1.Predicate;\nconst { isVisible, hasCascadedStyle } = alfa_style_1.Style;\nconst { getElementDescendants } = alfa_dom_1.Query;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r74\",\n    requirements: [alfa_wcag_1.Criterion.of(\"1.4.8\")],\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    evaluate({ device, document }) {\n        return {\n            applicability() {\n                return getElementDescendants(document, alfa_dom_1.Node.fullTree).filter(and(hasRole(device, \"paragraph\"), alfa_dom_1.Node.hasTextContent(), isVisible(device), \n                // If the font-size ultimately computes to size 0, the element is not\n                // visible.\n                hasCascadedStyle(\"font-size\", () => true, device)));\n            },\n            expectations(target) {\n                const { value: fontSize } = alfa_style_1.Style.from(target, device)\n                    .cascaded(\"font-size\")\n                    // Presence of a cascaded value is guaranteed by filter in applicability\n                    .getUnsafe();\n                return {\n                    1: (0, expectation_1.expectation)(\n                    // Keyword, percentage, number\n                    !alfa_css_1.Length.isLength(fontSize) ||\n                        // Calculated length\n                        fontSize.hasCalculation() ||\n                        // Fixed length in relative units\n                        fontSize.isRelative(), () => Outcomes.HasRelativeUnit, () => Outcomes.HasAbsoluteUnit),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.HasRelativeUnit = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The font size is specified using a relative unit`));\n    Outcomes.HasAbsoluteUnit = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The font size is specified using an absolute unit`));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r74/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r75/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r75/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.WithDeclaration = exports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_cache_1 = __webpack_require__(/*! @siteimprove/alfa-cache */ \"./node_modules/@siteimprove/alfa-cache/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_refinement_1 = __webpack_require__(/*! @siteimprove/alfa-refinement */ \"./node_modules/@siteimprove/alfa-refinement/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_style_1 = __webpack_require__(/*! @siteimprove/alfa-style */ \"./node_modules/@siteimprove/alfa-style/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst { hasNamespace, hasName } = alfa_dom_1.Element;\nconst { isText } = alfa_dom_1.Text;\nconst { or, not } = alfa_predicate_1.Predicate;\nconst { and } = alfa_refinement_1.Refinement;\nconst { hasCascadedStyle, hasComputedStyle, hasSpecifiedStyle, isVisible } = alfa_style_1.Style;\nconst { getElementDescendants } = alfa_dom_1.Query;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r75\",\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    evaluate({ device, document }) {\n        const visibleTextCache = alfa_cache_1.Cache.empty();\n        return {\n            applicability() {\n                return getElementDescendants(document, alfa_dom_1.Node.fullTree).filter(and(hasNamespace(alfa_dom_1.Namespace.HTML), not(hasName(\"sup\", \"sub\")), not((node) => visibleTextCache\n                    .get(node, () => node\n                    .descendants(alfa_dom_1.Node.fullTree)\n                    .filter(and(isText, isVisible(device))))\n                    .isEmpty()), hasCascadedStyle(`font-size`, () => true, device)));\n            },\n            expectations(target) {\n                const declaration = alfa_style_1.Style.from(target, device)\n                    .cascaded(\"font-size\")\n                    // Applicability guarantees there is a cascaded value\n                    .getUnsafe().source;\n                const texts = visibleTextCache\n                    .get(target)\n                    .getUnsafe() // Applicability guarantees there's an entry for target\n                    .reject((text) => text.data.trim() === \"\")\n                    .every(or(hasSpecifiedStyle(\"font-size\", (_, source) => \n                // We do need to compare with physical identity, not structural\n                // identity (.equals) to differentiate, e.g., two\n                // \"font-size: 100%\" declarations\n                source !== declaration, device), hasComputedStyle(\"font-size\", (fontSize, _) => fontSize.value >= 9, device)));\n                return {\n                    1: (0, expectation_1.expectation)(texts, () => Outcomes.IsSufficient(declaration), () => Outcomes.IsInsufficient(declaration)),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.IsSufficient = (declaration) => alfa_result_1.Ok.of(WithDeclaration.of(`The font size is greater than 9 pixels`, declaration));\n    Outcomes.IsInsufficient = (declaration) => alfa_result_1.Err.of(WithDeclaration.of(`The font size is smaller than 9 pixels`, declaration));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n/**\n * @public\n */\nclass WithDeclaration extends alfa_act_1.Diagnostic {\n    static of(message, declaration = alfa_option_1.None) {\n        return new WithDeclaration(message, declaration);\n    }\n    constructor(message, declaration) {\n        super(message);\n        this._declaration = declaration;\n    }\n    get declaration() {\n        return this._declaration;\n    }\n    equals(value) {\n        return (value instanceof WithDeclaration &&\n            value._message === this.message &&\n            value._declaration === this._declaration);\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            declaration: this._declaration.toJSON(),\n        };\n    }\n}\nexports.WithDeclaration = WithDeclaration;\n/**\n * @public\n */\n(function (WithDeclaration) {\n    /**@public */\n    function isWithDeclaration(value) {\n        return value instanceof WithDeclaration;\n    }\n    WithDeclaration.isWithDeclaration = isWithDeclaration;\n})(WithDeclaration || (exports.WithDeclaration = WithDeclaration = {}));\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r75/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r76/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r76/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_aria_1 = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_refinement_1 = __webpack_require__(/*! @siteimprove/alfa-refinement */ \"./node_modules/@siteimprove/alfa-refinement/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst with_role_1 = __webpack_require__(/*! ../common/diagnostic/with-role */ \"./node_modules/@siteimprove/alfa-rules/src/common/diagnostic/with-role.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst { hasRole, isIncludedInTheAccessibilityTree, isPerceivableForAll } = alfa_aria_1.DOM;\nconst { isElement, hasName, hasNamespace } = alfa_dom_1.Element;\nconst { and, test } = alfa_refinement_1.Refinement;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r76\",\n    requirements: [alfa_wcag_1.Criterion.of(\"1.3.1\")],\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    evaluate({ device, document }) {\n        return {\n            applicability() {\n                return visit(document);\n                function* visit(node, collect = false) {\n                    if (test(and(isElement, hasNamespace(alfa_dom_1.Namespace.HTML)), node)) {\n                        if (test(hasName(\"table\"), node)) {\n                            // only collect cells of accessible tables\n                            collect = test(isIncludedInTheAccessibilityTree(device), node);\n                        }\n                        if (collect &&\n                            test(and(hasName(\"th\"), isPerceivableForAll(device)), node)) {\n                            yield node;\n                        }\n                    }\n                    for (const child of node.children(alfa_dom_1.Node.fullTree)) {\n                        yield* visit(child, collect);\n                    }\n                }\n            },\n            expectations(target) {\n                return {\n                    1: (0, expectation_1.expectation)(test(hasRole(device, \"columnheader\", \"rowheader\"), target), () => Outcomes.HasHeaderRole(with_role_1.WithRole.getRoleName(target, device)), () => Outcomes.HasNoHeaderRole(with_role_1.WithRole.getRoleName(target, device))),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.HasHeaderRole = (role) => alfa_result_1.Ok.of(with_role_1.WithRole.of(`The header element is a semantic header`, role));\n    Outcomes.HasNoHeaderRole = (role) => alfa_result_1.Err.of(with_role_1.WithRole.of(`The header element is not a semantic header`, role));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r76/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r77/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r77/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_aria_1 = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_map_1 = __webpack_require__(/*! @siteimprove/alfa-map */ \"./node_modules/@siteimprove/alfa-map/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_table_1 = __webpack_require__(/*! @siteimprove/alfa-table */ \"./node_modules/@siteimprove/alfa-table/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst { hasRole, isIncludedInTheAccessibilityTree, isPerceivableForAll } = alfa_aria_1.DOM;\nconst { hasName, hasNamespace } = alfa_dom_1.Element;\nconst { and } = alfa_predicate_1.Predicate;\nconst { getElementDescendants } = alfa_dom_1.Query;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r77\",\n    requirements: [alfa_wcag_1.Criterion.of(\"1.3.1\")],\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    evaluate({ device, document }) {\n        let data = alfa_map_1.Map.empty();\n        return {\n            *applicability() {\n                const tables = getElementDescendants(document).filter(and(hasNamespace(alfa_dom_1.Namespace.HTML), hasName(\"table\"), isIncludedInTheAccessibilityTree(device)));\n                for (const table of tables) {\n                    const model = alfa_table_1.Table.from(table);\n                    if (model.cells.find((cell) => cell.isHeader()).isNone()) {\n                        continue;\n                    }\n                    const dataCells = getElementDescendants(table).filter(and(hasNamespace(alfa_dom_1.Namespace.HTML), hasName(\"td\"), hasRole(device, \"cell\", \"gridcell\"), isPerceivableForAll(device)));\n                    for (const dataCell of dataCells) {\n                        for (const cell of model.cells.find((cell) => cell.element.equals(dataCell))) {\n                            data = data.set(dataCell, cell);\n                            yield dataCell;\n                        }\n                    }\n                }\n            },\n            expectations(target) {\n                // targets are yielded after filling the map.\n                const cell = data.get(target).getUnsafe();\n                return {\n                    1: (0, expectation_1.expectation)(cell.headers.isEmpty(), () => Outcomes.IsNotAssignedToHeaderCell, () => Outcomes.IsAssignedToHeaderCell),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.IsAssignedToHeaderCell = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The cell is assigned to an header cell`));\n    Outcomes.IsNotAssignedToHeaderCell = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The cell is not assigned to any header cell`));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r77/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r78/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r78/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_aria_1 = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_refinement_1 = __webpack_require__(/*! @siteimprove/alfa-refinement */ \"./node_modules/@siteimprove/alfa-refinement/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst diagnostic_1 = __webpack_require__(/*! ../common/diagnostic */ \"./node_modules/@siteimprove/alfa-rules/src/common/diagnostic.js\");\nvar isText = alfa_dom_1.Text.isText;\nconst { hasHeadingLevel, hasRole, isIncludedInTheAccessibilityTree } = alfa_aria_1.DOM;\nconst { hasNamespace, isContent, isElement } = alfa_dom_1.Element;\nconst { not, tee } = alfa_predicate_1.Predicate;\nconst { and } = alfa_refinement_1.Refinement;\nconst { getElementDescendants } = alfa_dom_1.Query;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r78\",\n    tags: [tags_1.Scope.Page, tags_1.Stability.Stable],\n    evaluate({ device, document }) {\n        let headings;\n        return {\n            applicability() {\n                headings = document.descendants(alfa_dom_1.Node.fullTree).filter(and(isElement, and(hasNamespace(alfa_dom_1.Namespace.HTML), isIncludedInTheAccessibilityTree(device), hasRole(device, \"heading\"), \n                // Headings containing a button is the ARIA pattern for accordions.\n                // Headings containing a link is frequently misused instead.\n                // Headings containing a link is also used for, e.g., list of news.\n                not((heading) => getElementDescendants(heading).some(hasRole(device, \"button\", \"link\"))))));\n                return headings;\n            },\n            expectations(target) {\n                const currentLevel = alfa_aria_1.Node\n                    .from(target, device)\n                    .attribute(\"aria-level\")\n                    .map((level) => Number(level.value))\n                    .getOr(0);\n                let nextLevel = -1;\n                let end = false;\n                const next = headings\n                    .skipUntil((heading) => heading.equals(target))\n                    .rest()\n                    .find(hasHeadingLevel(device, tee((level) => level <= currentLevel, (level, isLower) => {\n                    if (isLower) {\n                        nextLevel = level;\n                    }\n                })))\n                    // If there is no more heading with a small enough level,\n                    // go to the end of the document and record we did it\n                    .getOrElse(() => {\n                    end = true;\n                    return (document\n                        .descendants(alfa_dom_1.Node.fullTree)\n                        .last()\n                        // The document contains at least the target.\n                        .getUnsafe());\n                });\n                return {\n                    1: (0, expectation_1.expectation)(alfa_dom_1.Node.getNodesBetween(target, next, {\n                        includeFirst: false,\n                        // If this is the last heading (of this level or less), then the\n                        // last node of the document is acceptable content; otherwise, the\n                        // next heading (of this level or less) is not acceptable content.\n                        includeSecond: end,\n                    }).some(and(isIncludedInTheAccessibilityTree(device), isContent(alfa_dom_1.Node.fullTree), not(and(isText, (text) => text.data.trim() === \"\")))), () => Outcomes.hasContent(\n                    // The link between end nad the type of next is lost by TS\n                    end ? alfa_option_1.None : alfa_option_1.Some.of(next), currentLevel, nextLevel), () => Outcomes.hasNoContent(\n                    // The link between end nad the type of next is lost by TS\n                    end ? alfa_option_1.None : alfa_option_1.Some.of(next), currentLevel, nextLevel)),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.hasContent = (nextHeading, currentLevel, nextLevel) => alfa_result_1.Ok.of(diagnostic_1.WithOtherHeading.of(\"There is content between this heading and the next\", nextHeading, currentLevel, nextLevel, \"next\"));\n    Outcomes.hasNoContent = (nextHeading, currentLevel, nextLevel) => alfa_result_1.Err.of(diagnostic_1.WithOtherHeading.of(\"There is no content between this heading and the next\", nextHeading, currentLevel, nextLevel, \"next\"));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r78/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r79/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r79/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_refinement_1 = __webpack_require__(/*! @siteimprove/alfa-refinement */ \"./node_modules/@siteimprove/alfa-refinement/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_style_1 = __webpack_require__(/*! @siteimprove/alfa-style */ \"./node_modules/@siteimprove/alfa-style/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst { equals } = alfa_predicate_1.Predicate;\nconst { hasAttribute, hasName, isElement } = alfa_dom_1.Element;\nconst { and } = alfa_refinement_1.Refinement;\nconst { isRendered, isVisible } = alfa_style_1.Style;\nconst { isText } = alfa_dom_1.Text;\nconst { getElementDescendants } = alfa_dom_1.Query;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r79\",\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    evaluate({ device, document }) {\n        return {\n            applicability() {\n                return getElementDescendants(document, alfa_dom_1.Node.fullTree).filter(and(hasName(\"pre\"), isRendered(device)));\n            },\n            expectations(target) {\n                return {\n                    1: (0, expectation_1.expectation)(isVisible(device)(target), () => Outcomes.IsVisible, () => (0, expectation_1.expectation)(target\n                        .inclusiveAncestors(alfa_dom_1.Node.fullTree)\n                        .filter(isElement)\n                        .some(hasAttribute(\"aria-hidden\", equals(\"true\"))), () => Outcomes.IsHidden, () => Outcomes.IsNotVisibleAndNotHidden)),\n                    2: (0, expectation_1.expectation)(hasFigureAncestor(target) || hasOnlyAllowedText(device)(target), () => Outcomes.IsDescendant, () => Outcomes.IsNotDescendant),\n                };\n            },\n        };\n    },\n});\nfunction hasOnlyAllowedText(device) {\n    return function hasOnlyAllowedText(node) {\n        // Any text within these elements is allowed and so we can stop recursing\n        // when we encounter them.\n        if (and(isElement, hasName(\"code\", \"kbd\", \"samp\"))(node)) {\n            return true;\n        }\n        // If we encounter a visible text node that isn't within one of the previous\n        // elements then the text is not allowed.\n        if (and(isText, isVisible(device))(node)) {\n            return false;\n        }\n        // Otherwise, recursively check that the children only have allowed text.\n        return node.children(alfa_dom_1.Node.fullTree).every(hasOnlyAllowedText);\n    };\n}\nfunction hasFigureAncestor(target) {\n    return target\n        .ancestors(alfa_dom_1.Node.fullTree)\n        .filter(isElement)\n        .some(hasName(\"figure\"));\n}\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.IsVisible = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The element is visible.`));\n    Outcomes.IsHidden = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`One inclusive ancestor of the element has \"aria-hidden = true.\"`));\n    Outcomes.IsDescendant = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The target element either has a <figure> ancestor, or all its text is inside <code>, <kbd> or <samp> elements.`));\n    Outcomes.IsNotVisibleAndNotHidden = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The element is not visible and there isn't an inclusive ancestor with \"aria-hidden\" state.`));\n    Outcomes.IsNotDescendant = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The element has no <figure> ancestor and has text which not inside a <code>, <kbd> or <samp> element. `));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r79/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r8/rule.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r8/rule.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_aria_1 = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst diagnostic_1 = __webpack_require__(/*! ../common/diagnostic */ \"./node_modules/@siteimprove/alfa-rules/src/common/diagnostic.js\");\nconst { hasNonEmptyAccessibleName, hasRole, isIncludedInTheAccessibilityTree } = alfa_aria_1.DOM;\nconst { hasNamespace } = alfa_dom_1.Element;\nconst { and } = alfa_predicate_1.Predicate;\nconst { getElementDescendants } = alfa_dom_1.Query;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r8\",\n    requirements: [alfa_wcag_1.Criterion.of(\"4.1.2\")],\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    evaluate({ device, document }) {\n        return {\n            applicability() {\n                return getElementDescendants(document, alfa_dom_1.Node.fullTree).filter(and(hasNamespace(alfa_dom_1.Namespace.HTML), hasRole(device, \"checkbox\", \"combobox\", \"listbox\", \"menuitemcheckbox\", \"menuitemradio\", \"radio\", \"searchbox\", \"slider\", \"spinbutton\", \"switch\", \"textbox\"), isIncludedInTheAccessibilityTree(device)));\n            },\n            expectations(target) {\n                const role = diagnostic_1.WithRole.getRoleName(target, device);\n                return {\n                    1: (0, expectation_1.expectation)(hasNonEmptyAccessibleName(device)(target), () => Outcomes.HasName(role), () => Outcomes.HasNoName(role)),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.HasName = (role) => alfa_result_1.Ok.of(diagnostic_1.WithRole.of(`The form field has an accessible name`, role));\n    Outcomes.HasNoName = (role) => alfa_result_1.Err.of(diagnostic_1.WithRole.of(`The form field does not have an accessible name`, role));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r8/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r80/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r80/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_aria_1 = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_style_1 = __webpack_require__(/*! @siteimprove/alfa-style */ \"./node_modules/@siteimprove/alfa-style/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst { hasRole } = alfa_aria_1.DOM;\nconst { and, test } = alfa_predicate_1.Predicate;\nconst { isVisible, hasCascadedStyle } = alfa_style_1.Style;\nconst { getElementDescendants } = alfa_dom_1.Query;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r80\",\n    requirements: [alfa_wcag_1.Criterion.of(\"1.4.8\")],\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    evaluate({ device, document }) {\n        return {\n            applicability() {\n                return getElementDescendants(document, alfa_dom_1.Node.fullTree).filter(and(hasRole(device, \"paragraph\"), (element) => alfa_style_1.Style.from(element, device).cascaded(\"line-height\").isSome(), alfa_dom_1.Node.hasTextContent(), isVisible(device)));\n            },\n            expectations(target) {\n                return {\n                    1: (0, expectation_1.expectation)(test(hasRelativeUnit(device), target), () => Outcomes.HasRelativeUnit, () => Outcomes.HasAbsoluteUnit),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.HasRelativeUnit = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The line height is specified using a relative unit`));\n    Outcomes.HasAbsoluteUnit = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The line height is specified using an absolute unit`));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n/**\n * @remarks\n * We consider that calculated lengths have a relative unit (and pass the rule)\n * since we cannot easily detect it here. We should instead dig into the\n * calculation to see if relative units are used, but that could be made difficult\n * with hings like \"2em * 0\" which is **not** a relative length…\n */\nfunction hasRelativeUnit(device) {\n    return hasCascadedStyle(\"line-height\", (lineHeight) => \n    // Keyword, percentage, number\n    !alfa_css_1.Length.isLength(lineHeight) ||\n        // Calculated length\n        lineHeight.hasCalculation() ||\n        // Fixed length in relative units\n        lineHeight.isRelative(), device);\n}\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r80/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r81/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r81/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_aria_1 = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_sequence_1 = __webpack_require__(/*! @siteimprove/alfa-sequence */ \"./node_modules/@siteimprove/alfa-rules/node_modules/@siteimprove/alfa-sequence/src/index.js\");\nconst alfa_set_1 = __webpack_require__(/*! @siteimprove/alfa-set */ \"./node_modules/@siteimprove/alfa-set/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst dom = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst group_1 = __webpack_require__(/*! ../common/act/group */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/group.js\");\nconst question_1 = __webpack_require__(/*! ../common/act/question */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/question.js\");\nconst predicate_1 = __webpack_require__(/*! ../common/predicate */ \"./node_modules/@siteimprove/alfa-rules/src/common/predicate.js\");\nconst normalize_1 = __webpack_require__(/*! ../common/normalize */ \"./node_modules/@siteimprove/alfa-rules/src/common/normalize.js\");\nconst diagnostic_1 = __webpack_require__(/*! ../common/diagnostic */ \"./node_modules/@siteimprove/alfa-rules/src/common/diagnostic.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst { hasNonEmptyAccessibleName, hasRole, isIncludedInTheAccessibilityTree } = alfa_aria_1.DOM;\nconst { isElement, hasName, hasNamespace } = alfa_dom_1.Element;\nconst { and } = alfa_predicate_1.Predicate;\nconst { getElementDescendants, getElementIdMap } = alfa_dom_1.Query;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r81\",\n    requirements: [alfa_wcag_1.Criterion.of(\"2.4.4\"), alfa_wcag_1.Criterion.of(\"2.4.9\")],\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    evaluate({ device, document, response }) {\n        return {\n            applicability() {\n                // Links with identical names may appear in different contexts.\n                // This creates two separate targets and we must take care of not\n                // colliding them.\n                const map = getElementDescendants(document, dom.Node.fullTree)\n                    .filter(and(hasNamespace(alfa_dom_1.Namespace.HTML, alfa_dom_1.Namespace.SVG), hasRole(device, (role) => role.is(\"link\")), isIncludedInTheAccessibilityTree(device), hasNonEmptyAccessibleName(device)))\n                    // Group by contexts (context => group)\n                    .groupBy((element) => linkContext(element, device))\n                    // Group by names inside the contexts (context => [name => group])\n                    .map((elements) => elements.groupBy((element) => alfa_aria_1.Node.from(element, device).name.map((name) => (0, normalize_1.normalize)(name.value))));\n                // Drop the context and name keys\n                const groups = alfa_sequence_1.Sequence.from(alfa_iterable_1.Iterable.flatMap(map.values(), (map) => map.values()));\n                // Only keep the groups with more than one element\n                return groups.filter((links) => links.size > 1).map(group_1.Group.of);\n            },\n            expectations(target) {\n                const name = diagnostic_1.WithName.getName(alfa_iterable_1.Iterable.first(target).getUnsafe(), // Existence of first element is guaranteed by applicability\n                device).getUnsafe(); // Existence of accessible name is guaranteed by applicability\n                const embedSameResource = [...target].every((element, i, elements) => \n                // This is either the first element...\n                i === 0 ||\n                    // ...or an element that embeds the same resource as the element\n                    // before it.\n                    (0, predicate_1.referenceSameResource)(response.url)(element, elements[i - 1]));\n                return {\n                    1: (0, expectation_1.expectation)(embedSameResource, () => Outcomes.ResolveSameResource(name), () => question_1.Question.of(\"reference-equivalent-resources\", target, `Do the links resolve to equivalent resources?`, {\n                        diagnostic: diagnostic_1.WithName.of(`Do the links resolve to equivalent resources?`, name),\n                    }).map((embedEquivalentResources) => (0, expectation_1.expectation)(embedEquivalentResources, () => Outcomes.ResolveEquivalentResource(name), () => Outcomes.ResolveDifferentResource(name)))),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.ResolveSameResource = (name) => alfa_result_1.Ok.of(diagnostic_1.WithName.of(`The links resolve to the same resource`, name));\n    Outcomes.ResolveEquivalentResource = (name) => alfa_result_1.Ok.of(diagnostic_1.WithName.of(`The links resolve to equivalent resources`, name));\n    Outcomes.ResolveDifferentResource = (name) => alfa_result_1.Err.of(diagnostic_1.WithName.of(`The links do not resolve to the same or equivalent resources`, name));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n/**\n * @todo For links in table cells, account for the text in the associated table\n *       header cell.\n *\n * {@link https://www.w3.org/TR/WCAG/#dfn-programmatically-determined-link-context}\n */\nfunction linkContext(element, device) {\n    let context = alfa_set_1.Set.empty();\n    const ancestors = element.ancestors(dom.Node.fullTree).filter(isElement);\n    for (const listitem of ancestors.filter(hasRole(device, \"listitem\"))) {\n        context = context.add(listitem);\n    }\n    for (const paragraph of ancestors.find(hasName(\"p\"))) {\n        context = context.add(paragraph);\n    }\n    for (const cell of ancestors.find(hasRole(device, \"cell\", \"gridcell\"))) {\n        context = context.add(cell);\n    }\n    const idMap = getElementIdMap(element.root());\n    for (const describedby of element.attribute(\"aria-describedby\")) {\n        for (const reference of describedby\n            .tokens()\n            .collect((id) => idMap.get(id))) {\n            context = context.add(reference);\n        }\n    }\n    return context;\n}\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r81/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r82/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r82/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_aria_1 = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst alfa_array_1 = __webpack_require__(/*! @siteimprove/alfa-array */ \"./node_modules/@siteimprove/alfa-array/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst question_1 = __webpack_require__(/*! ../common/act/question */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/question.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst { hasRole, isPerceivableForAll } = alfa_aria_1.DOM;\nconst { hasNamespace } = alfa_dom_1.Element;\nconst { and, test } = alfa_predicate_1.Predicate;\nconst { getElementDescendants } = alfa_dom_1.Query;\n/**\n * R82 ask questions whose subject is not the target of the rule.\n * The context of the question is still the test target, but the\n * subjects can be various other elements.\n * This needs changes in Dory, Nemo, and likely databases to be stored;\n * this needs changes in the Page Report to be able to highlight an element\n * different from the test target.\n */\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r82\",\n    requirements: [alfa_wcag_1.Criterion.of(\"3.3.1\")],\n    tags: [tags_1.Scope.Component, tags_1.Stability.Experimental],\n    evaluate({ device, document }) {\n        return {\n            applicability() {\n                return getElementDescendants(document, alfa_dom_1.Node.fullTree).filter(and(hasNamespace(alfa_dom_1.Namespace.HTML), hasRole(device, \"checkbox\", \"combobox\", \"listbox\", \"menuitemcheckbox\", \"menuitemradio\", \"radio\", \"searchbox\", \"slider\", \"spinbutton\", \"switch\", \"textbox\")));\n            },\n            expectations(target) {\n                const indicators = question_1.Question.of(\"error-indicators\", target).map(alfa_array_1.Array.from);\n                return {\n                    1: indicators.map((indicators) => (0, expectation_1.expectation)(indicators.length === 0, () => Outcomes.HasNoErrorIndicator, () => identifiesTarget(target, indicators, device))),\n                    2: indicators.map((indicators) => (0, expectation_1.expectation)(indicators.length === 0, () => Outcomes.HasNoErrorIndicator, () => describesResolution(target, indicators, device))),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.HasNoErrorIndicator = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The form field has no error indicator`));\n    Outcomes.ErrorIndicatorIdentifiesTarget = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`At least one error indicator that is perceivable identifies the form field`));\n    Outcomes.ErrorIndicatorIdentifiesTargetButIsNotPerceivable = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`At least one error indicator identifies the form field, but the error\n    indicator is not perceivable`));\n    Outcomes.NoErrorIndicatorIdentifiesTarget = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`None of the error indicators identify the form field`));\n    Outcomes.ErrorIndicatorDescribesResolution = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`At least one error indicator that is perceivable describes the cause of the\n    error or how to resolve it`));\n    Outcomes.ErrorIndicatorDescribesResolutionButIsNotPerceivable = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`At least one error indicator describes the cause of the error or how to\n    resolve it, but the error indicator is not perceivable`));\n    Outcomes.NoErrorIndicatorDescribesResolution = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`None of the error indicators describe the cause of the error or how to\n    resolve it`));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\nconst identifiesTarget = (target, indicators, device) => question_1.Question.of(\"error-indicator-identifying-form-field\", indicators, target).map((indicator) => (0, expectation_1.expectation)(indicator.isNone(), () => Outcomes.NoErrorIndicatorIdentifiesTarget, () => (0, expectation_1.expectation)(\n// indicator is not None due to the first expectation\ntest(isPerceivableForAll(device), indicator.getUnsafe()), () => Outcomes.ErrorIndicatorIdentifiesTarget, () => Outcomes.ErrorIndicatorIdentifiesTargetButIsNotPerceivable)));\nconst describesResolution = (target, indicators, device) => question_1.Question.of(\"error-indicator-describing-resolution\", indicators, target).map((indicator) => (0, expectation_1.expectation)(indicator.isNone(), () => Outcomes.NoErrorIndicatorDescribesResolution, () => (0, expectation_1.expectation)(\n// indicator is not None due to the first expectation\ntest(isPerceivableForAll(device), indicator.getUnsafe()), () => Outcomes.ErrorIndicatorDescribesResolution, () => Outcomes.ErrorIndicatorDescribesResolutionButIsNotPerceivable)));\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r82/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r83/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r83/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = exports.ClippingAncestors = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_cache_1 = __webpack_require__(/*! @siteimprove/alfa-cache */ \"./node_modules/@siteimprove/alfa-cache/src/index.js\");\nconst alfa_cascade_1 = __webpack_require__(/*! @siteimprove/alfa-cascade */ \"./node_modules/@siteimprove/alfa-cascade/src/index.js\");\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_css_feature_1 = __webpack_require__(/*! @siteimprove/alfa-css-feature */ \"./node_modules/@siteimprove/alfa-css-feature/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_refinement_1 = __webpack_require__(/*! @siteimprove/alfa-refinement */ \"./node_modules/@siteimprove/alfa-refinement/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_selector_1 = __webpack_require__(/*! @siteimprove/alfa-selector */ \"./node_modules/@siteimprove/alfa-selector/src/index.js\");\nconst alfa_sequence_1 = __webpack_require__(/*! @siteimprove/alfa-sequence */ \"./node_modules/@siteimprove/alfa-rules/node_modules/@siteimprove/alfa-sequence/src/index.js\");\nconst alfa_style_1 = __webpack_require__(/*! @siteimprove/alfa-style */ \"./node_modules/@siteimprove/alfa-style/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst { isHeight, isWidth } = alfa_css_feature_1.Feature.Media.Feature;\nconst { Discrete, Range } = alfa_css_feature_1.Feature.Media.Value;\nconst { or, not, equals } = alfa_predicate_1.Predicate;\nconst { and, test } = alfa_refinement_1.Refinement;\nconst { hasAttribute, hasBox, hasDisplaySize, hasName, hasNamespace, isElement, } = alfa_dom_1.Element;\nconst { isText } = alfa_dom_1.Text;\nconst { getPositioningParent, hasCascadedStyle, isVisible } = alfa_style_1.Style;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r83\",\n    requirements: [alfa_wcag_1.Criterion.of(\"1.4.4\")],\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    evaluate({ device, document }) {\n        return {\n            applicability() {\n                return document\n                    .inclusiveDescendants(alfa_dom_1.Node.Traversal.of(alfa_dom_1.Node.Traversal.composed, alfa_dom_1.Node.Traversal.flattened))\n                    .find(and(isElement, hasName(\"body\")))\n                    .map((body) => body.children())\n                    .getOr(alfa_sequence_1.Sequence.empty())\n                    .flatMap((node) => alfa_sequence_1.Sequence.from(visit(node)));\n                function* visit(node, collect = false) {\n                    // aria-hidden content is ignored by the rule.\n                    if (test(and(isElement, or(hasAttribute(\"aria-hidden\", equals(\"true\")), not(hasNamespace(alfa_dom_1.Namespace.HTML)), and(hasName(\"select\"), hasDisplaySize(1)))), node)) {\n                        return;\n                    }\n                    // If a potentially clipping ancestor is found, start collecting.\n                    if (isElement(node) &&\n                        (overflow(node, device, \"x\") === Overflow.Clip ||\n                            overflow(node, device, \"y\") === Overflow.Clip)) {\n                        collect = true;\n                    }\n                    // If we are collecting and a visible text node is found, yield it.\n                    if (collect && test(and(isText, isVisible(device)), node)) {\n                        yield node;\n                    }\n                    // Recursively visit subtree.\n                    for (const child of node.children(alfa_dom_1.Node.fullTree)) {\n                        yield* visit(child, collect);\n                    }\n                }\n            },\n            expectations(target) {\n                const parent = target.parent(alfa_dom_1.Node.fullTree).filter(isElement);\n                const horizontallyClippedBy = parent.flatMap(horizontallyClipper(device));\n                const verticallyClippedBy = parent.flatMap(verticalClippingAncestor(device));\n                return {\n                    1: (0, expectation_1.expectation)(horizontallyClippedBy.isSome() || verticallyClippedBy.isSome(), () => \n                    // If the clipping ancestor happens to be twice as big as the text\n                    // (parent), clipping only occurs after 200% zoom, which is OK.\n                    // We do not really care where is the text inside the clipping\n                    // ancestor, and simply assume that if it's big enough it will have\n                    // room to grow. This is not always true as the text may be pushed\n                    // to the far side already and ends up being clipped anyway.\n                    // This would only create false negatives, so this is OK.\n                    // There may be another further ancestor that is actually small and\n                    // clips both the text and the found clipping ancestors. We assume\n                    // this is not likely and just ignore it. This would only create\n                    // false negatives.\n                    horizontallyClippedBy.every(hasBox((clippingBox) => target\n                        .parent()\n                        .filter(isElement)\n                        .some(hasBox((targetBox) => clippingBox.width >= 2 * targetBox.width, device)), device)) &&\n                        verticallyClippedBy.every(hasBox((clippingBox) => target\n                            .parent()\n                            .filter(isElement)\n                            .some(hasBox((targetBox) => clippingBox.height >= 2 * targetBox.height, device)), device))\n                        ? Outcomes.IsContainer(horizontallyClippedBy, verticallyClippedBy)\n                        : Outcomes.ClipsText(horizontallyClippedBy, verticallyClippedBy), () => Outcomes.WrapsText),\n                };\n            },\n        };\n    },\n});\nconst verticallyClippingCache = alfa_cache_1.Cache.empty();\n/**\n * Checks if an element clips its vertical overflow by having an ancestor with\n * both a fixed height and a clipping overflow (before any scrolling ancestor).\n *\n * Note that element with a fixed height will create an overflow anyway, and\n * that may be clipped by any other ancestor. However, there may also be several\n * elements below that can absorb the vertical overflow. So we only report\n * when the same element has fixed height and clips.\n */\nfunction verticalClippingAncestor(device) {\n    return function clippingAncestor(element) {\n        return verticallyClippingCache.get(device, alfa_cache_1.Cache.empty).get(element, () => {\n            if (hasFontRelativeValue(device, \"height\")(element)) {\n                // The element has a font-relative height or min-height and we assume\n                // it will properly grow with the font, without ever clipping it.\n                // This is not fully correct since an ancestor may still clip vertically,\n                // but there may be several elements in between to absorb the growth.\n                return alfa_option_1.None;\n            }\n            if (test(usesFontRelativeMediaRule(device, isHeight), element)) {\n                // The element uses a (font relative) media rule, and we can't guess what\n                // the page would like upon resizing and triggering a different media\n                // query, so we just accept it as good enough\n                return alfa_option_1.None;\n            }\n            if (hasFixedHeight(device)(element) &&\n                overflow(element, device, \"y\") === Overflow.Clip) {\n                return alfa_option_1.Option.of(element);\n            }\n            if (overflow(element, device, \"y\") === Overflow.Handle) {\n                return alfa_option_1.None;\n            }\n            return getPositioningParent(element, device).flatMap(clippingAncestor);\n        });\n    };\n}\n/**\n * Checks if an element ultimately clips its horizontal overflow:\n * * all elements are assumed to have fixed width because the page cannot extend\n *   infinitely in the horizontal dimension;\n * * first we look at the element itself and how it handles the text overflow of\n *   its children text nodes;\n * * if text overflows its parent, it does so as content, so we look for an\n *   ancestor that either handles it (scroll bar) or clips it.\n */\nfunction horizontallyClipper(device) {\n    return (element) => {\n        if (hasFontRelativeValue(device, \"width\")(element)) {\n            // The element grows with its text.\n            return alfa_option_1.None;\n        }\n        if (test(usesFontRelativeMediaRule(device, isWidth), element)) {\n            // The element uses a (font relative) media rule, and we can't guess what\n            // the page would like upon resizing and triggering a different media\n            // query, so we just accept it as good enough\n            return alfa_option_1.None;\n        }\n        switch (horizontalTextOverflow(element, device)) {\n            case Overflow.Clip:\n                return alfa_option_1.Option.of(element);\n            case Overflow.Handle:\n                return alfa_option_1.None;\n            case Overflow.Overflow:\n                return getPositioningParent(element, device).flatMap(horizontallyClippingAncestor(device));\n        }\n    };\n}\nconst horizontallyClippingCache = alfa_cache_1.Cache.empty();\n/**\n * Checks whether the first offset ancestor that doesn't overflow is\n * clipping.\n *\n * When encountering an ancestor which is a wrapping flex container, we assume\n * that this ancestor is correctly wrapping all its children and that no\n * individual child overflows enough to overflow the parent (when alone on a\n * line). This is not fully correct (since an individual child might overflow\n * enough that it would overflow the flex-wrapping ancestor even if alone on a\n * line); but this seems to be a frequent use case.\n */\nfunction horizontallyClippingAncestor(device) {\n    return function clippingAncestor(element) {\n        return horizontallyClippingCache\n            .get(device, alfa_cache_1.Cache.empty)\n            .get(element, () => {\n            if (hasFontRelativeValue(device, \"width\")(element)) {\n                // The element grows with its content.\n                // The content might still be clipped by an ancestor, but we\n                // assume this denotes a small component inside a large container\n                // with enough room for the component to grow to 200% or more\n                // before being clipped.\n                return alfa_option_1.None;\n            }\n            if (test(usesFontRelativeMediaRule(device, isWidth), element)) {\n                // The element uses a (font relative) media rule, and we can't guess what\n                // the page would like upon resizing and triggering a different media\n                // query, so we just accept it as good enough\n                return alfa_option_1.None;\n            }\n            if (isWrappingFlexContainer(device)(element)) {\n                // The element handles overflow by wrapping its flex descendants\n                return alfa_option_1.None;\n            }\n            switch (overflow(element, device, \"x\")) {\n                case Overflow.Clip:\n                    return alfa_option_1.Option.of(element);\n                case Overflow.Handle:\n                    return alfa_option_1.None;\n                case Overflow.Overflow:\n                    return getPositioningParent(element, device).flatMap(clippingAncestor);\n            }\n        });\n    };\n}\nvar Overflow;\n(function (Overflow) {\n    Overflow[Overflow[\"Clip\"] = 0] = \"Clip\";\n    Overflow[Overflow[\"Handle\"] = 1] = \"Handle\";\n    Overflow[Overflow[\"Overflow\"] = 2] = \"Overflow\";\n})(Overflow || (Overflow = {}));\nfunction overflow(element, device, dimension) {\n    switch (alfa_style_1.Style.from(element, device).computed(`overflow-${dimension}`).value.value) {\n        case \"clip\":\n        case \"hidden\":\n            return Overflow.Clip;\n        case \"scroll\":\n        case \"auto\":\n            return Overflow.Handle;\n        case \"visible\":\n            return Overflow.Overflow;\n    }\n}\n/**\n * Checks how an element handle its text overflow (overflow of its children\n * text nodes).\n */\nfunction horizontalTextOverflow(element, device) {\n    const style = alfa_style_1.Style.from(element, device);\n    const { value: whitespace } = style.computed(\"white-space\");\n    if (whitespace.value !== \"nowrap\" && whitespace.value !== \"pre\") {\n        // Whitespace causes wrapping, the element doesn't overflow its text.\n        return Overflow.Handle;\n    }\n    // If whitespace does not cause wrapping, we need to check if a text\n    // overflow occurs and could cause the text to clip.\n    switch (overflow(element, device, \"x\")) {\n        case Overflow.Overflow:\n            // The text always overflow into the parent, parent needs to handle an\n            // horizontal content overflow\n            return Overflow.Overflow;\n        case Overflow.Handle:\n            // The element handles its text overflow with a scroll bar\n            return Overflow.Handle;\n        case Overflow.Clip:\n            // The element clip its overflow, but maybe `text-overflow` handles it.\n            const { value: overflow } = style.computed(\"text-overflow\");\n            // We assume that anything other than `clip` handles the overflow.\n            return overflow.value === \"clip\" ? Overflow.Clip : Overflow.Handle;\n    }\n}\n/**\n * Checks if an element has fixed (not font relative) height.\n *\n * @remarks\n * We use the cascaded value to avoid lengths being resolved to pixels.\n * Otherwise, we won't be able to tell if a font relative length was\n * used.\n *\n * @remarks\n * Calculated values cannot be resolved at cascade time. So we just accept them\n * (consider they are font relative) to avoid more false positives.\n *\n * @remarks\n * For heights set via the `style` attribute (the style has no parent),\n * we assume that its value is controlled by JavaScript and is adjusted\n * as the content scales.\n *\n */\nfunction hasFixedHeight(device) {\n    return hasCascadedStyle(\"height\", (height, source) => alfa_css_1.Length.isLength(height) &&\n        !height.hasCalculation() &&\n        height.value > 0 &&\n        !height.isFontRelative() &&\n        source.some((declaration) => declaration.parent.isSome()), device);\n}\n/**\n * Checks if a style property has font relative or calculated value.\n *\n * @remarks\n * We use the cascaded value to avoid lengths being resolved to pixels.\n * Otherwise, we won't be able to tell if a font relative length was\n * used.\n *\n * @remarks\n * Calculated values cannot be resolved at cascad time. So we just accept them\n * (consider they are font relative) to avoid more false positives.\n */\nfunction hasFontRelativeValue(device, property) {\n    return or(hasCascadedStyle(property, (value) => alfa_css_1.Length.isLength(value) &&\n        (value.hasCalculation() || (value.value > 0 && value.isFontRelative())), device), hasCascadedStyle(`min-${property}`, (value) => alfa_css_1.Length.isLength(value) &&\n        (value.hasCalculation() || (value.value > 0 && value.isFontRelative())), device));\n}\nfunction isWrappingFlexContainer(device) {\n    return (element) => {\n        const style = alfa_style_1.Style.from(element, device);\n        const { value: { values: display }, } = style.computed(\"display\");\n        if (display[1]?.value === \"flex\") {\n            // The element is a flex container\n            const { value: flexWrap } = style.computed(\"flex-wrap\");\n            return flexWrap.value !== \"nowrap\";\n        }\n        return false;\n    };\n}\n/*\n * We accept any property depending on a media query as handling the overflow,\n * not just the concerned properties (height, width, …) This is because the mere\n * presence of a media query suggests that there is an opposing one and we do\n * not know whether it changes the concerned properties or not. This only risks\n * creating false negatives.\n *\n * We only look at discrete media queries and minimum bound of ranges. Maximum\n * bounds will not trigger when text size increase, so they cannot control\n * overflow.\n */\nconst mediaRulesCache = alfa_cache_1.Cache.empty();\nfunction ancestorMediaRules(rule) {\n    return mediaRulesCache.get(rule, () => {\n        const mediaRules = rule.parent\n            .map((parent) => ancestorMediaRules(parent))\n            .getOrElse(alfa_sequence_1.Sequence.empty);\n        return alfa_dom_1.MediaRule.isMediaRule(rule) ? mediaRules.prepend(rule) : mediaRules;\n    });\n}\nconst ruleTreeCache = alfa_cache_1.Cache.empty();\nfunction ancestorsInRuleTree(rule) {\n    return ruleTreeCache.get(rule, () => alfa_sequence_1.Sequence.from(rule.inclusiveAncestors()));\n}\nfunction getUsedMediaRules(element, device, context = alfa_selector_1.Context.empty()) {\n    const root = element.root();\n    if (!alfa_dom_1.Document.isDocument(root)) {\n        return alfa_sequence_1.Sequence.empty();\n    }\n    // Get all nodes (style rules) in the RuleTree that affect the element;\n    // for each of these rules, get all ancestor media rules in the CSS tree.\n    return ancestorsInRuleTree(alfa_cascade_1.Cascade.from(root, device).get(element, context)).flatMap((node) => ancestorMediaRules(node.block.rule));\n}\nfunction usesMediaRule(predicate = () => true, device, context = alfa_selector_1.Context.empty()) {\n    return (element) => getUsedMediaRules(element, device, context).some(predicate);\n}\n/**\n * Checks whether at least one feature in one of the queries of the media rule\n * is a font-relative one. Only checks feature matching the refinement.\n *\n * @remarks\n * We currently do not support calculated media queries. But this is lost in the\n * typing of Media.Feature. Here, we simply consider them as \"good\" (font relative).\n */\nfunction isFontRelativeMediaRule(refinement) {\n    return (rule) => alfa_iterable_1.Iterable.some(rule.queries.queries, (query) => query.condition.some((condition) => alfa_iterable_1.Iterable.some(condition, (feature) => refinement(feature) &&\n        feature.value.some((value) => Range.isRange(value)\n            ? value.minimum.some((min) => alfa_css_1.Length.isLength(min.value) &&\n                (min.value.hasCalculation() ||\n                    min.value.isFontRelative()))\n            : Discrete.isDiscrete(value) &&\n                (value.value.hasCalculation() ||\n                    value.value.isFontRelative())))));\n}\nfunction usesFontRelativeMediaRule(device, refinement, context = alfa_selector_1.Context.empty()) {\n    return usesMediaRule(isFontRelativeMediaRule(refinement), device, context);\n}\n/**\n * @public\n */\nclass ClippingAncestors extends alfa_act_1.Diagnostic {\n    static of(message, horizontal = alfa_option_1.None, vertical = alfa_option_1.None) {\n        return new ClippingAncestors(message, horizontal, vertical);\n    }\n    constructor(message, horizontal, vertical) {\n        super(message);\n        this._horizontal = horizontal;\n        this._vertical = vertical;\n    }\n    get horizontal() {\n        return this._horizontal;\n    }\n    get vertical() {\n        return this._vertical;\n    }\n    equals(value) {\n        return (super.equals(value) &&\n            value instanceof ClippingAncestors &&\n            value._horizontal.equals(this._horizontal) &&\n            value._vertical.equals(this._vertical));\n    }\n    hash(hash) {\n        super.hash(hash);\n        this._vertical.hash(hash);\n        this._horizontal.hash(hash);\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            horizontal: this._horizontal.toJSON(),\n            vertical: this._vertical.toJSON(),\n        };\n    }\n}\nexports.ClippingAncestors = ClippingAncestors;\n/**\n * @public\n */\n(function (ClippingAncestors) {\n    /**@public */\n    function isClippingAncestors(value) {\n        return value instanceof ClippingAncestors;\n    }\n    ClippingAncestors.isClippingAncestors = isClippingAncestors;\n})(ClippingAncestors || (exports.ClippingAncestors = ClippingAncestors = {}));\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.WrapsText = alfa_result_1.Ok.of(ClippingAncestors.of(`The text is wrapped without being clipped`));\n    Outcomes.ClipsText = (horizontal, vertical) => alfa_result_1.Err.of(ClippingAncestors.of(`The text is clipped`, horizontal, vertical));\n    Outcomes.IsContainer = (horizontal, vertical) => alfa_result_1.Ok.of(ClippingAncestors.of(\"The text would be clipped but the clipper is more than twice as large\", horizontal, vertical));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r83/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r84/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r84/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_refinement_1 = __webpack_require__(/*! @siteimprove/alfa-refinement */ \"./node_modules/@siteimprove/alfa-refinement/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_style_1 = __webpack_require__(/*! @siteimprove/alfa-style */ \"./node_modules/@siteimprove/alfa-style/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst { hasNamespace, isBrowsingContextContainer, isElement } = alfa_dom_1.Element;\nconst { not } = alfa_predicate_1.Predicate;\nconst { and } = alfa_refinement_1.Refinement;\nconst { isTabbable, isVisible } = alfa_style_1.Style;\nconst { getElementDescendants } = alfa_dom_1.Query;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r84\",\n    requirements: [\n        alfa_wcag_1.Criterion.of(\"2.1.1\"),\n        alfa_wcag_1.Criterion.of(\"2.1.3\"),\n        alfa_wcag_1.Technique.of(\"G202\"),\n    ],\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    evaluate({ device, document }) {\n        return {\n            applicability() {\n                return getElementDescendants(document, alfa_dom_1.Node.fullTree).filter(and(hasNamespace(alfa_dom_1.Namespace.HTML), isVisible(device), isPossiblyScrollable(device), not(isBrowsingContextContainer)));\n            },\n            expectations(target) {\n                return {\n                    1: (0, expectation_1.expectation)(alfa_dom_1.Node.hasInclusiveDescendant(and(isElement, isTabbable(device)), alfa_dom_1.Node.flatTree)(target), () => Outcomes.IsReachable, () => Outcomes.IsNotReachable),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.IsReachable = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The scrollable element is reachable through keyboard navigation`));\n    Outcomes.IsNotReachable = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The scrollable element is not reachable through keyboard navigation`));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n/**\n * Determine if an element is possibly scrollable. This is determined by the\n * following factors:\n *\n * - A computed `width` or `height` that is not `auto`; and\n * - A corresponding computed `overflow-x` or `overflow-y`, respectively, that\n *   is `auto` or `scroll`.\n */\nfunction isPossiblyScrollable(device) {\n    const properties = [\n        [\"x\", \"width\"],\n        [\"y\", \"height\"],\n    ];\n    return (element) => {\n        const style = alfa_style_1.Style.from(element, device);\n        return properties.some(([axis, dimension]) => style\n            .computed(dimension)\n            .some((dimension) => dimension.hasCalculation() || dimension.value !== \"auto\") &&\n            style.computed(`overflow-${axis}`).some((overflow) => {\n                switch (overflow.value) {\n                    case \"auto\":\n                    case \"scroll\":\n                        // For the x-axis, the content is likely only scrollable if\n                        // `white-space: nowrap` is used. Otherwise, the content is likely\n                        // to instead break along the y-axis.\n                        if (axis === \"x\") {\n                            return style\n                                .computed(\"white-space\")\n                                .some((whitespace) => whitespace.value === \"nowrap\");\n                        }\n                        return true;\n                    default:\n                        return false;\n                }\n            }));\n    };\n}\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r84/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r85/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r85/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_aria_1 = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_style_1 = __webpack_require__(/*! @siteimprove/alfa-style */ \"./node_modules/@siteimprove/alfa-style/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst { hasRole } = alfa_aria_1.DOM;\nconst { and, test } = alfa_predicate_1.Predicate;\nconst { isVisible, hasComputedStyle } = alfa_style_1.Style;\nconst { getElementDescendants } = alfa_dom_1.Query;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r85\",\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    evaluate({ device, document }) {\n        return {\n            applicability() {\n                return getElementDescendants(document, alfa_dom_1.Node.fullTree).filter(and(hasRole(device, \"paragraph\"), isVisible(device)));\n            },\n            expectations(target) {\n                return {\n                    1: (0, expectation_1.expectation)(test(isNotItalic(device), target), () => Outcomes.IsNotItalic, () => Outcomes.IsItalic),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.IsNotItalic = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The text of the paragraph is not all italic`));\n    Outcomes.IsItalic = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The text of the paragraph is all italic`));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\nfunction isNotItalic(device) {\n    return hasComputedStyle(\"font-style\", (style) => style.value !== \"italic\", device);\n}\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r85/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r86/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r86/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_aria_1 = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst { isIncludedInTheAccessibilityTree, isMarkedDecorative } = alfa_aria_1.DOM;\nconst { getElementDescendants } = alfa_dom_1.Query;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r86\",\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    evaluate({ device, document }) {\n        return {\n            applicability() {\n                return getElementDescendants(document, alfa_dom_1.Node.fullTree).filter(isMarkedDecorative);\n            },\n            expectations(target) {\n                return {\n                    1: (0, expectation_1.expectation)(isIncludedInTheAccessibilityTree(device)(target), () => Outcomes.IsExposed, () => Outcomes.IsNotExposed),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.IsNotExposed = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The element is marked as decorative and is not exposed`));\n    Outcomes.IsExposed = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The element is marked as decorative but is exposed`));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r86/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r87/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r87/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_aria_1 = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_refinement_1 = __webpack_require__(/*! @siteimprove/alfa-refinement */ \"./node_modules/@siteimprove/alfa-refinement/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_selector_1 = __webpack_require__(/*! @siteimprove/alfa-selector */ \"./node_modules/@siteimprove/alfa-selector/src/index.js\");\nconst alfa_style_1 = __webpack_require__(/*! @siteimprove/alfa-style */ \"./node_modules/@siteimprove/alfa-style/src/index.js\");\nconst alfa_url_1 = __webpack_require__(/*! @siteimprove/alfa-url */ \"./node_modules/@siteimprove/alfa-url/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst predicate_1 = __webpack_require__(/*! ../common/predicate */ \"./node_modules/@siteimprove/alfa-rules/src/common/predicate.js\");\nconst question_1 = __webpack_require__(/*! ../common/act/question */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/question.js\");\nconst with_document_element_1 = __webpack_require__(/*! ../common/applicability/with-document-element */ \"./node_modules/@siteimprove/alfa-rules/src/common/applicability/with-document-element.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst { hasRole, isIgnored } = alfa_aria_1.DOM;\nconst { hasName, isElement } = alfa_dom_1.Element;\nconst { and } = alfa_refinement_1.Refinement;\nconst { isTabbable, isVisible } = alfa_style_1.Style;\nconst { getElementDescendants } = alfa_dom_1.Query;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r87\",\n    requirements: [alfa_wcag_1.Technique.of(\"G1\")],\n    tags: [tags_1.Scope.Page, tags_1.Stability.Stable],\n    evaluate({ device, document, response }) {\n        return {\n            applicability() {\n                return (0, with_document_element_1.withDocumentElement)(document);\n            },\n            expectations(target) {\n                const firstTabbable = target.tabOrder().find(isTabbable(device));\n                if (!firstTabbable.isSome()) {\n                    return { 1: Outcomes.HasNoTabbable };\n                }\n                const element = firstTabbable.get();\n                const url = hasName(\"a\", \"area\")(element)\n                    ? element\n                        .attribute(\"href\")\n                        .flatMap((attribute) => alfa_url_1.URL.parse(attribute.value, response.url).ok())\n                    : alfa_option_1.None;\n                const reference = url\n                    .filter(isInternalURL(response.url))\n                    .flatMap((url) => url.fragment.flatMap((fragment) => getElementDescendants(element.root()).find((element) => element.id.includes(fragment))));\n                // there can be more than one element with a role of main, going to any of these is OK.\n                const mains = document\n                    .inclusiveDescendants(alfa_dom_1.Node.flatTree)\n                    .filter(and(isElement, hasRole(device, \"main\")));\n                const askIsMain = question_1.Question.of(\"first-tabbable-reference-is-main\", target);\n                const askIsInternalLink = question_1.Question.of(\"first-tabbable-is-internal-link\", target);\n                const askReference = question_1.Question.of(\"first-tabbable-reference\", target);\n                const isAtTheStartOfMain = (reference) => (0, expectation_1.expectation)(mains.some((main) => reference.some((0, predicate_1.isAtTheStart)(main, device))), () => Outcomes.FirstTabbableIsLinkToContent, () => askIsMain.map((isMain) => (0, expectation_1.expectation)(isMain, () => Outcomes.FirstTabbableIsLinkToContent, () => Outcomes.FirstTabbableIsNotLinkToContent)));\n                const isSkipLink = () => reference.isSome()\n                    ? isAtTheStartOfMain(reference)\n                    : askIsInternalLink.map((isInternalLink) => (0, expectation_1.expectation)(isInternalLink, () => askReference.map(isAtTheStartOfMain), () => Outcomes.FirstTabbableIsNotInternalLink));\n                // No need to check if element is tabbable because this was\n                // already checked at the very start of expectation.\n                const askIsVisible = () => question_1.Question.of(\"first-tabbable-is-visible\", target)\n                    .answerIf(isVisible(device, alfa_selector_1.Context.focus(element))(element), true)\n                    .map((isVisible) => (0, expectation_1.expectation)(isVisible, isSkipLink, () => Outcomes.FirstTabbableIsNotVisible));\n                return {\n                    1: (0, expectation_1.expectation)(isIgnored(device)(element), () => Outcomes.FirstTabbableIsIgnored, () => (0, expectation_1.expectation)(hasRole(device, (role) => role.is(\"link\"))(element), askIsVisible, () => Outcomes.FirstTabbableIsNotLink)),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.HasNoTabbable = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The document has no tabbable descendants`));\n    Outcomes.FirstTabbableIsNotLink = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The first tabbable element in the document is not a semantic link`));\n    Outcomes.FirstTabbableIsNotInternalLink = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The first tabbable element in the document is not an internal link`));\n    Outcomes.FirstTabbableIsIgnored = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The first tabbable element in the document is not included in the\n      accessibility tree`));\n    Outcomes.FirstTabbableIsNotVisible = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The first tabbable element in the document is not visible when on focus`));\n    Outcomes.FirstTabbableIsLinkToContent = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The first tabbable element in the document is a keyboard actionable link\n      that is included in the accessibility tree and links to the main block of\n      content of the document`));\n    Outcomes.FirstTabbableIsNotLinkToContent = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The first tabbable element in the document is a keyboard actionable link\n      that is included in the accessibility tree, but does not link to the main\n      block of content of the document`));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\nfunction isInternalURL(base) {\n    return (url) => url.fragment.isSome() &&\n        url.withoutFragment().equals(base.withoutFragment());\n}\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r87/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r9/rule.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r9/rule.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst get_refresh_time_1 = __webpack_require__(/*! ../common/expectation/get-refresh-time */ \"./node_modules/@siteimprove/alfa-rules/src/common/expectation/get-refresh-time.js\");\nconst refresh_delay_1 = __webpack_require__(/*! ../common/outcome/refresh-delay */ \"./node_modules/@siteimprove/alfa-rules/src/common/outcome/refresh-delay.js\");\nconst { hasAttribute, hasName, hasNamespace } = alfa_dom_1.Element;\nconst { and } = alfa_predicate_1.Predicate;\nconst { getElementDescendants } = alfa_dom_1.Query;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r9\",\n    requirements: [\n        alfa_wcag_1.Criterion.of(\"2.2.1\"),\n        alfa_wcag_1.Criterion.of(\"2.2.4\"),\n        alfa_wcag_1.Criterion.of(\"3.2.5\"),\n        alfa_wcag_1.Technique.of(\"G110\"),\n        alfa_wcag_1.Technique.of(\"H76\"),\n    ],\n    tags: [tags_1.Scope.Page, tags_1.Stability.Stable],\n    evaluate({ document }) {\n        // since we take the first one with a valid content attribute, we only need to store one value\n        let refreshTime;\n        return {\n            applicability() {\n                return getElementDescendants(document)\n                    .find(and(hasNamespace(alfa_dom_1.Namespace.HTML), hasName(\"meta\"), hasAttribute(\"http-equiv\", (value) => value.toLowerCase() === \"refresh\"), hasAttribute(\"content\", (value) => (0, get_refresh_time_1.getRefreshTime)(value)\n                    .map((time) => (refreshTime = time))\n                    .isSome())))\n                    .map((meta) => [meta])\n                    .getOr([]);\n            },\n            expectations(target) {\n                return {\n                    1: (0, expectation_1.expectation)(refreshTime === 0, () => refresh_delay_1.RefreshDelay.HasImmediateRefresh, () => (0, expectation_1.expectation)(refreshTime > 72000, // 20 hours = 20*60*60 seconds\n                    () => refresh_delay_1.RefreshDelay.HasTwentyHoursDelayedRefresh, () => refresh_delay_1.RefreshDelay.HasDelayedRefresh)),\n                };\n            },\n        };\n    },\n});\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r9/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r90/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r90/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_aria_1 = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_refinement_1 = __webpack_require__(/*! @siteimprove/alfa-refinement */ \"./node_modules/@siteimprove/alfa-refinement/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_style_1 = __webpack_require__(/*! @siteimprove/alfa-style */ \"./node_modules/@siteimprove/alfa-style/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst with_bad_elements_1 = __webpack_require__(/*! ../common/diagnostic/with-bad-elements */ \"./node_modules/@siteimprove/alfa-rules/src/common/diagnostic/with-bad-elements.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst { hasRole } = alfa_aria_1.DOM;\nconst { isElement, hasNamespace } = alfa_dom_1.Element;\nconst { and } = alfa_refinement_1.Refinement;\nconst { isTabbable } = alfa_style_1.Style;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r90\",\n    requirements: [alfa_wcag_1.Criterion.of(\"4.1.2\")],\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    evaluate({ device, document }) {\n        return {\n            applicability() {\n                return document.descendants(alfa_dom_1.Node.fullTree).filter(and(isElement, and(hasNamespace(alfa_dom_1.Namespace.HTML, alfa_dom_1.Namespace.SVG), hasRole(device, (role) => role.hasPresentationalChildren()))));\n            },\n            expectations(target) {\n                const tabbables = target\n                    .descendants(alfa_dom_1.Node.flatTree)\n                    .filter(and(isElement, isTabbable(device)));\n                return {\n                    1: (0, expectation_1.expectation)(tabbables.isEmpty(), () => Outcomes.HasNoTabbableDescendants, () => Outcomes.HasTabbableDescendants(tabbables)),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.HasNoTabbableDescendants = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The element has no tabbable descendants`));\n    Outcomes.HasTabbableDescendants = (errors) => alfa_result_1.Err.of(with_bad_elements_1.WithBadElements.of(`The element has tabbable descendants`, errors));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r90/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r91/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r91/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst text_with_inlined_important_property_1 = __webpack_require__(/*! ../common/applicability/text-with-inlined-important-property */ \"./node_modules/@siteimprove/alfa-rules/src/common/applicability/text-with-inlined-important-property.js\");\nconst is_wide_enough_1 = __webpack_require__(/*! ../common/expectation/is-wide-enough */ \"./node_modules/@siteimprove/alfa-rules/src/common/expectation/is-wide-enough.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst property = \"letter-spacing\";\nconst threshold = 0.12;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r91\",\n    requirements: [alfa_wcag_1.Criterion.of(\"1.4.12\")],\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable, tags_1.Version.of(2)],\n    evaluate({ device, document }) {\n        return {\n            applicability() {\n                return (0, text_with_inlined_important_property_1.textWithInlinedImportantProperty)(document, device, property);\n            },\n            expectations(target) {\n                return (0, is_wide_enough_1.isWideEnough)(target, device, property, threshold);\n            },\n        };\n    },\n});\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r91/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r92/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r92/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst text_with_inlined_important_property_1 = __webpack_require__(/*! ../common/applicability/text-with-inlined-important-property */ \"./node_modules/@siteimprove/alfa-rules/src/common/applicability/text-with-inlined-important-property.js\");\nconst is_wide_enough_1 = __webpack_require__(/*! ../common/expectation/is-wide-enough */ \"./node_modules/@siteimprove/alfa-rules/src/common/expectation/is-wide-enough.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst property = \"word-spacing\";\nconst threshold = 0.16;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r92\",\n    requirements: [alfa_wcag_1.Criterion.of(\"1.4.12\")],\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable, tags_1.Version.of(2)],\n    evaluate({ device, document }) {\n        return {\n            applicability() {\n                return (0, text_with_inlined_important_property_1.textWithInlinedImportantProperty)(document, device, property);\n            },\n            expectations(target) {\n                return (0, is_wide_enough_1.isWideEnough)(target, device, property, threshold);\n            },\n        };\n    },\n});\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r92/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r93/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r93/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst text_with_inlined_important_property_1 = __webpack_require__(/*! ../common/applicability/text-with-inlined-important-property */ \"./node_modules/@siteimprove/alfa-rules/src/common/applicability/text-with-inlined-important-property.js\");\nconst is_wide_enough_1 = __webpack_require__(/*! ../common/expectation/is-wide-enough */ \"./node_modules/@siteimprove/alfa-rules/src/common/expectation/is-wide-enough.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst property = \"line-height\";\nconst threshold = 1.5;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r93\",\n    requirements: [alfa_wcag_1.Criterion.of(\"1.4.12\")],\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable, tags_1.Version.of(2)],\n    evaluate({ device, document }) {\n        return {\n            applicability() {\n                return (0, text_with_inlined_important_property_1.textWithInlinedImportantProperty)(document, device, property);\n            },\n            expectations(target) {\n                return (0, is_wide_enough_1.isWideEnough)(target, device, property, threshold);\n            },\n        };\n    },\n});\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r93/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r94/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r94/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_aria_1 = __webpack_require__(/*! @siteimprove/alfa-aria */ \"./node_modules/@siteimprove/alfa-aria/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst { hasNonEmptyAccessibleName, hasRole, isIncludedInTheAccessibilityTree } = alfa_aria_1.DOM;\nconst { hasNamespace } = alfa_dom_1.Element;\nconst { and } = alfa_predicate_1.Predicate;\nconst { getElementDescendants } = alfa_dom_1.Query;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r94\",\n    requirements: [alfa_wcag_1.Criterion.of(\"4.1.2\")],\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable],\n    evaluate({ device, document }) {\n        return {\n            applicability() {\n                return getElementDescendants(document, alfa_dom_1.Node.fullTree).filter(and(hasNamespace(alfa_dom_1.Namespace.HTML), hasRole(device, \"menuitem\"), isIncludedInTheAccessibilityTree(device)));\n            },\n            expectations(target) {\n                return {\n                    1: (0, expectation_1.expectation)(hasNonEmptyAccessibleName(device)(target), () => Outcomes.HasName, () => Outcomes.HasNoName),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.HasName = alfa_result_1.Ok.of(alfa_act_1.Diagnostic.of(`The menuitem has an accessible name`));\n    Outcomes.HasNoName = alfa_result_1.Err.of(alfa_act_1.Diagnostic.of(`The menuitem does not have an accessible name`));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r94/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r95/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r95/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Outcomes = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_map_1 = __webpack_require__(/*! @siteimprove/alfa-map */ \"./node_modules/@siteimprove/alfa-map/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst sequence_1 = __webpack_require__(/*! @siteimprove/alfa-sequence/src/sequence */ \"./node_modules/@siteimprove/alfa-rules/node_modules/@siteimprove/alfa-sequence/src/sequence.js\");\nconst alfa_style_1 = __webpack_require__(/*! @siteimprove/alfa-style */ \"./node_modules/@siteimprove/alfa-style/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst with_bad_elements_1 = __webpack_require__(/*! ../common/diagnostic/with-bad-elements */ \"./node_modules/@siteimprove/alfa-rules/src/common/diagnostic/with-bad-elements.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst { hasName, hasNamespace, hasTabIndex } = alfa_dom_1.Element;\nconst { and, test } = alfa_predicate_1.Predicate;\nconst { isTabbable, isVisible } = alfa_style_1.Style;\nconst { getElementDescendants } = alfa_dom_1.Query;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r95\",\n    requirements: [\n        alfa_wcag_1.Criterion.of(\"2.1.1\"),\n        // The 2.1.3 secondary mapping is missing in ACT rules\n        // https://github.com/act-rules/act-rules.github.io/issues/2026\n        // Commenting it out as it would otherwise invalidate our implementation\n        // in the reports.\n        // Criterion.of(\"2.1.3\"),\n    ],\n    tags: [tags_1.Scope.Component, tags_1.Stability.Stable, tags_1.Version.of(2)],\n    evaluate({ device, document }) {\n        let tabbables = alfa_map_1.Map.empty();\n        return {\n            applicability() {\n                return getElementDescendants(document, alfa_dom_1.Node.fullTree)\n                    .filter(and(hasNamespace(alfa_dom_1.Namespace.HTML), hasName(\"iframe\")))\n                    .filter((iframe) => iframe.content\n                    .map((contentDocument) => getElementDescendants(contentDocument, alfa_dom_1.Node.flatTree).filter(and(isVisible(device), isTabbable(device))))\n                    .some((sequence) => {\n                    tabbables = tabbables.set(iframe, sequence);\n                    return !sequence.isEmpty();\n                }));\n            },\n            expectations(target) {\n                return {\n                    1: (0, expectation_1.expectation)(test(hasTabIndex((tabindex) => tabindex >= 0), target), () => Outcomes.IsTabbable(tabbables.get(target).getOr(sequence_1.Sequence.empty())), () => Outcomes.IsNotTabbable(tabbables.get(target).getOr(sequence_1.Sequence.empty()))),\n                };\n            },\n        };\n    },\n});\n/**\n * @public\n */\nvar Outcomes;\n(function (Outcomes) {\n    Outcomes.IsTabbable = (tabbables) => alfa_result_1.Ok.of(with_bad_elements_1.WithBadElements.of(`The iframe has no negative tabindex`, tabbables));\n    Outcomes.IsNotTabbable = (tabbables) => alfa_result_1.Err.of(with_bad_elements_1.WithBadElements.of(`The iframe has a negative tabindex`, tabbables));\n})(Outcomes || (exports.Outcomes = Outcomes = {}));\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r95/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/sia-r96/rule.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/sia-r96/rule.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_wcag_1 = __webpack_require__(/*! @siteimprove/alfa-wcag */ \"./node_modules/@siteimprove/alfa-wcag/src/index.js\");\nconst expectation_1 = __webpack_require__(/*! ../common/act/expectation */ \"./node_modules/@siteimprove/alfa-rules/src/common/act/expectation.js\");\nconst get_refresh_time_1 = __webpack_require__(/*! ../common/expectation/get-refresh-time */ \"./node_modules/@siteimprove/alfa-rules/src/common/expectation/get-refresh-time.js\");\nconst refresh_delay_1 = __webpack_require__(/*! ../common/outcome/refresh-delay */ \"./node_modules/@siteimprove/alfa-rules/src/common/outcome/refresh-delay.js\");\nconst tags_1 = __webpack_require__(/*! ../tags */ \"./node_modules/@siteimprove/alfa-rules/src/tags/index.js\");\nconst { hasAttribute, hasName, hasNamespace } = alfa_dom_1.Element;\nconst { and } = alfa_predicate_1.Predicate;\nconst { getElementDescendants } = alfa_dom_1.Query;\nexports[\"default\"] = alfa_act_1.Rule.Atomic.of({\n    uri: \"https://alfa.siteimprove.com/rules/sia-r96\",\n    requirements: [\n        alfa_wcag_1.Criterion.of(\"2.2.4\"),\n        alfa_wcag_1.Criterion.of(\"3.2.5\"),\n        alfa_wcag_1.Technique.of(\"G110\"),\n        alfa_wcag_1.Technique.of(\"H76\"),\n    ],\n    tags: [tags_1.Scope.Page, tags_1.Stability.Stable],\n    evaluate({ document }) {\n        // since we take the first one with a valid content attribute, we only need to store one value\n        let refreshTime;\n        return {\n            applicability() {\n                return getElementDescendants(document)\n                    .find(and(hasNamespace(alfa_dom_1.Namespace.HTML), hasName(\"meta\"), hasAttribute(\"http-equiv\", (value) => value.toLowerCase() === \"refresh\"), hasAttribute(\"content\", (value) => (0, get_refresh_time_1.getRefreshTime)(value)\n                    .map((time) => (refreshTime = time))\n                    .isSome())))\n                    .map((meta) => [meta])\n                    .getOr([]);\n            },\n            expectations(target) {\n                return {\n                    1: (0, expectation_1.expectation)(refreshTime === 0, () => refresh_delay_1.RefreshDelay.HasImmediateRefresh, () => refresh_delay_1.RefreshDelay.HasDelayedRefresh),\n                };\n            },\n        };\n    },\n});\n//# sourceMappingURL=rule.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/sia-r96/rule.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/tags/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/tags/index.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Version = exports.Stability = exports.Scope = void 0;\nvar scope_1 = __webpack_require__(/*! ./scope */ \"./node_modules/@siteimprove/alfa-rules/src/tags/scope.js\");\nObject.defineProperty(exports, \"Scope\", ({ enumerable: true, get: function () { return scope_1.Scope; } }));\nvar stability_1 = __webpack_require__(/*! ./stability */ \"./node_modules/@siteimprove/alfa-rules/src/tags/stability.js\");\nObject.defineProperty(exports, \"Stability\", ({ enumerable: true, get: function () { return stability_1.Stability; } }));\nvar version_1 = __webpack_require__(/*! ./version */ \"./node_modules/@siteimprove/alfa-rules/src/tags/version.js\");\nObject.defineProperty(exports, \"Version\", ({ enumerable: true, get: function () { return version_1.Version; } }));\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/tags/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/tags/scope.js":
/*!****************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/tags/scope.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Scope = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\n/**\n * @public\n */\nclass Scope extends alfa_act_1.Tag {\n    static of(scope) {\n        return new Scope(scope);\n    }\n    constructor(scope) {\n        super();\n        this._scope = scope;\n    }\n    get type() {\n        return \"scope\";\n    }\n    get scope() {\n        return this._scope;\n    }\n    equals(value) {\n        return value instanceof Scope && value._scope === this._scope;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            scope: this._scope,\n        };\n    }\n}\nexports.Scope = Scope;\n/**\n * @public\n */\n(function (Scope) {\n    /**\n     * For rules that test failures at the page level. These rules only make sense\n     * to include in an audit if an entire page is available.\n     */\n    Scope.Page = Scope.of(\"page\");\n    /**\n     * For rules that test failures at the component level. These rules only make\n     * sense to include in an audit if at least an entire component is available.\n     */\n    Scope.Component = Scope.of(\"component\");\n})(Scope || (exports.Scope = Scope = {}));\n//# sourceMappingURL=scope.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/tags/scope.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/tags/stability.js":
/*!********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/tags/stability.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Stability = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\n/**\n * @public\n */\nclass Stability extends alfa_act_1.Tag {\n    static of(stability) {\n        return new Stability(stability);\n    }\n    constructor(stability) {\n        super();\n        this._stability = stability;\n    }\n    get type() {\n        return \"stability\";\n    }\n    get stability() {\n        return this._stability;\n    }\n    equals(value) {\n        return value instanceof Stability && value._stability === this._stability;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            stability: this._stability,\n        };\n    }\n}\nexports.Stability = Stability;\n/**\n * @public\n */\n(function (Stability) {\n    /**\n     * For experimental rules. These rules are not necessarily compatible with\n     * downstream data processing, and are subject to breaking changes without\n     * notice\n     */\n    Stability.Experimental = Stability.of(\"experimental\");\n    /**\n     * For stable rules. These rules follow the same basic principles and are\n     * reasonably stable; their changes are tracked by normal semver numbering.\n     */\n    Stability.Stable = Stability.of(\"stable\");\n    /**\n     * For deprecated rules. These rules are deprecated and will be removed\n     * permanently after some grace period.\n     */\n    Stability.Deprecated = Stability.of(\"deprecated\");\n})(Stability || (exports.Stability = Stability = {}));\n//# sourceMappingURL=stability.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/tags/stability.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-rules/src/tags/version.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-rules/src/tags/version.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Version = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\n/**\n * @public\n */\nclass Version extends alfa_act_1.Tag {\n    static of(version) {\n        return new Version(version);\n    }\n    constructor(version) {\n        super();\n        this._version = version;\n    }\n    get type() {\n        return \"version\";\n    }\n    get version() {\n        return this._version;\n    }\n    equals(value) {\n        return value instanceof Version && value._version === this._version;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            version: this._version,\n        };\n    }\n}\nexports.Version = Version;\n/**\n * @public\n */\n(function (Version) {\n    /** @public (knip) */\n    function isVersion(value) {\n        return value instanceof Version;\n    }\n    Version.isVersion = isVersion;\n})(Version || (exports.Version = Version = {}));\n//# sourceMappingURL=version.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-rules/src/tags/version.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-sarif/src/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-sarif/src/index.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./sarif */ \"./node_modules/@siteimprove/alfa-sarif/src/sarif.js\"), exports);\n__exportStar(__webpack_require__(/*! ./serializable */ \"./node_modules/@siteimprove/alfa-sarif/src/serializable.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-sarif/src/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-sarif/src/sarif.js":
/*!***********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-sarif/src/sarif.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=sarif.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-sarif/src/sarif.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-sarif/src/serializable.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-sarif/src/serializable.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Serializable = void 0;\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_refinement_1 = __webpack_require__(/*! @siteimprove/alfa-refinement */ \"./node_modules/@siteimprove/alfa-refinement/src/index.js\");\nconst { isFunction, isObject } = alfa_refinement_1.Refinement;\n/**\n * @public\n */\nvar Serializable;\n(function (Serializable) {\n    function isSerializable(value) {\n        return isObject(value) && isFunction(value.toSARIF);\n    }\n    Serializable.isSerializable = isSerializable;\n    function toSARIF(value) {\n        if (isSerializable(value)) {\n            return alfa_option_1.Some.of(value.toSARIF());\n        }\n        return alfa_option_1.None;\n    }\n    Serializable.toSARIF = toSARIF;\n})(Serializable || (exports.Serializable = Serializable = {}));\n//# sourceMappingURL=serializable.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-sarif/src/serializable.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selective/src/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selective/src/index.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./selective */ \"./node_modules/@siteimprove/alfa-selective/src/selective.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selective/src/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selective/src/selective.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selective/src/selective.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Selective = void 0;\nconst alfa_either_1 = __webpack_require__(/*! @siteimprove/alfa-either */ \"./node_modules/@siteimprove/alfa-either/src/index.js\");\n/**\n * {@link https://www.staff.ncl.ac.uk/andrey.mokhov/selective-functors.pdf}\n *\n * @public\n */\nclass Selective {\n    static of(value) {\n        return new Selective(alfa_either_1.Left.of(value));\n    }\n    constructor(value) {\n        this._value = value;\n    }\n    map(mapper) {\n        return new Selective(this._value.map(mapper));\n    }\n    apply(mapper) {\n        return mapper.flatMap((mapper) => this.map(mapper));\n    }\n    flatMap(mapper) {\n        return new Selective(this._value.flatMap((value) => mapper(value)._value));\n    }\n    flatten() {\n        return this.flatMap((selective) => selective);\n    }\n    if(predicate, mapper) {\n        return this._value.either((value) => predicate(value) ? new Selective(alfa_either_1.Right.of(mapper(value))) : this, () => this);\n    }\n    else(mapper) {\n        return new Selective(alfa_either_1.Right.of(this._value.either((value) => mapper(value), (value) => value)));\n    }\n    get() {\n        return this._value.get();\n    }\n    /**\n     * Ensure that this {@link (Selective:class)} is exhaustively matched, returning\n     * its resulting value.\n     *\n     * @remarks\n     * This method should only be used for cases where {@link (Selective:class).get}\n     * is insufficient. If in doubt, assume that it isn't.\n     */\n    exhaust() {\n        return this.get();\n    }\n    equals(value) {\n        return value instanceof Selective && value._value.equals(this._value);\n    }\n    hash(hash) {\n        hash.writeHashable(this._value);\n    }\n    *iterator() {\n        yield this._value.get();\n    }\n    [Symbol.iterator]() {\n        return this.iterator();\n    }\n    toJSON() {\n        return this._value.toJSON();\n    }\n    toString() {\n        return `Selective { ${this._value} }`;\n    }\n}\nexports.Selective = Selective;\n//# sourceMappingURL=selective.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selective/src/selective.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/node_modules/@siteimprove/alfa-sequence/src/cons.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/node_modules/@siteimprove/alfa-sequence/src/cons.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Cons = void 0;\nconst alfa_array_1 = __webpack_require__(/*! @siteimprove/alfa-array */ \"./node_modules/@siteimprove/alfa-array/src/index.js\");\nconst alfa_comparable_1 = __webpack_require__(/*! @siteimprove/alfa-comparable */ \"./node_modules/@siteimprove/alfa-comparable/src/index.js\");\nconst alfa_equatable_1 = __webpack_require__(/*! @siteimprove/alfa-equatable */ \"./node_modules/@siteimprove/alfa-equatable/src/index.js\");\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_json_1 = __webpack_require__(/*! @siteimprove/alfa-json */ \"./node_modules/@siteimprove/alfa-json/src/index.js\");\nconst alfa_lazy_1 = __webpack_require__(/*! @siteimprove/alfa-lazy */ \"./node_modules/@siteimprove/alfa-lazy/src/index.js\");\nconst alfa_map_1 = __webpack_require__(/*! @siteimprove/alfa-map */ \"./node_modules/@siteimprove/alfa-map/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_set_1 = __webpack_require__(/*! @siteimprove/alfa-set */ \"./node_modules/@siteimprove/alfa-set/src/index.js\");\nconst sequence_1 = __webpack_require__(/*! ./sequence */ \"./node_modules/@siteimprove/alfa-selector/node_modules/@siteimprove/alfa-sequence/src/sequence.js\");\nconst nil_1 = __webpack_require__(/*! ./nil */ \"./node_modules/@siteimprove/alfa-selector/node_modules/@siteimprove/alfa-sequence/src/nil.js\");\nconst { not, equals } = alfa_predicate_1.Predicate;\nconst { compareComparable } = alfa_comparable_1.Comparable;\n/**\n * @public\n */\nclass Cons {\n    static of(head, tail = alfa_lazy_1.Lazy.force(nil_1.Nil)) {\n        return new Cons(head, tail);\n    }\n    constructor(head, tail) {\n        this._head = head;\n        this._tail = tail;\n    }\n    get size() {\n        return alfa_iterable_1.Iterable.size(this);\n    }\n    isEmpty() {\n        return false;\n    }\n    forEach(callback) {\n        alfa_iterable_1.Iterable.forEach(this, callback);\n    }\n    map(mapper, index = 0) {\n        return new Cons(mapper(this._head, index), this._tail.map((tail) => Cons.isCons(tail) ? tail.map(mapper, index + 1) : nil_1.Nil));\n    }\n    apply(mapper) {\n        return mapper.flatMap((mapper) => this.map(mapper));\n    }\n    flatMap(mapper, index = 0) {\n        let next = this;\n        while (true) {\n            const head = mapper(next._head, index++);\n            if (Cons.isCons(head)) {\n                return new Cons(head._head, head._tail.map((left) => {\n                    const right = next._tail.force();\n                    return Cons.isCons(right)\n                        ? left.concat(right.flatMap(mapper, index))\n                        : left;\n                }));\n            }\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return nil_1.Nil;\n            }\n        }\n    }\n    flatten() {\n        return this.flatMap((sequence) => sequence);\n    }\n    reduce(reducer, accumulator) {\n        let next = this;\n        let index = 0;\n        while (true) {\n            accumulator = reducer(accumulator, next._head, index++);\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                break;\n            }\n        }\n        return accumulator;\n    }\n    reduceWhile(predicate, reducer, accumulator) {\n        let next = this;\n        let index = 0;\n        while (predicate(next._head, index)) {\n            accumulator = reducer(accumulator, next._head, index++);\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                break;\n            }\n        }\n        return accumulator;\n    }\n    reduceUntil(predicate, reducer, accumulator) {\n        return this.reduceWhile(not(predicate), reducer, accumulator);\n    }\n    filter(predicate, index = 0) {\n        let next = this;\n        while (true) {\n            if (predicate(next._head, index++)) {\n                return new Cons(next._head, next._tail.map((tail) => Cons.isCons(tail) ? tail.filter(predicate, index) : nil_1.Nil));\n            }\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return nil_1.Nil;\n            }\n        }\n    }\n    reject(predicate) {\n        return this.filter(not(predicate));\n    }\n    find(predicate) {\n        let next = this;\n        let index = 0;\n        while (true) {\n            const head = next._head;\n            if (predicate(head, index++)) {\n                return alfa_option_1.Option.of(head);\n            }\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return alfa_option_1.None;\n            }\n        }\n    }\n    includes(value) {\n        return this.some(equals(value));\n    }\n    collect(mapper, index = 0) {\n        let next = this;\n        while (true) {\n            const value = mapper(next._head, index++);\n            if (value.isSome()) {\n                return new Cons(value.get(), next._tail.map((tail) => Cons.isCons(tail) ? tail.collect(mapper, index) : nil_1.Nil));\n            }\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return nil_1.Nil;\n            }\n        }\n    }\n    collectFirst(mapper) {\n        let next = this;\n        let index = 0;\n        while (true) {\n            const value = mapper(next._head, index++);\n            if (value.isSome()) {\n                return value;\n            }\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return alfa_option_1.None;\n            }\n        }\n    }\n    some(predicate) {\n        let next = this;\n        let index = 0;\n        while (true) {\n            if (predicate(next._head, index++)) {\n                return true;\n            }\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return false;\n            }\n        }\n    }\n    none(predicate) {\n        return this.every(not(predicate));\n    }\n    every(predicate) {\n        let next = this;\n        let index = 0;\n        while (true) {\n            if (!predicate(next._head, index++)) {\n                return false;\n            }\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return true;\n            }\n        }\n    }\n    count(predicate) {\n        return this.reduce((count, value, index) => (predicate(value, index) ? count + 1 : count), 0);\n    }\n    distinct(seen = alfa_set_1.Set.empty()) {\n        let next = this;\n        while (true) {\n            if (seen.has(next._head)) {\n                const tail = next._tail.force();\n                if (Cons.isCons(tail)) {\n                    next = tail;\n                }\n                else {\n                    return nil_1.Nil;\n                }\n            }\n            else {\n                return Cons.of(next._head, next._tail.map((tail) => Cons.isCons(tail) ? tail.distinct(seen.add(next._head)) : nil_1.Nil));\n            }\n        }\n    }\n    get(index) {\n        return index < 0 ? alfa_option_1.None : this.skip(index).first();\n    }\n    has(index) {\n        return this.get(index).isSome();\n    }\n    set(index, value) {\n        if (index < 0) {\n            return this;\n        }\n        if (index === 0) {\n            if (alfa_equatable_1.Equatable.equals(value, this._head)) {\n                return this;\n            }\n            return new Cons(value, this._tail);\n        }\n        return new Cons(this._head, this._tail.map((tail) => tail.set(index - 1, value)));\n    }\n    insert(index, value) {\n        if (index < 0) {\n            return this;\n        }\n        if (index === 0) {\n            return new Cons(value, alfa_lazy_1.Lazy.force(this));\n        }\n        return new Cons(this._head, this._tail.map((tail) => tail.set(index - 1, value)));\n    }\n    append(value) {\n        return new Cons(this._head, this._tail.map((tail) => tail.append(value)));\n    }\n    prepend(value) {\n        return new Cons(value, alfa_lazy_1.Lazy.force(this));\n    }\n    concat(iterable) {\n        const sequence = sequence_1.Sequence.from(iterable);\n        if (Cons.isCons(sequence)) {\n            return new Cons(this._head, this._tail.map((tail) => tail.concat(sequence)));\n        }\n        return this;\n    }\n    subtract(iterable) {\n        return this.filter((value) => !alfa_iterable_1.Iterable.includes(iterable, value));\n    }\n    intersect(iterable) {\n        return this.filter((value) => alfa_iterable_1.Iterable.includes(iterable, value));\n    }\n    tee(callback, ...args) {\n        callback(this, ...args);\n        return this;\n    }\n    zip(iterable) {\n        const sequence = sequence_1.Sequence.from(iterable);\n        if (Cons.isCons(sequence)) {\n            return new Cons([this._head, sequence._head], this._tail.map((tail) => tail.zip(sequence.rest())));\n        }\n        return nil_1.Nil;\n    }\n    first() {\n        return alfa_option_1.Option.of(this._head);\n    }\n    last() {\n        let next = this;\n        while (true) {\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return alfa_option_1.Option.of(next._head);\n            }\n        }\n    }\n    take(count) {\n        if (count <= 0) {\n            return nil_1.Nil;\n        }\n        return new Cons(this._head, count === 1\n            ? alfa_lazy_1.Lazy.force(nil_1.Nil)\n            : this._tail.map((tail) => Cons.isCons(tail) ? tail.take(count - 1) : nil_1.Nil));\n    }\n    takeWhile(predicate) {\n        return this.takeUntil(not(predicate));\n    }\n    takeUntil(predicate, index = 0) {\n        if (predicate(this._head, index)) {\n            return nil_1.Nil;\n        }\n        return new Cons(this._head, this._tail.map((tail) => Cons.isCons(tail)\n            ? tail.takeUntil(predicate, index + 1)\n            : tail.takeUntil(predicate)));\n    }\n    takeLast(count) {\n        return this.skip(this.size - count);\n    }\n    takeLastWhile(predicate) {\n        return this.reverse().takeWhile(predicate).reverse();\n    }\n    takeLastUntil(predicate) {\n        return this.takeLastWhile(not(predicate));\n    }\n    skip(count) {\n        let next = this;\n        while (count-- > 0) {\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return nil_1.Nil;\n            }\n        }\n        return next;\n    }\n    skipWhile(predicate) {\n        let next = this;\n        let index = 0;\n        while (predicate(next._head, index++)) {\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return nil_1.Nil;\n            }\n        }\n        return next;\n    }\n    skipUntil(predicate) {\n        return this.skipWhile(not(predicate));\n    }\n    skipLast(count) {\n        return this.take(this.size - count);\n    }\n    skipLastWhile(predicate) {\n        return this.reverse().skipWhile(predicate).reverse();\n    }\n    skipLastUntil(predicate) {\n        return this.skipLastWhile(not(predicate));\n    }\n    trim(predicate) {\n        return this.trimLeading(predicate).trimTrailing(predicate);\n    }\n    trimLeading(predicate) {\n        return this.skipWhile(predicate);\n    }\n    trimTrailing(predicate) {\n        return this.skipLastWhile(predicate);\n    }\n    rest() {\n        return this._tail.force();\n    }\n    slice(start, end) {\n        let slice = this.skip(start);\n        if (end !== undefined) {\n            slice = slice.take(end - start);\n        }\n        return slice;\n    }\n    reverse() {\n        return this.reduce((reversed, value) => new Cons(value, alfa_lazy_1.Lazy.force(reversed)), nil_1.Nil);\n    }\n    join(separator) {\n        let result = `${this._head}`;\n        let next = this;\n        while (true) {\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                result += `${separator}${tail._head}`;\n                next = tail;\n            }\n            else {\n                return result;\n            }\n        }\n    }\n    sort() {\n        return this.sortWith(compareComparable);\n    }\n    sortWith(comparer) {\n        return sequence_1.Sequence.fromArray(alfa_array_1.Array.sortWith(this.toArray(), comparer));\n    }\n    compare(iterable) {\n        return this.compareWith(iterable, alfa_comparable_1.Comparable.compare);\n    }\n    compareWith(iterable, comparer) {\n        return alfa_iterable_1.Iterable.compareWith(this, iterable, comparer);\n    }\n    groupBy(grouper) {\n        return this.reduce((groups, value, index) => {\n            const group = grouper(value, index);\n            return groups.set(group, new Cons(value, alfa_lazy_1.Lazy.force(groups.get(group).getOrElse(() => nil_1.Nil))));\n        }, alfa_map_1.Map.empty()).map((group) => group.reverse());\n    }\n    equals(value) {\n        if (!Cons.isCons(value)) {\n            return false;\n        }\n        let a = this;\n        let b = value;\n        while (true) {\n            if (!alfa_equatable_1.Equatable.equals(a._head, b._head)) {\n                return false;\n            }\n            const ta = a._tail.force();\n            const tb = b._tail.force();\n            if (Cons.isCons(ta) && Cons.isCons(tb)) {\n                a = ta;\n                b = tb;\n            }\n            else {\n                return ta === nil_1.Nil && tb === nil_1.Nil;\n            }\n        }\n    }\n    hash(hash) {\n        let size = 0;\n        for (const value of this) {\n            hash.writeUnknown(value);\n            size++;\n        }\n        hash.writeUint32(size);\n    }\n    *iterator() {\n        let next = this;\n        while (true) {\n            yield next._head;\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                break;\n            }\n        }\n    }\n    [Symbol.iterator]() {\n        return this.iterator();\n    }\n    toArray() {\n        const array = [];\n        let next = this;\n        while (true) {\n            array.push(next._head);\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return array;\n            }\n        }\n    }\n    toJSON() {\n        const json = [];\n        let next = this;\n        while (true) {\n            json.push(alfa_json_1.Serializable.toJSON(next._head));\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return json;\n            }\n        }\n    }\n    toString() {\n        return `Sequence [ ${this.join(\", \")} ]`;\n    }\n}\nexports.Cons = Cons;\n/**\n * @public\n */\n(function (Cons) {\n    function isCons(value) {\n        return value instanceof Cons;\n    }\n    Cons.isCons = isCons;\n})(Cons || (exports.Cons = Cons = {}));\n//# sourceMappingURL=cons.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/node_modules/@siteimprove/alfa-sequence/src/cons.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/node_modules/@siteimprove/alfa-sequence/src/index.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/node_modules/@siteimprove/alfa-sequence/src/index.js ***!
  \******************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./cons */ \"./node_modules/@siteimprove/alfa-selector/node_modules/@siteimprove/alfa-sequence/src/cons.js\"), exports);\n__exportStar(__webpack_require__(/*! ./nil */ \"./node_modules/@siteimprove/alfa-selector/node_modules/@siteimprove/alfa-sequence/src/nil.js\"), exports);\n__exportStar(__webpack_require__(/*! ./sequence */ \"./node_modules/@siteimprove/alfa-selector/node_modules/@siteimprove/alfa-sequence/src/sequence.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/node_modules/@siteimprove/alfa-sequence/src/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/node_modules/@siteimprove/alfa-sequence/src/nil.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/node_modules/@siteimprove/alfa-sequence/src/nil.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Nil = void 0;\nconst alfa_comparable_1 = __webpack_require__(/*! @siteimprove/alfa-comparable */ \"./node_modules/@siteimprove/alfa-comparable/src/index.js\");\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_map_1 = __webpack_require__(/*! @siteimprove/alfa-map */ \"./node_modules/@siteimprove/alfa-map/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst sequence_1 = __webpack_require__(/*! ./sequence */ \"./node_modules/@siteimprove/alfa-selector/node_modules/@siteimprove/alfa-sequence/src/sequence.js\");\nconst cons_1 = __webpack_require__(/*! ./cons */ \"./node_modules/@siteimprove/alfa-selector/node_modules/@siteimprove/alfa-sequence/src/cons.js\");\n/**\n * @public\n */\nexports.Nil = new (class Nil {\n    get size() {\n        return 0;\n    }\n    isEmpty() {\n        return true;\n    }\n    forEach() { }\n    map() {\n        return this;\n    }\n    apply() {\n        return this;\n    }\n    flatMap() {\n        return this;\n    }\n    flatten() {\n        return this;\n    }\n    reduce(reducer, accumulator) {\n        return accumulator;\n    }\n    reduceWhile(predicate, reducer, accumulator) {\n        return accumulator;\n    }\n    reduceUntil(predicate, reducer, accumulator) {\n        return accumulator;\n    }\n    filter() {\n        return this;\n    }\n    reject() {\n        return this;\n    }\n    find() {\n        return alfa_option_1.None;\n    }\n    includes() {\n        return false;\n    }\n    collect() {\n        return this;\n    }\n    collectFirst() {\n        return alfa_option_1.None;\n    }\n    some() {\n        return false;\n    }\n    none() {\n        return true;\n    }\n    every() {\n        return true;\n    }\n    count() {\n        return 0;\n    }\n    distinct() {\n        return this;\n    }\n    get() {\n        return alfa_option_1.None;\n    }\n    has() {\n        return false;\n    }\n    set() {\n        return this;\n    }\n    insert(index, value) {\n        return index === 0 ? cons_1.Cons.of(value) : this;\n    }\n    append(value) {\n        return cons_1.Cons.of(value);\n    }\n    prepend(value) {\n        return cons_1.Cons.of(value);\n    }\n    concat(iterable) {\n        if (iterable === this) {\n            return this;\n        }\n        return sequence_1.Sequence.from(iterable);\n    }\n    subtract() {\n        return this;\n    }\n    intersect() {\n        return this;\n    }\n    tee(callback, ...args) {\n        callback(this, ...args);\n        return this;\n    }\n    zip() {\n        return this;\n    }\n    first() {\n        return alfa_option_1.None;\n    }\n    last() {\n        return alfa_option_1.None;\n    }\n    take() {\n        return this;\n    }\n    takeWhile() {\n        return this;\n    }\n    takeUntil() {\n        return this;\n    }\n    takeLast() {\n        return this;\n    }\n    takeLastWhile() {\n        return this;\n    }\n    takeLastUntil() {\n        return this;\n    }\n    skip() {\n        return this;\n    }\n    skipWhile() {\n        return this;\n    }\n    skipUntil() {\n        return this;\n    }\n    skipLast() {\n        return this;\n    }\n    skipLastWhile() {\n        return this;\n    }\n    skipLastUntil() {\n        return this;\n    }\n    trim() {\n        return this;\n    }\n    trimLeading() {\n        return this;\n    }\n    trimTrailing() {\n        return this;\n    }\n    rest() {\n        return this;\n    }\n    slice() {\n        return this;\n    }\n    reverse() {\n        return this;\n    }\n    join() {\n        return \"\";\n    }\n    sort() {\n        return this;\n    }\n    sortWith() {\n        return this;\n    }\n    compare(iterable) {\n        return this.compareWith(iterable, alfa_comparable_1.Comparable.compare);\n    }\n    compareWith(iterable, comparer) {\n        return alfa_iterable_1.Iterable.compareWith(this, iterable, comparer);\n    }\n    groupBy() {\n        return alfa_map_1.Map.empty();\n    }\n    equals(value) {\n        return value instanceof Nil;\n    }\n    hash(hash) {\n        hash.writeUint32(0);\n    }\n    *iterator() { }\n    [Symbol.iterator]() {\n        return this.iterator();\n    }\n    toArray() {\n        return [];\n    }\n    toJSON() {\n        return [];\n    }\n    toString() {\n        return \"Sequence []\";\n    }\n})();\n//# sourceMappingURL=nil.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/node_modules/@siteimprove/alfa-sequence/src/nil.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/node_modules/@siteimprove/alfa-sequence/src/sequence.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/node_modules/@siteimprove/alfa-sequence/src/sequence.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Sequence = void 0;\nconst alfa_array_1 = __webpack_require__(/*! @siteimprove/alfa-array */ \"./node_modules/@siteimprove/alfa-array/src/index.js\");\nconst alfa_lazy_1 = __webpack_require__(/*! @siteimprove/alfa-lazy */ \"./node_modules/@siteimprove/alfa-lazy/src/index.js\");\nconst cons_1 = __webpack_require__(/*! ./cons */ \"./node_modules/@siteimprove/alfa-selector/node_modules/@siteimprove/alfa-sequence/src/cons.js\");\nconst nil_1 = __webpack_require__(/*! ./nil */ \"./node_modules/@siteimprove/alfa-selector/node_modules/@siteimprove/alfa-sequence/src/nil.js\");\n/**\n * @public\n */\nvar Sequence;\n(function (Sequence) {\n    function isSequence(value) {\n        return isCons(value) || isNil(value);\n    }\n    Sequence.isSequence = isSequence;\n    function isCons(value) {\n        return cons_1.Cons.isCons(value);\n    }\n    Sequence.isCons = isCons;\n    function isNil(value) {\n        return value === nil_1.Nil;\n    }\n    Sequence.isNil = isNil;\n    function of(head, tail) {\n        return cons_1.Cons.of(head, tail);\n    }\n    Sequence.of = of;\n    function empty() {\n        return nil_1.Nil;\n    }\n    Sequence.empty = empty;\n    function from(iterable) {\n        if (isSequence(iterable)) {\n            return iterable;\n        }\n        if (alfa_array_1.Array.isArray(iterable)) {\n            return fromArray(iterable);\n        }\n        return fromIterable(iterable);\n    }\n    Sequence.from = from;\n    function fromArray(array) {\n        let i = 0;\n        const tail = () => {\n            if (i >= array.length) {\n                return empty();\n            }\n            return of(array[i++], alfa_lazy_1.Lazy.of(tail));\n        };\n        return tail();\n    }\n    Sequence.fromArray = fromArray;\n    function fromIterable(iterable) {\n        return fromIterator(iterable[Symbol.iterator]());\n    }\n    Sequence.fromIterable = fromIterable;\n    function fromIterator(iterator) {\n        const tail = () => {\n            const head = iterator.next();\n            if (head.done === true) {\n                return empty();\n            }\n            return of(head.value, alfa_lazy_1.Lazy.of(tail));\n        };\n        return tail();\n    }\n    Sequence.fromIterator = fromIterator;\n})(Sequence || (exports.Sequence = Sequence = {}));\n//# sourceMappingURL=sequence.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/node_modules/@siteimprove/alfa-sequence/src/sequence.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/src/context.js":
/*!****************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/src/context.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Context = void 0;\nconst alfa_map_1 = __webpack_require__(/*! @siteimprove/alfa-map */ \"./node_modules/@siteimprove/alfa-map/src/index.js\");\n/**\n * @public\n */\nclass Context {\n    static of(state) {\n        return new Context(alfa_map_1.Map.from(state));\n    }\n    static empty() {\n        return this._empty;\n    }\n    constructor(state) {\n        this._state = state;\n    }\n    isEmpty() {\n        return this._state.isEmpty();\n    }\n    hasState(element, state) {\n        return this._state.get(element).some((found) => (found & state) !== 0);\n    }\n    getState(element) {\n        return this._state.get(element).getOr(Context.State.None);\n    }\n    setState(element, state) {\n        return new Context(this._state.set(element, state));\n    }\n    addState(element, state) {\n        return this.setState(element, this.getState(element) | state);\n    }\n    *withState(state) {\n        yield* this._state.filter((found) => (found & state) !== 0).keys();\n    }\n    hover(element) {\n        return this.addState(element, Context.State.Hover);\n    }\n    static hover(element) {\n        return this.empty().hover(element);\n    }\n    isHovered(element) {\n        return this.hasState(element, Context.State.Hover);\n    }\n    active(element) {\n        return this.addState(element, Context.State.Active);\n    }\n    static active(element) {\n        return this.empty().active(element);\n    }\n    isActive(element) {\n        return this.hasState(element, Context.State.Active);\n    }\n    focus(element) {\n        return this.addState(element, Context.State.Focus);\n    }\n    static focus(element) {\n        return this.empty().focus(element);\n    }\n    isFocused(element) {\n        return this.hasState(element, Context.State.Focus);\n    }\n    visit(element) {\n        return this.addState(element, Context.State.Visited);\n    }\n    static visit(element) {\n        return this.empty().visit(element);\n    }\n    isVisited(element) {\n        return this.hasState(element, Context.State.Visited);\n    }\n}\nexports.Context = Context;\nContext._empty = new Context(alfa_map_1.Map.empty());\n/**\n * @public\n */\n(function (Context) {\n    let State;\n    (function (State) {\n        State[State[\"None\"] = 0] = \"None\";\n        State[State[\"Hover\"] = 1] = \"Hover\";\n        State[State[\"Active\"] = 2] = \"Active\";\n        State[State[\"Focus\"] = 4] = \"Focus\";\n        State[State[\"Visited\"] = 8] = \"Visited\";\n    })(State = Context.State || (Context.State = {}));\n})(Context || (exports.Context = Context = {}));\n//# sourceMappingURL=context.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/src/context.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/src/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/src/index.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./context */ \"./node_modules/@siteimprove/alfa-selector/src/context.js\"), exports);\n__exportStar(__webpack_require__(/*! ./selector */ \"./node_modules/@siteimprove/alfa-selector/src/selector/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./specificity */ \"./node_modules/@siteimprove/alfa-selector/src/specificity.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/src/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/src/selector/combinator.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/src/selector/combinator.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Combinator = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst { delimited, either, map, option } = alfa_parser_1.Parser;\n/**\n * {@link https://drafts.csswg.org/selectors/#selector-combinator}\n *\n * @public\n */\nvar Combinator;\n(function (Combinator) {\n    /**\n     * @example div span\n     */\n    Combinator[\"Descendant\"] = \" \";\n    /**\n     * @example div \\> span\n     */\n    Combinator[\"DirectDescendant\"] = \">\";\n    /**\n     * @example div ~ span\n     */\n    Combinator[\"Sibling\"] = \"~\";\n    /**\n     * @example div + span\n     */\n    Combinator[\"DirectSibling\"] = \"+\";\n})(Combinator || (exports.Combinator = Combinator = {}));\n/**\n * @public\n */\n(function (Combinator) {\n    /**\n     * {@link https://drafts.csswg.org/selectors/#typedef-combinator}\n     *\n     * @internal\n     */\n    Combinator.parseCombinator = either(delimited(option(alfa_css_1.Token.parseWhitespace), either(map(alfa_css_1.Token.parseDelim(\">\"), () => Combinator.DirectDescendant), map(alfa_css_1.Token.parseDelim(\"~\"), () => Combinator.Sibling), map(alfa_css_1.Token.parseDelim(\"+\"), () => Combinator.DirectSibling))), map(alfa_css_1.Token.parseWhitespace, () => Combinator.Descendant));\n})(Combinator || (exports.Combinator = Combinator = {}));\n//# sourceMappingURL=combinator.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/src/selector/combinator.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/src/selector/complex.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/src/selector/complex.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Complex = void 0;\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst specificity_1 = __webpack_require__(/*! ../specificity */ \"./node_modules/@siteimprove/alfa-selector/src/specificity.js\");\nconst combinator_1 = __webpack_require__(/*! ./combinator */ \"./node_modules/@siteimprove/alfa-selector/src/selector/combinator.js\");\nconst compound_1 = __webpack_require__(/*! ./compound */ \"./node_modules/@siteimprove/alfa-selector/src/selector/compound.js\");\nconst selector_1 = __webpack_require__(/*! ./selector */ \"./node_modules/@siteimprove/alfa-selector/src/selector/selector.js\");\nconst { isElement } = alfa_dom_1.Element;\nconst { map, pair, zeroOrMore } = alfa_parser_1.Parser;\n/**\n * {@link https://drafts.csswg.org/selectors/#complex}\n *\n * @public\n */\nclass Complex extends selector_1.Selector {\n    static of(combinator, left, right) {\n        return new Complex(combinator, left, right);\n    }\n    constructor(combinator, left, right) {\n        super(\"complex\", specificity_1.Specificity.sum(left.specificity, right.specificity));\n        this._combinator = combinator;\n        this._left = left;\n        this._right = right;\n        this._key = right.key;\n    }\n    get combinator() {\n        return this._combinator;\n    }\n    get left() {\n        return this._left;\n    }\n    get right() {\n        return this._right;\n    }\n    matches(element, context) {\n        // First, make sure that the right side of the selector, i.e. the part\n        // that relates to the current element, matches.\n        if (this._right.matches(element, context)) {\n            // If it does, move on to the heavy part of the work: Looking either up\n            // the tree for a descendant match or looking to the side of the tree\n            // for a sibling match.\n            switch (this._combinator) {\n                case combinator_1.Combinator.Descendant:\n                    return element\n                        .ancestors()\n                        .filter(isElement)\n                        .some((element) => this._left.matches(element, context));\n                case combinator_1.Combinator.DirectDescendant:\n                    return element\n                        .parent()\n                        .filter(isElement)\n                        .some((element) => this._left.matches(element, context));\n                case combinator_1.Combinator.Sibling:\n                    return element\n                        .preceding()\n                        .filter(isElement)\n                        .some((element) => this._left.matches(element, context));\n                case combinator_1.Combinator.DirectSibling:\n                    return element\n                        .preceding()\n                        .find(isElement)\n                        .some((element) => this._left.matches(element, context));\n            }\n        }\n        return false;\n    }\n    equals(value) {\n        return (value instanceof Complex &&\n            value._combinator === this._combinator &&\n            value._left.equals(this._left) &&\n            value._right.equals(this._right));\n    }\n    *[Symbol.iterator]() {\n        yield this;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            combinator: this._combinator,\n            left: this._left.toJSON(),\n            right: this._right.toJSON(),\n        };\n    }\n    toString() {\n        const combinator = this._combinator === combinator_1.Combinator.Descendant\n            ? \" \"\n            : ` ${this._combinator} `;\n        return `${this._left}${combinator}${this._right}`;\n    }\n}\nexports.Complex = Complex;\n/**\n * @public\n */\n(function (Complex) {\n    function isComplex(value) {\n        return value instanceof Complex;\n    }\n    Complex.isComplex = isComplex;\n    /**\n     * {@link https://drafts.csswg.org/selectors/#typedef-complex-selector}\n     *\n     * @internal\n     */\n    Complex.parseComplex = (parseSelector) => map(pair(compound_1.Compound.parseCompound(parseSelector), zeroOrMore(pair(combinator_1.Combinator.parseCombinator, compound_1.Compound.parseCompound(parseSelector)))), (result) => {\n        const [left, selectors] = result;\n        return alfa_iterable_1.Iterable.reduce(selectors, (left, [combinator, right]) => Complex.of(combinator, left, right), left);\n    });\n})(Complex || (exports.Complex = Complex = {}));\n//# sourceMappingURL=complex.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/src/selector/complex.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/src/selector/compound.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/src/selector/compound.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Compound = void 0;\nconst alfa_array_1 = __webpack_require__(/*! @siteimprove/alfa-array */ \"./node_modules/@siteimprove/alfa-array/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst specificity_1 = __webpack_require__(/*! ../specificity */ \"./node_modules/@siteimprove/alfa-selector/src/specificity.js\");\nconst selector_1 = __webpack_require__(/*! ./selector */ \"./node_modules/@siteimprove/alfa-selector/src/selector/selector.js\");\nconst simple_1 = __webpack_require__(/*! ./simple */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/index.js\");\nconst { map, oneOrMore } = alfa_parser_1.Parser;\n/**\n * {@link https://drafts.csswg.org/selectors/#compound}\n *\n * @public\n */\nclass Compound extends selector_1.Selector {\n    static of(...selectors) {\n        return new Compound(selectors);\n    }\n    constructor(selectors) {\n        super(\"compound\", specificity_1.Specificity.sum(...selectors.map((selector) => selector.specificity)));\n        this._selectors = selectors;\n        this._length = selectors.length;\n        this._key = selectors[0]?.key ?? alfa_option_1.None;\n    }\n    get selectors() {\n        return this._selectors;\n    }\n    get length() {\n        return this._length;\n    }\n    matches(element, context) {\n        return this._selectors.every((selector) => selector.matches(element, context));\n    }\n    equals(value) {\n        return (value instanceof Compound &&\n            alfa_array_1.Array.equals(value._selectors, this._selectors));\n    }\n    *[Symbol.iterator]() {\n        yield this;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            selectors: this._selectors.map((selector) => selector.toJSON()),\n        };\n    }\n    toString() {\n        return this._selectors.map((selector) => selector.toString()).join(\"\");\n    }\n}\nexports.Compound = Compound;\n/**\n * @public\n */\n(function (Compound) {\n    function isCompound(value) {\n        return value instanceof Compound;\n    }\n    Compound.isCompound = isCompound;\n    /**\n     * {@link https://drafts.csswg.org/selectors/#typedef-compound-selector}\n     *\n     * @internal\n     */\n    Compound.parseCompound = (parseSelector) => map(oneOrMore(simple_1.Simple.parse(parseSelector)), (result) => result.length === 1 ? result[0] : Compound.of(...result));\n})(Compound || (exports.Compound = Compound = {}));\n//# sourceMappingURL=compound.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/src/selector/compound.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/src/selector/index.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/src/selector/index.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Selector = void 0;\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst list_1 = __webpack_require__(/*! ./list */ \"./node_modules/@siteimprove/alfa-selector/src/selector/list.js\");\n// Re-export for further users\n__exportStar(__webpack_require__(/*! ./combinator */ \"./node_modules/@siteimprove/alfa-selector/src/selector/combinator.js\"), exports);\n__exportStar(__webpack_require__(/*! ./complex */ \"./node_modules/@siteimprove/alfa-selector/src/selector/complex.js\"), exports);\n__exportStar(__webpack_require__(/*! ./compound */ \"./node_modules/@siteimprove/alfa-selector/src/selector/compound.js\"), exports);\n__exportStar(__webpack_require__(/*! ./list */ \"./node_modules/@siteimprove/alfa-selector/src/selector/list.js\"), exports);\n__exportStar(__webpack_require__(/*! ./relative */ \"./node_modules/@siteimprove/alfa-selector/src/selector/relative.js\"), exports);\n__exportStar(__webpack_require__(/*! ./simple */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/index.js\"), exports);\nconst { end, left, map } = alfa_parser_1.Parser;\n/**\n * @public\n */\nvar Selector;\n(function (Selector) {\n    /**\n     * Parsers for Selectors\n     *\n     * @remarks\n     * Even simple selectors like `:is()` can include any other selector.\n     * This creates circular dependencies, especially in the parsers.\n     * To break it, we use dependency injection and inject the top-level\n     * selector parser into each of the individual ones.\n     *\n     * In order to avoid an infinite recursion, this means that we must actually\n     * inject a continuation wrapping the parser, and only resolve it to an\n     * actual parser upon need.\n     *\n     * That is, the extra `()` \"parameter\" is needed!\n     */\n    function parseSelector() {\n        return left(map(list_1.List.parseList(parseSelector), (list) => list.length === 1 ? alfa_iterable_1.Iterable.first(list.selectors).getUnsafe() : list), end((token) => `Unexpected token ${token}`));\n    }\n    Selector.parse = parseSelector();\n})(Selector || (exports.Selector = Selector = {}));\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/src/selector/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/src/selector/list.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/src/selector/list.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.List = void 0;\nconst alfa_array_1 = __webpack_require__(/*! @siteimprove/alfa-array */ \"./node_modules/@siteimprove/alfa-array/src/index.js\");\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst specificity_1 = __webpack_require__(/*! ../specificity */ \"./node_modules/@siteimprove/alfa-selector/src/specificity.js\");\nconst complex_1 = __webpack_require__(/*! ./complex */ \"./node_modules/@siteimprove/alfa-selector/src/selector/complex.js\");\nconst selector_1 = __webpack_require__(/*! ./selector */ \"./node_modules/@siteimprove/alfa-selector/src/selector/selector.js\");\nconst { map, separatedList } = alfa_parser_1.Parser;\n/**\n * {@link https://drafts.csswg.org/selectors/#selector-list}\n *\n * @public\n */\nclass List extends selector_1.Selector {\n    static of(...selectors) {\n        return new List(selectors);\n    }\n    constructor(selectors) {\n        super(\"list\", specificity_1.Specificity.max(...selectors.map((selector) => selector.specificity)));\n        this._selectors = selectors;\n        this._length = selectors.length;\n    }\n    get selectors() {\n        return this._selectors;\n    }\n    get length() {\n        return this._length;\n    }\n    matches(element, context) {\n        return this._selectors.some((selector) => selector.matches(element, context));\n    }\n    equals(value) {\n        return (value instanceof List && alfa_array_1.Array.equals(value._selectors, this._selectors));\n    }\n    *[Symbol.iterator]() {\n        yield* this._selectors;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            selectors: alfa_array_1.Array.toJSON(this._selectors),\n        };\n    }\n    toString() {\n        return this._selectors.map((selector) => selector.toString()).join(\", \");\n    }\n}\nexports.List = List;\n/**\n * @public\n */\n(function (List) {\n    /**\n     * {@link https://drafts.csswg.org/selectors/#typedef-selector-list}\n     *\n     * @internal\n     */\n    List.parseList = (parseSelector) => map(separatedList(complex_1.Complex.parseComplex(parseSelector), alfa_css_1.Comma.parse), (result) => List.of(...result));\n})(List || (exports.List = List = {}));\n//# sourceMappingURL=list.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/src/selector/list.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/src/selector/relative.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/src/selector/relative.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Relative = void 0;\nconst combinator_1 = __webpack_require__(/*! ./combinator */ \"./node_modules/@siteimprove/alfa-selector/src/selector/combinator.js\");\nconst selector_1 = __webpack_require__(/*! ./selector */ \"./node_modules/@siteimprove/alfa-selector/src/selector/selector.js\");\n/**\n * {@link https://drafts.csswg.org/selectors/#relative-selector}\n *\n * @public\n */\nclass Relative extends selector_1.Selector {\n    static of(combinator, selector) {\n        return new Relative(combinator, selector);\n    }\n    constructor(combinator, selector) {\n        super(\"relative\", selector.specificity);\n        this._combinator = combinator;\n        this._selector = selector;\n    }\n    get combinator() {\n        return this._combinator;\n    }\n    get selector() {\n        return this._selector;\n    }\n    matches() {\n        return false;\n    }\n    equals(value) {\n        return (value instanceof Relative &&\n            value._combinator === this._combinator &&\n            value._selector.equals(this._selector));\n    }\n    *[Symbol.iterator]() {\n        yield this;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            combinator: this._combinator,\n            selector: this._selector.toJSON(),\n        };\n    }\n    toString() {\n        const combinator = this._combinator === combinator_1.Combinator.Descendant ? \"\" : `${this._combinator} `;\n        return `${combinator}${this._selector}`;\n    }\n}\nexports.Relative = Relative;\n/**\n * {@link https://drafts.csswg.org/selectors/#typedef-relative-selector}\n */\n// const parseRelative = map(pair(parseCombinator, parseComplex), (result) => {\n//   const [combinator, selector] = result;\n//   return Relative.of(combinator, selector);\n// });\n//# sourceMappingURL=relative.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/src/selector/relative.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/src/selector/selector.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/src/selector/selector.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.WithName = exports.Selector = void 0;\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\n/**\n * @internal\n */\nclass Selector {\n    constructor(type, specificity) {\n        /**\n         * The key selector is used to optimise matching of complex (and compound)\n         * selectors.\n         *\n         * @remarks\n         * The key selector is the rightmost simple selector in a complex selector,\n         * or the leftmost simple selector in a compound selector. In order for an\n         * element to match a complex selector, it must match the key selector.\n         *\n         * For example, consider selector `main .foo + div`. Any element matching it\n         * must necessarily be a `<div>`, and for other elements there is no need to\n         * waste time traversing the DOM tree to check siblings or ancestors.\n         *\n         * For compound selectors, e.g. `.foo.bar`, any part could be taken, and we\n         * arbitrarily pick the leftmost.\n         *\n         * Conversely, an `<img id=\"image\" class=\"foo bar\">` can only match selectors\n         * whose key selector is `img`, `#image`, `.foo`, or `.bar`. So we can\n         * pre-filter these when attempting matching.\n         *\n         * @privateRemarks\n         * Key selectors are not part of the CSS specification, but are a useful tool\n         * for optimising selector matching.\n         *\n         * Key selectors relate to cascading more than selector syntax and matching,\n         * but they only depend on selector and thus make sense as instance properties.\n         *\n         * {@link http://doc.servo.org/style/selector_map/struct.SelectorMap.html}\n         */\n        this._key = alfa_option_1.None;\n        this._type = type;\n        this._specificity = specificity;\n    }\n    /** @public (knip) */\n    get type() {\n        return this._type;\n    }\n    get specificity() {\n        return this._specificity;\n    }\n    get key() {\n        return this._key;\n    }\n    equals(value) {\n        return (value instanceof Selector &&\n            value._type === this._type &&\n            value._specificity.equals(this._specificity));\n    }\n    toJSON() {\n        return {\n            type: this._type,\n            specificity: this._specificity.toJSON(),\n            ...(this._key.isSome() ? { key: `${this._key.get()}` } : {}),\n        };\n    }\n}\nexports.Selector = Selector;\n/**\n * Selectors who also contain a name.\n *\n * @remarks\n * This can be either specific (e.g., the id is the name of a #foo selector),\n * or generic (e.g., \"focus\" is the name of the `:focus` pseudo-class).\n *\n * @internal\n */\nclass WithName extends Selector {\n    constructor(type, name, specificity) {\n        super(type, specificity);\n        this._name = name;\n    }\n    get name() {\n        return this._name;\n    }\n    matches(element, context) {\n        return false;\n    }\n    equals(value) {\n        return (value instanceof WithName &&\n            super.equals(value) &&\n            value._name === this._name);\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            name: this._name,\n        };\n    }\n}\nexports.WithName = WithName;\n//# sourceMappingURL=selector.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/src/selector/selector.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/src/selector/simple/attribute.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/src/selector/simple/attribute.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Attribute = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst specificity_1 = __webpack_require__(/*! ../../specificity */ \"./node_modules/@siteimprove/alfa-selector/src/specificity.js\");\nconst selector_1 = __webpack_require__(/*! ../selector */ \"./node_modules/@siteimprove/alfa-selector/src/selector/selector.js\");\nconst parser_1 = __webpack_require__(/*! ./parser */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/parser.js\");\nconst { delimited, either, left, map, option, pair } = alfa_parser_1.Parser;\nconst { and, equals, property } = alfa_predicate_1.Predicate;\n/**\n * {@link https://drafts.csswg.org/selectors/#attribute-selector}\n *\n * @public\n */\nclass Attribute extends selector_1.WithName {\n    static of(namespace, name, value = alfa_option_1.None, matcher = alfa_option_1.None, modifier = alfa_option_1.None) {\n        return new Attribute(namespace, name, value, matcher, modifier);\n    }\n    constructor(namespace, name, value, matcher, modifier) {\n        super(\"attribute\", name, specificity_1.Specificity.of(0, 1, 0));\n        this._namespace = namespace;\n        this._value = value;\n        this._matcher = matcher;\n        this._modifier = modifier;\n    }\n    get namespace() {\n        return this._namespace;\n    }\n    get value() {\n        return this._value;\n    }\n    get matcher() {\n        return this._matcher;\n    }\n    get modifier() {\n        return this._modifier;\n    }\n    matches(element) {\n        for (const namespace of this._namespace) {\n            let predicate;\n            switch (namespace) {\n                case \"*\":\n                    predicate = property(\"name\", equals(this._name));\n                    break;\n                case \"\":\n                    predicate = and(property(\"name\", equals(this._name)), property(\"namespace\", equals(alfa_option_1.None)));\n                    break;\n                default:\n                    predicate = and(property(\"name\", equals(this._name)), property(\"namespace\", equals(namespace)));\n            }\n            return alfa_iterable_1.Iterable.some(element.attributes, and(predicate, (attribute) => this.matchesValue(attribute.value)));\n        }\n        return element\n            .attribute(this._name)\n            .some((attribute) => this.matchesValue(attribute.value));\n    }\n    matchesValue(value) {\n        for (const modifier of this._modifier) {\n            switch (modifier) {\n                case Attribute.Modifier.CaseInsensitive:\n                    value = value.toLowerCase();\n            }\n        }\n        for (const match of this._value) {\n            switch (this._matcher.getOr(Attribute.Matcher.Equal)) {\n                case Attribute.Matcher.Equal:\n                    return value === match;\n                case Attribute.Matcher.Prefix:\n                    return value.startsWith(match);\n                case Attribute.Matcher.Suffix:\n                    return value.endsWith(match);\n                case Attribute.Matcher.Substring:\n                    return value.includes(match);\n                case Attribute.Matcher.DashMatch:\n                    return value === match || value.startsWith(`${match}-`);\n                case Attribute.Matcher.Includes:\n                    return value.split(/\\s+/).some(equals(match));\n            }\n        }\n        return true;\n    }\n    equals(value) {\n        return (value instanceof Attribute &&\n            value._namespace.equals(this._namespace) &&\n            value._name === this._name &&\n            value._value.equals(this._value) &&\n            value._matcher.equals(this._matcher) &&\n            value._modifier.equals(this._modifier));\n    }\n    *[Symbol.iterator]() {\n        yield this;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            namespace: this._namespace.getOr(null),\n            value: this._value.getOr(null),\n            matcher: this._matcher.getOr(null),\n            modifier: this._modifier.getOr(null),\n        };\n    }\n    toString() {\n        const namespace = this._namespace\n            .map((namespace) => `${namespace}|`)\n            .getOr(\"\");\n        const value = this._value\n            .map((value) => `\"${JSON.stringify(value)}\"`)\n            .getOr(\"\");\n        const matcher = this._matcher.getOr(\"\");\n        const modifier = this._modifier.map((modifier) => ` ${modifier}`).getOr(\"\");\n        return `[${namespace}${this._name}${matcher}${value}${modifier}]`;\n    }\n}\nexports.Attribute = Attribute;\n/**\n * @public\n */\n(function (Attribute) {\n    let Matcher;\n    (function (Matcher) {\n        /**\n         * @example [foo=bar]\n         */\n        Matcher[\"Equal\"] = \"=\";\n        /**\n         * @example [foo~=bar]\n         */\n        Matcher[\"Includes\"] = \"~=\";\n        /**\n         * @example [foo|=bar]\n         */\n        Matcher[\"DashMatch\"] = \"|=\";\n        /**\n         * @example [foo^=bar]\n         */\n        Matcher[\"Prefix\"] = \"^=\";\n        /**\n         * @example [foo$=bar]\n         */\n        Matcher[\"Suffix\"] = \"$=\";\n        /**\n         * @example [foo*=bar]\n         */\n        Matcher[\"Substring\"] = \"*=\";\n    })(Matcher = Attribute.Matcher || (Attribute.Matcher = {}));\n    let Modifier;\n    (function (Modifier) {\n        /**\n         * @example [foo=bar i]\n         */\n        Modifier[\"CaseInsensitive\"] = \"i\";\n        /**\n         * @example [foo=Bar s]\n         */\n        Modifier[\"CaseSensitive\"] = \"s\";\n    })(Modifier = Attribute.Modifier || (Attribute.Modifier = {}));\n    function isAttribute(value) {\n        return value instanceof Attribute;\n    }\n    Attribute.isAttribute = isAttribute;\n    /**\n     * {@link https://drafts.csswg.org/selectors/#typedef-attr-matcher}\n     */\n    const parseMatcher = map(left(option(either(alfa_css_1.Token.parseDelim(\"~\"), alfa_css_1.Token.parseDelim(\"|\"), alfa_css_1.Token.parseDelim(\"^\"), alfa_css_1.Token.parseDelim(\"$\"), alfa_css_1.Token.parseDelim(\"*\"))), alfa_css_1.Token.parseDelim(\"=\")), (delim) => delim.isSome()\n        ? `${delim.get()}=`\n        : Attribute.Matcher.Equal);\n    /**\n     * {@link https://drafts.csswg.org/selectors/#typedef-attr-modifier}\n     */\n    const parseModifier = either(map(alfa_css_1.Token.parseIdent(\"i\"), () => Attribute.Modifier.CaseInsensitive), map(alfa_css_1.Token.parseIdent(\"s\"), () => Attribute.Modifier.CaseSensitive));\n    /**\n     * {@link https://drafts.csswg.org/selectors/#typedef-attribute-selector}\n     *\n     * @internal\n     */\n    Attribute.parse = map(delimited(alfa_css_1.Token.parseOpenSquareBracket, pair(parser_1.parseName, option(pair(pair(parseMatcher, either(alfa_css_1.Token.parseString(), alfa_css_1.Token.parseIdent())), delimited(option(alfa_css_1.Token.parseWhitespace), option(parseModifier))))), alfa_css_1.Token.parseCloseSquareBracket), (result) => {\n        const [[namespace, name], rest] = result;\n        if (rest.isSome()) {\n            const [[matcher, value], modifier] = rest.get();\n            return Attribute.of(namespace, name, alfa_option_1.Option.of(value.value), alfa_option_1.Option.of(matcher), modifier);\n        }\n        return Attribute.of(namespace, name);\n    });\n})(Attribute || (exports.Attribute = Attribute = {}));\n//# sourceMappingURL=attribute.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/src/selector/simple/attribute.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/src/selector/simple/class.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/src/selector/simple/class.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Class = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst specificity_1 = __webpack_require__(/*! ../../specificity */ \"./node_modules/@siteimprove/alfa-selector/src/specificity.js\");\nconst selector_1 = __webpack_require__(/*! ../selector */ \"./node_modules/@siteimprove/alfa-selector/src/selector/selector.js\");\nconst { map, right } = alfa_parser_1.Parser;\n/**\n * {@link https://drafts.csswg.org/selectors/#class-selector}\n *\n * @public\n */\nclass Class extends selector_1.WithName {\n    static of(name) {\n        return new Class(name);\n    }\n    constructor(name) {\n        super(\"class\", name, specificity_1.Specificity.of(0, 1, 0));\n        this._key = alfa_option_1.Option.of(this);\n    }\n    matches(element) {\n        return alfa_iterable_1.Iterable.includes(element.classes, this._name);\n    }\n    equals(value) {\n        return value instanceof Class && value._name === this._name;\n    }\n    *[Symbol.iterator]() {\n        yield this;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n        };\n    }\n    toString() {\n        return `.${this._name}`;\n    }\n}\nexports.Class = Class;\n/**\n * @public\n */\n(function (Class) {\n    function isClass(value) {\n        return value instanceof Class;\n    }\n    Class.isClass = isClass;\n    /**\n     * @internal\n     */\n    Class.parse = map(right(alfa_css_1.Token.parseDelim(\".\"), alfa_css_1.Token.parseIdent()), (ident) => Class.of(ident.value));\n})(Class || (exports.Class = Class = {}));\n//# sourceMappingURL=class.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/src/selector/simple/class.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/src/selector/simple/id.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/src/selector/simple/id.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Id = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst specificity_1 = __webpack_require__(/*! ../../specificity */ \"./node_modules/@siteimprove/alfa-selector/src/specificity.js\");\nconst selector_1 = __webpack_require__(/*! ../selector */ \"./node_modules/@siteimprove/alfa-selector/src/selector/selector.js\");\nconst { map } = alfa_parser_1.Parser;\n/**\n * {@link https://drafts.csswg.org/selectors/#id-selector}\n *\n * @public\n */\nclass Id extends selector_1.WithName {\n    static of(name) {\n        return new Id(name);\n    }\n    constructor(name) {\n        super(\"id\", name, specificity_1.Specificity.of(1, 0, 0));\n        this._key = alfa_option_1.Option.of(this);\n    }\n    matches(element) {\n        return element.id.includes(this._name);\n    }\n    equals(value) {\n        return value instanceof Id && value._name === this._name;\n    }\n    *[Symbol.iterator]() {\n        yield this;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n        };\n    }\n    toString() {\n        return `#${this._name}`;\n    }\n}\nexports.Id = Id;\n/**\n * @public\n */\n(function (Id) {\n    function isId(value) {\n        return value instanceof Id;\n    }\n    Id.isId = isId;\n    /**\n     * {@link https://drafts.csswg.org/selectors/#typedef-id-selector}\n     *\n     * @internal\n     */\n    Id.parse = map(alfa_css_1.Token.parseHash((hash) => hash.isIdentifier), (hash) => Id.of(hash.value));\n})(Id || (exports.Id = Id = {}));\n//# sourceMappingURL=id.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/src/selector/simple/id.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/src/selector/simple/index.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/src/selector/simple/index.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Simple = void 0;\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\n// Import the various simple selectors for use in that file.\nconst attribute_1 = __webpack_require__(/*! ./attribute */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/attribute.js\");\nconst class_1 = __webpack_require__(/*! ./class */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/class.js\");\nconst id_1 = __webpack_require__(/*! ./id */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/id.js\");\nconst pseudo_class_1 = __webpack_require__(/*! ./pseudo-class */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/index.js\");\nconst index_1 = __webpack_require__(/*! ./pseudo-element/index */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/index.js\");\nconst type_1 = __webpack_require__(/*! ./type */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/type.js\");\nconst universal_1 = __webpack_require__(/*! ./universal */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/universal.js\");\n// Re-export the various selectors for use by others\n__exportStar(__webpack_require__(/*! ./attribute */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/attribute.js\"), exports);\n__exportStar(__webpack_require__(/*! ./class */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/class.js\"), exports);\n__exportStar(__webpack_require__(/*! ./id */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/id.js\"), exports);\n__exportStar(__webpack_require__(/*! ./pseudo-class */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./pseudo-element */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./type */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/type.js\"), exports);\n__exportStar(__webpack_require__(/*! ./universal */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/universal.js\"), exports);\nconst { either } = alfa_parser_1.Parser;\n/**\n * @public\n */\nvar Simple;\n(function (Simple) {\n    function isSimple(value) {\n        return (type_1.Type.isType(value) ||\n            universal_1.Universal.isUniversal(value) ||\n            attribute_1.Attribute.isAttribute(value) ||\n            class_1.Class.isClass(value) ||\n            id_1.Id.isId(value) ||\n            pseudo_class_1.PseudoClass.isPseudoClass(value) ||\n            index_1.PseudoElement.isPseudoElement(value));\n    }\n    Simple.isSimple = isSimple;\n    /**\n     * {@link https://drafts.csswg.org/selectors/#typedef-simple-selector}\n     *\n     * @internal\n     */\n    Simple.parse = (parseSelector) => either(class_1.Class.parse, type_1.Type.parse, attribute_1.Attribute.parse, id_1.Id.parse, universal_1.Universal.parse, pseudo_class_1.PseudoClass.parse(parseSelector), index_1.PseudoElement.parse(parseSelector));\n})(Simple || (exports.Simple = Simple = {}));\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/src/selector/simple/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/src/selector/simple/parser.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/src/selector/simple/parser.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.parseName = exports.parseNamespace = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst { either, left, map, option, pair } = alfa_parser_1.Parser;\n/**\n * {@link https://drafts.csswg.org/selectors/#typedef-ns-prefix}\n *\n * @internal\n */\nexports.parseNamespace = map(left(option(either(alfa_css_1.Token.parseIdent(), alfa_css_1.Token.parseDelim(\"*\"))), alfa_css_1.Token.parseDelim(\"|\")), (token) => token.map((token) => token.toString()).getOr(\"\"));\n/**\n * {@link https://drafts.csswg.org/selectors/#typedef-wq-name}\n *\n * @internal\n */\nexports.parseName = pair(option(exports.parseNamespace), map(alfa_css_1.Token.parseIdent(), (ident) => ident.value));\n//# sourceMappingURL=parser.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/src/selector/simple/parser.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/active.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/active.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Active = void 0;\nconst context_1 = __webpack_require__(/*! ../../../context */ \"./node_modules/@siteimprove/alfa-selector/src/context.js\");\nconst pseudo_class_1 = __webpack_require__(/*! ./pseudo-class */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/pseudo-class.js\");\n/**\n * {@link https://drafts.csswg.org/selectors/#active-pseudo}\n */\nclass Active extends pseudo_class_1.PseudoClassSelector {\n    static of() {\n        return new Active();\n    }\n    constructor() {\n        super(\"active\");\n    }\n    /** @public (knip) */\n    *[Symbol.iterator]() {\n        yield this;\n    }\n    matches(element, context = context_1.Context.empty()) {\n        return context.isActive(element);\n    }\n    toJSON() {\n        return super.toJSON();\n    }\n}\nexports.Active = Active;\n(function (Active) {\n    Active.parse = pseudo_class_1.PseudoClassSelector.parseNonFunctional(\"active\", Active.of);\n})(Active || (exports.Active = Active = {}));\n//# sourceMappingURL=active.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/active.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/disabled.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/disabled.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Disabled = void 0;\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst context_1 = __webpack_require__(/*! ../../../context */ \"./node_modules/@siteimprove/alfa-selector/src/context.js\");\nconst pseudo_class_1 = __webpack_require__(/*! ./pseudo-class */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/pseudo-class.js\");\n/**\n * {@link https://drafts.csswg.org/selectors/#enableddisabled}\n * {@link https://html.spec.whatwg.org/multipage#selector-disabled}\n */\nclass Disabled extends pseudo_class_1.PseudoClassSelector {\n    static of() {\n        return new Disabled();\n    }\n    constructor() {\n        super(\"disabled\");\n    }\n    /** @public (knip) */\n    *[Symbol.iterator]() {\n        yield this;\n    }\n    matches(element, context = context_1.Context.empty()) {\n        return alfa_dom_1.Element.isActuallyDisabled(element);\n    }\n    toJSON() {\n        return super.toJSON();\n    }\n}\nexports.Disabled = Disabled;\n(function (Disabled) {\n    Disabled.parse = pseudo_class_1.PseudoClassSelector.parseNonFunctional(\"disabled\", Disabled.of);\n})(Disabled || (exports.Disabled = Disabled = {}));\n//# sourceMappingURL=disabled.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/disabled.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/empty.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/empty.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Empty = void 0;\nconst pseudo_class_1 = __webpack_require__(/*! ./pseudo-class */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/pseudo-class.js\");\n/**\n * {@link https://drafts.csswg.org/selectors/#empty-pseudo}\n */\nclass Empty extends pseudo_class_1.PseudoClassSelector {\n    static of() {\n        return new Empty();\n    }\n    constructor() {\n        super(\"empty\");\n    }\n    /** @public (knip) */\n    *[Symbol.iterator]() {\n        yield this;\n    }\n    matches(element) {\n        return element.children().isEmpty();\n    }\n    toJSON() {\n        return super.toJSON();\n    }\n}\nexports.Empty = Empty;\n(function (Empty) {\n    Empty.parse = pseudo_class_1.PseudoClassSelector.parseNonFunctional(\"empty\", Empty.of);\n})(Empty || (exports.Empty = Empty = {}));\n//# sourceMappingURL=empty.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/empty.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/enabled.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/enabled.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Enabled = void 0;\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst context_1 = __webpack_require__(/*! ../../../context */ \"./node_modules/@siteimprove/alfa-selector/src/context.js\");\nconst pseudo_class_1 = __webpack_require__(/*! ./pseudo-class */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/pseudo-class.js\");\nconst { hasName } = alfa_dom_1.Element;\nconst { and, not, test } = alfa_predicate_1.Predicate;\n/**\n * {@link https://drafts.csswg.org/selectors/#enableddisabled}\n * {@link https://html.spec.whatwg.org/multipage#selector-enabled}\n */\nclass Enabled extends pseudo_class_1.PseudoClassSelector {\n    static of() {\n        return new Enabled();\n    }\n    constructor() {\n        super(\"enabled\");\n    }\n    /** @public (knip) */\n    *[Symbol.iterator]() {\n        yield this;\n    }\n    matches(element, context = context_1.Context.empty()) {\n        return test(and(hasName(\"button\", \"input\", \"select\", \"textarea\", \"optgroup\", \"option\", \"fieldset\"), not(alfa_dom_1.Element.isActuallyDisabled)), element);\n    }\n    toJSON() {\n        return super.toJSON();\n    }\n}\nexports.Enabled = Enabled;\n(function (Enabled) {\n    Enabled.parse = pseudo_class_1.PseudoClassSelector.parseNonFunctional(\"enabled\", Enabled.of);\n})(Enabled || (exports.Enabled = Enabled = {}));\n//# sourceMappingURL=enabled.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/enabled.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/first-child.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/first-child.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FirstChild = void 0;\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst pseudo_class_1 = __webpack_require__(/*! ./pseudo-class */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/pseudo-class.js\");\nconst { isElement } = alfa_dom_1.Element;\n/**\n * {@link https://drafts.csswg.org/selectors/#first-child-pseudo}\n */\nclass FirstChild extends pseudo_class_1.PseudoClassSelector {\n    static of() {\n        return new FirstChild();\n    }\n    constructor() {\n        super(\"first-child\");\n    }\n    /** @public (knip) */\n    *[Symbol.iterator]() {\n        yield this;\n    }\n    matches(element) {\n        return element\n            .inclusiveSiblings()\n            .filter(isElement)\n            .first()\n            .includes(element);\n    }\n    toJSON() {\n        return super.toJSON();\n    }\n}\nexports.FirstChild = FirstChild;\n(function (FirstChild) {\n    FirstChild.parse = pseudo_class_1.PseudoClassSelector.parseNonFunctional(\"first-child\", FirstChild.of);\n})(FirstChild || (exports.FirstChild = FirstChild = {}));\n//# sourceMappingURL=first-child.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/first-child.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/first-of-type.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/first-of-type.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FirstOfType = void 0;\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst pseudo_class_1 = __webpack_require__(/*! ./pseudo-class */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/pseudo-class.js\");\nconst { hasName, isElement } = alfa_dom_1.Element;\n/**\n * {@link https://drafts.csswg.org/selectors/#first-of-type-pseudo}\n */\nclass FirstOfType extends pseudo_class_1.PseudoClassSelector {\n    static of() {\n        return new FirstOfType();\n    }\n    constructor() {\n        super(\"first-of-type\");\n    }\n    /** @public (knip) */\n    *[Symbol.iterator]() {\n        yield this;\n    }\n    matches(element) {\n        return element\n            .inclusiveSiblings()\n            .filter(isElement)\n            .filter(hasName(element.name))\n            .first()\n            .includes(element);\n    }\n    toJSON() {\n        return super.toJSON();\n    }\n}\nexports.FirstOfType = FirstOfType;\n(function (FirstOfType) {\n    FirstOfType.parse = pseudo_class_1.PseudoClassSelector.parseNonFunctional(\"first-of-type\", FirstOfType.of);\n})(FirstOfType || (exports.FirstOfType = FirstOfType = {}));\n//# sourceMappingURL=first-of-type.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/first-of-type.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/focus-visible.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/focus-visible.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FocusVisible = void 0;\nconst context_1 = __webpack_require__(/*! ../../../context */ \"./node_modules/@siteimprove/alfa-selector/src/context.js\");\nconst pseudo_class_1 = __webpack_require__(/*! ./pseudo-class */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/pseudo-class.js\");\n/**\n * {@link https://drafts.csswg.org/selectors/#the-focus-visible-pseudo}\n */\nclass FocusVisible extends pseudo_class_1.PseudoClassSelector {\n    static of() {\n        return new FocusVisible();\n    }\n    constructor() {\n        super(\"focus-visible\");\n    }\n    /** @public (knip) */\n    *[Symbol.iterator]() {\n        yield this;\n    }\n    matches(element, context = context_1.Context.empty()) {\n        // :focus-visible matches elements that are focused and where UA decides\n        // focus should be shown. That is notably text fields and keyboard-focused\n        // elements (some UA don't show focus indicator on mouse-focused elements)\n        // For the purposes of accessibility testing, we currently assume that\n        // we always want to look at a mode where the focus is visible. This is\n        // notably due to the fact that it is a UA decision, and therefore not\n        // a problem for the authors to fix if done incorrectly.\n        return context.isFocused(element);\n    }\n}\nexports.FocusVisible = FocusVisible;\n(function (FocusVisible) {\n    FocusVisible.parse = pseudo_class_1.PseudoClassSelector.parseNonFunctional(\"focus-visible\", FocusVisible.of);\n})(FocusVisible || (exports.FocusVisible = FocusVisible = {}));\n//# sourceMappingURL=focus-visible.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/focus-visible.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/focus-within.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/focus-within.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FocusWithin = void 0;\nconst alfa_cache_1 = __webpack_require__(/*! @siteimprove/alfa-cache */ \"./node_modules/@siteimprove/alfa-cache/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_sequence_1 = __webpack_require__(/*! @siteimprove/alfa-sequence */ \"./node_modules/@siteimprove/alfa-selector/node_modules/@siteimprove/alfa-sequence/src/index.js\");\nconst context_1 = __webpack_require__(/*! ../../../context */ \"./node_modules/@siteimprove/alfa-selector/src/context.js\");\nconst pseudo_class_1 = __webpack_require__(/*! ./pseudo-class */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/pseudo-class.js\");\nconst { State } = context_1.Context;\n/**\n * {@link https://drafts.csswg.org/selectors/#focus-within-pseudo}\n */\nclass FocusWithin extends pseudo_class_1.PseudoClassSelector {\n    static of() {\n        return new FocusWithin();\n    }\n    constructor() {\n        super(\"focus-within\");\n    }\n    /** @public (knip) */\n    *[Symbol.iterator]() {\n        yield this;\n    }\n    matches(element, context = context_1.Context.empty()) {\n        return FocusWithin._cache.get(element, alfa_cache_1.Cache.empty).get(context, () => {\n            // We assume that most of the time the context is near empty and thus it\n            // is inexpensive to check if something is in it.\n            const focused = alfa_sequence_1.Sequence.from(context.withState(State.Focus));\n            return (focused.size !== 0 &&\n                element\n                    .inclusiveDescendants(alfa_dom_1.Node.fullTree)\n                    .some((descendant) => focused.includes(descendant)));\n        });\n    }\n    toJSON() {\n        return super.toJSON();\n    }\n}\nexports.FocusWithin = FocusWithin;\nFocusWithin._cache = alfa_cache_1.Cache.empty();\n(function (FocusWithin) {\n    FocusWithin.parse = pseudo_class_1.PseudoClassSelector.parseNonFunctional(\"focus-within\", FocusWithin.of);\n})(FocusWithin || (exports.FocusWithin = FocusWithin = {}));\n//# sourceMappingURL=focus-within.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/focus-within.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/focus.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/focus.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Focus = void 0;\nconst context_1 = __webpack_require__(/*! ../../../context */ \"./node_modules/@siteimprove/alfa-selector/src/context.js\");\nconst pseudo_class_1 = __webpack_require__(/*! ./pseudo-class */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/pseudo-class.js\");\n/**\n * {@link https://drafts.csswg.org/selectors/#focus-pseudo}\n */\nclass Focus extends pseudo_class_1.PseudoClassSelector {\n    static of() {\n        return new Focus();\n    }\n    constructor() {\n        super(\"focus\");\n    }\n    /** @public (knip) */\n    *[Symbol.iterator]() {\n        yield this;\n    }\n    matches(element, context = context_1.Context.empty()) {\n        return context.isFocused(element);\n    }\n    toJSON() {\n        return super.toJSON();\n    }\n}\nexports.Focus = Focus;\n(function (Focus) {\n    Focus.parse = pseudo_class_1.PseudoClassSelector.parseNonFunctional(\"focus\", Focus.of);\n})(Focus || (exports.Focus = Focus = {}));\n//# sourceMappingURL=focus.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/focus.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/has.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/has.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Has = void 0;\nconst pseudo_class_1 = __webpack_require__(/*! ./pseudo-class */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/pseudo-class.js\");\n/**\n * {@link https://drafts.csswg.org/selectors/#has-pseudo}\n */\nclass Has extends pseudo_class_1.WithSelector {\n    static of(selector) {\n        return new Has(selector);\n    }\n    constructor(selector) {\n        super(\"has\", selector, selector.specificity);\n    }\n    /** @public (knip) */\n    *[Symbol.iterator]() {\n        yield this;\n    }\n    equals(value) {\n        return value instanceof Has && value._selector.equals(this._selector);\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n        };\n    }\n}\nexports.Has = Has;\n(function (Has) {\n    // :has() normally only accepts relative selectors, we currently\n    // accept only non-relative ones…\n    Has.parse = (parseSelector) => pseudo_class_1.WithSelector.parseWithSelector(\"has\", parseSelector, Has.of);\n})(Has || (exports.Has = Has = {}));\n//# sourceMappingURL=has.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/has.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/host.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/host.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Host = void 0;\nconst pseudo_class_1 = __webpack_require__(/*! ./pseudo-class */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/pseudo-class.js\");\n/**\n * {@link https://drafts.csswg.org/css-scoping-1/#selectordef-host}\n */\nclass Host extends pseudo_class_1.PseudoClassSelector {\n    static of() {\n        return new Host();\n    }\n    constructor() {\n        super(\"host\");\n    }\n    /** @public (knip) */\n    *[Symbol.iterator]() {\n        yield this;\n    }\n    toJSON() {\n        return super.toJSON();\n    }\n}\nexports.Host = Host;\n(function (Host) {\n    Host.parse = pseudo_class_1.PseudoClassSelector.parseNonFunctional(\"host\", Host.of);\n})(Host || (exports.Host = Host = {}));\n//# sourceMappingURL=host.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/host.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/hover.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/hover.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Hover = void 0;\nconst alfa_cache_1 = __webpack_require__(/*! @siteimprove/alfa-cache */ \"./node_modules/@siteimprove/alfa-cache/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_sequence_1 = __webpack_require__(/*! @siteimprove/alfa-sequence */ \"./node_modules/@siteimprove/alfa-selector/node_modules/@siteimprove/alfa-sequence/src/index.js\");\nconst context_1 = __webpack_require__(/*! ../../../context */ \"./node_modules/@siteimprove/alfa-selector/src/context.js\");\nconst pseudo_class_1 = __webpack_require__(/*! ./pseudo-class */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/pseudo-class.js\");\nconst { State } = context_1.Context;\n/**\n * {@link https://drafts.csswg.org/selectors/#hover-pseudo}\n */\nclass Hover extends pseudo_class_1.PseudoClassSelector {\n    static of() {\n        return new Hover();\n    }\n    constructor() {\n        super(\"hover\");\n    }\n    /** @public (knip) */\n    *[Symbol.iterator]() {\n        yield this;\n    }\n    matches(element, context = context_1.Context.empty()) {\n        return Hover._cache.get(element, alfa_cache_1.Cache.empty).get(context, () => {\n            // We assume that most of the time the context is near empty and thus it\n            // is inexpensive to check if something is in it.\n            const hovered = alfa_sequence_1.Sequence.from(context.withState(State.Hover));\n            return (hovered.size !== 0 &&\n                element\n                    .inclusiveDescendants(alfa_dom_1.Node.fullTree)\n                    .some((descendant) => hovered.includes(descendant)));\n        });\n    }\n    toJSON() {\n        return super.toJSON();\n    }\n}\nexports.Hover = Hover;\nHover._cache = alfa_cache_1.Cache.empty();\n(function (Hover) {\n    Hover.parse = pseudo_class_1.PseudoClassSelector.parseNonFunctional(\"hover\", Hover.of);\n})(Hover || (exports.Hover = Hover = {}));\n//# sourceMappingURL=hover.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/hover.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/index.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/index.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PseudoClass = void 0;\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst active_1 = __webpack_require__(/*! ./active */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/active.js\");\nconst disabled_1 = __webpack_require__(/*! ./disabled */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/disabled.js\");\nconst empty_1 = __webpack_require__(/*! ./empty */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/empty.js\");\nconst enabled_1 = __webpack_require__(/*! ./enabled */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/enabled.js\");\nconst first_child_1 = __webpack_require__(/*! ./first-child */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/first-child.js\");\nconst first_of_type_1 = __webpack_require__(/*! ./first-of-type */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/first-of-type.js\");\nconst focus_1 = __webpack_require__(/*! ./focus */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/focus.js\");\nconst focus_visible_1 = __webpack_require__(/*! ./focus-visible */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/focus-visible.js\");\nconst focus_within_1 = __webpack_require__(/*! ./focus-within */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/focus-within.js\");\nconst has_1 = __webpack_require__(/*! ./has */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/has.js\");\nconst host_1 = __webpack_require__(/*! ./host */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/host.js\");\nconst hover_1 = __webpack_require__(/*! ./hover */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/hover.js\");\nconst is_1 = __webpack_require__(/*! ./is */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/is.js\");\nconst last_child_1 = __webpack_require__(/*! ./last-child */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/last-child.js\");\nconst last_of_type_1 = __webpack_require__(/*! ./last-of-type */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/last-of-type.js\");\nconst link_1 = __webpack_require__(/*! ./link */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/link.js\");\nconst not_1 = __webpack_require__(/*! ./not */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/not.js\");\nconst nth_child_1 = __webpack_require__(/*! ./nth-child */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/nth-child.js\");\nconst nth_last_child_1 = __webpack_require__(/*! ./nth-last-child */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/nth-last-child.js\");\nconst nth_last_of_type_1 = __webpack_require__(/*! ./nth-last-of-type */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/nth-last-of-type.js\");\nconst nth_of_type_1 = __webpack_require__(/*! ./nth-of-type */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/nth-of-type.js\");\nconst only_child_1 = __webpack_require__(/*! ./only-child */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/only-child.js\");\nconst only_of_type_1 = __webpack_require__(/*! ./only-of-type */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/only-of-type.js\");\nconst root_1 = __webpack_require__(/*! ./root */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/root.js\");\nconst visited_1 = __webpack_require__(/*! ./visited */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/visited.js\");\nconst where_1 = __webpack_require__(/*! ./where */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/where.js\");\nconst pseudo_class_1 = __webpack_require__(/*! ./pseudo-class */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/pseudo-class.js\");\nconst { either } = alfa_parser_1.Parser;\n/**\n * @public\n */\nvar PseudoClass;\n(function (PseudoClass) {\n    function isPseudoClass(value) {\n        // Note: this is not totally true as we could extend PseudoClassSelector\n        // without making it a PseudoClass. We're likely having other problems in\n        // that case…\n        return value instanceof pseudo_class_1.PseudoClassSelector;\n    }\n    PseudoClass.isPseudoClass = isPseudoClass;\n    function parse(parseSelector) {\n        return either(active_1.Active.parse, disabled_1.Disabled.parse, empty_1.Empty.parse, enabled_1.Enabled.parse, first_child_1.FirstChild.parse, first_of_type_1.FirstOfType.parse, focus_1.Focus.parse, focus_visible_1.FocusVisible.parse, focus_within_1.FocusWithin.parse, host_1.Host.parse, hover_1.Hover.parse, last_child_1.LastChild.parse, last_of_type_1.LastOfType.parse, link_1.Link.parse, only_child_1.OnlyChild.parse, only_of_type_1.OnlyOfType.parse, root_1.Root.parse, visited_1.Visited.parse, nth_child_1.NthChild.parse(parseSelector), nth_last_child_1.NthLastChild.parse(parseSelector), nth_last_of_type_1.NthLastOfType.parse, nth_of_type_1.NthOfType.parse, has_1.Has.parse(parseSelector), is_1.Is.parse(parseSelector), not_1.Not.parse(parseSelector), where_1.Where.parse(parseSelector));\n    }\n    PseudoClass.parse = parse;\n})(PseudoClass || (exports.PseudoClass = PseudoClass = {}));\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/is.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/is.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Is = void 0;\nconst pseudo_class_1 = __webpack_require__(/*! ./pseudo-class */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/pseudo-class.js\");\n/**\n * {@link https://drafts.csswg.org/selectors/#matches-pseudo}\n */\nclass Is extends pseudo_class_1.WithSelector {\n    static of(selector) {\n        return new Is(selector);\n    }\n    constructor(selector) {\n        super(\"is\", selector, selector.specificity);\n    }\n    /** @public (knip) */\n    *[Symbol.iterator]() {\n        yield this;\n    }\n    matches(element, context) {\n        return this._selector.matches(element, context);\n    }\n    equals(value) {\n        return value instanceof Is && value._selector.equals(this._selector);\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n        };\n    }\n}\nexports.Is = Is;\n(function (Is) {\n    Is.parse = (parseSelector) => pseudo_class_1.WithSelector.parseWithSelector(\"is\", parseSelector, Is.of);\n})(Is || (exports.Is = Is = {}));\n//# sourceMappingURL=is.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/is.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/last-child.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/last-child.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.LastChild = void 0;\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst pseudo_class_1 = __webpack_require__(/*! ./pseudo-class */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/pseudo-class.js\");\nconst { isElement } = alfa_dom_1.Element;\n/**\n * {@link https://drafts.csswg.org/selectors/#last-child-pseudo}\n */\nclass LastChild extends pseudo_class_1.PseudoClassSelector {\n    static of() {\n        return new LastChild();\n    }\n    constructor() {\n        super(\"last-child\");\n    }\n    /** @public (knip) */\n    *[Symbol.iterator]() {\n        yield this;\n    }\n    matches(element) {\n        return element\n            .inclusiveSiblings()\n            .filter(isElement)\n            .last()\n            .includes(element);\n    }\n    toJSON() {\n        return super.toJSON();\n    }\n}\nexports.LastChild = LastChild;\n(function (LastChild) {\n    LastChild.parse = pseudo_class_1.PseudoClassSelector.parseNonFunctional(\"last-child\", LastChild.of);\n})(LastChild || (exports.LastChild = LastChild = {}));\n//# sourceMappingURL=last-child.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/last-child.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/last-of-type.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/last-of-type.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.LastOfType = void 0;\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst pseudo_class_1 = __webpack_require__(/*! ./pseudo-class */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/pseudo-class.js\");\nconst { hasName, isElement } = alfa_dom_1.Element;\n/**\n * {@link https://drafts.csswg.org/selectors/#last-of-type-pseudo}\n */\nclass LastOfType extends pseudo_class_1.PseudoClassSelector {\n    static of() {\n        return new LastOfType();\n    }\n    constructor() {\n        super(\"last-of-type\");\n    }\n    /** @public (knip) */\n    *[Symbol.iterator]() {\n        yield this;\n    }\n    matches(element) {\n        return element\n            .inclusiveSiblings()\n            .filter(isElement)\n            .filter(hasName(element.name))\n            .last()\n            .includes(element);\n    }\n    toJSON() {\n        return super.toJSON();\n    }\n}\nexports.LastOfType = LastOfType;\n(function (LastOfType) {\n    LastOfType.parse = pseudo_class_1.PseudoClassSelector.parseNonFunctional(\"last-of-type\", LastOfType.of);\n})(LastOfType || (exports.LastOfType = LastOfType = {}));\n//# sourceMappingURL=last-of-type.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/last-of-type.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/link.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/link.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Link = void 0;\nconst context_1 = __webpack_require__(/*! ../../../context */ \"./node_modules/@siteimprove/alfa-selector/src/context.js\");\nconst pseudo_class_1 = __webpack_require__(/*! ./pseudo-class */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/pseudo-class.js\");\n/**\n * {@link https://drafts.csswg.org/selectors/#link-pseudo}\n */\nclass Link extends pseudo_class_1.PseudoClassSelector {\n    static of() {\n        return new Link();\n    }\n    constructor() {\n        super(\"link\");\n    }\n    /** @public (knip) */\n    *[Symbol.iterator]() {\n        yield this;\n    }\n    matches(element, context = context_1.Context.empty()) {\n        switch (element.name) {\n            case \"a\":\n            case \"area\":\n            case \"link\":\n                return element\n                    .attribute(\"href\")\n                    .some(() => !context.hasState(element, context_1.Context.State.Visited));\n        }\n        return false;\n    }\n    toJSON() {\n        return super.toJSON();\n    }\n}\nexports.Link = Link;\n(function (Link) {\n    Link.parse = pseudo_class_1.PseudoClassSelector.parseNonFunctional(\"link\", Link.of);\n})(Link || (exports.Link = Link = {}));\n//# sourceMappingURL=link.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/link.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/not.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/not.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Not = void 0;\nconst pseudo_class_1 = __webpack_require__(/*! ./pseudo-class */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/pseudo-class.js\");\n/**\n * {@link https://drafts.csswg.org/selectors/#negation-pseudo}\n */\nclass Not extends pseudo_class_1.WithSelector {\n    static of(selector) {\n        return new Not(selector);\n    }\n    constructor(selector) {\n        super(\"not\", selector, selector.specificity);\n    }\n    /** @public (knip) */\n    *[Symbol.iterator]() {\n        yield this;\n    }\n    matches(element, context) {\n        return !this._selector.matches(element, context);\n    }\n    equals(value) {\n        return value instanceof Not && value._selector.equals(this._selector);\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n        };\n    }\n}\nexports.Not = Not;\n(function (Not) {\n    Not.parse = (parseSelector) => pseudo_class_1.WithSelector.parseWithSelector(\"not\", parseSelector, Not.of);\n})(Not || (exports.Not = Not = {}));\n//# sourceMappingURL=not.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/not.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/nth-child.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/nth-child.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.NthChild = void 0;\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst index_1 = __webpack_require__(/*! ../../index */ \"./node_modules/@siteimprove/alfa-selector/src/selector/index.js\");\nconst pseudo_class_1 = __webpack_require__(/*! ./pseudo-class */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/pseudo-class.js\");\nconst { isElement } = alfa_dom_1.Element;\n/**\n * {@link https://drafts.csswg.org/selectors/#nth-child-pseudo}\n */\nclass NthChild extends pseudo_class_1.WithIndexAndSelector {\n    static of(index, selector = alfa_option_1.None) {\n        return new NthChild(index, alfa_option_1.Maybe.toOption(selector));\n    }\n    constructor(index, selector) {\n        super(\"nth-child\", index, selector);\n        this._indices = new WeakMap();\n    }\n    /** @public (knip) */\n    *[Symbol.iterator]() {\n        yield this;\n    }\n    matches(element, context) {\n        if (!this._indices.has(element)) {\n            element\n                .inclusiveSiblings()\n                .filter(isElement)\n                .filter((element) => this._selector\n                .getOr(index_1.Universal.of(alfa_option_1.Option.of(\"*\")))\n                .matches(element, context))\n                .forEach((element, i) => {\n                this._indices.set(element, i + 1);\n            });\n        }\n        if (!this._indices.has(element)) {\n            return false;\n        }\n        return this._index.matches(this._indices.get(element));\n    }\n    equals(value) {\n        return value instanceof NthChild && super.equals(value);\n    }\n    toJSON() {\n        return super.toJSON();\n    }\n}\nexports.NthChild = NthChild;\n(function (NthChild) {\n    NthChild.parse = (parseSelector) => pseudo_class_1.WithIndexAndSelector.parseWithIndexAndSelector(\"nth-child\", parseSelector, NthChild.of);\n})(NthChild || (exports.NthChild = NthChild = {}));\n//# sourceMappingURL=nth-child.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/nth-child.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/nth-last-child.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/nth-last-child.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.NthLastChild = void 0;\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst index_1 = __webpack_require__(/*! ../../index */ \"./node_modules/@siteimprove/alfa-selector/src/selector/index.js\");\nconst pseudo_class_1 = __webpack_require__(/*! ./pseudo-class */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/pseudo-class.js\");\nconst { isElement } = alfa_dom_1.Element;\n/**\n * {@link https://drafts.csswg.org/selectors/#nth-last-child-pseudo}\n */\nclass NthLastChild extends pseudo_class_1.WithIndexAndSelector {\n    static of(index, selector = alfa_option_1.None) {\n        return new NthLastChild(index, alfa_option_1.Maybe.toOption(selector));\n    }\n    constructor(nth, selector) {\n        super(\"nth-last-child\", nth, selector);\n        this._indices = new WeakMap();\n    }\n    /** @public (knip) */\n    *[Symbol.iterator]() {\n        yield this;\n    }\n    matches(element, context) {\n        if (!this._indices.has(element)) {\n            element\n                .inclusiveSiblings()\n                .filter(isElement)\n                .filter((element) => this._selector\n                .getOr(index_1.Universal.of(alfa_option_1.Option.of(\"*\")))\n                .matches(element, context))\n                .reverse()\n                .forEach((element, i) => {\n                this._indices.set(element, i + 1);\n            });\n        }\n        if (!this._indices.has(element)) {\n            return false;\n        }\n        return this._index.matches(this._indices.get(element));\n    }\n    equals(value) {\n        return value instanceof NthLastChild && super.equals(value);\n    }\n    toJSON() {\n        return super.toJSON();\n    }\n}\nexports.NthLastChild = NthLastChild;\n(function (NthLastChild) {\n    NthLastChild.parse = (parseSelector) => pseudo_class_1.WithIndexAndSelector.parseWithIndexAndSelector(\"nth-last-child\", parseSelector, NthLastChild.of);\n})(NthLastChild || (exports.NthLastChild = NthLastChild = {}));\n//# sourceMappingURL=nth-last-child.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/nth-last-child.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/nth-last-of-type.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/nth-last-of-type.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.NthLastOfType = void 0;\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst pseudo_class_1 = __webpack_require__(/*! ./pseudo-class */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/pseudo-class.js\");\nconst { hasName, isElement } = alfa_dom_1.Element;\n/**\n * {@link https://drafts.csswg.org/selectors/#nth-last-of-type-pseudo}\n */\nclass NthLastOfType extends pseudo_class_1.WithIndex {\n    static of(index) {\n        return new NthLastOfType(index);\n    }\n    constructor(index) {\n        super(\"nth-last-of-type\", index);\n    }\n    /** @public (knip) */\n    *[Symbol.iterator]() {\n        yield this;\n    }\n    matches(element) {\n        const indices = NthLastOfType._indices;\n        if (!indices.has(element)) {\n            element\n                .inclusiveSiblings()\n                .filter(isElement)\n                .filter(hasName(element.name))\n                .reverse()\n                .forEach((element, i) => {\n                indices.set(element, i + 1);\n            });\n        }\n        return this._index.matches(indices.get(element));\n    }\n    equals(value) {\n        return value instanceof NthLastOfType && value._index.equals(this._index);\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n        };\n    }\n}\nexports.NthLastOfType = NthLastOfType;\n(function (NthLastOfType) {\n    NthLastOfType.parse = pseudo_class_1.WithIndex.parseWithIndex(\"nth-last-of-type\", NthLastOfType.of);\n})(NthLastOfType || (exports.NthLastOfType = NthLastOfType = {}));\n//# sourceMappingURL=nth-last-of-type.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/nth-last-of-type.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/nth-of-type.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/nth-of-type.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.NthOfType = void 0;\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst pseudo_class_1 = __webpack_require__(/*! ./pseudo-class */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/pseudo-class.js\");\nconst { hasName, isElement } = alfa_dom_1.Element;\n/**\n * {@link https://drafts.csswg.org/selectors/#nth-of-type-pseudo}\n */\nclass NthOfType extends pseudo_class_1.WithIndex {\n    static of(index) {\n        return new NthOfType(index);\n    }\n    constructor(index) {\n        super(\"nth-of-type\", index);\n    }\n    /** @public (knip) */\n    *[Symbol.iterator]() {\n        yield this;\n    }\n    matches(element) {\n        const indices = NthOfType._indices;\n        if (!indices.has(element)) {\n            element\n                .inclusiveSiblings()\n                .filter(isElement)\n                .filter(hasName(element.name))\n                .forEach((element, i) => {\n                indices.set(element, i + 1);\n            });\n        }\n        return this._index.matches(indices.get(element));\n    }\n    equals(value) {\n        return value instanceof NthOfType && value._index.equals(this._index);\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n        };\n    }\n}\nexports.NthOfType = NthOfType;\n(function (NthOfType) {\n    NthOfType.parse = pseudo_class_1.WithIndex.parseWithIndex(\"nth-of-type\", NthOfType.of);\n})(NthOfType || (exports.NthOfType = NthOfType = {}));\n//# sourceMappingURL=nth-of-type.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/nth-of-type.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/only-child.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/only-child.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.OnlyChild = void 0;\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst pseudo_class_1 = __webpack_require__(/*! ./pseudo-class */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/pseudo-class.js\");\nconst { isElement } = alfa_dom_1.Element;\n/**\n * {@link https://drafts.csswg.org/selectors/#only-child-pseudo}\n */\nclass OnlyChild extends pseudo_class_1.PseudoClassSelector {\n    static of() {\n        return new OnlyChild();\n    }\n    constructor() {\n        super(\"only-child\");\n    }\n    /** @public (knip) */\n    *[Symbol.iterator]() {\n        yield this;\n    }\n    matches(element) {\n        return element.inclusiveSiblings().filter(isElement).size === 1;\n    }\n    toJSON() {\n        return super.toJSON();\n    }\n}\nexports.OnlyChild = OnlyChild;\n(function (OnlyChild) {\n    OnlyChild.parse = pseudo_class_1.PseudoClassSelector.parseNonFunctional(\"only-child\", OnlyChild.of);\n})(OnlyChild || (exports.OnlyChild = OnlyChild = {}));\n//# sourceMappingURL=only-child.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/only-child.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/only-of-type.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/only-of-type.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.OnlyOfType = void 0;\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst pseudo_class_1 = __webpack_require__(/*! ./pseudo-class */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/pseudo-class.js\");\nconst { hasName, isElement } = alfa_dom_1.Element;\n/**\n * {@link https://drafts.csswg.org/selectors/#only-of-type-pseudo}\n */\nclass OnlyOfType extends pseudo_class_1.PseudoClassSelector {\n    static of() {\n        return new OnlyOfType();\n    }\n    constructor() {\n        super(\"only-of-type\");\n    }\n    /** @public (knip) */\n    *[Symbol.iterator]() {\n        yield this;\n    }\n    matches(element) {\n        return (element\n            .inclusiveSiblings()\n            .filter(isElement)\n            .filter(hasName(element.name)).size === 1);\n    }\n    toJSON() {\n        return super.toJSON();\n    }\n}\nexports.OnlyOfType = OnlyOfType;\n(function (OnlyOfType) {\n    OnlyOfType.parse = pseudo_class_1.PseudoClassSelector.parseNonFunctional(\"only-of-type\", OnlyOfType.of);\n})(OnlyOfType || (exports.OnlyOfType = OnlyOfType = {}));\n//# sourceMappingURL=only-of-type.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/only-of-type.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/pseudo-class.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/pseudo-class.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.WithIndexAndSelector = exports.WithSelector = exports.WithIndex = exports.PseudoClassSelector = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst specificity_1 = __webpack_require__(/*! ../../../specificity */ \"./node_modules/@siteimprove/alfa-selector/src/specificity.js\");\nconst selector_1 = __webpack_require__(/*! ../../selector */ \"./node_modules/@siteimprove/alfa-selector/src/selector/selector.js\");\nconst { delimited, end, left, map, option, pair, right } = alfa_parser_1.Parser;\nconst { parseColon, parseIdent, parseWhitespace } = alfa_css_1.Token;\n/**\n * @internal\n */\nclass PseudoClassSelector extends selector_1.WithName {\n    // Some pseudo-class manipulate specificity, so we cannot just set it\n    // to (0, 1, 0) for all and must allow for overwriting it.\n    // https://www.w3.org/TR/selectors/#specificity\n    constructor(name, specificity) {\n        super(\"pseudo-class\", name, specificity ?? specificity_1.Specificity.of(0, 1, 0));\n    }\n    equals(value) {\n        return value instanceof PseudoClassSelector && super.equals(value);\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n        };\n    }\n    toString() {\n        return `:${this._name}`;\n    }\n}\nexports.PseudoClassSelector = PseudoClassSelector;\n/**\n * @internal\n */\n(function (PseudoClassSelector) {\n    /**\n     * Parses a non-functional pseudo-class (`:<name>`)\n     */\n    function parseNonFunctional(name, of) {\n        return map(right(parseColon, alfa_css_1.Token.parseIdent(name)), of);\n    }\n    PseudoClassSelector.parseNonFunctional = parseNonFunctional;\n})(PseudoClassSelector || (exports.PseudoClassSelector = PseudoClassSelector = {}));\n/**\n * @internal\n */\nclass WithIndex extends PseudoClassSelector {\n    constructor(name, nth, specificity) {\n        super(name, specificity);\n        this._index = nth;\n    }\n    equals(value) {\n        return value instanceof WithIndex && value._index.equals(this._index);\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            index: this._index.toJSON(),\n        };\n    }\n    toString() {\n        return `:${this.name}(${this._index})`;\n    }\n}\nexports.WithIndex = WithIndex;\n// For pseudo-classes that do not filter the set of elements, we can use a static\n// map of sibling positions.\n// For pseudo-classes that may filter the set of elements, we need this to be\n// an instance map since two instances may have different extra selector and\n// set of candidates.\nWithIndex._indices = new WeakMap();\nconst parseNth = left(alfa_css_1.Nth.parse, end((token) => `Unexpected token ${token}`));\n/**\n * @internal\n */\n(function (WithIndex) {\n    /**\n     * Parses a functional pseudo-class accepting a nth argument (an+b)\n     *\n     * @privateRemarks\n     * This can't be named just \"parse\" as it is overwritten by subclasses with a\n     * different type of parameter (namely, the selector parser).\n     */\n    function parseWithIndex(name, of) {\n        return map(right(parseColon, alfa_css_1.Function.parse(name, parseNth)), ([, nth]) => of(nth));\n    }\n    WithIndex.parseWithIndex = parseWithIndex;\n})(WithIndex || (exports.WithIndex = WithIndex = {}));\n/**\n * @internal\n */\nclass WithSelector extends PseudoClassSelector {\n    constructor(name, selector, specificity) {\n        super(name, specificity);\n        this._selector = selector;\n    }\n    /** @public (knip) */\n    get selector() {\n        return this._selector;\n    }\n    equals(value) {\n        return (value instanceof WithSelector && value._selector.equals(this._selector));\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            selector: this._selector.toJSON(),\n        };\n    }\n    toString() {\n        return `:${this.name}(${this._selector})`;\n    }\n}\nexports.WithSelector = WithSelector;\n/**\n * @internal\n */\n(function (WithSelector) {\n    /**\n     * Parses a functional pseudo-class accepting a selector argument\n     *\n     * @privateRemarks\n     * This can't be named just \"parse\" as it is overwritten by subclasses with a\n     * different type of parameter (namely, no \"name\" or \"of\").\n     */\n    function parseWithSelector(name, parseSelector, of) {\n        return map(right(parseColon, alfa_css_1.Function.parse(name, parseSelector)), ([, selector]) => of(selector));\n    }\n    WithSelector.parseWithSelector = parseWithSelector;\n})(WithSelector || (exports.WithSelector = WithSelector = {}));\n/**\n * @internal\n */\nclass WithIndexAndSelector extends WithIndex {\n    constructor(name, nth, selector, \n    // Both :nth-child and :nth-last-child have this specificity\n    specificity = specificity_1.Specificity.sum(specificity_1.Specificity.of(0, 1, 0), selector.map((s) => s.specificity).getOr(specificity_1.Specificity.of(0, 0, 0)))) {\n        super(name, nth, specificity);\n        this._selector = selector;\n    }\n    /** @public (knip) */\n    get selector() {\n        return this._selector;\n    }\n    equals(value) {\n        return (value instanceof WithIndexAndSelector &&\n            super.equals(value) &&\n            value._selector.equals(this._selector));\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            ...(this._selector.isSome()\n                ? { selector: this._selector.get().toJSON() }\n                : {}),\n        };\n    }\n    toString() {\n        return `:${this.name}(${this._index} of ${this._selector})`;\n    }\n}\nexports.WithIndexAndSelector = WithIndexAndSelector;\n/**\n * @internal\n */\n(function (WithIndexAndSelector) {\n    /**\n     * Parses a functional pseudo-class accepting a nth argument (an+b)\n     *\n     * @privateRemarks\n     * This can't be named just \"parse\" as it is overwritten by subclasses with a\n     * different type of parameter (namely, no \"name\" or \"of\").\n     */\n    function parseWithIndexAndSelector(name, parseSelector, of) {\n        return map(right(parseColon, alfa_css_1.Function.parse(name, () => pair(alfa_css_1.Nth.parse, option(right(delimited(parseWhitespace, parseIdent(\"of\")), parseSelector()))))), ([, [nth, selector]]) => of(nth, selector));\n    }\n    WithIndexAndSelector.parseWithIndexAndSelector = parseWithIndexAndSelector;\n})(WithIndexAndSelector || (exports.WithIndexAndSelector = WithIndexAndSelector = {}));\n//# sourceMappingURL=pseudo-class.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/pseudo-class.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/root.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/root.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Root = void 0;\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst pseudo_class_1 = __webpack_require__(/*! ./pseudo-class */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/pseudo-class.js\");\nconst { isElement } = alfa_dom_1.Element;\nconst { not } = alfa_predicate_1.Predicate;\n/**\n * {@link https://drafts.csswg.org/selectors/#root-pseudo}\n */\nclass Root extends pseudo_class_1.PseudoClassSelector {\n    static of() {\n        return new Root();\n    }\n    constructor() {\n        super(\"root\");\n    }\n    /** @public (knip) */\n    *[Symbol.iterator]() {\n        yield this;\n    }\n    matches(element) {\n        // The root element is the element whose parent is NOT itself an element.\n        return element.parent().every(not(isElement));\n    }\n    toJSON() {\n        return super.toJSON();\n    }\n}\nexports.Root = Root;\n(function (Root) {\n    Root.parse = pseudo_class_1.PseudoClassSelector.parseNonFunctional(\"root\", Root.of);\n})(Root || (exports.Root = Root = {}));\n//# sourceMappingURL=root.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/root.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/visited.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/visited.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Visited = void 0;\nconst context_1 = __webpack_require__(/*! ../../../context */ \"./node_modules/@siteimprove/alfa-selector/src/context.js\");\nconst pseudo_class_1 = __webpack_require__(/*! ./pseudo-class */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/pseudo-class.js\");\n/**\n * {@link https://drafts.csswg.org/selectors/#visited-pseudo}\n */\nclass Visited extends pseudo_class_1.PseudoClassSelector {\n    static of() {\n        return new Visited();\n    }\n    constructor() {\n        super(\"visited\");\n    }\n    /** @public (knip) */\n    *[Symbol.iterator]() {\n        yield this;\n    }\n    matches(element, context = context_1.Context.empty()) {\n        switch (element.name) {\n            case \"a\":\n            case \"area\":\n            case \"link\":\n                return element\n                    .attribute(\"href\")\n                    .some(() => context.hasState(element, context_1.Context.State.Visited));\n        }\n        return false;\n    }\n    toJSON() {\n        return super.toJSON();\n    }\n}\nexports.Visited = Visited;\n(function (Visited) {\n    Visited.parse = pseudo_class_1.PseudoClassSelector.parseNonFunctional(\"visited\", Visited.of);\n})(Visited || (exports.Visited = Visited = {}));\n//# sourceMappingURL=visited.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/visited.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/where.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/where.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Where = void 0;\nconst specificity_1 = __webpack_require__(/*! ../../../specificity */ \"./node_modules/@siteimprove/alfa-selector/src/specificity.js\");\nconst pseudo_class_1 = __webpack_require__(/*! ./pseudo-class */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/pseudo-class.js\");\n/**\n * {@link https://drafts.csswg.org/selectors/#zero-matches}\n */\nclass Where extends pseudo_class_1.WithSelector {\n    static of(selector) {\n        return new Where(selector);\n    }\n    constructor(selector) {\n        super(\"where\", selector, specificity_1.Specificity.of(0, 0, 0));\n    }\n    /** @public (knip) */\n    *[Symbol.iterator]() {\n        yield this;\n    }\n    matches(element, context) {\n        return this._selector.matches(element, context);\n    }\n    equals(value) {\n        return value instanceof Where && value._selector.equals(this._selector);\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n        };\n    }\n}\nexports.Where = Where;\n(function (Where) {\n    Where.parse = (parseSelector) => pseudo_class_1.WithSelector.parseWithSelector(\"where\", parseSelector, Where.of);\n})(Where || (exports.Where = Where = {}));\n//# sourceMappingURL=where.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-class/where.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/after.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/after.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.After = void 0;\nconst pseudo_element_1 = __webpack_require__(/*! ./pseudo-element */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/pseudo-element.js\");\n/**\n * {@link https://drafts.csswg.org/css-pseudo/#selectordef-after}\n */\nclass After extends pseudo_element_1.PseudoElementSelector {\n    static of() {\n        return new After();\n    }\n    constructor() {\n        super(\"after\");\n    }\n    /** @public (knip) */\n    *[Symbol.iterator]() {\n        yield this;\n    }\n}\nexports.After = After;\n(function (After) {\n    After.parse = pseudo_element_1.PseudoElementSelector.parseLegacy(\"after\", After.of);\n})(After || (exports.After = After = {}));\n//# sourceMappingURL=after.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/after.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/backdrop.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/backdrop.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Backdrop = void 0;\nconst pseudo_element_1 = __webpack_require__(/*! ./pseudo-element */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/pseudo-element.js\");\n/**\n * {@link https://fullscreen.spec.whatwg.org/#::backdrop-pseudo-element}\n */\nclass Backdrop extends pseudo_element_1.PseudoElementSelector {\n    static of() {\n        return new Backdrop();\n    }\n    constructor() {\n        super(\"backdrop\");\n    }\n    /** @public (knip) */\n    *[Symbol.iterator]() {\n        yield this;\n    }\n}\nexports.Backdrop = Backdrop;\n(function (Backdrop) {\n    Backdrop.parse = pseudo_element_1.PseudoElementSelector.parseNonLegacy(\"backdrop\", Backdrop.of);\n})(Backdrop || (exports.Backdrop = Backdrop = {}));\n//# sourceMappingURL=backdrop.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/backdrop.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/before.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/before.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Before = void 0;\nconst pseudo_element_1 = __webpack_require__(/*! ./pseudo-element */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/pseudo-element.js\");\n/**\n * {@link https://drafts.csswg.org/css-pseudo/#selectordef-before}\n */\nclass Before extends pseudo_element_1.PseudoElementSelector {\n    static of() {\n        return new Before();\n    }\n    constructor() {\n        super(\"before\");\n    }\n    /** @public (knip) */\n    *[Symbol.iterator]() {\n        yield this;\n    }\n}\nexports.Before = Before;\n(function (Before) {\n    Before.parse = pseudo_element_1.PseudoElementSelector.parseLegacy(\"before\", Before.of);\n})(Before || (exports.Before = Before = {}));\n//# sourceMappingURL=before.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/before.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/cue-region.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/cue-region.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.CueRegion = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst pseudo_element_1 = __webpack_require__(/*! ./pseudo-element */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/pseudo-element.js\");\nconst { either, map, right, take } = alfa_parser_1.Parser;\n/**\n * {@link https://w3c.github.io/webvtt/#the-cue-region-pseudo-element}\n */\nclass CueRegion extends pseudo_element_1.PseudoElementSelector {\n    static of(selector) {\n        return new CueRegion(alfa_option_1.Option.from(selector));\n    }\n    constructor(selector) {\n        super(\"cue-region\");\n        this._selector = selector;\n    }\n    get selector() {\n        return this._selector;\n    }\n    /** @public (knip) */\n    *[Symbol.iterator]() {\n        yield this;\n    }\n    equals(value) {\n        return value instanceof CueRegion && value.selector.equals(this.selector);\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            selector: this._selector.toJSON(),\n        };\n    }\n    toString() {\n        return `::${this.name}` + this._selector.isSome()\n            ? `(${this._selector})`\n            : \"\";\n    }\n}\nexports.CueRegion = CueRegion;\n(function (CueRegion) {\n    function parse(parseSelector) {\n        return right(take(alfa_css_1.Token.parseColon, 2), \n        // We need to try and fail the functional notation first to avoid accepting\n        // the `::cue-region` prefix of a `::cue-region(selector)`.\n        either(map(alfa_css_1.Function.parse(\"cue-region\", parseSelector), ([_, selector]) => CueRegion.of(selector)), \n        // We need to eta-expand in order to discard the result of parseIdent.\n        map(alfa_css_1.Token.parseIdent(\"cue-region\"), () => CueRegion.of())));\n    }\n    CueRegion.parse = parse;\n})(CueRegion || (exports.CueRegion = CueRegion = {}));\n//# sourceMappingURL=cue-region.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/cue-region.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/cue.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/cue.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Cue = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst pseudo_element_1 = __webpack_require__(/*! ./pseudo-element */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/pseudo-element.js\");\nconst { either, map, right, take } = alfa_parser_1.Parser;\n/**\n * {@link https://w3c.github.io/webvtt/#the-cue-pseudo-element}\n */\nclass Cue extends pseudo_element_1.PseudoElementSelector {\n    static of(selector) {\n        return new Cue(alfa_option_1.Option.from(selector));\n    }\n    constructor(selector) {\n        super(\"cue\");\n        this._selector = selector;\n    }\n    get selector() {\n        return this._selector;\n    }\n    /** @public (knip) */\n    *[Symbol.iterator]() {\n        yield this;\n    }\n    equals(value) {\n        return value instanceof Cue && value.selector.equals(this.selector);\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            selector: this._selector.toJSON(),\n        };\n    }\n    toString() {\n        return `::${this.name}` + this._selector.isSome()\n            ? `(${this._selector})`\n            : \"\";\n    }\n}\nexports.Cue = Cue;\n(function (Cue) {\n    function parse(parseSelector) {\n        return right(take(alfa_css_1.Token.parseColon, 2), \n        // We need to try and fail the functional notation first to avoid accepting\n        // the `::cue` prefix of a `::cue(selector)`.\n        either(map(alfa_css_1.Function.parse(\"cue\", parseSelector), ([_, selector]) => Cue.of(selector)), \n        // We need to eta-expand in order to discard the result of parseIdent.\n        map(alfa_css_1.Token.parseIdent(\"cue\"), () => Cue.of())));\n    }\n    Cue.parse = parse;\n})(Cue || (exports.Cue = Cue = {}));\n//# sourceMappingURL=cue.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/cue.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/file-selector-button.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/file-selector-button.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FileSelectorButton = void 0;\nconst pseudo_element_1 = __webpack_require__(/*! ./pseudo-element */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/pseudo-element.js\");\n/**\n *{@link https://drafts.csswg.org/css-pseudo-4/#file-selector-button-pseudo}\n */\nclass FileSelectorButton extends pseudo_element_1.PseudoElementSelector {\n    static of() {\n        return new FileSelectorButton();\n    }\n    constructor() {\n        super(\"file-selector-button\");\n    }\n    /** @public (knip) */\n    *[Symbol.iterator]() {\n        yield this;\n    }\n}\nexports.FileSelectorButton = FileSelectorButton;\n(function (FileSelectorButton) {\n    FileSelectorButton.parse = pseudo_element_1.PseudoElementSelector.parseNonLegacy(\"file-selector-button\", FileSelectorButton.of);\n})(FileSelectorButton || (exports.FileSelectorButton = FileSelectorButton = {}));\n//# sourceMappingURL=file-selector-button.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/file-selector-button.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/first-letter.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/first-letter.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FirstLetter = void 0;\nconst pseudo_element_1 = __webpack_require__(/*! ./pseudo-element */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/pseudo-element.js\");\n/**\n * {@link https://drafts.csswg.org/css-pseudo-4/#first-letter-pseudo}\n */\nclass FirstLetter extends pseudo_element_1.PseudoElementSelector {\n    static of() {\n        return new FirstLetter();\n    }\n    constructor() {\n        super(\"first-letter\");\n    }\n    /** @public (knip) */\n    *[Symbol.iterator]() {\n        yield this;\n    }\n}\nexports.FirstLetter = FirstLetter;\n(function (FirstLetter) {\n    FirstLetter.parse = pseudo_element_1.PseudoElementSelector.parseLegacy(\"first-letter\", FirstLetter.of);\n})(FirstLetter || (exports.FirstLetter = FirstLetter = {}));\n//# sourceMappingURL=first-letter.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/first-letter.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/first-line.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/first-line.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FirstLine = void 0;\nconst pseudo_element_1 = __webpack_require__(/*! ./pseudo-element */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/pseudo-element.js\");\n/**\n * {@link https://drafts.csswg.org/css-pseudo-4/#first-line-pseudo}\n */\nclass FirstLine extends pseudo_element_1.PseudoElementSelector {\n    static of() {\n        return new FirstLine();\n    }\n    constructor() {\n        super(\"first-line\");\n    }\n    /** @public (knip) */\n    *[Symbol.iterator]() {\n        yield this;\n    }\n}\nexports.FirstLine = FirstLine;\n(function (FirstLine) {\n    FirstLine.parse = pseudo_element_1.PseudoElementSelector.parseLegacy(\"first-line\", FirstLine.of);\n})(FirstLine || (exports.FirstLine = FirstLine = {}));\n//# sourceMappingURL=first-line.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/first-line.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/grammar-error.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/grammar-error.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.GrammarError = void 0;\nconst pseudo_element_1 = __webpack_require__(/*! ./pseudo-element */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/pseudo-element.js\");\n/**\n * {@link https://drafts.csswg.org/css-pseudo-4/#selectordef-grammar-error}\n */\nclass GrammarError extends pseudo_element_1.PseudoElementSelector {\n    static of() {\n        return new GrammarError();\n    }\n    constructor() {\n        super(\"grammar-error\");\n    }\n    /** @public (knip) */\n    *[Symbol.iterator]() {\n        yield this;\n    }\n}\nexports.GrammarError = GrammarError;\n(function (GrammarError) {\n    GrammarError.parse = pseudo_element_1.PseudoElementSelector.parseNonLegacy(\"grammar-error\", GrammarError.of);\n})(GrammarError || (exports.GrammarError = GrammarError = {}));\n//# sourceMappingURL=grammar-error.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/grammar-error.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/index.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/index.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PseudoElement = void 0;\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst after_1 = __webpack_require__(/*! ./after */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/after.js\");\nconst backdrop_1 = __webpack_require__(/*! ./backdrop */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/backdrop.js\");\nconst before_1 = __webpack_require__(/*! ./before */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/before.js\");\nconst cue_1 = __webpack_require__(/*! ./cue */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/cue.js\");\nconst cue_region_1 = __webpack_require__(/*! ./cue-region */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/cue-region.js\");\nconst file_selector_button_1 = __webpack_require__(/*! ./file-selector-button */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/file-selector-button.js\");\nconst first_letter_1 = __webpack_require__(/*! ./first-letter */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/first-letter.js\");\nconst first_line_1 = __webpack_require__(/*! ./first-line */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/first-line.js\");\nconst grammar_error_1 = __webpack_require__(/*! ./grammar-error */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/grammar-error.js\");\nconst marker_1 = __webpack_require__(/*! ./marker */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/marker.js\");\nconst part_1 = __webpack_require__(/*! ./part */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/part.js\");\nconst placeholder_1 = __webpack_require__(/*! ./placeholder */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/placeholder.js\");\nconst selection_1 = __webpack_require__(/*! ./selection */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/selection.js\");\nconst slotted_1 = __webpack_require__(/*! ./slotted */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/slotted.js\");\nconst spelling_error_1 = __webpack_require__(/*! ./spelling-error */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/spelling-error.js\");\nconst target_text_1 = __webpack_require__(/*! ./target-text */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/target-text.js\");\nconst pseudo_element_1 = __webpack_require__(/*! ./pseudo-element */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/pseudo-element.js\");\nconst { either } = alfa_parser_1.Parser;\n/**\n * @public\n */\nvar PseudoElement;\n(function (PseudoElement) {\n    function isPseudoElement(value) {\n        // Note: this is not totally true as we could extend PseudoElementSelector\n        // without making it a PseudoElement. We're likely having other problems in\n        // that case…\n        return value instanceof pseudo_element_1.PseudoElementSelector;\n    }\n    PseudoElement.isPseudoElement = isPseudoElement;\n    function parse(parseSelector) {\n        return either(after_1.After.parse, before_1.Before.parse, cue_1.Cue.parse(parseSelector), cue_region_1.CueRegion.parse(parseSelector), first_letter_1.FirstLetter.parse, first_line_1.FirstLine.parse, backdrop_1.Backdrop.parse, file_selector_button_1.FileSelectorButton.parse, grammar_error_1.GrammarError.parse, marker_1.Marker.parse, part_1.Part.parse, placeholder_1.Placeholder.parse, selection_1.Selection.parse, slotted_1.Slotted.parse(parseSelector), spelling_error_1.SpellingError.parse, target_text_1.TargetText.parse);\n    }\n    PseudoElement.parse = parse;\n})(PseudoElement || (exports.PseudoElement = PseudoElement = {}));\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/marker.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/marker.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Marker = void 0;\nconst pseudo_element_1 = __webpack_require__(/*! ./pseudo-element */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/pseudo-element.js\");\n/**\n * {@link https://drafts.csswg.org/css-pseudo-4/#marker-pseudo}\n */\nclass Marker extends pseudo_element_1.PseudoElementSelector {\n    static of() {\n        return new Marker();\n    }\n    constructor() {\n        super(\"marker\");\n    }\n    /** @public (knip) */\n    *[Symbol.iterator]() {\n        yield this;\n    }\n}\nexports.Marker = Marker;\n(function (Marker) {\n    Marker.parse = pseudo_element_1.PseudoElementSelector.parseNonLegacy(\"marker\", Marker.of);\n})(Marker || (exports.Marker = Marker = {}));\n//# sourceMappingURL=marker.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/marker.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/part.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/part.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Part = void 0;\nconst alfa_array_1 = __webpack_require__(/*! @siteimprove/alfa-array */ \"./node_modules/@siteimprove/alfa-array/src/index.js\");\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst pseudo_element_1 = __webpack_require__(/*! ./pseudo-element */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/pseudo-element.js\");\nconst { map, separatedList } = alfa_parser_1.Parser;\n/**\n * {@link https://drafts.csswg.org/css-shadow-parts-1/#part}\n */\nclass Part extends pseudo_element_1.PseudoElementSelector {\n    static of(idents) {\n        return new Part(alfa_array_1.Array.from(idents));\n    }\n    constructor(idents) {\n        super(\"part\");\n        this._idents = idents;\n    }\n    /** @public (knip) */\n    get idents() {\n        return this._idents;\n    }\n    /** @public (knip) */\n    *[Symbol.iterator]() {\n        yield this;\n    }\n    equals(value) {\n        return value instanceof Part && alfa_array_1.Array.equals(value._idents, this._idents);\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            idents: alfa_array_1.Array.toJSON(this._idents),\n        };\n    }\n    toString() {\n        return `::${this.name}(${this._idents})`;\n    }\n}\nexports.Part = Part;\n(function (Part) {\n    Part.parse = map(alfa_css_1.Function.parse(\"part\", separatedList(alfa_css_1.Token.parseIdent(), alfa_css_1.Token.parseWhitespace)), ([_, idents]) => Part.of(idents));\n})(Part || (exports.Part = Part = {}));\n//# sourceMappingURL=part.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/part.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/placeholder.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/placeholder.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Placeholder = void 0;\nconst pseudo_element_1 = __webpack_require__(/*! ./pseudo-element */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/pseudo-element.js\");\n/**\n * {@link https://drafts.csswg.org/css-pseudo-4/#placeholder-pseudo}\n */\nclass Placeholder extends pseudo_element_1.PseudoElementSelector {\n    static of() {\n        return new Placeholder();\n    }\n    constructor() {\n        super(\"placeholder\");\n    }\n    /** @public (knip) */\n    *[Symbol.iterator]() {\n        yield this;\n    }\n}\nexports.Placeholder = Placeholder;\n(function (Placeholder) {\n    Placeholder.parse = pseudo_element_1.PseudoElementSelector.parseNonLegacy(\"placeholder\", Placeholder.of);\n})(Placeholder || (exports.Placeholder = Placeholder = {}));\n//# sourceMappingURL=placeholder.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/placeholder.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/pseudo-element.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/pseudo-element.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PseudoElementSelector = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst specificity_1 = __webpack_require__(/*! ../../../specificity */ \"./node_modules/@siteimprove/alfa-selector/src/specificity.js\");\nconst selector_1 = __webpack_require__(/*! ../../selector */ \"./node_modules/@siteimprove/alfa-selector/src/selector/selector.js\");\nconst { map, right, take, takeBetween } = alfa_parser_1.Parser;\nconst { parseColon, parseIdent } = alfa_css_1.Token;\nclass PseudoElementSelector extends selector_1.WithName {\n    constructor(name) {\n        super(\"pseudo-element\", name, specificity_1.Specificity.of(0, 0, 1));\n    }\n    equals(value) {\n        return value instanceof PseudoElementSelector && super.equals(value);\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n        };\n    }\n    toString() {\n        return `::${this._name}`;\n    }\n}\nexports.PseudoElementSelector = PseudoElementSelector;\n(function (PseudoElementSelector) {\n    /**\n     * Parses a non-functional, non-legacy pseudo-element (`::<name>`)\n     */\n    function parseNonLegacy(name, of) {\n        return map(right(take(parseColon, 2), parseIdent(name)), of);\n    }\n    PseudoElementSelector.parseNonLegacy = parseNonLegacy;\n    /**\n     * Parses a non-functional, legacy pseudo-element (`::<name>` or `:<name>`)\n     */\n    function parseLegacy(name, of) {\n        return map(right(takeBetween(alfa_css_1.Token.parseColon, 1, 2), alfa_css_1.Token.parseIdent(name)), of);\n    }\n    PseudoElementSelector.parseLegacy = parseLegacy;\n})(PseudoElementSelector || (exports.PseudoElementSelector = PseudoElementSelector = {}));\n//# sourceMappingURL=pseudo-element.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/pseudo-element.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/selection.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/selection.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Selection = void 0;\nconst pseudo_element_1 = __webpack_require__(/*! ./pseudo-element */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/pseudo-element.js\");\n/**\n * {@link https://drafts.csswg.org/css-pseudo-4/#selectordef-selection}\n */\nclass Selection extends pseudo_element_1.PseudoElementSelector {\n    static of() {\n        return new Selection();\n    }\n    constructor() {\n        super(\"selection\");\n    }\n    /** @public (knip) */\n    *[Symbol.iterator]() {\n        yield this;\n    }\n}\nexports.Selection = Selection;\n(function (Selection) {\n    Selection.parse = pseudo_element_1.PseudoElementSelector.parseNonLegacy(\"selection\", Selection.of);\n})(Selection || (exports.Selection = Selection = {}));\n//# sourceMappingURL=selection.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/selection.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/slotted.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/slotted.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Slotted = void 0;\nconst alfa_array_1 = __webpack_require__(/*! @siteimprove/alfa-array */ \"./node_modules/@siteimprove/alfa-array/src/index.js\");\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst compound_1 = __webpack_require__(/*! ../../compound */ \"./node_modules/@siteimprove/alfa-selector/src/selector/compound.js\");\nconst pseudo_element_1 = __webpack_require__(/*! ./pseudo-element */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/pseudo-element.js\");\nconst { map, separatedList } = alfa_parser_1.Parser;\n/**\n * {@link https://drafts.csswg.org/css-scoping/#slotted-pseudo}\n */\nclass Slotted extends pseudo_element_1.PseudoElementSelector {\n    static of(selectors) {\n        return new Slotted(alfa_array_1.Array.from(selectors));\n    }\n    constructor(selectors) {\n        super(\"slotted\");\n        this._selectors = selectors;\n    }\n    /** @public (knip) */\n    get selectors() {\n        return this._selectors;\n    }\n    /** @public (knip) */\n    *[Symbol.iterator]() {\n        yield this;\n    }\n    equals(value) {\n        return (value instanceof Slotted &&\n            alfa_array_1.Array.equals(value._selectors, this._selectors));\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            selectors: alfa_array_1.Array.toJSON(this._selectors),\n        };\n    }\n    toString() {\n        return `::${this.name}(${this._selectors})`;\n    }\n}\nexports.Slotted = Slotted;\n(function (Slotted) {\n    function parse(parseSelector) {\n        return map(alfa_css_1.Function.parse(\"slotted\", () => separatedList(compound_1.Compound.parseCompound(parseSelector), alfa_css_1.Token.parseWhitespace)), ([_, selectors]) => Slotted.of(selectors));\n    }\n    Slotted.parse = parse;\n})(Slotted || (exports.Slotted = Slotted = {}));\n//# sourceMappingURL=slotted.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/slotted.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/spelling-error.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/spelling-error.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SpellingError = void 0;\nconst pseudo_element_1 = __webpack_require__(/*! ./pseudo-element */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/pseudo-element.js\");\n/**\n * {@link https://drafts.csswg.org/css-pseudo-4/#selectordef-spelling-error}\n */\nclass SpellingError extends pseudo_element_1.PseudoElementSelector {\n    static of() {\n        return new SpellingError();\n    }\n    constructor() {\n        super(\"spelling-error\");\n    }\n    /** @public (knip) */\n    *[Symbol.iterator]() {\n        yield this;\n    }\n}\nexports.SpellingError = SpellingError;\n(function (SpellingError) {\n    SpellingError.parse = pseudo_element_1.PseudoElementSelector.parseNonLegacy(\"spelling-error\", SpellingError.of);\n})(SpellingError || (exports.SpellingError = SpellingError = {}));\n//# sourceMappingURL=spelling-error.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/spelling-error.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/target-text.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/target-text.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TargetText = void 0;\nconst pseudo_element_1 = __webpack_require__(/*! ./pseudo-element */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/pseudo-element.js\");\n/**\n * {@link https://drafts.csswg.org/css-pseudo-4/#selectordef-target-text}\n */\nclass TargetText extends pseudo_element_1.PseudoElementSelector {\n    static of() {\n        return new TargetText();\n    }\n    constructor() {\n        super(\"target-text\");\n    }\n    /** @public (knip) */\n    *[Symbol.iterator]() {\n        yield this;\n    }\n}\nexports.TargetText = TargetText;\n(function (TargetText) {\n    TargetText.parse = pseudo_element_1.PseudoElementSelector.parseNonLegacy(\"target-text\", TargetText.of);\n})(TargetText || (exports.TargetText = TargetText = {}));\n//# sourceMappingURL=target-text.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/src/selector/simple/pseudo-element/target-text.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/src/selector/simple/type.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/src/selector/simple/type.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Type = void 0;\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst specificity_1 = __webpack_require__(/*! ../../specificity */ \"./node_modules/@siteimprove/alfa-selector/src/specificity.js\");\nconst selector_1 = __webpack_require__(/*! ../selector */ \"./node_modules/@siteimprove/alfa-selector/src/selector/selector.js\");\nconst parser_1 = __webpack_require__(/*! ./parser */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/parser.js\");\nconst { map } = alfa_parser_1.Parser;\n/**\n * {@link https://drafts.csswg.org/selectors/#type-selector}\n *\n * @public\n */\nclass Type extends selector_1.WithName {\n    static of(namespace, name) {\n        return new Type(namespace, name);\n    }\n    constructor(namespace, name) {\n        super(\"type\", name, specificity_1.Specificity.of(0, 0, 1));\n        this._namespace = namespace;\n        this._key = alfa_option_1.Option.of(this);\n    }\n    get namespace() {\n        return this._namespace;\n    }\n    matches(element) {\n        if (this._name !== element.name) {\n            return false;\n        }\n        if (this._namespace.isNone() || this._namespace.includes(\"*\")) {\n            return true;\n        }\n        return element.namespace.equals(this._namespace);\n    }\n    equals(value) {\n        return (value instanceof Type &&\n            value._namespace.equals(this._namespace) &&\n            value._name === this._name);\n    }\n    *[Symbol.iterator]() {\n        yield this;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            namespace: this._namespace.getOr(null),\n        };\n    }\n    toString() {\n        const namespace = this._namespace\n            .map((namespace) => `${namespace}|`)\n            .getOr(\"\");\n        return `${namespace}${this._name}`;\n    }\n}\nexports.Type = Type;\n/**\n * @public\n */\n(function (Type) {\n    function isType(value) {\n        return value instanceof Type;\n    }\n    Type.isType = isType;\n    /**\n     * {@link https://drafts.csswg.org/selectors/#typedef-type-selector}\n     *\n     * @internal\n     */\n    Type.parse = map(parser_1.parseName, ([namespace, name]) => Type.of(namespace, name));\n})(Type || (exports.Type = Type = {}));\n//# sourceMappingURL=type.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/src/selector/simple/type.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/src/selector/simple/universal.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/src/selector/simple/universal.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Universal = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst specificity_1 = __webpack_require__(/*! ../../specificity */ \"./node_modules/@siteimprove/alfa-selector/src/specificity.js\");\nconst selector_1 = __webpack_require__(/*! ../selector */ \"./node_modules/@siteimprove/alfa-selector/src/selector/selector.js\");\nconst parser_1 = __webpack_require__(/*! ./parser */ \"./node_modules/@siteimprove/alfa-selector/src/selector/simple/parser.js\");\nconst { left, map, option } = alfa_parser_1.Parser;\n/**\n * {@link https://drafts.csswg.org/selectors/#universal-selector}\n *\n * @public\n */\nclass Universal extends selector_1.Selector {\n    static of(namespace) {\n        return new Universal(namespace);\n    }\n    static empty() {\n        return this._empty;\n    }\n    constructor(namespace) {\n        super(\"universal\", specificity_1.Specificity.empty());\n        this._namespace = namespace;\n    }\n    get namespace() {\n        return this._namespace;\n    }\n    matches(element) {\n        if (this._namespace.isNone() || this._namespace.includes(\"*\")) {\n            return true;\n        }\n        return element.namespace.equals(this._namespace);\n    }\n    equals(value) {\n        return (value instanceof Universal && value._namespace.equals(this._namespace));\n    }\n    *[Symbol.iterator]() {\n        yield this;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            namespace: this._namespace.getOr(null),\n        };\n    }\n    toString() {\n        const namespace = this._namespace\n            .map((namespace) => `${namespace}|`)\n            .getOr(\"\");\n        return `${namespace}*`;\n    }\n}\nexports.Universal = Universal;\nUniversal._empty = new Universal(alfa_option_1.None);\n/**\n * @public\n */\n(function (Universal) {\n    function isUniversal(value) {\n        return value instanceof Universal;\n    }\n    Universal.isUniversal = isUniversal;\n    /**\n     * {@link https://drafts.csswg.org/selectors/#typedef-type-selector}\n     */\n    Universal.parse = map(left(option(parser_1.parseNamespace), alfa_css_1.Token.parseDelim(\"*\")), (namespace) => Universal.of(namespace));\n})(Universal || (exports.Universal = Universal = {}));\n//# sourceMappingURL=universal.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/src/selector/simple/universal.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-selector/src/specificity.js":
/*!********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-selector/src/specificity.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Specificity = void 0;\nconst alfa_comparable_1 = __webpack_require__(/*! @siteimprove/alfa-comparable */ \"./node_modules/@siteimprove/alfa-comparable/src/index.js\");\n// The number of bits to use for every component of the specificity computation.\n// As bitwise operations in JavaScript are limited to 32 bits, we can only use\n// at most 10 bits per component as 3 components are used.\nconst componentBits = 10;\n// The maximum value that any given component can have. Since we can only use 10\n// bits for every component, this in effect means that any given component count\n// must be strictly less than 1024.\nconst componentMax = (1 << componentBits) - 1;\n/**\n * {@link https://www.w3.org/TR/selectors/#specificity}\n *\n * @remarks\n * Specificities are triplet (a, b, c), ordered lexicographically.\n * We also store a 32 bits integer representing the specificity with 10 bits\n * per components (and 2 wasted bits). This allows for quick lexicographic\n * comparison, which is the frequent operation on specificities. Components are\n * therefore limited to 1024 values (10 bits).\n *\n * @public\n */\nclass Specificity {\n    static of(a, b, c) {\n        return new Specificity(a, b, c);\n    }\n    static empty() {\n        return Specificity._empty;\n    }\n    constructor(a, b, c) {\n        this._a = a;\n        this._b = b;\n        this._c = c;\n        this._value =\n            (Math.min(a, componentMax) << (componentBits * 2)) |\n                (Math.min(b, componentMax) << (componentBits * 1)) |\n                Math.min(c, componentMax);\n    }\n    get a() {\n        return this._a;\n    }\n    get b() {\n        return this._b;\n    }\n    get c() {\n        return this._c;\n    }\n    get value() {\n        return this._value;\n    }\n    equals(value) {\n        return value instanceof Specificity && value._value === this._value;\n    }\n    hash(hash) {\n        hash.writeInt32(this._value);\n    }\n    toJSON() {\n        return { a: this._a, b: this._b, c: this._c };\n    }\n    toString() {\n        return `(${this._a}, ${this._b}, ${this._c})`;\n    }\n}\nexports.Specificity = Specificity;\nSpecificity._empty = new Specificity(0, 0, 0);\n/**\n * @public\n */\n(function (Specificity) {\n    /** public (knip) */\n    function isSpecificity(value) {\n        return value instanceof Specificity;\n    }\n    Specificity.isSpecificity = isSpecificity;\n    function sum(...specificities) {\n        if (specificities.length === 0) {\n            return Specificity.empty();\n        }\n        const [first, ...rest] = specificities;\n        return rest.reduce((pre, cur) => Specificity.of(pre.a + cur.a, pre.b + cur.b, pre.c + cur.c), first);\n    }\n    Specificity.sum = sum;\n    function max(...specificities) {\n        if (specificities.length === 0) {\n            return Specificity.empty();\n        }\n        const [first, ...rest] = specificities;\n        return rest.reduce((pre, cur) => (pre.value > cur.value ? pre : cur), first);\n    }\n    Specificity.max = max;\n    Specificity.compare = (a, b) => alfa_comparable_1.Comparable.compareNumber(a.value, b.value);\n})(Specificity || (exports.Specificity = Specificity = {}));\n//# sourceMappingURL=specificity.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-selector/src/specificity.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-set/src/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-set/src/index.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./set */ \"./node_modules/@siteimprove/alfa-set/src/set.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-set/src/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-set/src/set.js":
/*!*******************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-set/src/set.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Set = void 0;\nconst alfa_array_1 = __webpack_require__(/*! @siteimprove/alfa-array */ \"./node_modules/@siteimprove/alfa-array/src/index.js\");\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_json_1 = __webpack_require__(/*! @siteimprove/alfa-json */ \"./node_modules/@siteimprove/alfa-json/src/index.js\");\nconst alfa_map_1 = __webpack_require__(/*! @siteimprove/alfa-map */ \"./node_modules/@siteimprove/alfa-map/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst { not } = alfa_predicate_1.Predicate;\n/**\n * @public\n */\nclass Set {\n    static of(...values) {\n        return values.reduce((set, value) => set.add(value), Set.empty());\n    }\n    static empty() {\n        return this._empty;\n    }\n    constructor(values) {\n        this._values = values;\n    }\n    get size() {\n        return this._values.size;\n    }\n    isEmpty() {\n        return this._values.isEmpty();\n    }\n    forEach(callback) {\n        alfa_iterable_1.Iterable.forEach(this, callback);\n    }\n    map(mapper) {\n        return this._values.reduce((set, _, value) => set.add(mapper(value)), Set.empty());\n    }\n    apply(mapper) {\n        return mapper.flatMap((mapper) => this.map(mapper));\n    }\n    flatMap(mapper) {\n        return this.reduce((set, value) => set.concat(mapper(value)), Set.empty());\n    }\n    flatten() {\n        return this.flatMap((set) => set);\n    }\n    reduce(reducer, accumulator) {\n        return alfa_iterable_1.Iterable.reduce(this, reducer, accumulator);\n    }\n    filter(predicate) {\n        return this.reduce((set, value) => (predicate(value) ? set.add(value) : set), Set.empty());\n    }\n    reject(predicate) {\n        return this.filter(not(predicate));\n    }\n    find(predicate) {\n        return alfa_iterable_1.Iterable.find(this, predicate);\n    }\n    includes(value) {\n        return alfa_iterable_1.Iterable.includes(this, value);\n    }\n    collect(mapper) {\n        return Set.from(alfa_iterable_1.Iterable.collect(this, mapper));\n    }\n    collectFirst(mapper) {\n        return alfa_iterable_1.Iterable.collectFirst(this, mapper);\n    }\n    some(predicate) {\n        return alfa_iterable_1.Iterable.some(this, predicate);\n    }\n    none(predicate) {\n        return alfa_iterable_1.Iterable.none(this, predicate);\n    }\n    every(predicate) {\n        return alfa_iterable_1.Iterable.every(this, predicate);\n    }\n    count(predicate) {\n        return alfa_iterable_1.Iterable.count(this, predicate);\n    }\n    /**\n     * @remarks\n     * As sets don't contain duplicate values, they will only ever contain\n     * distinct values.\n     */\n    distinct() {\n        return this;\n    }\n    get(value) {\n        return this._values.get(value);\n    }\n    has(value) {\n        return this._values.has(value);\n    }\n    add(value) {\n        const values = this._values.set(value, value);\n        if (values === this._values) {\n            return this;\n        }\n        return new Set(values);\n    }\n    delete(value) {\n        const values = this._values.delete(value);\n        if (values === this._values) {\n            return this;\n        }\n        return new Set(values);\n    }\n    concat(iterable) {\n        return alfa_iterable_1.Iterable.reduce(iterable, (set, value) => set.add(value), this);\n    }\n    subtract(iterable) {\n        return alfa_iterable_1.Iterable.reduce(iterable, (set, value) => set.delete(value), this);\n    }\n    intersect(iterable) {\n        return Set.fromIterable(alfa_iterable_1.Iterable.filter(iterable, (value) => this.has(value)));\n    }\n    tee(callback, ...args) {\n        callback(this, ...args);\n        return this;\n    }\n    equals(value) {\n        return value instanceof Set && value._values.equals(this._values);\n    }\n    hash(hash) {\n        for (const value of this) {\n            hash.writeUnknown(value);\n        }\n        hash.writeUint32(this._values.size);\n    }\n    *iterator() {\n        for (const [value] of this._values) {\n            yield value;\n        }\n    }\n    [Symbol.iterator]() {\n        return this.iterator();\n    }\n    toArray() {\n        return [...this];\n    }\n    toJSON() {\n        return this.toArray().map((value) => alfa_json_1.Serializable.toJSON(value));\n    }\n    toString() {\n        const entries = this.toArray().join(\", \");\n        return `Set {${entries === \"\" ? \"\" : ` ${entries} `}}`;\n    }\n}\nexports.Set = Set;\nSet._empty = new Set(alfa_map_1.Map.empty());\n/**\n * @public\n */\n(function (Set) {\n    function isSet(value) {\n        return value instanceof Set;\n    }\n    Set.isSet = isSet;\n    function from(iterable) {\n        if (isSet(iterable)) {\n            return iterable;\n        }\n        if (alfa_array_1.Array.isArray(iterable)) {\n            return fromArray(iterable);\n        }\n        return fromIterable(iterable);\n    }\n    Set.from = from;\n    function fromArray(array) {\n        return alfa_array_1.Array.reduce(array, (set, value) => set.add(value), Set.empty());\n    }\n    Set.fromArray = fromArray;\n    function fromIterable(iterable) {\n        return alfa_iterable_1.Iterable.reduce(iterable, (set, value) => set.add(value), Set.empty());\n    }\n    Set.fromIterable = fromIterable;\n})(Set || (exports.Set = Set = {}));\n//# sourceMappingURL=set.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-set/src/set.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-slice/src/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-slice/src/index.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./slice */ \"./node_modules/@siteimprove/alfa-slice/src/slice.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-slice/src/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-slice/src/slice.js":
/*!***********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-slice/src/slice.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Slice = void 0;\nconst alfa_array_1 = __webpack_require__(/*! @siteimprove/alfa-array */ \"./node_modules/@siteimprove/alfa-array/src/index.js\");\nconst alfa_comparable_1 = __webpack_require__(/*! @siteimprove/alfa-comparable */ \"./node_modules/@siteimprove/alfa-comparable/src/index.js\");\nconst alfa_equatable_1 = __webpack_require__(/*! @siteimprove/alfa-equatable */ \"./node_modules/@siteimprove/alfa-equatable/src/index.js\");\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_json_1 = __webpack_require__(/*! @siteimprove/alfa-json */ \"./node_modules/@siteimprove/alfa-json/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst { not } = alfa_predicate_1.Predicate;\nconst { compareComparable } = alfa_comparable_1.Comparable;\n/**\n * @public\n */\nclass Slice {\n    static of(array, start = 0, end = array.length) {\n        start = clamp(start, array.length);\n        return new Slice(array, start, clamp(end, array.length) - start);\n    }\n    static empty() {\n        return this._empty;\n    }\n    constructor(array, offset, length) {\n        this._array = array;\n        this._offset = offset;\n        this._length = length;\n    }\n    get length() {\n        return this._length;\n    }\n    get size() {\n        return this._length;\n    }\n    isEmpty() {\n        return this._length === 0;\n    }\n    forEach(callback) {\n        alfa_iterable_1.Iterable.forEach(this, callback);\n    }\n    map(mapper) {\n        const result = alfa_array_1.Array.allocate(this._length);\n        for (let i = 0, n = this._length; i < n; i++) {\n            result[i] = mapper(this._array[this._offset + i], i);\n        }\n        return new Slice(result, 0, result.length);\n    }\n    apply(mapper) {\n        const array = [...alfa_iterable_1.Iterable.apply(this, mapper)];\n        return new Slice(array, 0, array.length);\n    }\n    flatMap(mapper) {\n        const array = [...alfa_iterable_1.Iterable.flatMap(this, mapper)];\n        return new Slice(array, 0, array.length);\n    }\n    flatten() {\n        return this.flatMap((slice) => slice);\n    }\n    reduce(reducer, accumulator) {\n        return alfa_iterable_1.Iterable.reduce(this, reducer, accumulator);\n    }\n    reduceWhile(predicate, reducer, accumulator) {\n        return alfa_iterable_1.Iterable.reduceWhile(this, predicate, reducer, accumulator);\n    }\n    reduceUntil(predicate, reducer, accumulator) {\n        return alfa_iterable_1.Iterable.reduceUntil(this, predicate, reducer, accumulator);\n    }\n    filter(predicate) {\n        const array = [...alfa_iterable_1.Iterable.filter(this, predicate)];\n        return new Slice(array, 0, array.length);\n    }\n    reject(predicate) {\n        const array = [...alfa_iterable_1.Iterable.reject(this, predicate)];\n        return new Slice(array, 0, array.length);\n    }\n    find(predicate) {\n        return alfa_iterable_1.Iterable.find(this, predicate);\n    }\n    includes(value) {\n        return alfa_iterable_1.Iterable.includes(this, value);\n    }\n    collect(mapper) {\n        const array = [...alfa_iterable_1.Iterable.collect(this, mapper)];\n        return new Slice(array, 0, array.length);\n    }\n    collectFirst(mapper) {\n        return alfa_iterable_1.Iterable.collectFirst(this, mapper);\n    }\n    some(predicate) {\n        return alfa_iterable_1.Iterable.some(this, predicate);\n    }\n    none(predicate) {\n        return alfa_iterable_1.Iterable.none(this, predicate);\n    }\n    every(predicate) {\n        return alfa_iterable_1.Iterable.every(this, predicate);\n    }\n    count(predicate) {\n        return alfa_iterable_1.Iterable.count(this, predicate);\n    }\n    distinct() {\n        const array = [...alfa_iterable_1.Iterable.distinct(this)];\n        return new Slice(array, 0, array.length);\n    }\n    get(index) {\n        if (index < 0 || index >= this._length) {\n            return alfa_option_1.None;\n        }\n        return alfa_option_1.Option.of(this._array[this._offset + index]);\n    }\n    has(index) {\n        return index < 0 || index >= this._length;\n    }\n    set(index, value) {\n        if (index < 0 || index >= this._length) {\n            return this;\n        }\n        const array = this.toArray();\n        array[index] = value;\n        return new Slice(array, 0, array.length);\n    }\n    insert(index, value) {\n        const array = alfa_array_1.Array.insert(this.toArray(), index, value);\n        return new Slice(array, 0, array.length);\n    }\n    append(value) {\n        const array = alfa_array_1.Array.append(this.toArray(), value);\n        return new Slice(array, 0, array.length);\n    }\n    prepend(value) {\n        const array = alfa_array_1.Array.prepend(this.toArray(), value);\n        return new Slice(array, 0, array.length);\n    }\n    concat(iterable) {\n        const array = this.toArray();\n        for (const value of iterable) {\n            array.push(value);\n        }\n        return new Slice(array, 0, array.length);\n    }\n    subtract(iterable) {\n        const array = [...alfa_iterable_1.Iterable.subtract(this, iterable)];\n        return new Slice(array, 0, array.length);\n    }\n    intersect(iterable) {\n        const array = [...alfa_iterable_1.Iterable.intersect(this, iterable)];\n        return new Slice(array, 0, array.length);\n    }\n    tee(callback, ...args) {\n        callback(this, ...args);\n        return this;\n    }\n    zip(iterable) {\n        const array = [...alfa_iterable_1.Iterable.zip(this, iterable)];\n        return new Slice(array, 0, array.length);\n    }\n    first() {\n        return this.get(0);\n    }\n    last() {\n        return this.get(this._length - 1);\n    }\n    take(count) {\n        return this.slice(0, count);\n    }\n    takeWhile(predicate) {\n        let count = 0;\n        for (let i = 0, n = this._length; i < n; i++) {\n            if (predicate(this._array[this._offset + i], i)) {\n                count++;\n            }\n            else {\n                break;\n            }\n        }\n        return this.take(count);\n    }\n    takeUntil(predicate) {\n        return this.takeWhile(not(predicate));\n    }\n    takeLast(count) {\n        return this.slice(this._length - count);\n    }\n    takeLastWhile(predicate) {\n        let count = 0;\n        for (let i = this._length - 1; i >= 0; i--) {\n            if (predicate(this._array[this._offset + i], i)) {\n                count++;\n            }\n            else {\n                break;\n            }\n        }\n        return this.takeLast(count);\n    }\n    takeLastUntil(predicate) {\n        return this.takeLastWhile(not(predicate));\n    }\n    skip(count) {\n        return this.slice(count);\n    }\n    skipWhile(predicate) {\n        let count = 0;\n        for (let i = 0, n = this._length; i < n; i++) {\n            if (predicate(this._array[this._offset + i], i)) {\n                count++;\n            }\n            else {\n                break;\n            }\n        }\n        return this.skip(count);\n    }\n    skipUntil(predicate) {\n        return this.skipWhile(not(predicate));\n    }\n    skipLast(count) {\n        return this.slice(0, this._length - count);\n    }\n    skipLastWhile(predicate) {\n        let count = 0;\n        for (let i = this._length - 1; i >= 0; i--) {\n            if (predicate(this._array[this._offset + i], i)) {\n                count++;\n            }\n            else {\n                break;\n            }\n        }\n        return this.skipLast(count);\n    }\n    skipLastUntil(predicate) {\n        return this.skipLastWhile(not(predicate));\n    }\n    trim(predicate) {\n        return this.trimLeading(predicate).trimTrailing(predicate);\n    }\n    trimLeading(predicate) {\n        return this.skipWhile(predicate);\n    }\n    trimTrailing(predicate) {\n        return this.skipLastWhile(predicate);\n    }\n    rest() {\n        return this.slice(1);\n    }\n    slice(start, end = this._length) {\n        start = clamp(start, this._length);\n        return new Slice(this._array, this._offset + start, clamp(end, this._length) - start);\n    }\n    reverse() {\n        const array = this.toArray().reverse();\n        return new Slice(array, 0, array.length);\n    }\n    join(separator) {\n        return alfa_iterable_1.Iterable.join(this, separator);\n    }\n    sort() {\n        return this.sortWith(compareComparable);\n    }\n    sortWith(comparer) {\n        const array = alfa_array_1.Array.sortWith(this.toArray(), comparer);\n        return new Slice(array, 0, array.length);\n    }\n    compare(iterable) {\n        return this.compareWith(iterable, compareComparable);\n    }\n    compareWith(iterable, comparer) {\n        return alfa_iterable_1.Iterable.compareWith(this, iterable, comparer);\n    }\n    *iterator() {\n        for (let i = this._offset, n = i + this._length; i < n; i++) {\n            yield this._array[i];\n        }\n    }\n    [Symbol.iterator]() {\n        return this.iterator();\n    }\n    equals(value) {\n        if (value instanceof Slice && value._length === this._length) {\n            for (let i = 0, n = value._length; i < n; i++) {\n                if (!alfa_equatable_1.Equatable.equals(value._array[value._offset + i], this._array[this._offset + i])) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    hash(hash) {\n        alfa_iterable_1.Iterable.hash(this, hash);\n    }\n    toArray() {\n        return this._array.slice(this._offset, this._offset + this._length);\n    }\n    toJSON() {\n        return this.toArray().map((value) => alfa_json_1.Serializable.toJSON(value));\n    }\n    toString() {\n        const values = this.toArray().join(\", \");\n        return `Slice [${values === \"\" ? \"\" : ` ${values} `}]`;\n    }\n}\nexports.Slice = Slice;\nSlice._empty = new Slice([], 0, 0);\n/**\n * @public\n */\n(function (Slice) {\n    function from(iterable) {\n        if (isSlice(iterable)) {\n            return iterable;\n        }\n        return Slice.of([...iterable]);\n    }\n    Slice.from = from;\n    function isSlice(value) {\n        return value instanceof Slice;\n    }\n    Slice.isSlice = isSlice;\n})(Slice || (exports.Slice = Slice = {}));\nfunction clamp(value, length) {\n    return value < 0 ? 0 : value > length ? length : value;\n}\n//# sourceMappingURL=slice.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-slice/src/slice.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/element/element.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/element/element.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./helpers/get-offset-parent */ \"./node_modules/@siteimprove/alfa-style/src/element/helpers/get-offset-parent.js\"), exports);\n__exportStar(__webpack_require__(/*! ./helpers/get-positioning-parent */ \"./node_modules/@siteimprove/alfa-style/src/element/helpers/get-positioning-parent.js\"), exports);\n__exportStar(__webpack_require__(/*! ./predicate/has-border */ \"./node_modules/@siteimprove/alfa-style/src/element/predicate/has-border.js\"), exports);\n__exportStar(__webpack_require__(/*! ./predicate/has-box-shadow */ \"./node_modules/@siteimprove/alfa-style/src/element/predicate/has-box-shadow.js\"), exports);\n__exportStar(__webpack_require__(/*! ./predicate/has-cascaded-style */ \"./node_modules/@siteimprove/alfa-style/src/element/predicate/has-cascaded-style.js\"), exports);\n__exportStar(__webpack_require__(/*! ./predicate/has-computed-style */ \"./node_modules/@siteimprove/alfa-style/src/element/predicate/has-computed-style.js\"), exports);\n__exportStar(__webpack_require__(/*! ./predicate/has-outline */ \"./node_modules/@siteimprove/alfa-style/src/element/predicate/has-outline.js\"), exports);\n__exportStar(__webpack_require__(/*! ./predicate/has-positioning-parent */ \"./node_modules/@siteimprove/alfa-style/src/element/predicate/has-positioning-parent.js\"), exports);\n__exportStar(__webpack_require__(/*! ./predicate/has-specified-style */ \"./node_modules/@siteimprove/alfa-style/src/element/predicate/has-specified-style.js\"), exports);\n__exportStar(__webpack_require__(/*! ./predicate/has-text-decoration */ \"./node_modules/@siteimprove/alfa-style/src/element/predicate/has-text-decoration.js\"), exports);\n__exportStar(__webpack_require__(/*! ./predicate/has-transparent-background */ \"./node_modules/@siteimprove/alfa-style/src/element/predicate/has-transparent-background.js\"), exports);\n__exportStar(__webpack_require__(/*! ./predicate/is-focusable */ \"./node_modules/@siteimprove/alfa-style/src/element/predicate/is-focusable.js\"), exports);\n__exportStar(__webpack_require__(/*! ./predicate/is-important */ \"./node_modules/@siteimprove/alfa-style/src/element/predicate/is-important.js\"), exports);\n__exportStar(__webpack_require__(/*! ./predicate/is-inert */ \"./node_modules/@siteimprove/alfa-style/src/element/predicate/is-inert.js\"), exports);\n__exportStar(__webpack_require__(/*! ./predicate/is-positioned */ \"./node_modules/@siteimprove/alfa-style/src/element/predicate/is-positioned.js\"), exports);\n__exportStar(__webpack_require__(/*! ./predicate/is-tabbable */ \"./node_modules/@siteimprove/alfa-style/src/element/predicate/is-tabbable.js\"), exports);\n__exportStar(__webpack_require__(/*! ./predicate/is-visible-shadow */ \"./node_modules/@siteimprove/alfa-style/src/element/predicate/is-visible-shadow.js\"), exports);\n//# sourceMappingURL=element.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/element/element.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/element/helpers/get-offset-parent.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/element/helpers/get-offset-parent.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getOffsetParent = void 0;\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst is_positioned_1 = __webpack_require__(/*! ../predicate/is-positioned */ \"./node_modules/@siteimprove/alfa-style/src/element/predicate/is-positioned.js\");\nconst is_rendered_1 = __webpack_require__(/*! ../../node/predicate/is-rendered */ \"./node_modules/@siteimprove/alfa-style/src/node/predicate/is-rendered.js\");\nconst { hasName, isElement } = alfa_dom_1.Element;\nconst { isRoot } = alfa_dom_1.Node;\nconst { and, or, not, test } = alfa_predicate_1.Predicate;\nconst isBody = hasName(\"body\");\nconst isTabular = hasName(\"td\", \"th\", \"table\");\n/**\n * {@link https://www.w3.org/TR/cssom-view-1/#dom-htmlelement-offsetparent}\n *\n * @public\n */\nfunction getOffsetParent(element, device) {\n    const isFixed = (0, is_positioned_1.isPositioned)(device, \"fixed\");\n    if (test(or(not((0, is_rendered_1.isRendered)(device)), isRoot(alfa_dom_1.Node.flatTree), isBody, isFixed), element)) {\n        return alfa_option_1.None;\n    }\n    const isStatic = (0, is_positioned_1.isPositioned)(device, \"static\");\n    return element\n        .ancestors(alfa_dom_1.Node.flatTree)\n        .filter(isElement)\n        .find(or(not(isStatic), isBody, and(isStatic, isTabular)));\n}\nexports.getOffsetParent = getOffsetParent;\n//# sourceMappingURL=get-offset-parent.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/element/helpers/get-offset-parent.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/element/helpers/get-positioning-parent.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/element/helpers/get-positioning-parent.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getPositioningParent = void 0;\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst get_offset_parent_1 = __webpack_require__(/*! ./get-offset-parent */ \"./node_modules/@siteimprove/alfa-style/src/element/helpers/get-offset-parent.js\");\nconst is_positioned_1 = __webpack_require__(/*! ../predicate/is-positioned */ \"./node_modules/@siteimprove/alfa-style/src/element/predicate/is-positioned.js\");\nconst { isElement } = alfa_dom_1.Element;\n/**\n * @public\n */\nfunction getPositioningParent(element, device) {\n    if ((0, is_positioned_1.isPositioned)(device, \"relative\", \"static\", \"sticky\")(element)) {\n        return element.parent(alfa_dom_1.Node.flatTree).filter(isElement);\n    }\n    else {\n        return (0, get_offset_parent_1.getOffsetParent)(element, device);\n    }\n}\nexports.getPositioningParent = getPositioningParent;\n//# sourceMappingURL=get-positioning-parent.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/element/helpers/get-positioning-parent.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/element/predicate/has-border.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/element/predicate/has-border.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.hasBorder = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst style_1 = __webpack_require__(/*! ../../style */ \"./node_modules/@siteimprove/alfa-style/src/style.js\");\nconst sides = [\"top\", \"right\", \"bottom\", \"left\"];\n/**\n * @public\n */\nfunction hasBorder(device, context) {\n    return (element) => {\n        const style = style_1.Style.from(element, device, context);\n        return sides.some((side) => style.computed(`border-${side}-width`).none(alfa_css_1.Numeric.isZero) &&\n            style\n                .computed(`border-${side}-color`)\n                .none((color) => color.type === \"color\" && alfa_css_1.Color.isTransparent(color)));\n    };\n}\nexports.hasBorder = hasBorder;\n//# sourceMappingURL=has-border.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/element/predicate/has-border.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/element/predicate/has-box-shadow.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/element/predicate/has-box-shadow.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.hasBoxShadow = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst style_1 = __webpack_require__(/*! ../../style */ \"./node_modules/@siteimprove/alfa-style/src/style.js\");\nconst is_visible_shadow_1 = __webpack_require__(/*! ./is-visible-shadow */ \"./node_modules/@siteimprove/alfa-style/src/element/predicate/is-visible-shadow.js\");\n/**\n * @public\n *\n * Known assumptions:\n * * Without being transparent, a shadow could have the same color of the background, and thus not be visible.\n *   This is even more difficult to detect since the shadow is rendered above the ancestors, not the element;\n *   and of course, non-solid background are hard to handle.\n * * In a shadows stack, a shadow can be entirely covered by the top ones; if the top ones have the same color\n *   as the background, then the bottom one is apparently visible but actually hidden below.\n *   This is hard to detect also because various blurring or spreading sizes make it worse…\n *\n * Therefore, we consider that these case are rare enough. We detect some obvious cases of invisible shadows\n * and assume the rest are visible…\n */\nfunction hasBoxShadow(device, context) {\n    return (element) => {\n        const shadow = style_1.Style.from(element, device, context).computed(\"box-shadow\").value;\n        return !alfa_css_1.Keyword.isKeyword(shadow) && alfa_iterable_1.Iterable.some(shadow, is_visible_shadow_1.isVisibleShadow);\n    };\n}\nexports.hasBoxShadow = hasBoxShadow;\n//# sourceMappingURL=has-box-shadow.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/element/predicate/has-box-shadow.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/element/predicate/has-cascaded-style.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/element/predicate/has-cascaded-style.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.hasCascadedStyle = void 0;\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst style_1 = __webpack_require__(/*! ../../style */ \"./node_modules/@siteimprove/alfa-style/src/style.js\");\nconst { isElement } = alfa_dom_1.Element;\n/**\n * @public\n */\nfunction hasCascadedStyle(name, predicate, device, context) {\n    return function hasCascadedStyle(node) {\n        return isElement(node)\n            ? style_1.Style.from(node, device, context)\n                .cascaded(name)\n                .some((value) => value.some(predicate))\n            : node.parent(alfa_dom_1.Node.flatTree).filter(isElement).some(hasCascadedStyle);\n    };\n}\nexports.hasCascadedStyle = hasCascadedStyle;\n//# sourceMappingURL=has-cascaded-style.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/element/predicate/has-cascaded-style.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/element/predicate/has-computed-style.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/element/predicate/has-computed-style.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.hasComputedStyle = void 0;\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst style_1 = __webpack_require__(/*! ../../style */ \"./node_modules/@siteimprove/alfa-style/src/style.js\");\nconst { isElement } = alfa_dom_1.Element;\n/**\n * @public\n */\nfunction hasComputedStyle(name, predicate, device, context) {\n    return function hasComputedStyle(node) {\n        return isElement(node)\n            ? style_1.Style.from(node, device, context).computed(name).some(predicate)\n            : node.parent(alfa_dom_1.Node.flatTree).filter(isElement).some(hasComputedStyle);\n    };\n}\nexports.hasComputedStyle = hasComputedStyle;\n//# sourceMappingURL=has-computed-style.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/element/predicate/has-computed-style.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/element/predicate/has-outline.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/element/predicate/has-outline.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.hasOutline = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst style_1 = __webpack_require__(/*! ../../style */ \"./node_modules/@siteimprove/alfa-style/src/style.js\");\n/**\n * @public\n */\nfunction hasOutline(device, context) {\n    return (element) => {\n        const style = style_1.Style.from(element, device, context);\n        return (style.computed(\"outline-width\").none(alfa_css_1.Numeric.isZero) &&\n            style.computed(\"outline-style\").none((style) => style.value === \"none\") &&\n            style\n                .computed(\"outline-color\")\n                .none((color) => color.type === \"color\" && alfa_css_1.Color.isTransparent(color)));\n    };\n}\nexports.hasOutline = hasOutline;\n//# sourceMappingURL=has-outline.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/element/predicate/has-outline.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/element/predicate/has-positioning-parent.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/element/predicate/has-positioning-parent.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.hasPositioningParent = void 0;\nconst get_positioning_parent_1 = __webpack_require__(/*! ../helpers/get-positioning-parent */ \"./node_modules/@siteimprove/alfa-style/src/element/helpers/get-positioning-parent.js\");\n/**\n * @public\n */\nfunction hasPositioningParent(device, predicate) {\n    return (element) => (0, get_positioning_parent_1.getPositioningParent)(element, device).some(predicate);\n}\nexports.hasPositioningParent = hasPositioningParent;\n//# sourceMappingURL=has-positioning-parent.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/element/predicate/has-positioning-parent.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/element/predicate/has-specified-style.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/element/predicate/has-specified-style.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.hasSpecifiedStyle = void 0;\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst style_1 = __webpack_require__(/*! ../../style */ \"./node_modules/@siteimprove/alfa-style/src/style.js\");\nconst { isElement } = alfa_dom_1.Element;\n/**\n * @public\n */\nfunction hasSpecifiedStyle(name, predicate, device, context) {\n    return function hasSpecifiedStyle(node) {\n        return isElement(node)\n            ? style_1.Style.from(node, device, context).specified(name).some(predicate)\n            : node.parent(alfa_dom_1.Node.flatTree).filter(isElement).some(hasSpecifiedStyle);\n    };\n}\nexports.hasSpecifiedStyle = hasSpecifiedStyle;\n//# sourceMappingURL=has-specified-style.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/element/predicate/has-specified-style.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/element/predicate/has-text-decoration.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/element/predicate/has-text-decoration.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.hasTextDecoration = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst style_1 = __webpack_require__(/*! ../../style */ \"./node_modules/@siteimprove/alfa-style/src/style.js\");\n/**\n * @public\n */\nfunction hasTextDecoration(device, context) {\n    return (element) => {\n        const style = style_1.Style.from(element, device, context);\n        return (style.computed(\"text-decoration-color\").none(alfa_css_1.Color.isTransparent) &&\n            style\n                .computed(\"text-decoration-line\")\n                .none((line) => line.type === \"keyword\"));\n    };\n}\nexports.hasTextDecoration = hasTextDecoration;\n//# sourceMappingURL=has-text-decoration.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/element/predicate/has-text-decoration.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/element/predicate/has-transparent-background.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/element/predicate/has-transparent-background.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.hasTransparentBackground = void 0;\nconst alfa_cache_1 = __webpack_require__(/*! @siteimprove/alfa-cache */ \"./node_modules/@siteimprove/alfa-cache/src/index.js\");\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_selector_1 = __webpack_require__(/*! @siteimprove/alfa-selector */ \"./node_modules/@siteimprove/alfa-selector/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst style_1 = __webpack_require__(/*! ../../style */ \"./node_modules/@siteimprove/alfa-style/src/style.js\");\nconst { isReplaced, isElement } = alfa_dom_1.Element;\nconst { or, test } = alfa_predicate_1.Predicate;\nconst cache = alfa_cache_1.Cache.empty();\n/**\n * Checks if an element has transparent background.\n * The element may be not fully transparent (e.g., have text) while still having transparent background.\n * @public\n */\nfunction hasTransparentBackground(device, context = alfa_selector_1.Context.empty()) {\n    return (element) => cache\n        .get(device, alfa_cache_1.Cache.empty)\n        .get(context, alfa_cache_1.Cache.empty)\n        .get(element, () => {\n        if (test(or(\n        // Replaced elements are assumed to be replaced by non-transparent content.\n        isReplaced, \n        // Elements with non-transparent background are not transparent.\n        style_1.Style.hasComputedStyle(\"background-color\", (color) => !alfa_css_1.Color.isTransparent(color), device, context), \n        // Elements with a background image are not transparent.\n        style_1.Style.hasComputedStyle(\"background-image\", (image) => !(alfa_css_1.Keyword.isKeyword(image.values[0]) &&\n            image.values[0].equals(alfa_css_1.Keyword.of(\"none\"))), device, context)), element)) {\n            return false;\n        }\n        // The element itself has transparent background, but it may have non-transparent content.\n        return element\n            .children(alfa_dom_1.Node.fullTree)\n            .filter(isElement)\n            .every(hasTransparentBackground(device, context));\n    });\n}\nexports.hasTransparentBackground = hasTransparentBackground;\n//# sourceMappingURL=has-transparent-background.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/element/predicate/has-transparent-background.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/element/predicate/is-focusable.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/element/predicate/is-focusable.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isFocusable = void 0;\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst is_rendered_1 = __webpack_require__(/*! ../../node/predicate/is-rendered */ \"./node_modules/@siteimprove/alfa-style/src/node/predicate/is-rendered.js\");\nconst { hasTabIndex, isActuallyDisabled } = alfa_dom_1.Element;\nconst { and, not } = alfa_predicate_1.Predicate;\n/**\n * {@link https://html.spec.whatwg.org/#focusable-area}\n *\n * @public\n */\nfunction isFocusable(device) {\n    return and(hasTabIndex(), and(not(isActuallyDisabled), (0, is_rendered_1.isRendered)(device)));\n}\nexports.isFocusable = isFocusable;\n//# sourceMappingURL=is-focusable.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/element/predicate/is-focusable.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/element/predicate/is-important.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/element/predicate/is-important.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isImportant = void 0;\nconst has_computed_style_1 = __webpack_require__(/*! ./has-computed-style */ \"./node_modules/@siteimprove/alfa-style/src/element/predicate/has-computed-style.js\");\n/**\n * @public\n */\nfunction isImportant(device, property) {\n    return (0, has_computed_style_1.hasComputedStyle)(property, (_, source) => source.some((declaration) => declaration.important), device);\n}\nexports.isImportant = isImportant;\n//# sourceMappingURL=is-important.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/element/predicate/is-important.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/element/predicate/is-inert.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/element/predicate/is-inert.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isInert = void 0;\nconst style_1 = __webpack_require__(/*! ../../style */ \"./node_modules/@siteimprove/alfa-style/src/style.js\");\n/**\n * {@link https://html.spec.whatwg.org/#inert}\n *\n * @public\n */\nfunction isInert(device) {\n    return style_1.Style.hasComputedStyle(\"visibility\", (specified) => specified.value === \"hidden\" || specified.value === \"collapse\", device);\n}\nexports.isInert = isInert;\n//# sourceMappingURL=is-inert.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/element/predicate/is-inert.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/element/predicate/is-positioned.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/element/predicate/is-positioned.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isPositioned = void 0;\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst has_computed_style_1 = __webpack_require__(/*! ./has-computed-style */ \"./node_modules/@siteimprove/alfa-style/src/element/predicate/has-computed-style.js\");\nconst { equals } = alfa_predicate_1.Predicate;\n/**\n * @public\n */\nfunction isPositioned(device, ...positions) {\n    return (0, has_computed_style_1.hasComputedStyle)(\"position\", (position) => positions.some(equals(position.value)), device);\n}\nexports.isPositioned = isPositioned;\n//# sourceMappingURL=is-positioned.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/element/predicate/is-positioned.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/element/predicate/is-tabbable.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/element/predicate/is-tabbable.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isTabbable = void 0;\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst is_inert_1 = __webpack_require__(/*! ./is-inert */ \"./node_modules/@siteimprove/alfa-style/src/element/predicate/is-inert.js\");\nconst is_rendered_1 = __webpack_require__(/*! ../../node/predicate/is-rendered */ \"./node_modules/@siteimprove/alfa-style/src/node/predicate/is-rendered.js\");\nconst { hasName, hasNamespace, hasTabIndex, isActuallyDisabled } = alfa_dom_1.Element;\nconst { and, not } = alfa_predicate_1.Predicate;\n/**\n * {@link https://html.spec.whatwg.org/#sequential-focus-navigation}\n *\n * @public\n */\nfunction isTabbable(device) {\n    return and(hasTabIndex((tabIndex) => tabIndex >= 0), not(redirectsFocus), not(isActuallyDisabled), not((0, is_inert_1.isInert)(device)), (0, is_rendered_1.isRendered)(device));\n}\nexports.isTabbable = isTabbable;\n/**\n * Per the sequential navigation search algorithm, browsing context\n * containers (<iframe> elements) redirect focus to either their first\n * focusable descendant or the next element in the sequential focus\n * navigation order.\n * {@link https://html.spec.whatwg.org/#browsing-context-container}\n * {@link https://html.spec.whatwg.org/#sequential-navigation-search-algorithm}\n\n * <label> elements redirect focus to their control.\n * {@link https://html.spec.whatwg.org/#the-label-element}\n */\nconst redirectsFocus = and(hasNamespace(alfa_dom_1.Namespace.HTML), hasName(\"iframe\", \"label\"));\n//# sourceMappingURL=is-tabbable.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/element/predicate/is-tabbable.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/element/predicate/is-visible-shadow.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/element/predicate/is-visible-shadow.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isVisibleShadow = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\n/**\n * @public\n * */\nfunction isVisibleShadow(shadow) {\n    return !isInvisibleShadow(shadow);\n}\nexports.isVisibleShadow = isVisibleShadow;\nfunction isInvisibleShadow(shadow) {\n    return (\n    // Transparent shadows are not visible\n    alfa_css_1.Color.isTransparent(shadow.color) ||\n        // Shadows with no offset, blur and spread are not visible\n        (shadow.vertical.value === 0 &&\n            shadow.horizontal.value === 0 &&\n            shadow.blur.value === 0 &&\n            shadow.spread.value === 0));\n}\n//# sourceMappingURL=is-visible-shadow.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/element/predicate/is-visible-shadow.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/index.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./resolver */ \"./node_modules/@siteimprove/alfa-style/src/resolver.js\"), exports);\n__exportStar(__webpack_require__(/*! ./value */ \"./node_modules/@siteimprove/alfa-style/src/value.js\"), exports);\n__exportStar(__webpack_require__(/*! ./longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\"), exports);\n__exportStar(__webpack_require__(/*! ./longhands */ \"./node_modules/@siteimprove/alfa-style/src/longhands.js\"), exports);\n__exportStar(__webpack_require__(/*! ./shorthand */ \"./node_modules/@siteimprove/alfa-style/src/shorthand.js\"), exports);\n__exportStar(__webpack_require__(/*! ./shorthands */ \"./node_modules/@siteimprove/alfa-style/src/shorthands.js\"), exports);\n__exportStar(__webpack_require__(/*! ./style */ \"./node_modules/@siteimprove/alfa-style/src/style.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/longhand.js":
/*!**************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/longhand.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Longhand = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst parser = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst { left, either, end } = parser.Parser;\n/**\n * @internal\n *\n * @remarks\n * The parameter name SPECIFIED is somewhat ill-named. This type does not\n * contain the default keywords that are handled globally. The actual type of\n * specified values does include them.\n */\nclass Longhand {\n    static of(initial, parse, compute, options = {\n        inherits: false,\n    }) {\n        return new Longhand(initial, parse, compute, options);\n    }\n    static extend(property, overrides = {}) {\n        const { initial = property._initial, parse = property._parseBase, compute = property._compute, options = {}, } = overrides;\n        return new Longhand(initial, parse, compute, {\n            ...property._options,\n            ...options,\n        });\n    }\n    constructor(initial, parseBase, compute, options) {\n        this._initial = initial;\n        this._parseBase = parseBase;\n        this._parse = left(either(Longhand.parseDefaults, parseBase), end(() => \"Expected end of input\"));\n        this._compute = compute;\n        this._options = options;\n    }\n    get initial() {\n        return this._initial;\n    }\n    get parse() {\n        return this._parse;\n    }\n    /**\n     * Return the base parser of the property, which does not parse the global\n     * default values. This is often useful when building parsers for shorthands.\n     *\n     * @internal\n     */\n    get parseBase() {\n        return this._parseBase;\n    }\n    get compute() {\n        return this._compute;\n    }\n    get options() {\n        return this._options;\n    }\n}\nexports.Longhand = Longhand;\n/**\n * @internal\n */\n(function (Longhand) {\n    Longhand.parseDefaults = alfa_css_1.Keyword.parse(\"initial\", \"inherit\", \"unset\");\n    /**\n     * Utility function for longhands whose value can only be a list of keywords.\n     *\n     * @internal\n     */\n    function fromKeywords(options, initial, ...other) {\n        return Longhand.of(alfa_css_1.Keyword.of(initial), alfa_css_1.Keyword.parse(initial, ...other), (value) => value, options);\n    }\n    Longhand.fromKeywords = fromKeywords;\n})(Longhand || (exports.Longhand = Longhand = {}));\n//# sourceMappingURL=longhand.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/longhand.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/longhands.js":
/*!***************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/longhands.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Longhands = void 0;\nconst background_attachment_1 = __webpack_require__(/*! ./property/background-attachment */ \"./node_modules/@siteimprove/alfa-style/src/property/background-attachment.js\");\nconst background_clip_1 = __webpack_require__(/*! ./property/background-clip */ \"./node_modules/@siteimprove/alfa-style/src/property/background-clip.js\");\nconst background_color_1 = __webpack_require__(/*! ./property/background-color */ \"./node_modules/@siteimprove/alfa-style/src/property/background-color.js\");\nconst background_image_1 = __webpack_require__(/*! ./property/background-image */ \"./node_modules/@siteimprove/alfa-style/src/property/background-image.js\");\nconst background_origin_1 = __webpack_require__(/*! ./property/background-origin */ \"./node_modules/@siteimprove/alfa-style/src/property/background-origin.js\");\nconst background_position_x_1 = __webpack_require__(/*! ./property/background-position-x */ \"./node_modules/@siteimprove/alfa-style/src/property/background-position-x.js\");\nconst background_position_y_1 = __webpack_require__(/*! ./property/background-position-y */ \"./node_modules/@siteimprove/alfa-style/src/property/background-position-y.js\");\nconst background_repeat_x_1 = __webpack_require__(/*! ./property/background-repeat-x */ \"./node_modules/@siteimprove/alfa-style/src/property/background-repeat-x.js\");\nconst background_repeat_y_1 = __webpack_require__(/*! ./property/background-repeat-y */ \"./node_modules/@siteimprove/alfa-style/src/property/background-repeat-y.js\");\nconst background_size_1 = __webpack_require__(/*! ./property/background-size */ \"./node_modules/@siteimprove/alfa-style/src/property/background-size.js\");\nconst border_block_end_color_1 = __webpack_require__(/*! ./property/border-block-end-color */ \"./node_modules/@siteimprove/alfa-style/src/property/border-block-end-color.js\");\nconst border_block_end_style_1 = __webpack_require__(/*! ./property/border-block-end-style */ \"./node_modules/@siteimprove/alfa-style/src/property/border-block-end-style.js\");\nconst border_block_end_width_1 = __webpack_require__(/*! ./property/border-block-end-width */ \"./node_modules/@siteimprove/alfa-style/src/property/border-block-end-width.js\");\nconst border_block_start_color_1 = __webpack_require__(/*! ./property/border-block-start-color */ \"./node_modules/@siteimprove/alfa-style/src/property/border-block-start-color.js\");\nconst border_block_start_style_1 = __webpack_require__(/*! ./property/border-block-start-style */ \"./node_modules/@siteimprove/alfa-style/src/property/border-block-start-style.js\");\nconst border_block_start_width_1 = __webpack_require__(/*! ./property/border-block-start-width */ \"./node_modules/@siteimprove/alfa-style/src/property/border-block-start-width.js\");\nconst border_bottom_color_1 = __webpack_require__(/*! ./property/border-bottom-color */ \"./node_modules/@siteimprove/alfa-style/src/property/border-bottom-color.js\");\nconst border_bottom_left_radius_1 = __webpack_require__(/*! ./property/border-bottom-left-radius */ \"./node_modules/@siteimprove/alfa-style/src/property/border-bottom-left-radius.js\");\nconst border_bottom_right_radius_1 = __webpack_require__(/*! ./property/border-bottom-right-radius */ \"./node_modules/@siteimprove/alfa-style/src/property/border-bottom-right-radius.js\");\nconst border_bottom_style_1 = __webpack_require__(/*! ./property/border-bottom-style */ \"./node_modules/@siteimprove/alfa-style/src/property/border-bottom-style.js\");\nconst border_bottom_width_1 = __webpack_require__(/*! ./property/border-bottom-width */ \"./node_modules/@siteimprove/alfa-style/src/property/border-bottom-width.js\");\nconst border_collapse_1 = __webpack_require__(/*! ./property/border-collapse */ \"./node_modules/@siteimprove/alfa-style/src/property/border-collapse.js\");\nconst border_end_end_radius_1 = __webpack_require__(/*! ./property/border-end-end-radius */ \"./node_modules/@siteimprove/alfa-style/src/property/border-end-end-radius.js\");\nconst border_end_start_radius_1 = __webpack_require__(/*! ./property/border-end-start-radius */ \"./node_modules/@siteimprove/alfa-style/src/property/border-end-start-radius.js\");\nconst border_image_outset_1 = __webpack_require__(/*! ./property/border-image-outset */ \"./node_modules/@siteimprove/alfa-style/src/property/border-image-outset.js\");\nconst border_image_repeat_1 = __webpack_require__(/*! ./property/border-image-repeat */ \"./node_modules/@siteimprove/alfa-style/src/property/border-image-repeat.js\");\nconst border_image_slice_1 = __webpack_require__(/*! ./property/border-image-slice */ \"./node_modules/@siteimprove/alfa-style/src/property/border-image-slice.js\");\nconst border_image_source_1 = __webpack_require__(/*! ./property/border-image-source */ \"./node_modules/@siteimprove/alfa-style/src/property/border-image-source.js\");\nconst border_image_width_1 = __webpack_require__(/*! ./property/border-image-width */ \"./node_modules/@siteimprove/alfa-style/src/property/border-image-width.js\");\nconst border_inline_end_color_1 = __webpack_require__(/*! ./property/border-inline-end-color */ \"./node_modules/@siteimprove/alfa-style/src/property/border-inline-end-color.js\");\nconst border_inline_end_style_1 = __webpack_require__(/*! ./property/border-inline-end-style */ \"./node_modules/@siteimprove/alfa-style/src/property/border-inline-end-style.js\");\nconst border_inline_end_width_1 = __webpack_require__(/*! ./property/border-inline-end-width */ \"./node_modules/@siteimprove/alfa-style/src/property/border-inline-end-width.js\");\nconst border_inline_start_color_1 = __webpack_require__(/*! ./property/border-inline-start-color */ \"./node_modules/@siteimprove/alfa-style/src/property/border-inline-start-color.js\");\nconst border_inline_start_style_1 = __webpack_require__(/*! ./property/border-inline-start-style */ \"./node_modules/@siteimprove/alfa-style/src/property/border-inline-start-style.js\");\nconst border_inline_start_width_1 = __webpack_require__(/*! ./property/border-inline-start-width */ \"./node_modules/@siteimprove/alfa-style/src/property/border-inline-start-width.js\");\nconst border_left_color_1 = __webpack_require__(/*! ./property/border-left-color */ \"./node_modules/@siteimprove/alfa-style/src/property/border-left-color.js\");\nconst border_left_style_1 = __webpack_require__(/*! ./property/border-left-style */ \"./node_modules/@siteimprove/alfa-style/src/property/border-left-style.js\");\nconst border_left_width_1 = __webpack_require__(/*! ./property/border-left-width */ \"./node_modules/@siteimprove/alfa-style/src/property/border-left-width.js\");\nconst border_right_color_1 = __webpack_require__(/*! ./property/border-right-color */ \"./node_modules/@siteimprove/alfa-style/src/property/border-right-color.js\");\nconst border_right_style_1 = __webpack_require__(/*! ./property/border-right-style */ \"./node_modules/@siteimprove/alfa-style/src/property/border-right-style.js\");\nconst border_right_width_1 = __webpack_require__(/*! ./property/border-right-width */ \"./node_modules/@siteimprove/alfa-style/src/property/border-right-width.js\");\nconst border_start_end_radius_1 = __webpack_require__(/*! ./property/border-start-end-radius */ \"./node_modules/@siteimprove/alfa-style/src/property/border-start-end-radius.js\");\nconst border_start_start_radius_1 = __webpack_require__(/*! ./property/border-start-start-radius */ \"./node_modules/@siteimprove/alfa-style/src/property/border-start-start-radius.js\");\nconst border_top_color_1 = __webpack_require__(/*! ./property/border-top-color */ \"./node_modules/@siteimprove/alfa-style/src/property/border-top-color.js\");\nconst border_top_left_radius_1 = __webpack_require__(/*! ./property/border-top-left-radius */ \"./node_modules/@siteimprove/alfa-style/src/property/border-top-left-radius.js\");\nconst border_top_right_radius_1 = __webpack_require__(/*! ./property/border-top-right-radius */ \"./node_modules/@siteimprove/alfa-style/src/property/border-top-right-radius.js\");\nconst border_top_style_1 = __webpack_require__(/*! ./property/border-top-style */ \"./node_modules/@siteimprove/alfa-style/src/property/border-top-style.js\");\nconst border_top_width_1 = __webpack_require__(/*! ./property/border-top-width */ \"./node_modules/@siteimprove/alfa-style/src/property/border-top-width.js\");\nconst bottom_1 = __webpack_require__(/*! ./property/bottom */ \"./node_modules/@siteimprove/alfa-style/src/property/bottom.js\");\nconst box_shadow_1 = __webpack_require__(/*! ./property/box-shadow */ \"./node_modules/@siteimprove/alfa-style/src/property/box-shadow.js\");\nconst clip_1 = __webpack_require__(/*! ./property/clip */ \"./node_modules/@siteimprove/alfa-style/src/property/clip.js\");\nconst clip_path_1 = __webpack_require__(/*! ./property/clip-path */ \"./node_modules/@siteimprove/alfa-style/src/property/clip-path.js\");\nconst color_1 = __webpack_require__(/*! ./property/color */ \"./node_modules/@siteimprove/alfa-style/src/property/color.js\");\nconst cursor_1 = __webpack_require__(/*! ./property/cursor */ \"./node_modules/@siteimprove/alfa-style/src/property/cursor.js\");\nconst display_1 = __webpack_require__(/*! ./property/display */ \"./node_modules/@siteimprove/alfa-style/src/property/display.js\");\nconst flex_direction_1 = __webpack_require__(/*! ./property/flex-direction */ \"./node_modules/@siteimprove/alfa-style/src/property/flex-direction.js\");\nconst flex_wrap_1 = __webpack_require__(/*! ./property/flex-wrap */ \"./node_modules/@siteimprove/alfa-style/src/property/flex-wrap.js\");\nconst float_1 = __webpack_require__(/*! ./property/float */ \"./node_modules/@siteimprove/alfa-style/src/property/float.js\");\nconst font_family_1 = __webpack_require__(/*! ./property/font-family */ \"./node_modules/@siteimprove/alfa-style/src/property/font-family.js\");\nconst font_size_1 = __webpack_require__(/*! ./property/font-size */ \"./node_modules/@siteimprove/alfa-style/src/property/font-size.js\");\nconst font_stretch_1 = __webpack_require__(/*! ./property/font-stretch */ \"./node_modules/@siteimprove/alfa-style/src/property/font-stretch.js\");\nconst font_style_1 = __webpack_require__(/*! ./property/font-style */ \"./node_modules/@siteimprove/alfa-style/src/property/font-style.js\");\nconst font_variant_caps_1 = __webpack_require__(/*! ./property/font-variant-caps */ \"./node_modules/@siteimprove/alfa-style/src/property/font-variant-caps.js\");\nconst font_variant_east_asian_1 = __webpack_require__(/*! ./property/font-variant-east-asian */ \"./node_modules/@siteimprove/alfa-style/src/property/font-variant-east-asian.js\");\nconst font_variant_ligatures_1 = __webpack_require__(/*! ./property/font-variant-ligatures */ \"./node_modules/@siteimprove/alfa-style/src/property/font-variant-ligatures.js\");\nconst font_variant_numeric_1 = __webpack_require__(/*! ./property/font-variant-numeric */ \"./node_modules/@siteimprove/alfa-style/src/property/font-variant-numeric.js\");\nconst font_variant_position_1 = __webpack_require__(/*! ./property/font-variant-position */ \"./node_modules/@siteimprove/alfa-style/src/property/font-variant-position.js\");\nconst font_weight_1 = __webpack_require__(/*! ./property/font-weight */ \"./node_modules/@siteimprove/alfa-style/src/property/font-weight.js\");\nconst height_1 = __webpack_require__(/*! ./property/height */ \"./node_modules/@siteimprove/alfa-style/src/property/height.js\");\nconst inset_block_end_1 = __webpack_require__(/*! ./property/inset-block-end */ \"./node_modules/@siteimprove/alfa-style/src/property/inset-block-end.js\");\nconst inset_block_start_1 = __webpack_require__(/*! ./property/inset-block-start */ \"./node_modules/@siteimprove/alfa-style/src/property/inset-block-start.js\");\nconst inset_inline_end_1 = __webpack_require__(/*! ./property/inset-inline-end */ \"./node_modules/@siteimprove/alfa-style/src/property/inset-inline-end.js\");\nconst inset_inline_start_1 = __webpack_require__(/*! ./property/inset-inline-start */ \"./node_modules/@siteimprove/alfa-style/src/property/inset-inline-start.js\");\nconst left_1 = __webpack_require__(/*! ./property/left */ \"./node_modules/@siteimprove/alfa-style/src/property/left.js\");\nconst letter_spacing_1 = __webpack_require__(/*! ./property/letter-spacing */ \"./node_modules/@siteimprove/alfa-style/src/property/letter-spacing.js\");\nconst line_height_1 = __webpack_require__(/*! ./property/line-height */ \"./node_modules/@siteimprove/alfa-style/src/property/line-height.js\");\nconst margin_bottom_1 = __webpack_require__(/*! ./property/margin-bottom */ \"./node_modules/@siteimprove/alfa-style/src/property/margin-bottom.js\");\nconst margin_left_1 = __webpack_require__(/*! ./property/margin-left */ \"./node_modules/@siteimprove/alfa-style/src/property/margin-left.js\");\nconst margin_right_1 = __webpack_require__(/*! ./property/margin-right */ \"./node_modules/@siteimprove/alfa-style/src/property/margin-right.js\");\nconst margin_top_1 = __webpack_require__(/*! ./property/margin-top */ \"./node_modules/@siteimprove/alfa-style/src/property/margin-top.js\");\nconst min_height_1 = __webpack_require__(/*! ./property/min-height */ \"./node_modules/@siteimprove/alfa-style/src/property/min-height.js\");\nconst min_width_1 = __webpack_require__(/*! ./property/min-width */ \"./node_modules/@siteimprove/alfa-style/src/property/min-width.js\");\nconst opacity_1 = __webpack_require__(/*! ./property/opacity */ \"./node_modules/@siteimprove/alfa-style/src/property/opacity.js\");\nconst outline_color_1 = __webpack_require__(/*! ./property/outline-color */ \"./node_modules/@siteimprove/alfa-style/src/property/outline-color.js\");\nconst outline_offset_1 = __webpack_require__(/*! ./property/outline-offset */ \"./node_modules/@siteimprove/alfa-style/src/property/outline-offset.js\");\nconst outline_style_1 = __webpack_require__(/*! ./property/outline-style */ \"./node_modules/@siteimprove/alfa-style/src/property/outline-style.js\");\nconst outline_width_1 = __webpack_require__(/*! ./property/outline-width */ \"./node_modules/@siteimprove/alfa-style/src/property/outline-width.js\");\nconst overflow_x_1 = __webpack_require__(/*! ./property/overflow-x */ \"./node_modules/@siteimprove/alfa-style/src/property/overflow-x.js\");\nconst overflow_y_1 = __webpack_require__(/*! ./property/overflow-y */ \"./node_modules/@siteimprove/alfa-style/src/property/overflow-y.js\");\nconst position_1 = __webpack_require__(/*! ./property/position */ \"./node_modules/@siteimprove/alfa-style/src/property/position.js\");\nconst right_1 = __webpack_require__(/*! ./property/right */ \"./node_modules/@siteimprove/alfa-style/src/property/right.js\");\nconst rotate_1 = __webpack_require__(/*! ./property/rotate */ \"./node_modules/@siteimprove/alfa-style/src/property/rotate.js\");\nconst text_align_1 = __webpack_require__(/*! ./property/text-align */ \"./node_modules/@siteimprove/alfa-style/src/property/text-align.js\");\nconst text_decoration_color_1 = __webpack_require__(/*! ./property/text-decoration-color */ \"./node_modules/@siteimprove/alfa-style/src/property/text-decoration-color.js\");\nconst text_decoration_line_1 = __webpack_require__(/*! ./property/text-decoration-line */ \"./node_modules/@siteimprove/alfa-style/src/property/text-decoration-line.js\");\nconst text_decoration_style_1 = __webpack_require__(/*! ./property/text-decoration-style */ \"./node_modules/@siteimprove/alfa-style/src/property/text-decoration-style.js\");\nconst text_decoration_thickness_1 = __webpack_require__(/*! ./property/text-decoration-thickness */ \"./node_modules/@siteimprove/alfa-style/src/property/text-decoration-thickness.js\");\nconst text_indent_1 = __webpack_require__(/*! ./property/text-indent */ \"./node_modules/@siteimprove/alfa-style/src/property/text-indent.js\");\nconst text_overflow_1 = __webpack_require__(/*! ./property/text-overflow */ \"./node_modules/@siteimprove/alfa-style/src/property/text-overflow.js\");\nconst text_shadow_1 = __webpack_require__(/*! ./property/text-shadow */ \"./node_modules/@siteimprove/alfa-style/src/property/text-shadow.js\");\nconst text_transform_1 = __webpack_require__(/*! ./property/text-transform */ \"./node_modules/@siteimprove/alfa-style/src/property/text-transform.js\");\nconst top_1 = __webpack_require__(/*! ./property/top */ \"./node_modules/@siteimprove/alfa-style/src/property/top.js\");\nconst transform_1 = __webpack_require__(/*! ./property/transform */ \"./node_modules/@siteimprove/alfa-style/src/property/transform.js\");\nconst vertical_align_1 = __webpack_require__(/*! ./property/vertical-align */ \"./node_modules/@siteimprove/alfa-style/src/property/vertical-align.js\");\nconst visibility_1 = __webpack_require__(/*! ./property/visibility */ \"./node_modules/@siteimprove/alfa-style/src/property/visibility.js\");\nconst white_space_1 = __webpack_require__(/*! ./property/white-space */ \"./node_modules/@siteimprove/alfa-style/src/property/white-space.js\");\nconst width_1 = __webpack_require__(/*! ./property/width */ \"./node_modules/@siteimprove/alfa-style/src/property/width.js\");\nconst word_spacing_1 = __webpack_require__(/*! ./property/word-spacing */ \"./node_modules/@siteimprove/alfa-style/src/property/word-spacing.js\");\n/**\n * @public\n */\nvar Longhands;\n(function (Longhands) {\n    const longHands = {\n        \"background-attachment\": background_attachment_1.default,\n        \"background-clip\": background_clip_1.default,\n        \"background-color\": background_color_1.default,\n        \"background-image\": background_image_1.default,\n        \"background-origin\": background_origin_1.default,\n        \"background-position-x\": background_position_x_1.default,\n        \"background-position-y\": background_position_y_1.default,\n        \"background-repeat-x\": background_repeat_x_1.default,\n        \"background-repeat-y\": background_repeat_y_1.default,\n        \"background-size\": background_size_1.default,\n        \"border-block-end-color\": border_block_end_color_1.default,\n        \"border-block-end-style\": border_block_end_style_1.default,\n        \"border-block-end-width\": border_block_end_width_1.default,\n        \"border-block-start-color\": border_block_start_color_1.default,\n        \"border-block-start-style\": border_block_start_style_1.default,\n        \"border-block-start-width\": border_block_start_width_1.default,\n        \"border-bottom-color\": border_bottom_color_1.default,\n        \"border-bottom-left-radius\": border_bottom_left_radius_1.default,\n        \"border-bottom-right-radius\": border_bottom_right_radius_1.default,\n        \"border-bottom-style\": border_bottom_style_1.default,\n        \"border-bottom-width\": border_bottom_width_1.default,\n        \"border-collapse\": border_collapse_1.default,\n        \"border-end-end-radius\": border_end_end_radius_1.default,\n        \"border-end-start-radius\": border_end_start_radius_1.default,\n        \"border-image-outset\": border_image_outset_1.default,\n        \"border-image-repeat\": border_image_repeat_1.default,\n        \"border-image-slice\": border_image_slice_1.default,\n        \"border-image-source\": border_image_source_1.default,\n        \"border-image-width\": border_image_width_1.default,\n        \"border-inline-end-color\": border_inline_end_color_1.default,\n        \"border-inline-end-style\": border_inline_end_style_1.default,\n        \"border-inline-end-width\": border_inline_end_width_1.default,\n        \"border-inline-start-color\": border_inline_start_color_1.default,\n        \"border-inline-start-style\": border_inline_start_style_1.default,\n        \"border-inline-start-width\": border_inline_start_width_1.default,\n        \"border-left-color\": border_left_color_1.default,\n        \"border-left-style\": border_left_style_1.default,\n        \"border-left-width\": border_left_width_1.default,\n        \"border-right-color\": border_right_color_1.default,\n        \"border-right-style\": border_right_style_1.default,\n        \"border-right-width\": border_right_width_1.default,\n        \"border-start-end-radius\": border_start_end_radius_1.default,\n        \"border-start-start-radius\": border_start_start_radius_1.default,\n        \"border-top-color\": border_top_color_1.default,\n        \"border-top-left-radius\": border_top_left_radius_1.default,\n        \"border-top-right-radius\": border_top_right_radius_1.default,\n        \"border-top-style\": border_top_style_1.default,\n        \"border-top-width\": border_top_width_1.default,\n        bottom: bottom_1.default,\n        \"box-shadow\": box_shadow_1.default,\n        \"clip-path\": clip_path_1.default,\n        clip: clip_1.default,\n        color: color_1.default,\n        cursor: cursor_1.default,\n        display: display_1.default,\n        \"flex-direction\": flex_direction_1.default,\n        \"flex-wrap\": flex_wrap_1.default,\n        float: float_1.default,\n        \"font-family\": font_family_1.default,\n        \"font-size\": font_size_1.default,\n        \"font-stretch\": font_stretch_1.default,\n        \"font-style\": font_style_1.default,\n        \"font-variant-caps\": font_variant_caps_1.default,\n        \"font-variant-east-asian\": font_variant_east_asian_1.default,\n        \"font-variant-ligatures\": font_variant_ligatures_1.default,\n        \"font-variant-numeric\": font_variant_numeric_1.default,\n        \"font-variant-position\": font_variant_position_1.default,\n        \"font-weight\": font_weight_1.default,\n        height: height_1.default,\n        \"inset-block-end\": inset_block_end_1.default,\n        \"inset-block-start\": inset_block_start_1.default,\n        \"inset-inline-end\": inset_inline_end_1.default,\n        \"inset-inline-start\": inset_inline_start_1.default,\n        left: left_1.default,\n        \"letter-spacing\": letter_spacing_1.default,\n        \"line-height\": line_height_1.default,\n        \"margin-bottom\": margin_bottom_1.default,\n        \"margin-left\": margin_left_1.default,\n        \"margin-right\": margin_right_1.default,\n        \"margin-top\": margin_top_1.default,\n        \"min-height\": min_height_1.default,\n        \"min-width\": min_width_1.default,\n        opacity: opacity_1.default,\n        \"outline-color\": outline_color_1.default,\n        \"outline-offset\": outline_offset_1.default,\n        \"outline-style\": outline_style_1.default,\n        \"outline-width\": outline_width_1.default,\n        \"overflow-x\": overflow_x_1.default,\n        \"overflow-y\": overflow_y_1.default,\n        position: position_1.default,\n        right: right_1.default,\n        rotate: rotate_1.default,\n        \"text-align\": text_align_1.default,\n        \"text-decoration-color\": text_decoration_color_1.default,\n        \"text-decoration-line\": text_decoration_line_1.default,\n        \"text-decoration-style\": text_decoration_style_1.default,\n        \"text-decoration-thickness\": text_decoration_thickness_1.default,\n        \"text-indent\": text_indent_1.default,\n        \"text-overflow\": text_overflow_1.default,\n        \"text-shadow\": text_shadow_1.default,\n        \"text-transform\": text_transform_1.default,\n        top: top_1.default,\n        transform: transform_1.default,\n        \"vertical-align\": vertical_align_1.default,\n        visibility: visibility_1.default,\n        \"white-space\": white_space_1.default,\n        width: width_1.default,\n        \"word-spacing\": word_spacing_1.default,\n    };\n    function isName(name) {\n        return name in longHands;\n    }\n    Longhands.isName = isName;\n    function get(name) {\n        return longHands[name];\n    }\n    Longhands.get = get;\n})(Longhands || (exports.Longhands = Longhands = {}));\n//# sourceMappingURL=longhands.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/longhands.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/node/node.js":
/*!***************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/node/node.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./predicate/is-rendered */ \"./node_modules/@siteimprove/alfa-style/src/node/predicate/is-rendered.js\"), exports);\n__exportStar(__webpack_require__(/*! ./predicate/is-visible */ \"./node_modules/@siteimprove/alfa-style/src/node/predicate/is-visible.js\"), exports);\n//# sourceMappingURL=node.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/node/node.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/node/predicate/has-same-foreground-as-background.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/node/predicate/has-same-foreground-as-background.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.hasSameForegroundAsBackground = void 0;\nconst alfa_cache_1 = __webpack_require__(/*! @siteimprove/alfa-cache */ \"./node_modules/@siteimprove/alfa-cache/src/index.js\");\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst equatable_1 = __webpack_require__(/*! @siteimprove/alfa-equatable/src/equatable */ \"./node_modules/@siteimprove/alfa-equatable/src/equatable.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_selector_1 = __webpack_require__(/*! @siteimprove/alfa-selector */ \"./node_modules/@siteimprove/alfa-selector/src/index.js\");\nconst has_computed_style_1 = __webpack_require__(/*! ../../element/predicate/has-computed-style */ \"./node_modules/@siteimprove/alfa-style/src/element/predicate/has-computed-style.js\");\nconst longhands_1 = __webpack_require__(/*! ../../longhands */ \"./node_modules/@siteimprove/alfa-style/src/longhands.js\");\nconst style_1 = __webpack_require__(/*! ../../style */ \"./node_modules/@siteimprove/alfa-style/src/style.js\");\nconst { or, test } = alfa_predicate_1.Predicate;\nconst cache = alfa_cache_1.Cache.empty();\n/**\n * Checks if an text has the same foreground color as its background.\n *\n * @remarks\n * This currently does not look at layout information. It probably should.\n * But texts (and elements) that are moved out of their positioning ancestors\n * could be anywhere on the page and finding the actual background requires\n * looking at potentially any element of the page. This is too complex to\n * implement before we encounter problems due to this.\n *\n * @internal\n */\nfunction hasSameForegroundAsBackground(device, context = alfa_selector_1.Context.empty()) {\n    return (text) => cache\n        .get(device, alfa_cache_1.Cache.empty)\n        .get(context, alfa_cache_1.Cache.empty)\n        .get(text, () => test(\n    // We should correctly resolve colors (including opacity, layers,\n    // \"currentcolor\" keyword, system colors, …)\n    // However, we assume that hiding content with color is mostly made\n    // with solid `color` and `background-color`, so we stick on a simple\n    // check for now.\n    (0, has_computed_style_1.hasComputedStyle)(\"color\", (foreground) => text\n        .ancestors()\n        .filter(alfa_dom_1.Element.isElement)\n        // first ancestor with a non-inherited background property\n        .find(or(hasNonColorBackgroundProperty(device, context), hasNonTransparentBackgroundColor(device, context)))\n        // If a non color `background-*` is set, assume it will make\n        // the background different from the foreground color.\n        .reject(hasNonColorBackgroundProperty(device, context))\n        .map((ancestor) => style_1.Style.from(ancestor, device, context).computed(\"background-color\").value)\n        .some((background) => background.equals(foreground)), device, context), text));\n}\nexports.hasSameForegroundAsBackground = hasSameForegroundAsBackground;\nfunction hasNonColorBackgroundProperty(device, context = alfa_selector_1.Context.empty()) {\n    return (element) => {\n        const style = style_1.Style.from(element, device, context);\n        for (const property of [\n            \"attachment\",\n            \"clip\",\n            \"image\",\n            \"origin\",\n            \"position-x\",\n            \"position-y\",\n            \"repeat-x\",\n            \"repeat-y\",\n            \"size\",\n        ]) {\n            if (equatable_1.Equatable.equals(style.computed(`background-${property}`).value, longhands_1.Longhands.get(`background-${property}`).initial)) {\n                continue;\n            }\n            return true;\n        }\n        return false;\n    };\n}\nfunction hasNonTransparentBackgroundColor(device, context = alfa_selector_1.Context.empty()) {\n    return (element) => !alfa_css_1.Color.isTransparent(style_1.Style.from(element, device, context).computed(\"background-color\").value);\n}\n//# sourceMappingURL=has-same-foreground-as-background.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/node/predicate/has-same-foreground-as-background.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/node/predicate/is-clipped.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/node/predicate/is-clipped.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isClipped = void 0;\nconst alfa_cache_1 = __webpack_require__(/*! @siteimprove/alfa-cache */ \"./node_modules/@siteimprove/alfa-cache/src/index.js\");\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_refinement_1 = __webpack_require__(/*! @siteimprove/alfa-refinement */ \"./node_modules/@siteimprove/alfa-refinement/src/index.js\");\nconst alfa_selector_1 = __webpack_require__(/*! @siteimprove/alfa-selector */ \"./node_modules/@siteimprove/alfa-selector/src/index.js\");\nconst style_1 = __webpack_require__(/*! ../../style */ \"./node_modules/@siteimprove/alfa-style/src/style.js\");\nconst has_computed_style_1 = __webpack_require__(/*! ../../element/predicate/has-computed-style */ \"./node_modules/@siteimprove/alfa-style/src/element/predicate/has-computed-style.js\");\nconst has_positioning_parent_1 = __webpack_require__(/*! ../../element/predicate/has-positioning-parent */ \"./node_modules/@siteimprove/alfa-style/src/element/predicate/has-positioning-parent.js\");\nconst { abs } = Math;\nconst { isElement, hasBox } = alfa_dom_1.Element;\nconst { not, or, test } = alfa_predicate_1.Predicate;\nconst { and } = alfa_refinement_1.Refinement;\nconst cache = alfa_cache_1.Cache.empty();\n/**\n * Checks if a node (or one of its ancestor) is fully clipped\n *\n * @internal\n */\nfunction isClipped(device, context = alfa_selector_1.Context.empty()) {\n    return (node) => cache\n        .get(device, alfa_cache_1.Cache.empty)\n        .get(context, alfa_cache_1.Cache.empty)\n        .get(node, () => test(or(\n    // Either it is a clipped element\n    and(isElement, or(isClippedBySize(device, context), isClippedByIndent(device, context), isClippedByMasking(device, context), and(\n    // Boxes are gathered on an empty context and can only be used\n    // with an empty context.\n    () => context === alfa_selector_1.Context.empty(), isClippedByMovingAway(device)), \n    // Or it is an element whose positioning parent is clipped\n    (0, has_positioning_parent_1.hasPositioningParent)(device, isClipped(device, context)))), \n    // Or (it's not an element) and its parent is clipped\n    and(not(isElement), (node) => node.parent(alfa_dom_1.Node.fullTree).some(isClipped(device, context)))), node));\n}\nexports.isClipped = isClipped;\n/**\n * Checks if an element's size is reduced to 0 or 1 pixel, and overflow is\n * somehow hidden.\n *\n * @remarks\n * Although 1px is theoretically visible, many clipping technique reduce size to\n * 1px instead of 0. Thus we consider that it is enough.\n *\n * Most clipping techniques reduce both axis to 0 or 1 px, not just one. This, on\n * overall, tends to make this check a bit more robust.\n *\n * Clipping occurs at the border, thus including the padding. It is possible\n * for an element to clip overflow, and have a width/height of 0, yet still show\n * content in its padding area. This should probably also look into padding size.\n * So far, we haven't encountered problem due to that. Presumably, content that\n * is meant to be clipped is correctly put in elements without padding, and the\n * incorrect clipping would be easily detected by visual regression tests early on.\n *\n * The boxes we get with getBoundingClientRect include padding (and border).\n * Thus, when these boxes have width/height of 0 and the content is clipped, we\n * are fairly sure that nothing shows.\n *\n * Boxes are gathered with an empty context, so they can only be used with an\n * empty context.\n *\n * We mostly work on a per-dimension basis. In each axis, check whether the size\n * is 0 or 1; and whether the corresponding overflow is clip or hidden.\n * However, the presence of a guaranteed scrollbar (overflow of \"scroll\") in *any*\n * dimension will always show something in a 1px size, so we consider these as\n * not clipped.\n */\nfunction isClippedBySize(device, context = alfa_selector_1.Context.empty()) {\n    return function isClipped(element) {\n        // Gathering the required style properties.\n        const style = style_1.Style.from(element, device, context);\n        const x = style.computed(\"overflow-x\").value.value;\n        const y = style.computed(\"overflow-y\").value.value;\n        const width = style.computed(\"width\").value;\n        const height = style.computed(\"height\").value;\n        const overflows = test(canOverflow(device), element);\n        // Does the element always show a scrollbar, no matter whether there is\n        // enough room in it to show the content?\n        const hasNoScrollBar = x !== \"scroll\" && y !== \"scroll\";\n        for (const [axis, overflow, dimension] of [\n            [\"width\", x, width],\n            [\"height\", y, height],\n        ]) {\n            // Is the element reduced to nothingness in this axis?\n            if (overflow === \"visible\" && overflows) {\n                // The content overflows in this axis, go to next axis.\n                continue;\n            }\n            if (context === alfa_selector_1.Context.empty() &&\n                element.getBoundingBox(device).some((box) => box[axis] === 0)) {\n                // The element's box is squished in this axis.\n                return true;\n            }\n            if (alfa_css_1.Numeric.isNumeric(dimension) &&\n                !dimension.hasCalculation() &&\n                alfa_css_1.Numeric.isZero(dimension)) {\n                // \"dimension: 0%\" or \"dimension: 0px\", nothing shows nor overflows\n                return true;\n            }\n            if (hasNoScrollBar && (overflow === \"clip\" || overflow === \"hidden\")) {\n                // There is no scrollbar in any axis, so we consider that 1px is\n                // invisible.\n                // Note that overflow: \"auto\" would create a scrollbar in this axis,\n                // so we cannot rely on hasNoScrollBar alone and need specific check in\n                // this axis.\n                if (context === alfa_selector_1.Context.empty() &&\n                    element.getBoundingBox(device).some((box) => box[axis] <= 1)) {\n                    return true;\n                }\n                if (alfa_css_1.Length.isLength(dimension) && dimension.value <= 1) {\n                    // \"dimension: 1px\" and there is no scrollbar in the other axis\n                    // (nor in this axis, since the overflow doesn't create one)\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n}\n/**\n * Checks if an element is fully indented out of its box.\n */\nfunction isClippedByIndent(device, context) {\n    return function isClipped(element) {\n        const style = style_1.Style.from(element, device, context);\n        const x = style.computed(\"overflow-x\").value.value;\n        if (x === \"hidden\") {\n            const { value: indent } = style.computed(\"text-indent\");\n            const { value: whitespace } = style.computed(\"white-space\");\n            if (alfa_css_1.LengthPercentage.isCalculated(indent)) {\n                // We couldn't fully resolve the mix of length and percentage.\n                // We just assume the element is not indented off-parent.\n                return false;\n            }\n            if (indent.value < 0 || whitespace.value === \"nowrap\") {\n                switch (indent.type) {\n                    case \"percentage\":\n                        if (abs(indent.value) >= 1) {\n                            return true;\n                        }\n                        else {\n                            break;\n                        }\n                    case \"length\":\n                        if (abs(indent.value) >= 999) {\n                            return true;\n                        }\n                        else {\n                            break;\n                        }\n                }\n            }\n        }\n        return false;\n    };\n}\n/**\n * Checks if an element is fully masked by a clipping shape.\n */\nfunction isClippedByMasking(device, context) {\n    return function isClipped(element) {\n        const style = style_1.Style.from(element, device, context);\n        const { value: clip } = style.computed(\"clip\");\n        return (clip.type === \"shape\" &&\n            ((clip.shape.top.type === \"length\" &&\n                clip.shape.top.equals(clip.shape.bottom)) ||\n                (clip.shape.left.type === \"length\" &&\n                    clip.shape.left.equals(clip.shape.right))));\n    };\n}\n/**\n * Checks if an element is moved out of an ancestor which clips its content.\n *\n * @remarks\n * This requires layout information to detect boxes intersections.\n *\n * Since layout is only gathered on empty context, this does not accept a context\n * parameter.\n *\n * Scrollbars only allow to scroll to the bottom or right of the positioning\n * ancestor, not to its left or right. So content in the bottom-right quadrant\n * needs a specific treatment. Content out of it will be clip by anything other\n * than \"visible\"; content in it can also be scrolled to with \"auto\" or \"scroll\".\n */\nfunction isClippedByMovingAway(device) {\n    return (element) => {\n        return hasBox((elementBox) => (0, has_positioning_parent_1.hasPositioningParent)(device, isClipping(elementBox, device))(element), device)(element);\n    };\n}\nconst isNotVisible = (overflow) => overflow.value !== \"visible\";\nconst isNoScroll = (overflow) => overflow.value === \"clip\" || overflow.value === \"hidden\";\n/**\n * Does the ancestors totally clips the elementBox?\n *\n * @remarks\n * Scrollbars are only created to scroll to the bottom or right of the content,\n * thus stuff on the top or left cannot be scrolled to.\n */\nfunction isClipping(elementBox, device) {\n    return function isClipping(ancestor) {\n        return and(\n        // If the boxes intersect, we see the intersection at least and can\n        // escape immediately. This should be by far the most frequent case. The\n        // case where the ancestor itself is clipped away is handled by the global\n        // recurrence in isClipped.\n        // This doesn't handle corner cases of 1×1px intersections.\n        not(hasBox(elementBox.intersects.bind(elementBox), device)), or(\n        // The element is to the left, and clipped away.\n        and(hasBox((ancestorBox) => elementBox.right < ancestorBox.left, device), (0, has_computed_style_1.hasComputedStyle)(\"overflow-x\", isNotVisible, device)), \n        // The element is to the right and cannot be scrolled to.\n        and(hasBox((ancestorBox) => elementBox.left > ancestorBox.right, device), (0, has_computed_style_1.hasComputedStyle)(\"overflow-x\", isNoScroll, device)), \n        // The element is above, and clipped away.\n        and(hasBox((ancestorBox) => elementBox.bottom < ancestorBox.top, device), (0, has_computed_style_1.hasComputedStyle)(\"overflow-y\", isNotVisible, device)), \n        // The element is below and cannot be scrolled to.\n        and(hasBox((ancestorBox) => elementBox.top > ancestorBox.bottom, device), (0, has_computed_style_1.hasComputedStyle)(\"overflow-y\", isNoScroll, device)), \n        // The ancestor doesn't clip, let's search for the next one.\n        (0, has_positioning_parent_1.hasPositioningParent)(device, isClipping)))(ancestor);\n    };\n}\n/**\n * Check if an element scales to its specified dimensions\n *\n * @remarks\n * Replaced elements are not rendered by CSS directly. Instead, they have\n * natural dimension (e.g., an image size) and specified ones (e.g., the width\n * CSS property). Negotiation between the two computes a concrete size with which\n * the element is effectively render. In practice, the concrete size is often\n * the specified one, and while the rendering may result in smaller or larger\n * object, it is also often fitting quite well.\n * {@link https://drafts.csswg.org/css-images/#sizing}\n *\n * @privateRemarks\n * For now, we mostly use this to discard the check on overflow for <img>.\n * <img> seem to be always rendered at their specified size, if any. This is\n * especially important here for tracking pixels whose specified size is 0\n * and we need to treat them as invisible.\n */\nfunction canOverflow(device) {\n    return not(alfa_dom_1.Element.hasName(\"img\"));\n}\n//# sourceMappingURL=is-clipped.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/node/predicate/is-clipped.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/node/predicate/is-offscreen.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/node/predicate/is-offscreen.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isOffscreen = void 0;\nconst alfa_cache_1 = __webpack_require__(/*! @siteimprove/alfa-cache */ \"./node_modules/@siteimprove/alfa-cache/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_rectangle_1 = __webpack_require__(/*! @siteimprove/alfa-rectangle */ \"./node_modules/@siteimprove/alfa-rectangle/src/index.js\");\nconst alfa_selector_1 = __webpack_require__(/*! @siteimprove/alfa-selector */ \"./node_modules/@siteimprove/alfa-selector/src/index.js\");\nconst element_1 = __webpack_require__(/*! ../../element/element */ \"./node_modules/@siteimprove/alfa-style/src/element/element.js\");\nconst style_1 = __webpack_require__(/*! ../../style */ \"./node_modules/@siteimprove/alfa-style/src/style.js\");\nconst { hasBox, isElement } = alfa_dom_1.Element;\nconst { abs } = Math;\nconst { and, or } = alfa_predicate_1.Predicate;\nconst cache = alfa_cache_1.Cache.empty();\n/**\n * @internal\n */\nfunction isOffscreen(device, context = alfa_selector_1.Context.empty()) {\n    return function isOffscreen(node) {\n        return cache\n            .get(device, alfa_cache_1.Cache.empty)\n            .get(context, alfa_cache_1.Cache.empty)\n            .get(node, () => {\n            if (isElement(node)) {\n                if (node.getBoundingBox(device).isSome() &&\n                    context === alfa_selector_1.Context.empty()) {\n                    return !isOnscreenLayout(node, device);\n                }\n                else {\n                    const style = style_1.Style.from(node, device, context);\n                    const fallback = isOffscreenFallback(style);\n                    // If we couldn't find anything on the element itself, we need to\n                    // look on its ancestors.\n                    return fallback ?? node.parent(alfa_dom_1.Node.flatTree).some(isOffscreen);\n                }\n            }\n            return node.parent(alfa_dom_1.Node.flatTree).some(isOffscreen);\n        });\n    };\n}\nexports.isOffscreen = isOffscreen;\nconst scrollableQuadrant = alfa_rectangle_1.Rectangle.of(0, 0, Infinity, Infinity);\n/**\n * Checks whether an element's box intersect the scrollable viewport.\n *\n * @remarks\n * We assume that the layout was gathered with an empty context and therefore\n * only use it for empty context. Non-empty context may bring content on screen,\n * typically \"skip to content\" links are only on screen when focused.\n *\n * Content that is hidden to the left or top of the screen is fairly safe to\n * be assumed invisible. Content that is hidden to the right or bottom may\n * be scrolled to. We assume there is always a way to scroll to the bottom, but\n * we do search for explicit scroll bar on ancestors' overflow for right.\n */\nfunction isOnscreenLayout(element, device) {\n    // By definition, the viewport top-left corner is (0, 0).\n    // We assume that most elements are on screen and order tests to try and\n    // avoid unnecessarily work.\n    const extendedViewport = alfa_rectangle_1.Rectangle.of(0, 0, device.viewport.width, Infinity);\n    return or(\n    // At first, we check whether the element's box intersects an infinitely high\n    // rectangle extending the viewport to the bottom.\n    // If yes, then the element can be brought into viewport by vertical scrolling\n    // which, we assume, is not restricted.\n    hasBox((box) => box.intersects(extendedViewport), device), \n    // Next, we search whether the element is in the scrollable quadrant (extends\n    // to the bottom and right), and has a positioning ancestor that creates\n    // the needed horizontal scrolling.\n    and(hasBox((box) => box.intersects(scrollableQuadrant), device), (0, element_1.hasPositioningParent)(device, isOnscreenAndScrolling(device))))(element);\n}\nconst onscreenAndScrollingCache = alfa_cache_1.Cache.empty();\n/**\n * Checks if an element is on the (extended) viewport and creates or inherits\n * a horizontal scrollbar to see its offscreen (to the right) content.\n */\nfunction isOnscreenAndScrolling(device) {\n    const extendedViewport = alfa_rectangle_1.Rectangle.of(0, 0, device.viewport.width, Infinity);\n    return function predicate(element) {\n        return onscreenAndScrollingCache.get(device, alfa_cache_1.Cache.empty).get(element, () => or(and(\n        // Does the element intersect the extended viewport?\n        hasBox((box) => box.intersects(extendedViewport), device), \n        // And does it create a scrollbar which can show the content to the right?\n        (0, element_1.hasComputedStyle)(\"overflow-x\", (overflow) => [\"auto\", \"scroll\", \"visible\"].includes(overflow.value), device)), \n        // Otherwise, jump to the positioning parent and try again.\n        (0, element_1.hasPositioningParent)(device, predicate))(element));\n    };\n}\n/**\n * Use heuristics to check whether an element ('s style) has been moved offscreen.\n *\n * @remarks\n * We can't really detect if content is moved offscreen, due to the lack of\n * layout system.\n * Instead, we inspect a handful of properties that affect positioning. If their\n * value is \"large enough\", we consider this as an indication that the content\n * is actually offscreen.\n * Since pages are mostly vertical scrolling, and most of the languages we look\n * at are left-to-right, this is mostly accurate when content is moved to the\n * left. Content moved to the right may actually create horizontal scrolling.\n * Content moved to the top may still be on screen if the normal position would\n * be low enough on the page. We assume that the presence of a large negative\n * value is indication of the intention to move the content off-screen, and\n * that proper care has been taken to actually make it invisible. Aka we\n * consider that using \"top: -9999px\" to voluntarily move something from the\n * bottom of a long page to its top is enough madness that nobody does it…\n *\n * Content moved to the bottom simply creates scrolling on vertical pages and is\n * not considered here.\n */\nfunction isOffscreenFallback(style) {\n    const { value: position } = style.computed(\"position\");\n    const { value: left } = style.computed(\"left\");\n    const { value: right } = style.computed(\"right\");\n    const { value: top } = style.computed(\"top\");\n    const { value: marginLeft } = style.computed(\"margin-left\");\n    // margin-left affects also statically positioned elements.\n    // margin-left could possibly hide further sibling of the element\n    // until a block container is found.\n    // We ignore this for now, until it proves problematic.\n    if (marginLeft.type === \"length\" && marginLeft.value <= -9999) {\n        return true;\n    }\n    if (position.value !== \"static\") {\n        for (const inset of [left, right]) {\n            // A large move on the left or right hides the content.\n            if (inset.type === \"length\" && abs(inset.value) >= 9999) {\n                return true;\n            }\n        }\n        // A large move above the top hides the content.\n        if (top.type === \"length\" && top.value <= -9999) {\n            return true;\n        }\n        // If the element is positioned, with normal margin and normal\n        // inset, it is likely on screen, no matter where its parent is.\n        // We might need to instead recurse to the offset parent. For now,\n        // we'll ignore that case considering it unlikely.\n        return false;\n    }\n    return undefined;\n}\n//# sourceMappingURL=is-offscreen.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/node/predicate/is-offscreen.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/node/predicate/is-rendered.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/node/predicate/is-rendered.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isRendered = void 0;\nconst alfa_cache_1 = __webpack_require__(/*! @siteimprove/alfa-cache */ \"./node_modules/@siteimprove/alfa-cache/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_selector_1 = __webpack_require__(/*! @siteimprove/alfa-selector */ \"./node_modules/@siteimprove/alfa-selector/src/index.js\");\nconst style_1 = __webpack_require__(/*! ../../style */ \"./node_modules/@siteimprove/alfa-style/src/style.js\");\nconst { isFallback } = alfa_dom_1.Element;\nconst cache = alfa_cache_1.Cache.empty();\n/**\n * {@link https://html.spec.whatwg.org/multipage/#being-rendered}\n *\n * @public\n */\nfunction isRendered(device, context = alfa_selector_1.Context.empty()) {\n    return function isRendered(node) {\n        return cache\n            .get(device, alfa_cache_1.Cache.empty)\n            .get(context, alfa_cache_1.Cache.empty)\n            .get(node, () => {\n            // Nodes that are fallback content for legacy browsers are not\n            // being rendered (on modern browsers).\n            if (isFallback(node)) {\n                return false;\n            }\n            // Elements with `display: none` are not being rendered\n            if (alfa_dom_1.Element.isElement(node) &&\n                style_1.Style.from(node, device, context)\n                    .computed(\"display\")\n                    .some(({ values: [outside] }) => outside.value === \"none\")) {\n                return false;\n            }\n            // Comments are never being rendered\n            if (alfa_dom_1.Comment.isComment(node)) {\n                return false;\n            }\n            return node.parent(alfa_dom_1.Node.fullTree).every(isRendered);\n        });\n    };\n}\nexports.isRendered = isRendered;\n//# sourceMappingURL=is-rendered.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/node/predicate/is-rendered.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/node/predicate/is-transparent.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/node/predicate/is-transparent.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isTransparent = void 0;\nconst alfa_cache_1 = __webpack_require__(/*! @siteimprove/alfa-cache */ \"./node_modules/@siteimprove/alfa-cache/src/index.js\");\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_refinement_1 = __webpack_require__(/*! @siteimprove/alfa-refinement */ \"./node_modules/@siteimprove/alfa-refinement/src/index.js\");\nconst alfa_selector_1 = __webpack_require__(/*! @siteimprove/alfa-selector */ \"./node_modules/@siteimprove/alfa-selector/src/index.js\");\nconst has_computed_style_1 = __webpack_require__(/*! ../../element/predicate/has-computed-style */ \"./node_modules/@siteimprove/alfa-style/src/element/predicate/has-computed-style.js\");\nconst { isElement } = alfa_dom_1.Element;\nconst { isText } = alfa_dom_1.Text;\nconst { or, and, test } = alfa_refinement_1.Refinement;\nconst cache = alfa_cache_1.Cache.empty();\nfunction isNotOpaque(device, context) {\n    return (0, has_computed_style_1.hasComputedStyle)(\"opacity\", (opacity) => opacity.value === 0, device, context);\n}\nfunction hasTransparentTextColor(device, context) {\n    return (0, has_computed_style_1.hasComputedStyle)(\"color\", alfa_css_1.Color.isTransparent, device, context);\n}\n/**\n * @internal\n */\nfunction isTransparent(device, context = alfa_selector_1.Context.empty()) {\n    return function isTransparent(node) {\n        return cache\n            .get(device, alfa_cache_1.Cache.empty)\n            .get(context, alfa_cache_1.Cache.empty)\n            .get(node, () => test(or(and(isElement, isNotOpaque(device, context)), and(isText, hasTransparentTextColor(device, context)), (node) => node.parent(alfa_dom_1.Node.flatTree).some(isTransparent)), node));\n    };\n}\nexports.isTransparent = isTransparent;\n//# sourceMappingURL=is-transparent.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/node/predicate/is-transparent.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/node/predicate/is-visible.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/node/predicate/is-visible.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isVisible = void 0;\nconst alfa_cache_1 = __webpack_require__(/*! @siteimprove/alfa-cache */ \"./node_modules/@siteimprove/alfa-cache/src/index.js\");\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_refinement_1 = __webpack_require__(/*! @siteimprove/alfa-refinement */ \"./node_modules/@siteimprove/alfa-refinement/src/index.js\");\nconst alfa_selector_1 = __webpack_require__(/*! @siteimprove/alfa-selector */ \"./node_modules/@siteimprove/alfa-selector/src/index.js\");\nconst has_computed_style_1 = __webpack_require__(/*! ../../element/predicate/has-computed-style */ \"./node_modules/@siteimprove/alfa-style/src/element/predicate/has-computed-style.js\");\nconst is_positioned_1 = __webpack_require__(/*! ../../element/predicate/is-positioned */ \"./node_modules/@siteimprove/alfa-style/src/element/predicate/is-positioned.js\");\nconst has_same_foreground_as_background_1 = __webpack_require__(/*! ./has-same-foreground-as-background */ \"./node_modules/@siteimprove/alfa-style/src/node/predicate/has-same-foreground-as-background.js\");\nconst is_clipped_1 = __webpack_require__(/*! ./is-clipped */ \"./node_modules/@siteimprove/alfa-style/src/node/predicate/is-clipped.js\");\nconst is_offscreen_1 = __webpack_require__(/*! ./is-offscreen */ \"./node_modules/@siteimprove/alfa-style/src/node/predicate/is-offscreen.js\");\nconst is_rendered_1 = __webpack_require__(/*! ./is-rendered */ \"./node_modules/@siteimprove/alfa-style/src/node/predicate/is-rendered.js\");\nconst is_transparent_1 = __webpack_require__(/*! ./is-transparent */ \"./node_modules/@siteimprove/alfa-style/src/node/predicate/is-transparent.js\");\nconst { hasName, isElement, isReplaced } = alfa_dom_1.Element;\nconst { nor, not, test } = alfa_predicate_1.Predicate;\nconst { and, or } = alfa_refinement_1.Refinement;\nconst { isText } = alfa_dom_1.Text;\n/**\n * Checks if a node is visible\n *\n * @public\n */\nfunction isVisible(device, context) {\n    return not(isInvisible(device, context));\n}\nexports.isVisible = isVisible;\nconst cache = alfa_cache_1.Cache.empty();\nfunction isInvisible(device, context = alfa_selector_1.Context.empty()) {\n    return (node) => cache\n        .get(device, alfa_cache_1.Cache.empty)\n        .get(context, alfa_cache_1.Cache.empty)\n        .get(node, () => test(or(not((0, is_rendered_1.isRendered)(device, context)), (0, is_transparent_1.isTransparent)(device, context), (0, is_clipped_1.isClipped)(device, context), (0, is_offscreen_1.isOffscreen)(device, context), and(isText, or((0, has_same_foreground_as_background_1.hasSameForegroundAsBackground)(device, context), \n    // Empty text\n    (text) => text.data.trim() === \"\", \n    // Text of size 0\n    (0, has_computed_style_1.hasComputedStyle)(\"font-size\", (size) => size.value === 0, device, context))), \n    // Element or Text with visibility != \"visible\"\n    and(or(isElement, isText), (0, has_computed_style_1.hasComputedStyle)(\"visibility\", (visibility) => visibility.value !== \"visible\", device, context)), \n    // Most non-replaced elements with no visible children are not visible while\n    // replaced elements are assumed to be replaced by something visible. Some\n    // non-replaced elements are, however, visible even when empty.\n    and(isElement, and(\n    // If the element is replaced, visible when empty, or has set dimensions,\n    // it is assumed to be visible\n    nor(isReplaced, isVisibleWhenEmpty, hasDimensions(device)), \n    // otherwise, the element is invisible iff all its children are.\n    (element) => element\n        .children(alfa_dom_1.Node.fullTree)\n        .every(isInvisible(device, context))))), node));\n}\n/**\n * Elements that are *not* \"replaced elements\" but are nonetheless visible when\n * empty\n */\nconst isVisibleWhenEmpty = hasName(\"textarea\");\n/**\n * Does the element have set dimensions?\n *\n * @remarks\n * For each direction (x / y), we look if the element either has a set dimension\n * (width / height), or is stretched after being absolutely positioned.\n * An element has a set dimension if its value is a numeric value (not a keyword)\n * larger than 0.\n * An element is stretched if it has both end points (left+right / top+bottom)\n * to a non-`auto` value.\n *\n * If an element has dimension in both directions, it is assumed to be visible.\n *\n * width / height keyword value are auto, max-content, min-content, and\n * fit-content; all of them depend on content and do not stretch empty elements.\n *\n * This does **not** look at layout information. We are here searching for\n * author's intention to stretch the element (presumably to use it as a background\n * or background image), not for elements that the UA happens to stretch (these\n * should be visible due to visible content that caused them to stretch in the\n * first place).\n */\nfunction hasDimensions(device) {\n    const hasDimension = (dimension) => (0, has_computed_style_1.hasComputedStyle)(dimension, and(alfa_css_1.Numeric.isFixed, (number) => number.value > 0), device);\n    const isStretched = (...sides) => and((0, is_positioned_1.isPositioned)(device, \"absolute\"), (0, has_computed_style_1.hasComputedStyle)(sides[0], alfa_css_1.Numeric.isNumeric, device), (0, has_computed_style_1.hasComputedStyle)(sides[1], alfa_css_1.Numeric.isNumeric, device));\n    return and(or(hasDimension(\"height\"), isStretched(\"top\", \"bottom\")), or(hasDimension(\"width\"), isStretched(\"left\", \"right\")));\n}\n//# sourceMappingURL=is-visible.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/node/predicate/is-visible.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/background-attachment.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/background-attachment.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.initialItem = exports.parse = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\n/**\n * @internal\n */\nexports.parse = alfa_css_1.Keyword.parse(\"fixed\", \"local\", \"scroll\");\nconst parseList = alfa_css_1.List.parseCommaSeparated(exports.parse);\n/**\n * @internal\n */\nexports.initialItem = alfa_css_1.Keyword.of(\"scroll\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/background-attachment}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.of(alfa_css_1.List.of([exports.initialItem], \", \"), parseList, (value) => value);\n//# sourceMappingURL=background-attachment.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/background-attachment.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/background-clip.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/background-clip.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.initialItem = exports.parse = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\n/**\n * @remarks\n * This is needed in the shorthand background\n *\n * @internal\n */\nexports.parse = alfa_css_1.Box.parse;\n/**\n * @remarks\n * This is needed in the shorthand background\n *\n * @internal\n */\nexports.initialItem = alfa_css_1.Keyword.of(\"border-box\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/background-clip}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.of(alfa_css_1.List.of([exports.initialItem], \", \"), alfa_css_1.List.parseCommaSeparated(exports.parse), (value) => value);\n//# sourceMappingURL=background-clip.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/background-clip.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/background-color.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/background-color.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.parse = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\n/**\n * @remarks\n * This is used by the shorthand parser for background.\n *\n * @internal\n */\nexports.parse = alfa_css_1.Color.parse;\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/background-color}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.of(alfa_css_1.Color.rgb(alfa_css_1.Percentage.of(0), alfa_css_1.Percentage.of(0), alfa_css_1.Percentage.of(0), alfa_css_1.Percentage.of(0)), exports.parse, (value) => value.resolve());\n//# sourceMappingURL=background-color.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/background-color.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/background-image.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/background-image.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.initialItem = exports.parse = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst resolver_1 = __webpack_require__(/*! ../resolver */ \"./node_modules/@siteimprove/alfa-style/src/resolver.js\");\nconst alfa_selective_1 = __webpack_require__(/*! @siteimprove/alfa-selective */ \"./node_modules/@siteimprove/alfa-selective/src/index.js\");\nconst { either } = alfa_parser_1.Parser;\n/**\n * @internal\n */\nexports.parse = either(alfa_css_1.Keyword.parse(\"none\"), alfa_css_1.Image.parse);\nconst parseList = alfa_css_1.List.parseCommaSeparated(exports.parse);\n/**\n * @internal\n */\nexports.initialItem = alfa_css_1.Keyword.of(\"none\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/background-image}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.of(alfa_css_1.List.of([exports.initialItem], \", \"), parseList, (value, style) => value.map((images) => images.map((image) => alfa_selective_1.Selective.of(image)\n    .if(alfa_css_1.Image.isImage, (image) => image.partiallyResolve(resolver_1.Resolver.length(style)))\n    .get())));\n//# sourceMappingURL=background-image.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/background-image.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/background-origin.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/background-origin.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.initialItem = exports.parse = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\n/**\n * @remarks\n * This is needed in the shorthand background\n *\n * @internal\n */\nexports.parse = alfa_css_1.Box.parse;\n/**\n * @remarks\n * This is needed in the shorthand background\n *\n * @internal\n */\nexports.initialItem = alfa_css_1.Keyword.of(\"padding-box\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/background-origin}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.of(alfa_css_1.List.of([exports.initialItem], \", \"), alfa_css_1.List.parseCommaSeparated(exports.parse), (value) => value);\n//# sourceMappingURL=background-origin.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/background-origin.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/background-position-x.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/background-position-x.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.initialItem = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst resolver_1 = __webpack_require__(/*! ../resolver */ \"./node_modules/@siteimprove/alfa-style/src/resolver.js\");\nconst parse = alfa_css_1.List.parseCommaSeparated(alfa_css_1.Position.Component.parseHorizontal);\n/**\n * @internal\n */\nexports.initialItem = alfa_css_1.Position.Side.of(alfa_css_1.Keyword.of(\"left\"), alfa_css_1.Percentage.of(0));\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/background-position}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.of(alfa_css_1.List.of([exports.initialItem]), parse, (value, style) => value.map((positions) => positions.map(alfa_css_1.Position.Component.partiallyResolve(resolver_1.Resolver.length(style)))));\n//# sourceMappingURL=background-position-x.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/background-position-x.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/background-position-y.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/background-position-y.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.initialItem = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst resolver_1 = __webpack_require__(/*! ../resolver */ \"./node_modules/@siteimprove/alfa-style/src/resolver.js\");\nconst parse = alfa_css_1.List.parseCommaSeparated(alfa_css_1.Position.Component.parseVertical);\n/**\n * @internal\n */\nexports.initialItem = alfa_css_1.Position.Side.of(alfa_css_1.Keyword.of(\"top\"), alfa_css_1.Percentage.of(0));\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/background-position}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.of(alfa_css_1.List.of([exports.initialItem]), parse, (value, style) => value.map((positions) => positions.map(alfa_css_1.Position.Component.partiallyResolve(resolver_1.Resolver.length(style)))));\n//# sourceMappingURL=background-position-y.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/background-position-y.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/background-position.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/background-position.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.parse = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst shorthand_1 = __webpack_require__(/*! ../shorthand */ \"./node_modules/@siteimprove/alfa-style/src/shorthand.js\");\nconst { map } = alfa_parser_1.Parser;\n/**\n * @internal\n */\nexports.parse = alfa_css_1.Position.parse(/* legacySyntax */ true);\nconst parseList = alfa_css_1.List.parseCommaSeparated(exports.parse);\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/background-position}\n * @internal\n */\nexports[\"default\"] = shorthand_1.Shorthand.of([\"background-position-x\", \"background-position-y\"], map(parseList, (positions) => {\n    const xs = [];\n    const ys = [];\n    for (const position of positions) {\n        xs.push(position.horizontal);\n        ys.push(position.vertical);\n    }\n    return [\n        [\"background-position-x\", alfa_css_1.List.of(xs, \", \")],\n        [\"background-position-y\", alfa_css_1.List.of(ys, \", \")],\n    ];\n}));\n//# sourceMappingURL=background-position.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/background-position.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/background-repeat-x.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/background-repeat-x.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.initialItem = exports.parse = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\n/**\n * @internal\n */\nexports.parse = alfa_css_1.Keyword.parse(\"repeat\", \"space\", \"round\", \"no-repeat\");\nconst parseList = alfa_css_1.List.parseCommaSeparated(exports.parse);\n/**\n * @internal\n */\nexports.initialItem = alfa_css_1.Keyword.of(\"repeat\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/background-repeat}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.of(alfa_css_1.List.of([exports.initialItem]), parseList, (value) => value);\n//# sourceMappingURL=background-repeat-x.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/background-repeat-x.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/background-repeat-y.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/background-repeat-y.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst background_repeat_x_1 = __webpack_require__(/*! ./background-repeat-x */ \"./node_modules/@siteimprove/alfa-style/src/property/background-repeat-x.js\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/background-repeat}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.extend(background_repeat_x_1.default);\n//# sourceMappingURL=background-repeat-y.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/background-repeat-y.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/background-repeat.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/background-repeat.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.parse = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst shorthand_1 = __webpack_require__(/*! ../shorthand */ \"./node_modules/@siteimprove/alfa-style/src/shorthand.js\");\nconst X = __webpack_require__(/*! ./background-repeat-x */ \"./node_modules/@siteimprove/alfa-style/src/property/background-repeat-x.js\");\n/**\n * background-repeat-x and background-repeat-y are identical.\n * We mimic the needed bits here to avoid confusion in the main parser.\n */\nvar Y;\n(function (Y) {\n    Y.parse = X.parse;\n})(Y || (Y = {}));\nconst { map, either, delimited, option, pair } = alfa_parser_1.Parser;\n/**\n * @internal\n */\nexports.parse = either(map(pair(X.parse, option(delimited(option(alfa_css_1.Token.parseWhitespace), Y.parse))), ([x, y]) => alfa_css_1.Tuple.of(x, y.getOr(x))), map(alfa_css_1.Keyword.parse(\"repeat-x\"), () => alfa_css_1.Tuple.of(alfa_css_1.Keyword.of(\"repeat\"), alfa_css_1.Keyword.of(\"no-repeat\"))), map(alfa_css_1.Keyword.parse(\"repeat-y\"), () => alfa_css_1.Tuple.of(alfa_css_1.Keyword.of(\"no-repeat\"), alfa_css_1.Keyword.of(\"repeat\"))));\nconst parseList = alfa_css_1.List.parseCommaSeparated(exports.parse);\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/background-repeat}\n * @internal\n */\nexports[\"default\"] = shorthand_1.Shorthand.of([\"background-repeat-x\", \"background-repeat-y\"], map(parseList, (repeats) => {\n    const xs = [];\n    const ys = [];\n    for (const repeat of repeats) {\n        const [x, y] = repeat.values;\n        xs.push(x);\n        ys.push(y);\n    }\n    return [\n        [\"background-repeat-x\", alfa_css_1.List.of(xs, \", \")],\n        [\"background-repeat-y\", alfa_css_1.List.of(ys, \", \")],\n    ];\n}));\n//# sourceMappingURL=background-repeat.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/background-repeat.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/background-size.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/background-size.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.initialItem = exports.parse = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst resolver_1 = __webpack_require__(/*! ../resolver */ \"./node_modules/@siteimprove/alfa-style/src/resolver.js\");\nconst { map, either, option, pair, right } = alfa_parser_1.Parser;\n/**\n * @internal\n */\nconst parseDimension = either(alfa_css_1.LengthPercentage.parse, alfa_css_1.Keyword.parse(\"auto\"));\n/**\n * @internal\n */\nexports.parse = either(map(pair(parseDimension, map(option(right(alfa_css_1.Token.parseWhitespace, parseDimension)), (y) => y.getOrElse(() => alfa_css_1.Keyword.of(\"auto\")))), ([x, y]) => alfa_css_1.Tuple.of(x, y)), alfa_css_1.Keyword.parse(\"contain\", \"cover\"));\nconst parseList = alfa_css_1.List.parseCommaSeparated(exports.parse);\n/**\n * @internal\n */\nexports.initialItem = alfa_css_1.Tuple.of(alfa_css_1.Keyword.of(\"auto\"), alfa_css_1.Keyword.of(\"auto\"));\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/background-size}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.of(alfa_css_1.List.of([exports.initialItem], \", \"), parseList, (value, style) => value.map((sizes) => sizes.map((size) => {\n    if (alfa_css_1.Keyword.isKeyword(size)) {\n        return size;\n    }\n    const [x, y] = size.values;\n    const resolver = resolver_1.Resolver.length(style);\n    return alfa_css_1.Tuple.of(alfa_css_1.Keyword.isKeyword(x)\n        ? x\n        : alfa_css_1.LengthPercentage.partiallyResolve(resolver)(x), alfa_css_1.Keyword.isKeyword(y)\n        ? y\n        : alfa_css_1.LengthPercentage.partiallyResolve(resolver)(y));\n})));\n//# sourceMappingURL=background-size.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/background-size.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/background.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/background.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst longhands_1 = __webpack_require__(/*! ../longhands */ \"./node_modules/@siteimprove/alfa-style/src/longhands.js\");\nconst shorthand_1 = __webpack_require__(/*! ../shorthand */ \"./node_modules/@siteimprove/alfa-style/src/shorthand.js\");\nconst Attachment = __webpack_require__(/*! ./background-attachment */ \"./node_modules/@siteimprove/alfa-style/src/property/background-attachment.js\");\nconst Clip = __webpack_require__(/*! ./background-clip */ \"./node_modules/@siteimprove/alfa-style/src/property/background-clip.js\");\nconst Color = __webpack_require__(/*! ./background-color */ \"./node_modules/@siteimprove/alfa-style/src/property/background-color.js\");\nconst Image = __webpack_require__(/*! ./background-image */ \"./node_modules/@siteimprove/alfa-style/src/property/background-image.js\");\nconst Origin = __webpack_require__(/*! ./background-origin */ \"./node_modules/@siteimprove/alfa-style/src/property/background-origin.js\");\nconst Position = __webpack_require__(/*! ./background-position */ \"./node_modules/@siteimprove/alfa-style/src/property/background-position.js\");\nconst PositionX = __webpack_require__(/*! ./background-position-x */ \"./node_modules/@siteimprove/alfa-style/src/property/background-position-x.js\");\nconst PositionY = __webpack_require__(/*! ./background-position-y */ \"./node_modules/@siteimprove/alfa-style/src/property/background-position-y.js\");\nconst Repeat = __webpack_require__(/*! ./background-repeat */ \"./node_modules/@siteimprove/alfa-style/src/property/background-repeat.js\");\nconst RepeatX = __webpack_require__(/*! ./background-repeat-x */ \"./node_modules/@siteimprove/alfa-style/src/property/background-repeat-x.js\");\nconst Size = __webpack_require__(/*! ./background-size */ \"./node_modules/@siteimprove/alfa-style/src/property/background-size.js\");\n/**\n * background-repeat-x and background-repeat-y are identical.\n * We mimic the needed bits here to avoid confusion in the main parser.\n */\nvar RepeatY;\n(function (RepeatY) {\n    RepeatY.initialItem = RepeatX.initialItem;\n})(RepeatY || (RepeatY = {}));\nconst { map, filter, delimited, option, right, separatedList } = alfa_parser_1.Parser;\nconst parse = (input) => {\n    let color;\n    let image;\n    let positionX;\n    let positionY;\n    let size;\n    let repeatX;\n    let repeatY;\n    let attachment;\n    let origin;\n    let clip;\n    while (true) {\n        for (const [remainder] of alfa_css_1.Token.parseWhitespace(input)) {\n            input = remainder;\n        }\n        // <color>\n        if (color === undefined) {\n            const result = Color.parse(input);\n            if (result.isOk()) {\n                [input, color] = result.get();\n                continue;\n            }\n        }\n        // <image>\n        if (image === undefined) {\n            const result = Image.parse(input);\n            if (result.isOk()) {\n                [input, image] = result.get();\n                continue;\n            }\n        }\n        // <position> [ / <size> ]?\n        if (positionX === undefined || positionY === undefined) {\n            const result = Position.parse(input);\n            if (result.isOk()) {\n                [input, { horizontal: positionX, vertical: positionY }] = result.get();\n                // [ / <size> ]?\n                {\n                    const result = delimited(option(alfa_css_1.Token.parseWhitespace), right(delimited(option(alfa_css_1.Token.parseWhitespace), alfa_css_1.Token.parseDelim(\"/\")), Size.parse))(input);\n                    if (result.isOk()) {\n                        [input, size] = result.get();\n                    }\n                }\n                continue;\n            }\n        }\n        // <repeat>\n        if (repeatX === undefined || repeatY === undefined) {\n            const result = Repeat.parse(input);\n            if (result.isOk()) {\n                let repeat;\n                [input, repeat] = result.get();\n                [repeatX, repeatY] = repeat.values;\n                continue;\n            }\n        }\n        // <attachment>\n        if (attachment === undefined) {\n            const result = Attachment.parse(input);\n            if (result.isOk()) {\n                [input, attachment] = result.get();\n                continue;\n            }\n        }\n        // <origin> <clip>?\n        if (origin === undefined) {\n            const result = Origin.parse(input);\n            if (result.isOk()) {\n                [input, origin] = result.get();\n                // <clip>?\n                {\n                    const result = delimited(option(alfa_css_1.Token.parseWhitespace), Clip.parse)(input);\n                    if (result.isOk()) {\n                        [input, clip] = result.get();\n                    }\n                }\n                continue;\n            }\n        }\n        break;\n    }\n    if ([\n        color,\n        image,\n        positionX,\n        positionY,\n        repeatX,\n        repeatY,\n        attachment,\n        origin,\n        clip,\n    ].every((property) => property === undefined)) {\n        return alfa_result_1.Err.of(`Expected one of color, image, position, repeat, attachment, origin, or clip`);\n    }\n    return alfa_result_1.Result.of([\n        input,\n        [\n            color,\n            image,\n            positionX,\n            positionY,\n            size,\n            repeatX,\n            repeatY,\n            attachment,\n            origin,\n            clip ?? origin,\n        ],\n    ]);\n};\nconst parseList = filter(separatedList(parse, delimited(option(alfa_css_1.Token.parseWhitespace), alfa_css_1.Token.parseComma)), (layers) => [...layers].slice(0, -1).every((layer) => layer[0] === undefined), () => \"Only the last layer may contain a color\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/background}\n * @internal\n */\nexports[\"default\"] = shorthand_1.Shorthand.of([\n    \"background-color\",\n    \"background-image\",\n    \"background-position-x\",\n    \"background-position-y\",\n    \"background-size\",\n    \"background-repeat-x\",\n    \"background-repeat-y\",\n    \"background-attachment\",\n    \"background-origin\",\n    \"background-clip\",\n], map(parseList, (layers) => {\n    let color;\n    let image = [];\n    let positionX = [];\n    let positionY = [];\n    let size = [];\n    let repeatX = [];\n    let repeatY = [];\n    let attachment = [];\n    let origin = [];\n    let clip = [];\n    for (const layer of layers) {\n        color = layer[0];\n        image.push(layer[1] ?? Image.initialItem);\n        positionX.push(layer[2] ?? PositionX.initialItem);\n        positionY.push(layer[3] ?? PositionY.initialItem);\n        size.push(layer[4] ?? Size.initialItem);\n        repeatX.push(layer[5] ?? RepeatX.initialItem);\n        repeatY.push(layer[6] ?? RepeatY.initialItem);\n        attachment.push(layer[7] ?? Attachment.initialItem);\n        origin.push(layer[8] ?? Origin.initialItem);\n        clip.push(layer[9] ?? Clip.initialItem);\n    }\n    return [\n        [\"background-color\", color ?? longhands_1.Longhands.get(\"background-color\").initial],\n        [\"background-image\", alfa_css_1.List.of(image, \", \")],\n        [\"background-position-x\", alfa_css_1.List.of(positionX, \", \")],\n        [\"background-position-y\", alfa_css_1.List.of(positionY, \", \")],\n        [\"background-size\", alfa_css_1.List.of(size, \", \")],\n        [\"background-repeat-x\", alfa_css_1.List.of(repeatX, \", \")],\n        [\"background-repeat-y\", alfa_css_1.List.of(repeatY, \", \")],\n        [\"background-attachment\", alfa_css_1.List.of(attachment, \", \")],\n        [\"background-origin\", alfa_css_1.List.of(origin, \", \")],\n        [\"background-clip\", alfa_css_1.List.of(clip, \", \")],\n    ];\n}));\n//# sourceMappingURL=background.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/background.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/border-block-color.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/border-block-color.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst shorthand_1 = __webpack_require__(/*! ../shorthand */ \"./node_modules/@siteimprove/alfa-style/src/shorthand.js\");\nconst border_top_color_1 = __webpack_require__(/*! ./border-top-color */ \"./node_modules/@siteimprove/alfa-style/src/property/border-top-color.js\");\nconst { delimited, map, option, takeBetween } = alfa_parser_1.Parser;\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/border-block-color}\n * @internal\n */\nexports[\"default\"] = shorthand_1.Shorthand.of([\"border-block-start-color\", \"border-block-end-color\"], map(takeBetween(delimited(option(alfa_css_1.Token.parseWhitespace), border_top_color_1.parse), 1, 2), ([start, end = start]) => [\n    [\"border-block-start-color\", start],\n    [\"border-block-end-color\", end],\n]));\n//# sourceMappingURL=border-block-color.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/border-block-color.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/border-block-end-color.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/border-block-end-color.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst border_top_color_1 = __webpack_require__(/*! ./border-top-color */ \"./node_modules/@siteimprove/alfa-style/src/property/border-top-color.js\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/border-block-end-color}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.extend(border_top_color_1.default);\n//# sourceMappingURL=border-block-end-color.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/border-block-end-color.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/border-block-end-style.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/border-block-end-style.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst border_top_style_1 = __webpack_require__(/*! ./border-top-style */ \"./node_modules/@siteimprove/alfa-style/src/property/border-top-style.js\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/border-block-end-style}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.extend(border_top_style_1.default);\n//# sourceMappingURL=border-block-end-style.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/border-block-end-style.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/border-block-end-width.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/border-block-end-width.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst border_top_width_1 = __webpack_require__(/*! ./border-top-width */ \"./node_modules/@siteimprove/alfa-style/src/property/border-top-width.js\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/border-block-end-width}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.extend(border_top_width_1.default, {\n    compute: (borderWidth, style) => {\n        const borderStyle = style.computed(\"border-block-end-style\");\n        return (0, border_top_width_1.compute)(borderStyle, borderWidth, style);\n    },\n});\n//# sourceMappingURL=border-block-end-width.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/border-block-end-width.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/border-block-end.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/border-block-end.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst shorthand_1 = __webpack_require__(/*! ../shorthand */ \"./node_modules/@siteimprove/alfa-style/src/shorthand.js\");\nconst border_top_1 = __webpack_require__(/*! ./border-top */ \"./node_modules/@siteimprove/alfa-style/src/property/border-top.js\");\nconst { map } = alfa_parser_1.Parser;\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/border-block-end}\n * @internal\n */\nexports[\"default\"] = shorthand_1.Shorthand.of([\n    \"border-block-end-color\",\n    \"border-block-end-style\",\n    \"border-block-end-width\",\n], map(border_top_1.parse, ([color, style, width]) => [\n    [\"border-block-end-color\", color],\n    [\"border-block-end-style\", style],\n    [\"border-block-end-width\", width],\n]));\n//# sourceMappingURL=border-block-end.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/border-block-end.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/border-block-start-color.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/border-block-start-color.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst border_top_color_1 = __webpack_require__(/*! ./border-top-color */ \"./node_modules/@siteimprove/alfa-style/src/property/border-top-color.js\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/border-block-start-color}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.extend(border_top_color_1.default);\n//# sourceMappingURL=border-block-start-color.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/border-block-start-color.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/border-block-start-style.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/border-block-start-style.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst border_top_style_1 = __webpack_require__(/*! ./border-top-style */ \"./node_modules/@siteimprove/alfa-style/src/property/border-top-style.js\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/border-block-start-style}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.extend(border_top_style_1.default);\n//# sourceMappingURL=border-block-start-style.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/border-block-start-style.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/border-block-start-width.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/border-block-start-width.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst border_top_width_1 = __webpack_require__(/*! ./border-top-width */ \"./node_modules/@siteimprove/alfa-style/src/property/border-top-width.js\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/border-block-start-width}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.extend(border_top_width_1.default, {\n    compute: (borderWidth, style) => {\n        const borderStyle = style.computed(\"border-block-start-style\");\n        return (0, border_top_width_1.compute)(borderStyle, borderWidth, style);\n    },\n});\n//# sourceMappingURL=border-block-start-width.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/border-block-start-width.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/border-block-start.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/border-block-start.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst shorthand_1 = __webpack_require__(/*! ../shorthand */ \"./node_modules/@siteimprove/alfa-style/src/shorthand.js\");\nconst border_top_1 = __webpack_require__(/*! ./border-top */ \"./node_modules/@siteimprove/alfa-style/src/property/border-top.js\");\nconst { map } = alfa_parser_1.Parser;\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/border-block-start}\n * @internal\n */\nexports[\"default\"] = shorthand_1.Shorthand.of([\n    \"border-block-start-color\",\n    \"border-block-start-style\",\n    \"border-block-start-width\",\n], map(border_top_1.parse, ([color, style, width]) => [\n    [\"border-block-start-color\", color],\n    [\"border-block-start-style\", style],\n    [\"border-block-start-width\", width],\n]));\n//# sourceMappingURL=border-block-start.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/border-block-start.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/border-block-style.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/border-block-style.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst shorthand_1 = __webpack_require__(/*! ../shorthand */ \"./node_modules/@siteimprove/alfa-style/src/shorthand.js\");\nconst border_top_style_1 = __webpack_require__(/*! ./border-top-style */ \"./node_modules/@siteimprove/alfa-style/src/property/border-top-style.js\");\nconst { delimited, map, option, takeBetween } = alfa_parser_1.Parser;\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/border-block-style}\n * @internal\n */\nexports[\"default\"] = shorthand_1.Shorthand.of([\"border-block-start-style\", \"border-block-end-style\"], map(takeBetween(delimited(option(alfa_css_1.Token.parseWhitespace), border_top_style_1.default.parseBase), 1, 2), ([start, end = start]) => [\n    [\"border-block-start-style\", start],\n    [\"border-block-end-style\", end],\n]));\n//# sourceMappingURL=border-block-style.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/border-block-style.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/border-block-width.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/border-block-width.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst shorthand_1 = __webpack_require__(/*! ../shorthand */ \"./node_modules/@siteimprove/alfa-style/src/shorthand.js\");\nconst border_top_width_1 = __webpack_require__(/*! ./border-top-width */ \"./node_modules/@siteimprove/alfa-style/src/property/border-top-width.js\");\nconst { delimited, map, option, takeBetween } = alfa_parser_1.Parser;\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/border-block-width}\n * @internal\n */\nexports[\"default\"] = shorthand_1.Shorthand.of([\"border-block-start-width\", \"border-block-end-width\"], map(takeBetween(delimited(option(alfa_css_1.Token.parseWhitespace), border_top_width_1.parse), 1, 2), ([start, end = start]) => [\n    [\"border-block-start-width\", start],\n    [\"border-block-end-width\", end],\n]));\n//# sourceMappingURL=border-block-width.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/border-block-width.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/border-block.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/border-block.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst shorthand_1 = __webpack_require__(/*! ../shorthand */ \"./node_modules/@siteimprove/alfa-style/src/shorthand.js\");\nconst border_top_1 = __webpack_require__(/*! ./border-top */ \"./node_modules/@siteimprove/alfa-style/src/property/border-top.js\");\nconst { map } = alfa_parser_1.Parser;\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/border-block}\n * @internal\n */\nexports[\"default\"] = shorthand_1.Shorthand.of([\n    \"border-block-start-color\",\n    \"border-block-start-style\",\n    \"border-block-start-width\",\n    \"border-block-end-color\",\n    \"border-block-end-style\",\n    \"border-block-end-width\",\n], map(border_top_1.parse, ([color, style, width]) => [\n    [\"border-block-start-color\", color],\n    [\"border-block-start-style\", style],\n    [\"border-block-start-width\", width],\n    [\"border-block-end-color\", color],\n    [\"border-block-end-style\", style],\n    [\"border-block-end-width\", width],\n]));\n//# sourceMappingURL=border-block.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/border-block.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/border-bottom-color.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/border-bottom-color.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst border_top_color_1 = __webpack_require__(/*! ./border-top-color */ \"./node_modules/@siteimprove/alfa-style/src/property/border-top-color.js\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/border-bottom-color}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.extend(border_top_color_1.default);\n//# sourceMappingURL=border-bottom-color.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/border-bottom-color.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/border-bottom-left-radius.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/border-bottom-left-radius.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst border_top_left_radius_1 = __webpack_require__(/*! ./border-top-left-radius */ \"./node_modules/@siteimprove/alfa-style/src/property/border-top-left-radius.js\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/border-bottom-left-radius}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.extend(border_top_left_radius_1.default);\n//# sourceMappingURL=border-bottom-left-radius.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/border-bottom-left-radius.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/border-bottom-right-radius.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/border-bottom-right-radius.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst border_top_left_radius_1 = __webpack_require__(/*! ./border-top-left-radius */ \"./node_modules/@siteimprove/alfa-style/src/property/border-top-left-radius.js\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/border-bottom-right-radius}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.extend(border_top_left_radius_1.default);\n//# sourceMappingURL=border-bottom-right-radius.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/border-bottom-right-radius.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/border-bottom-style.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/border-bottom-style.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst border_top_style_1 = __webpack_require__(/*! ./border-top-style */ \"./node_modules/@siteimprove/alfa-style/src/property/border-top-style.js\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/border-bottom-style}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.extend(border_top_style_1.default);\n//# sourceMappingURL=border-bottom-style.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/border-bottom-style.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/border-bottom-width.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/border-bottom-width.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst border_top_width_1 = __webpack_require__(/*! ./border-top-width */ \"./node_modules/@siteimprove/alfa-style/src/property/border-top-width.js\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/border-bottom-width}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.extend(border_top_width_1.default, {\n    compute: (borderWidth, style) => {\n        const borderStyle = style.computed(\"border-bottom-style\");\n        return (0, border_top_width_1.compute)(borderStyle, borderWidth, style);\n    },\n});\n//# sourceMappingURL=border-bottom-width.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/border-bottom-width.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/border-bottom.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/border-bottom.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst shorthand_1 = __webpack_require__(/*! ../shorthand */ \"./node_modules/@siteimprove/alfa-style/src/shorthand.js\");\nconst border_top_1 = __webpack_require__(/*! ./border-top */ \"./node_modules/@siteimprove/alfa-style/src/property/border-top.js\");\nconst { map } = alfa_parser_1.Parser;\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/border-bottom}\n * @internal\n */\nexports[\"default\"] = shorthand_1.Shorthand.of([\"border-bottom-color\", \"border-bottom-style\", \"border-bottom-width\"], map(border_top_1.parse, ([color, style, width]) => [\n    [\"border-bottom-color\", color],\n    [\"border-bottom-style\", style],\n    [\"border-bottom-width\", width],\n]));\n//# sourceMappingURL=border-bottom.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/border-bottom.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/border-collapse.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/border-collapse.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/border-collapse}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.fromKeywords({ inherits: true }, \"separate\", \"collapse\");\n//# sourceMappingURL=border-collapse.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/border-collapse.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/border-color.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/border-color.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst shorthand_1 = __webpack_require__(/*! ../shorthand */ \"./node_modules/@siteimprove/alfa-style/src/shorthand.js\");\nconst { delimited, map, option, takeBetween } = alfa_parser_1.Parser;\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/border-color}\n * @internal\n */\nexports[\"default\"] = shorthand_1.Shorthand.of([\n    \"border-top-color\",\n    \"border-right-color\",\n    \"border-bottom-color\",\n    \"border-left-color\",\n], map(takeBetween(delimited(option(alfa_css_1.Token.parseWhitespace), alfa_css_1.Color.parse), 1, 4), ([top, right = top, bottom = top, left = right]) => [\n    [\"border-top-color\", top],\n    [\"border-right-color\", right],\n    [\"border-bottom-color\", bottom],\n    [\"border-left-color\", left],\n]));\n//# sourceMappingURL=border-color.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/border-color.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/border-end-end-radius.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/border-end-end-radius.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst border_top_left_radius_1 = __webpack_require__(/*! ./border-top-left-radius */ \"./node_modules/@siteimprove/alfa-style/src/property/border-top-left-radius.js\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/border-end-end-radius}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.extend(border_top_left_radius_1.default);\n//# sourceMappingURL=border-end-end-radius.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/border-end-end-radius.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/border-end-start-radius.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/border-end-start-radius.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst border_top_left_radius_1 = __webpack_require__(/*! ./border-top-left-radius */ \"./node_modules/@siteimprove/alfa-style/src/property/border-top-left-radius.js\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/border-end-start-radius}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.extend(border_top_left_radius_1.default);\n//# sourceMappingURL=border-end-start-radius.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/border-end-start-radius.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/border-image-outset.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/border-image-outset.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.parse = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst resolver_1 = __webpack_require__(/*! ../resolver */ \"./node_modules/@siteimprove/alfa-style/src/resolver.js\");\nconst { takeBetween, either, map, filter, delimited, option } = alfa_parser_1.Parser;\n/**\n * @internal\n */\nexports.parse = map(takeBetween(delimited(option(alfa_css_1.Token.parseWhitespace), filter(either(alfa_css_1.Length.parse, alfa_css_1.Number.parse), (size) => size.hasCalculation() || size.value >= 0, () => `Negative sizes are not allowed`)), 1, 4), ([top, right = top, bottom = top, left = right]) => alfa_css_1.Tuple.of(top, right, bottom, left));\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/border-image-outset}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.of(alfa_css_1.Tuple.of(alfa_css_1.Number.of(0), alfa_css_1.Number.of(0), alfa_css_1.Number.of(0), alfa_css_1.Number.of(0)), exports.parse, (value, style) => value.resolve(resolver_1.Resolver.length(style)));\n//# sourceMappingURL=border-image-outset.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/border-image-outset.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/border-image-repeat.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/border-image-repeat.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.parse = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst { delimited, map, option, takeBetween } = alfa_parser_1.Parser;\n/**\n * @internal\n */\nexports.parse = map(takeBetween(delimited(option(alfa_css_1.Token.parseWhitespace), alfa_css_1.Keyword.parse(\"stretch\", \"repeat\", \"round\", \"space\")), 1, 2), ([vertical, horizontal = vertical]) => alfa_css_1.Tuple.of(vertical, horizontal));\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/border-image-repeat}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.of(alfa_css_1.Tuple.of(alfa_css_1.Keyword.of(\"stretch\"), alfa_css_1.Keyword.of(\"stretch\")), exports.parse, (value) => value);\n//# sourceMappingURL=border-image-repeat.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/border-image-repeat.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/border-image-slice.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/border-image-slice.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.parse = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst { either, filter } = alfa_parser_1.Parser;\nconst parseItem = filter(either(alfa_css_1.Number.parse, alfa_css_1.Percentage.parse), (size) => size.hasCalculation() || size.value >= 0, () => `Negative sizes are not allowed`);\nconst parseFill = alfa_css_1.Keyword.parse(\"fill\");\n/**\n * @internal\n */\nconst parse = (input) => {\n    let top;\n    let right;\n    let bottom;\n    let left;\n    let fill;\n    while (true) {\n        for ([input] of alfa_css_1.Token.parseWhitespace(input)) {\n        }\n        const result = parseItem(input);\n        if (result.isOk()) {\n            if (top === undefined) {\n                [input, top] = result.get();\n                continue;\n            }\n            if (right === undefined) {\n                [input, right] = result.get();\n                continue;\n            }\n            if (bottom === undefined) {\n                [input, bottom] = result.get();\n                continue;\n            }\n            if (left === undefined) {\n                [input, left] = result.get();\n                continue;\n            }\n        }\n        else if (fill === undefined) {\n            const result = parseFill(input);\n            if (result.isOk()) {\n                [input, fill] = result.get();\n                continue;\n            }\n        }\n        break;\n    }\n    if (top === undefined) {\n        return alfa_result_1.Err.of(`Expected an image slice`);\n    }\n    right = right ?? top;\n    bottom = bottom ?? top;\n    left = left ?? right;\n    return alfa_result_1.Result.of([\n        input,\n        fill\n            ? alfa_css_1.Tuple.of(top, right, bottom, left, fill)\n            : alfa_css_1.Tuple.of(top, right, bottom, left),\n    ]);\n};\nexports.parse = parse;\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/border-image-slice}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.of(alfa_css_1.Tuple.of(alfa_css_1.Percentage.of(1), alfa_css_1.Percentage.of(1), alfa_css_1.Percentage.of(1), alfa_css_1.Percentage.of(1)), exports.parse, (value) => value.resolve());\n//# sourceMappingURL=border-image-slice.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/border-image-slice.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/border-image-source.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/border-image-source.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.parse = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst alfa_selective_1 = __webpack_require__(/*! @siteimprove/alfa-selective */ \"./node_modules/@siteimprove/alfa-selective/src/index.js\");\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst resolver_1 = __webpack_require__(/*! ../resolver */ \"./node_modules/@siteimprove/alfa-style/src/resolver.js\");\nconst { either } = alfa_parser_1.Parser;\n/**\n * @internal\n */\nexports.parse = either(alfa_css_1.Keyword.parse(\"none\"), alfa_css_1.Image.parse);\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/border-image-source}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.of(alfa_css_1.Keyword.of(\"none\"), exports.parse, (value, style) => value.map((image) => alfa_selective_1.Selective.of(image)\n    .if(alfa_css_1.Image.isImage, (image) => image.partiallyResolve(resolver_1.Resolver.length(style)))\n    .get()));\n//# sourceMappingURL=border-image-source.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/border-image-source.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/border-image-width.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/border-image-width.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.parse = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst alfa_selective_1 = __webpack_require__(/*! @siteimprove/alfa-selective */ \"./node_modules/@siteimprove/alfa-selective/src/index.js\");\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst resolver_1 = __webpack_require__(/*! ../resolver */ \"./node_modules/@siteimprove/alfa-style/src/resolver.js\");\nconst { takeBetween, either, map, filter, delimited, option } = alfa_parser_1.Parser;\n/**\n * @internal\n */\nexports.parse = map(takeBetween(delimited(option(alfa_css_1.Token.parseWhitespace), either(filter(either(alfa_css_1.LengthPercentage.parse, alfa_css_1.Number.parse), (size) => size.hasCalculation() || size.value >= 0, () => `Negative sizes are not allowed`), alfa_css_1.Keyword.parse(\"auto\"))), 1, 4), ([top, right = top, bottom = top, left = right]) => alfa_css_1.Tuple.of(top, right, bottom, left));\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/border-image-width}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.of(alfa_css_1.Tuple.of(alfa_css_1.Number.of(1), alfa_css_1.Number.of(1), alfa_css_1.Number.of(1), alfa_css_1.Number.of(1)), exports.parse, (value, style) => value.map(({ values: [t, r, b, l] }) => {\n    const resolver = resolve(style);\n    return alfa_css_1.Tuple.of(resolver(t), resolver(r), resolver(b), resolver(l));\n}));\nfunction resolve(style) {\n    return (specified) => alfa_selective_1.Selective.of(specified)\n        .if(alfa_css_1.LengthPercentage.isLengthPercentage, alfa_css_1.LengthPercentage.partiallyResolve(resolver_1.Resolver.length(style)))\n        .if(alfa_css_1.Number.isNumber, (num) => num.resolve())\n        .get();\n}\n//# sourceMappingURL=border-image-width.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/border-image-width.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/border-image.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/border-image.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst shorthand_1 = __webpack_require__(/*! ../shorthand */ \"./node_modules/@siteimprove/alfa-style/src/shorthand.js\");\nconst Outset = __webpack_require__(/*! ./border-image-outset */ \"./node_modules/@siteimprove/alfa-style/src/property/border-image-outset.js\");\nconst Repeat = __webpack_require__(/*! ./border-image-repeat */ \"./node_modules/@siteimprove/alfa-style/src/property/border-image-repeat.js\");\nconst Source = __webpack_require__(/*! ./border-image-source */ \"./node_modules/@siteimprove/alfa-style/src/property/border-image-source.js\");\nconst Slice = __webpack_require__(/*! ./border-image-slice */ \"./node_modules/@siteimprove/alfa-style/src/property/border-image-slice.js\");\nconst Width = __webpack_require__(/*! ./border-image-width */ \"./node_modules/@siteimprove/alfa-style/src/property/border-image-width.js\");\nconst { delimited, either, map, option, pair, right } = alfa_parser_1.Parser;\nconst parseSlash = delimited(option(alfa_css_1.Token.parseWhitespace), alfa_css_1.Token.parseDelim(\"/\"));\n/**\n * Parsing\n * [ / <'width'> | / <'width'>? / <'outset'> ]?\n */\nconst parseWidthOutset = map(option(right(parseSlash, \n// we need the longest first so it can fail and default to shortest\neither(map(pair(option(Width.parse), right(parseSlash, Outset.parse)), ([width, outset]) => [width, alfa_option_1.Option.of(outset)]), map(Width.parse, (width) => [alfa_option_1.Option.of(width), alfa_option_1.None])))), (result) => result.getOr([alfa_option_1.None, alfa_option_1.None]));\nconst parse = (input) => {\n    let source;\n    let slice;\n    let width = alfa_option_1.None;\n    let outset = alfa_option_1.None;\n    let repeat;\n    while (true) {\n        for (const [remainder] of alfa_css_1.Token.parseWhitespace(input)) {\n            input = remainder;\n        }\n        // <source>\n        if (source === undefined) {\n            const result = Source.parse(input);\n            if (result.isOk()) {\n                [input, source] = result.get();\n                continue;\n            }\n        }\n        // <slice> [ / <'width'> | / <'width'>? / <'outset'> ]?\n        if (slice === undefined) {\n            const result = pair(Slice.parse, parseWidthOutset)(input);\n            if (result.isOk()) {\n                [input, [slice, [width, outset]]] = result.get();\n                continue;\n            }\n        }\n        // <repeat>\n        if (repeat === undefined) {\n            const result = Repeat.parse(input);\n            if (result.isOk()) {\n                [input, repeat] = result.get();\n                continue;\n            }\n        }\n        break;\n    }\n    return alfa_result_1.Result.of([\n        input,\n        [\n            source ?? alfa_css_1.Keyword.of(\"initial\"),\n            slice ?? alfa_css_1.Keyword.of(\"initial\"),\n            width.getOr(alfa_css_1.Keyword.of(\"initial\")),\n            outset.getOr(alfa_css_1.Keyword.of(\"initial\")),\n            repeat ?? alfa_css_1.Keyword.of(\"initial\"),\n        ],\n    ]);\n};\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/border-image}\n * @internal\n */\nexports[\"default\"] = shorthand_1.Shorthand.of([\n    \"border-image-source\",\n    \"border-image-slice\",\n    \"border-image-width\",\n    \"border-image-outset\",\n    \"border-image-repeat\",\n], map(parse, ([source, slice, width, outset, repeat]) => [\n    [\"border-image-source\", source],\n    [\"border-image-slice\", slice],\n    [\"border-image-width\", width],\n    [\"border-image-outset\", outset],\n    [\"border-image-repeat\", repeat],\n]));\n//# sourceMappingURL=border-image.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/border-image.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/border-inline-color.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/border-inline-color.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst shorthand_1 = __webpack_require__(/*! ../shorthand */ \"./node_modules/@siteimprove/alfa-style/src/shorthand.js\");\nconst border_top_color_1 = __webpack_require__(/*! ./border-top-color */ \"./node_modules/@siteimprove/alfa-style/src/property/border-top-color.js\");\nconst { delimited, map, option, takeBetween } = alfa_parser_1.Parser;\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/border-inline-color}\n * @internal\n */\nexports[\"default\"] = shorthand_1.Shorthand.of([\"border-inline-start-color\", \"border-inline-end-color\"], map(takeBetween(delimited(option(alfa_css_1.Token.parseWhitespace), border_top_color_1.parse), 1, 2), ([start, end = start]) => [\n    [\"border-inline-start-color\", start],\n    [\"border-inline-end-color\", end],\n]));\n//# sourceMappingURL=border-inline-color.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/border-inline-color.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/border-inline-end-color.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/border-inline-end-color.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst border_top_color_1 = __webpack_require__(/*! ./border-top-color */ \"./node_modules/@siteimprove/alfa-style/src/property/border-top-color.js\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/border-inline-end-color}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.extend(border_top_color_1.default);\n//# sourceMappingURL=border-inline-end-color.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/border-inline-end-color.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/border-inline-end-style.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/border-inline-end-style.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst border_top_style_1 = __webpack_require__(/*! ./border-top-style */ \"./node_modules/@siteimprove/alfa-style/src/property/border-top-style.js\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/border-inline-end-style}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.extend(border_top_style_1.default);\n//# sourceMappingURL=border-inline-end-style.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/border-inline-end-style.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/border-inline-end-width.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/border-inline-end-width.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst border_top_width_1 = __webpack_require__(/*! ./border-top-width */ \"./node_modules/@siteimprove/alfa-style/src/property/border-top-width.js\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/border-inline-end-width}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.extend(border_top_width_1.default, {\n    compute: (borderWidth, style) => {\n        const borderStyle = style.computed(\"border-inline-end-style\");\n        return (0, border_top_width_1.compute)(borderStyle, borderWidth, style);\n    },\n});\n//# sourceMappingURL=border-inline-end-width.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/border-inline-end-width.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/border-inline-end.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/border-inline-end.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst shorthand_1 = __webpack_require__(/*! ../shorthand */ \"./node_modules/@siteimprove/alfa-style/src/shorthand.js\");\nconst border_top_1 = __webpack_require__(/*! ./border-top */ \"./node_modules/@siteimprove/alfa-style/src/property/border-top.js\");\nconst { map } = alfa_parser_1.Parser;\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/border-inline-end}\n * @internal\n */\nexports[\"default\"] = shorthand_1.Shorthand.of([\n    \"border-inline-end-color\",\n    \"border-inline-end-style\",\n    \"border-inline-end-width\",\n], map(border_top_1.parse, ([color, style, width]) => [\n    [\"border-inline-end-color\", color],\n    [\"border-inline-end-style\", style],\n    [\"border-inline-end-width\", width],\n]));\n//# sourceMappingURL=border-inline-end.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/border-inline-end.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/border-inline-start-color.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/border-inline-start-color.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst border_top_color_1 = __webpack_require__(/*! ./border-top-color */ \"./node_modules/@siteimprove/alfa-style/src/property/border-top-color.js\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/border-inline-start-color}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.extend(border_top_color_1.default);\n//# sourceMappingURL=border-inline-start-color.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/border-inline-start-color.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/border-inline-start-style.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/border-inline-start-style.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst border_top_style_1 = __webpack_require__(/*! ./border-top-style */ \"./node_modules/@siteimprove/alfa-style/src/property/border-top-style.js\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/border-inline-start-style}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.extend(border_top_style_1.default);\n//# sourceMappingURL=border-inline-start-style.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/border-inline-start-style.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/border-inline-start-width.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/border-inline-start-width.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst border_top_width_1 = __webpack_require__(/*! ./border-top-width */ \"./node_modules/@siteimprove/alfa-style/src/property/border-top-width.js\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/border-inline-start-width}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.extend(border_top_width_1.default, {\n    compute: (borderWidth, style) => {\n        const borderStyle = style.computed(\"border-inline-start-style\");\n        return (0, border_top_width_1.compute)(borderStyle, borderWidth, style);\n    },\n});\n//# sourceMappingURL=border-inline-start-width.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/border-inline-start-width.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/border-inline-start.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/border-inline-start.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst shorthand_1 = __webpack_require__(/*! ../shorthand */ \"./node_modules/@siteimprove/alfa-style/src/shorthand.js\");\nconst border_top_1 = __webpack_require__(/*! ./border-top */ \"./node_modules/@siteimprove/alfa-style/src/property/border-top.js\");\nconst { map } = alfa_parser_1.Parser;\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/border-inline-start}\n * @internal\n */\nexports[\"default\"] = shorthand_1.Shorthand.of([\n    \"border-inline-start-color\",\n    \"border-inline-start-style\",\n    \"border-inline-start-width\",\n], map(border_top_1.parse, ([color, style, width]) => [\n    [\"border-inline-start-color\", color],\n    [\"border-inline-start-style\", style],\n    [\"border-inline-start-width\", width],\n]));\n//# sourceMappingURL=border-inline-start.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/border-inline-start.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/border-inline-style.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/border-inline-style.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst shorthand_1 = __webpack_require__(/*! ../shorthand */ \"./node_modules/@siteimprove/alfa-style/src/shorthand.js\");\nconst border_top_style_1 = __webpack_require__(/*! ./border-top-style */ \"./node_modules/@siteimprove/alfa-style/src/property/border-top-style.js\");\nconst { delimited, map, option, takeBetween } = alfa_parser_1.Parser;\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/border-inline-style}\n * @internal\n */\nexports[\"default\"] = shorthand_1.Shorthand.of([\"border-inline-start-style\", \"border-inline-end-style\"], map(takeBetween(delimited(option(alfa_css_1.Token.parseWhitespace), border_top_style_1.default.parseBase), 1, 2), ([start, end = start]) => [\n    [\"border-inline-start-style\", start],\n    [\"border-inline-end-style\", end],\n]));\n//# sourceMappingURL=border-inline-style.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/border-inline-style.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/border-inline-width.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/border-inline-width.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst shorthand_1 = __webpack_require__(/*! ../shorthand */ \"./node_modules/@siteimprove/alfa-style/src/shorthand.js\");\nconst border_top_width_1 = __webpack_require__(/*! ./border-top-width */ \"./node_modules/@siteimprove/alfa-style/src/property/border-top-width.js\");\nconst { delimited, map, option, takeBetween } = alfa_parser_1.Parser;\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/border-inline-width}\n * @internal\n */\nexports[\"default\"] = shorthand_1.Shorthand.of([\"border-inline-start-width\", \"border-inline-end-width\"], map(takeBetween(delimited(option(alfa_css_1.Token.parseWhitespace), border_top_width_1.parse), 1, 2), ([start, end = start]) => [\n    [\"border-inline-start-width\", start],\n    [\"border-inline-end-width\", end],\n]));\n//# sourceMappingURL=border-inline-width.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/border-inline-width.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/border-inline.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/border-inline.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst shorthand_1 = __webpack_require__(/*! ../shorthand */ \"./node_modules/@siteimprove/alfa-style/src/shorthand.js\");\nconst border_top_1 = __webpack_require__(/*! ./border-top */ \"./node_modules/@siteimprove/alfa-style/src/property/border-top.js\");\nconst { map } = alfa_parser_1.Parser;\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/border-inline}\n * @internal\n */\nexports[\"default\"] = shorthand_1.Shorthand.of([\n    \"border-inline-start-color\",\n    \"border-inline-start-style\",\n    \"border-inline-start-width\",\n    \"border-inline-end-color\",\n    \"border-inline-end-style\",\n    \"border-inline-end-width\",\n], map(border_top_1.parse, ([color, style, width]) => [\n    [\"border-inline-start-color\", color],\n    [\"border-inline-start-style\", style],\n    [\"border-inline-start-width\", width],\n    [\"border-inline-end-color\", color],\n    [\"border-inline-end-style\", style],\n    [\"border-inline-end-width\", width],\n]));\n//# sourceMappingURL=border-inline.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/border-inline.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/border-left-color.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/border-left-color.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst border_top_color_1 = __webpack_require__(/*! ./border-top-color */ \"./node_modules/@siteimprove/alfa-style/src/property/border-top-color.js\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/border-left-color}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.extend(border_top_color_1.default);\n//# sourceMappingURL=border-left-color.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/border-left-color.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/border-left-style.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/border-left-style.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst border_top_style_1 = __webpack_require__(/*! ./border-top-style */ \"./node_modules/@siteimprove/alfa-style/src/property/border-top-style.js\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/border-left-style}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.extend(border_top_style_1.default);\n//# sourceMappingURL=border-left-style.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/border-left-style.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/border-left-width.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/border-left-width.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst border_top_width_1 = __webpack_require__(/*! ./border-top-width */ \"./node_modules/@siteimprove/alfa-style/src/property/border-top-width.js\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/border-left-width}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.extend(border_top_width_1.default, {\n    compute: (borderWidth, style) => {\n        const borderStyle = style.computed(\"border-left-style\");\n        return (0, border_top_width_1.compute)(borderStyle, borderWidth, style);\n    },\n});\n//# sourceMappingURL=border-left-width.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/border-left-width.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/border-left.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/border-left.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst shorthand_1 = __webpack_require__(/*! ../shorthand */ \"./node_modules/@siteimprove/alfa-style/src/shorthand.js\");\nconst border_top_1 = __webpack_require__(/*! ./border-top */ \"./node_modules/@siteimprove/alfa-style/src/property/border-top.js\");\nconst { map } = alfa_parser_1.Parser;\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/border-left}\n * @internal\n */\nexports[\"default\"] = shorthand_1.Shorthand.of([\"border-left-color\", \"border-left-style\", \"border-left-width\"], map(border_top_1.parse, ([color, style, width]) => [\n    [\"border-left-color\", color],\n    [\"border-left-style\", style],\n    [\"border-left-width\", width],\n]));\n//# sourceMappingURL=border-left.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/border-left.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/border-radius.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/border-radius.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst shorthand_1 = __webpack_require__(/*! ../shorthand */ \"./node_modules/@siteimprove/alfa-style/src/shorthand.js\");\nconst { delimited, either, map, option, pair, right, takeBetween } = alfa_parser_1.Parser;\n/**\n * @internal\n **/\nconst parse = map(pair(takeBetween(delimited(option(alfa_css_1.Token.parseWhitespace), alfa_css_1.LengthPercentage.parse), 1, 4), option(right(alfa_css_1.Token.parseDelim(\"/\"), takeBetween(delimited(option(alfa_css_1.Token.parseWhitespace), alfa_css_1.LengthPercentage.parse), 1, 4)))), ([horizontal, vertical]) => {\n    const [tlh, trh = tlh, brh = tlh, blh = trh] = horizontal;\n    let tlv, trv, brv, blv;\n    if (vertical.isSome()) {\n        const v = vertical.get();\n        tlv = v[0];\n        trv = v?.[1] ?? tlv;\n        brv = v?.[2] ?? tlv;\n        blv = v?.[3] ?? trv;\n    }\n    else {\n        [tlv, trv, brv, blv] = [tlh, trh, brh, blh];\n    }\n    return [\n        alfa_css_1.Tuple.of(tlh, tlv),\n        alfa_css_1.Tuple.of(trh, trv),\n        alfa_css_1.Tuple.of(brh, brv),\n        alfa_css_1.Tuple.of(blh, blv),\n    ];\n});\nexports[\"default\"] = shorthand_1.Shorthand.of([\n    \"border-top-left-radius\",\n    \"border-top-right-radius\",\n    \"border-bottom-right-radius\",\n    \"border-bottom-left-radius\",\n], map(parse, ([topLeft, topRight, bottomRight, bottomLeft]) => [\n    [\"border-top-left-radius\", topLeft],\n    [\"border-top-right-radius\", topRight],\n    [\"border-bottom-right-radius\", bottomRight],\n    [\"border-bottom-left-radius\", bottomLeft],\n]));\n//# sourceMappingURL=border-radius.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/border-radius.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/border-right-color.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/border-right-color.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst border_top_color_1 = __webpack_require__(/*! ./border-top-color */ \"./node_modules/@siteimprove/alfa-style/src/property/border-top-color.js\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/border-right-color}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.extend(border_top_color_1.default);\n//# sourceMappingURL=border-right-color.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/border-right-color.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/border-right-style.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/border-right-style.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst border_top_style_1 = __webpack_require__(/*! ./border-top-style */ \"./node_modules/@siteimprove/alfa-style/src/property/border-top-style.js\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/border-right-style}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.extend(border_top_style_1.default);\n//# sourceMappingURL=border-right-style.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/border-right-style.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/border-right-width.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/border-right-width.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst border_top_width_1 = __webpack_require__(/*! ./border-top-width */ \"./node_modules/@siteimprove/alfa-style/src/property/border-top-width.js\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/border-right-width}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.extend(border_top_width_1.default, {\n    compute: (borderWidth, style) => {\n        const borderStyle = style.computed(\"border-block-end-style\");\n        return (0, border_top_width_1.compute)(borderStyle, borderWidth, style);\n    },\n});\n//# sourceMappingURL=border-right-width.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/border-right-width.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/border-right.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/border-right.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst shorthand_1 = __webpack_require__(/*! ../shorthand */ \"./node_modules/@siteimprove/alfa-style/src/shorthand.js\");\nconst border_top_1 = __webpack_require__(/*! ./border-top */ \"./node_modules/@siteimprove/alfa-style/src/property/border-top.js\");\nconst { map } = alfa_parser_1.Parser;\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/border-right}\n * @internal\n */\nexports[\"default\"] = shorthand_1.Shorthand.of([\"border-right-color\", \"border-right-style\", \"border-right-width\"], map(border_top_1.parse, ([color, style, width]) => [\n    [\"border-right-color\", color],\n    [\"border-right-style\", style],\n    [\"border-right-width\", width],\n]));\n//# sourceMappingURL=border-right.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/border-right.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/border-start-end-radius.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/border-start-end-radius.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst border_top_left_radius_1 = __webpack_require__(/*! ./border-top-left-radius */ \"./node_modules/@siteimprove/alfa-style/src/property/border-top-left-radius.js\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/border-start-end-radius}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.extend(border_top_left_radius_1.default);\n//# sourceMappingURL=border-start-end-radius.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/border-start-end-radius.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/border-start-start-radius.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/border-start-start-radius.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst border_top_left_radius_1 = __webpack_require__(/*! ./border-top-left-radius */ \"./node_modules/@siteimprove/alfa-style/src/property/border-top-left-radius.js\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/border-start-start-radius}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.extend(border_top_left_radius_1.default);\n//# sourceMappingURL=border-start-start-radius.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/border-start-start-radius.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/border-style.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/border-style.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst shorthand_1 = __webpack_require__(/*! ../shorthand */ \"./node_modules/@siteimprove/alfa-style/src/shorthand.js\");\nconst border_top_style_1 = __webpack_require__(/*! ./border-top-style */ \"./node_modules/@siteimprove/alfa-style/src/property/border-top-style.js\");\nconst { delimited, map, option, takeBetween } = alfa_parser_1.Parser;\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/border-style}\n * @internal\n */\nexports[\"default\"] = shorthand_1.Shorthand.of([\n    \"border-top-style\",\n    \"border-right-style\",\n    \"border-bottom-style\",\n    \"border-left-style\",\n], map(takeBetween(delimited(option(alfa_css_1.Token.parseWhitespace), border_top_style_1.default.parseBase), 1, 4), ([top, right = top, bottom = top, left = right]) => [\n    [\"border-top-style\", top],\n    [\"border-right-style\", right],\n    [\"border-bottom-style\", bottom],\n    [\"border-left-style\", left],\n]));\n//# sourceMappingURL=border-style.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/border-style.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/border-top-color.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/border-top-color.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.parse = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\n/**\n * @remarks\n * This is used by the shorthand\n *\n * @internal\n */\nexports.parse = alfa_css_1.Color.parse;\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/border-top-color}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.of(alfa_css_1.Color.current, exports.parse, (value) => value.resolve());\n//# sourceMappingURL=border-top-color.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/border-top-color.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/border-top-left-radius.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/border-top-left-radius.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst resolver_1 = __webpack_require__(/*! ../resolver */ \"./node_modules/@siteimprove/alfa-style/src/resolver.js\");\nconst { takeBetween, map, delimited, option } = alfa_parser_1.Parser;\nconst parse = map(takeBetween(delimited(option(alfa_css_1.Token.parseWhitespace), alfa_css_1.LengthPercentage.parse), 1, 2), ([horizontal, vertical = horizontal]) => alfa_css_1.Tuple.of(horizontal, vertical));\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/border-top-left-radius}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.of(alfa_css_1.Tuple.of(alfa_css_1.Length.of(0, \"px\"), alfa_css_1.Length.of(0, \"px\")), parse, (value, style) => value.map(({ values: [h, v] }) => alfa_css_1.Tuple.of(alfa_css_1.LengthPercentage.partiallyResolve(resolver_1.Resolver.length(style))(h), alfa_css_1.LengthPercentage.partiallyResolve(resolver_1.Resolver.length(style))(v))));\n//# sourceMappingURL=border-top-left-radius.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/border-top-left-radius.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/border-top-right-radius.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/border-top-right-radius.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst border_top_left_radius_1 = __webpack_require__(/*! ./border-top-left-radius */ \"./node_modules/@siteimprove/alfa-style/src/property/border-top-left-radius.js\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/border-top-right-radius}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.extend(border_top_left_radius_1.default);\n//# sourceMappingURL=border-top-right-radius.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/border-top-right-radius.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/border-top-style.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/border-top-style.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/border-top-style}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.fromKeywords({ inherits: false }, \"none\", \"hidden\", \"dotted\", \"dashed\", \"solid\", \"double\", \"groove\", \"ridge\", \"inset\", \"outset\");\n//# sourceMappingURL=border-top-style.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/border-top-style.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/border-top-width.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/border-top-width.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.compute = exports.parse = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst resolver_1 = __webpack_require__(/*! ../resolver */ \"./node_modules/@siteimprove/alfa-style/src/resolver.js\");\nconst { either } = alfa_parser_1.Parser;\n/**\n * @internal\n */\nexports.parse = either(alfa_css_1.Keyword.parse(\"thin\", \"medium\", \"thick\"), alfa_css_1.Length.parse);\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/border-top-width}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.of(alfa_css_1.Length.of(3, \"px\"), exports.parse, (borderWidth, style) => {\n    const borderStyle = style.computed(\"border-top-style\");\n    return compute(borderStyle, borderWidth, style);\n});\n/**\n * @internal\n */\nfunction compute(styleProperty, specified, style) {\n    return specified.map((value) => {\n        if (styleProperty.some(({ value }) => value === \"none\" || value === \"hidden\")) {\n            return alfa_css_1.Length.of(0, \"px\");\n        }\n        if (alfa_css_1.Length.isLength(value)) {\n            return value.resolve(resolver_1.Resolver.length(style));\n        }\n        // Only keywords are left\n        switch (value.value) {\n            case \"thin\":\n                return alfa_css_1.Length.of(1, \"px\");\n            case \"medium\":\n                return alfa_css_1.Length.of(3, \"px\");\n            case \"thick\":\n                return alfa_css_1.Length.of(5, \"px\");\n        }\n    });\n}\nexports.compute = compute;\n//# sourceMappingURL=border-top-width.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/border-top-width.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/border-top.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/border-top.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.parse = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst shorthand_1 = __webpack_require__(/*! ../shorthand */ \"./node_modules/@siteimprove/alfa-style/src/shorthand.js\");\nconst Color = __webpack_require__(/*! ./border-top-color */ \"./node_modules/@siteimprove/alfa-style/src/property/border-top-color.js\");\nconst border_top_style_1 = __webpack_require__(/*! ./border-top-style */ \"./node_modules/@siteimprove/alfa-style/src/property/border-top-style.js\");\nconst Width = __webpack_require__(/*! ./border-top-width */ \"./node_modules/@siteimprove/alfa-style/src/property/border-top-width.js\");\nconst { map } = alfa_parser_1.Parser;\nconst parse = (input) => {\n    let color;\n    let style;\n    let width;\n    while (true) {\n        for (const [remainder] of alfa_css_1.Token.parseWhitespace(input)) {\n            input = remainder;\n        }\n        // <color>\n        if (color === undefined) {\n            const result = Color.parse(input);\n            if (result.isOk()) {\n                [input, color] = result.get();\n                continue;\n            }\n        }\n        // <style>\n        if (style === undefined) {\n            const result = border_top_style_1.default.parseBase(input);\n            if (result.isOk()) {\n                [input, style] = result.get();\n                continue;\n            }\n        }\n        // <width>\n        if (width === undefined) {\n            const result = Width.parse(input);\n            if (result.isOk()) {\n                [input, width] = result.get();\n                continue;\n            }\n        }\n        break;\n    }\n    return alfa_result_1.Result.of([\n        input,\n        [\n            color ?? alfa_css_1.Keyword.of(\"initial\"),\n            style ?? alfa_css_1.Keyword.of(\"initial\"),\n            width ?? alfa_css_1.Keyword.of(\"initial\"),\n        ],\n    ]);\n};\nexports.parse = parse;\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/border-top}\n * @internal\n */\nexports[\"default\"] = shorthand_1.Shorthand.of([\"border-top-color\", \"border-top-style\", \"border-top-width\"], map(exports.parse, ([color, style, width]) => [\n    [\"border-top-color\", color],\n    [\"border-top-style\", style],\n    [\"border-top-width\", width],\n]));\n//# sourceMappingURL=border-top.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/border-top.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/border-width.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/border-width.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst shorthand_1 = __webpack_require__(/*! ../shorthand */ \"./node_modules/@siteimprove/alfa-style/src/shorthand.js\");\nconst border_top_width_1 = __webpack_require__(/*! ./border-top-width */ \"./node_modules/@siteimprove/alfa-style/src/property/border-top-width.js\");\nconst { delimited, map, option, takeBetween } = alfa_parser_1.Parser;\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/border-width}\n * @internal\n */\nexports[\"default\"] = shorthand_1.Shorthand.of([\n    \"border-top-width\",\n    \"border-right-width\",\n    \"border-bottom-width\",\n    \"border-left-width\",\n], map(takeBetween(delimited(option(alfa_css_1.Token.parseWhitespace), border_top_width_1.parse), 1, 4), ([top, right = top, bottom = top, left = right]) => [\n    [\"border-top-width\", top],\n    [\"border-right-width\", right],\n    [\"border-bottom-width\", bottom],\n    [\"border-left-width\", left],\n]));\n//# sourceMappingURL=border-width.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/border-width.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/border.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/border.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst shorthand_1 = __webpack_require__(/*! ../shorthand */ \"./node_modules/@siteimprove/alfa-style/src/shorthand.js\");\nconst border_top_1 = __webpack_require__(/*! ./border-top */ \"./node_modules/@siteimprove/alfa-style/src/property/border-top.js\");\nconst { map } = alfa_parser_1.Parser;\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/border}\n * @internal\n */\nexports[\"default\"] = shorthand_1.Shorthand.of([\n    \"border-top-color\",\n    \"border-top-style\",\n    \"border-top-width\",\n    \"border-right-color\",\n    \"border-right-style\",\n    \"border-right-width\",\n    \"border-bottom-color\",\n    \"border-bottom-style\",\n    \"border-bottom-width\",\n    \"border-left-color\",\n    \"border-left-style\",\n    \"border-left-width\",\n], map(border_top_1.parse, ([color, style, width]) => [\n    [\"border-top-color\", color],\n    [\"border-top-style\", style],\n    [\"border-top-width\", width],\n    [\"border-right-color\", color],\n    [\"border-right-style\", style],\n    [\"border-right-width\", width],\n    [\"border-bottom-color\", color],\n    [\"border-bottom-style\", style],\n    [\"border-bottom-width\", width],\n    [\"border-left-color\", color],\n    [\"border-left-style\", style],\n    [\"border-left-width\", width],\n]));\n//# sourceMappingURL=border.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/border.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/bottom.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/bottom.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst top_1 = __webpack_require__(/*! ./top */ \"./node_modules/@siteimprove/alfa-style/src/property/top.js\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/bottom}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.extend(top_1.default);\n//# sourceMappingURL=bottom.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/bottom.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/box-shadow.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/box-shadow.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst resolver_1 = __webpack_require__(/*! ../resolver */ \"./node_modules/@siteimprove/alfa-style/src/resolver.js\");\nconst { either } = alfa_parser_1.Parser;\nconst parseList = alfa_css_1.List.parseCommaSeparated(alfa_css_1.Shadow.parse());\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/box-shadow}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.of(alfa_css_1.Keyword.of(\"none\"), either(alfa_css_1.Keyword.parse(\"none\"), parseList), (value, style) => value.resolve(resolver_1.Resolver.length(style)));\n//# sourceMappingURL=box-shadow.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/box-shadow.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/clip-path.js":
/*!************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/clip-path.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst { either } = alfa_parser_1.Parser;\nconst parse = either(alfa_css_1.URL.parse, either(alfa_css_1.Shape.parse, alfa_css_1.Keyword.parse(\"none\")));\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/clip-path}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.of(alfa_css_1.Keyword.of(\"none\"), parse, (value) => value);\n//# sourceMappingURL=clip-path.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/clip-path.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/clip.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/clip.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst value_1 = __webpack_require__(/*! ../value */ \"./node_modules/@siteimprove/alfa-style/src/value.js\");\nconst { either, map } = alfa_parser_1.Parser;\n/**\n * @deprecated The clip property is deprecated in CSS but still used by some sites.\n */\nconst parse = either(alfa_css_1.Keyword.parse(\"auto\"), map(alfa_css_1.Rectangle.parse, (rectangle) => alfa_css_1.Shape.of(rectangle, alfa_css_1.Keyword.of(\"border-box\"))));\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/clip}\n * @deprecated The clip property is deprecated in CSS but still used by some sites.\n *\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.of(alfa_css_1.Keyword.of(\"auto\"), parse, (value, style) => {\n    // We need the type assertion to help TS break a circular type reference:\n    // this -> style.computed -> Longhands.Name -> Longhands.longhands -> this.\n    const position = style.computed(\"position\").value;\n    return position.equals(alfa_css_1.Keyword.of(\"absolute\")) ||\n        position.equals(alfa_css_1.Keyword.of(\"fixed\"))\n        ? value\n        : value_1.Value.of(alfa_css_1.Keyword.of(\"auto\"));\n});\n//# sourceMappingURL=clip.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/clip.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/color.js":
/*!********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/color.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/color}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.of(alfa_css_1.Color.system(\"canvastext\"), alfa_css_1.Color.parse, (value) => value.resolve(), {\n    inherits: true,\n});\n//# sourceMappingURL=color.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/color.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/cursor.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/cursor.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst { left, map, option, pair, right, separated, zeroOrMore } = alfa_parser_1.Parser;\nconst { parseComma, parseWhitespace } = alfa_css_1.Token;\nconst parseBuiltin = alfa_css_1.Keyword.parse(\"auto\", \"default\", \"none\", \"context-menu\", \"help\", \"pointer\", \"progress\", \"wait\", \"cell\", \"crosshair\", \"text\", \"vertical-text\", \"alias\", \"copy\", \"move\", \"no-drop\", \"not-allowed\", \"grab\", \"grabbing\", \"e-resize\", \"n-resize\", \"ne-resize\", \"nw-resize\", \"s-resize\", \"se-resize\", \"sw-resize\", \"w-resize\", \"ew-resize\", \"ns-resize\", \"nesw-resize\", \"nwse-resize\", \"col-resize\", \"row-resize\", \"all-scroll\", \"zoom-in\", \"zoom-out\");\nconst parseCustom = map(pair(alfa_css_1.URL.parse, option(right(parseWhitespace, separated(alfa_css_1.Number.parse, parseWhitespace)))), ([url, coordinates]) => coordinates.isSome() ? alfa_css_1.Tuple.of(url, ...coordinates.get()) : url);\nconst parseCustomList = map(zeroOrMore(left(parseCustom, pair(parseComma, option(parseWhitespace)))), (list) => alfa_css_1.List.of(list, \",\"));\nconst parse = map(separated(parseCustomList, option(parseWhitespace), parseBuiltin), ([custom, fallback]) => alfa_css_1.Tuple.of(custom, fallback));\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/cursor}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.of(alfa_css_1.Tuple.of(alfa_css_1.List.of([], \",\"), alfa_css_1.Keyword.of(\"auto\")), parse, (value) => value.resolve(), { inherits: true });\n//# sourceMappingURL=cursor.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/cursor.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/display.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/display.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst { map, either } = alfa_parser_1.Parser;\n/**\n * {@link https://drafts.csswg.org/css-display/#typedef-display-outside}\n */\nconst parseOutside = alfa_css_1.Keyword.parse(\"block\", \"inline\", \"run-in\");\n/**\n * {@link https://drafts.csswg.org/css-display/#typedef-display-inside}\n */\nconst parseInside = alfa_css_1.Keyword.parse(\"flow\", \"flow-root\", \"table\", \"flex\", \"grid\", \"ruby\");\n/**\n * {@link https://drafts.csswg.org/css-display/#typedef-display-listitem}\n */\nconst parseListItem = alfa_css_1.Keyword.parse(\"list-item\");\n/**\n * {@link https://drafts.csswg.org/css-display/#typedef-display-internal}\n */\nconst parseInternal = alfa_css_1.Keyword.parse(\"table-row-group\", \"table-header-group\", \"table-footer-group\", \"table-row\", \"table-cell\", \"table-column-group\", \"table-column\", \"table-caption\", \"ruby-base\", \"ruby-text\", \"ruby-base-container\", \"ruby-text-container\");\n/**\n * {@link https://drafts.csswg.org/css-display/#typedef-display-box}\n */\nconst parseBox = alfa_css_1.Keyword.parse(\"contents\", \"none\");\n/**\n * {@link https://drafts.csswg.org/css-display/#typedef-display-legacy}\n */\nconst parseLegacy = alfa_css_1.Keyword.parse(\"inline-block\", \"inline-table\", \"inline-flex\", \"inline-grid\");\nconst parse = either((input) => {\n    let outside;\n    let inside;\n    let listItem;\n    while (true) {\n        for ([input] of alfa_css_1.Token.parseWhitespace(input)) {\n        }\n        if (outside === undefined) {\n            const result = parseOutside(input);\n            if (result.isOk()) {\n                [input, outside] = result.get();\n                continue;\n            }\n        }\n        if (inside === undefined) {\n            const result = parseInside(input);\n            if (result.isOk()) {\n                [input, inside] = result.get();\n                continue;\n            }\n        }\n        if (listItem === undefined) {\n            const result = parseListItem(input);\n            if (result.isOk()) {\n                [input, listItem] = result.get();\n                continue;\n            }\n        }\n        break;\n    }\n    if (outside === undefined &&\n        inside === undefined &&\n        listItem === undefined) {\n        return alfa_result_1.Err.of(`Expected an outer or inner display type or a list marker`);\n    }\n    if (inside === undefined) {\n        inside = alfa_css_1.Keyword.of(\"flow\");\n    }\n    if (outside === undefined) {\n        outside =\n            inside.value === \"ruby\" ? alfa_css_1.Keyword.of(\"inline\") : alfa_css_1.Keyword.of(\"block\");\n    }\n    if (listItem === undefined) {\n        return alfa_result_1.Result.of([input, alfa_css_1.Tuple.of(outside, inside)]);\n    }\n    switch (inside.value) {\n        case \"flow\":\n        case \"flow-root\":\n            break;\n        default:\n            return alfa_result_1.Err.of(`Unexpected inner display type for list marker`);\n    }\n    return alfa_result_1.Result.of([input, alfa_css_1.Tuple.of(outside, inside, listItem)]);\n}, map(parseInternal, (keyword) => {\n    switch (keyword.value) {\n        case \"table-row-group\":\n        case \"table-header-group\":\n        case \"table-footer-group\":\n        case \"table-row\":\n        case \"table-cell\":\n        case \"table-column-group\":\n        case \"table-column\":\n        case \"table-caption\":\n            return alfa_css_1.Tuple.of(keyword, alfa_css_1.Keyword.of(\"flow-root\"));\n        case \"ruby-base\":\n        case \"ruby-text\":\n        case \"ruby-base-container\":\n        case \"ruby-text-container\":\n            return alfa_css_1.Tuple.of(keyword, alfa_css_1.Keyword.of(\"flow\"));\n    }\n}), map(parseBox, (keyword) => alfa_css_1.Tuple.of(keyword)), map(parseLegacy, (keyword) => {\n    const inline = alfa_css_1.Keyword.of(\"inline\");\n    switch (keyword.value) {\n        case \"inline-block\":\n            return alfa_css_1.Tuple.of(inline, alfa_css_1.Keyword.of(\"flow-root\"));\n        case \"inline-table\":\n            return alfa_css_1.Tuple.of(inline, alfa_css_1.Keyword.of(\"table\"));\n        case \"inline-flex\":\n            return alfa_css_1.Tuple.of(inline, alfa_css_1.Keyword.of(\"flex\"));\n        case \"inline-grid\":\n            return alfa_css_1.Tuple.of(inline, alfa_css_1.Keyword.of(\"grid\"));\n    }\n}));\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/display}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.of(alfa_css_1.Tuple.of(alfa_css_1.Keyword.of(\"inline\"), alfa_css_1.Keyword.of(\"flow\")), parse, (value, style) => {\n    // We need the type assertion to help TS break a circular type reference:\n    // this -> style.computed -> Longhands.Name -> Longhands.longhands -> this.\n    const position = style.computed(\"position\").value;\n    const float = style.computed(\"float\").value;\n    return position.equals(alfa_css_1.Keyword.of(\"absolute\")) ||\n        position.equals(alfa_css_1.Keyword.of(\"fixed\")) ||\n        !float.equals(alfa_css_1.Keyword.of(\"none\"))\n        ? // 4th condition of https://drafts.csswg.org/css2/#dis-pos-flo needs\n            // to know whether the element is the root element, which is not\n            // currently doable at that level.\n            value.map(displayTable)\n        : value;\n});\n/**\n * {@link https://drafts.csswg.org/css2/#dis-pos-flo}\n */\nfunction displayTable(value) {\n    // Boxes are not changed by this.\n    if (value.values.length === 1) {\n        return value;\n    }\n    const [outside, inside] = value.values;\n    switch (outside.value) {\n        case \"inline\":\n            switch (inside.value) {\n                case \"table\": // => inline-table\n                    return alfa_css_1.Tuple.of(alfa_css_1.Keyword.of(\"block\"), alfa_css_1.Keyword.of(\"table\"));\n                case \"flow\": // => inline-flow\n                case \"flow-root\": // => inline (parses as \"inline flow-root\")\n                    return alfa_css_1.Tuple.of(alfa_css_1.Keyword.of(\"block\"), alfa_css_1.Keyword.of(\"flow\"));\n                default:\n                    return value;\n            }\n        case \"table-row-group\":\n        case \"table-header-group\":\n        case \"table-footer-group\":\n        case \"table-row\":\n        case \"table-cell\":\n        case \"table-column-group\":\n        case \"table-column\":\n        case \"table-caption\":\n            return alfa_css_1.Tuple.of(alfa_css_1.Keyword.of(\"block\"), alfa_css_1.Keyword.of(\"flow\"));\n        default:\n            return value;\n    }\n}\n//# sourceMappingURL=display.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/display.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/flex-direction.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/flex-direction.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/flex-direction}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.fromKeywords({ inherits: false }, \"row\", \"row-reverse\", \"column\", \"column-reverse\");\n//# sourceMappingURL=flex-direction.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/flex-direction.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/flex-flow.js":
/*!************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/flex-flow.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst shorthand_1 = __webpack_require__(/*! ../shorthand */ \"./node_modules/@siteimprove/alfa-style/src/shorthand.js\");\nconst flex_direction_1 = __webpack_require__(/*! ./flex-direction */ \"./node_modules/@siteimprove/alfa-style/src/property/flex-direction.js\");\nconst flex_wrap_1 = __webpack_require__(/*! ./flex-wrap */ \"./node_modules/@siteimprove/alfa-style/src/property/flex-wrap.js\");\nconst { map } = alfa_parser_1.Parser;\nconst parse = (input) => {\n    let direction;\n    let wrap;\n    while (true) {\n        for (const [remainder] of alfa_css_1.Token.parseWhitespace(input)) {\n            input = remainder;\n        }\n        // <direction>\n        if (direction === undefined) {\n            const result = flex_direction_1.default.parseBase(input);\n            if (result.isOk()) {\n                [input, direction] = result.get();\n                continue;\n            }\n        }\n        // <wrap>\n        if (wrap === undefined) {\n            const result = flex_wrap_1.default.parseBase(input);\n            if (result.isOk()) {\n                [input, wrap] = result.get();\n                continue;\n            }\n        }\n        break;\n    }\n    return alfa_result_1.Result.of([\n        input,\n        [direction ?? alfa_css_1.Keyword.of(\"initial\"), wrap ?? alfa_css_1.Keyword.of(\"initial\")],\n    ]);\n};\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/border-flow}\n *\n * @internal\n */\nexports[\"default\"] = shorthand_1.Shorthand.of([\"flex-direction\", \"flex-wrap\"], map(parse, ([direction, wrap]) => [\n    [\"flex-direction\", direction],\n    [\"flex-wrap\", wrap],\n]));\n//# sourceMappingURL=flex-flow.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/flex-flow.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/flex-wrap.js":
/*!************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/flex-wrap.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/flex-wrap}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.fromKeywords({ inherits: false }, \"nowrap\", \"wrap\", \"wrap-reverse\");\n//# sourceMappingURL=flex-wrap.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/flex-wrap.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/float.js":
/*!********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/float.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst value_1 = __webpack_require__(/*! ../value */ \"./node_modules/@siteimprove/alfa-style/src/value.js\");\nconst base = longhand_1.Longhand.fromKeywords({ inherits: false }, \"none\", \"left\", \"right\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/float}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.extend(base, {\n    compute: (value, style) => {\n        // We need the type assertion to help TS break a circular type reference:\n        // this -> style.computed -> Longhands.Name -> Longhands.longhands -> this.\n        const position = style.computed(\"position\").value;\n        return position.equals(alfa_css_1.Keyword.of(\"absolute\")) ||\n            position.equals(alfa_css_1.Keyword.of(\"fixed\"))\n            ? value_1.Value.of(alfa_css_1.Keyword.of(\"none\"))\n            : value;\n    },\n});\n//# sourceMappingURL=float.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/float.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/font-family.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/font-family.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst { either, map, separatedList } = alfa_parser_1.Parser;\nconst parse = alfa_css_1.List.parseCommaSeparated(either(alfa_css_1.Keyword.parse(\"serif\", \"sans-serif\", \"cursive\", \"fantasy\", \"monospace\"), either(alfa_css_1.String.parse, map(separatedList(alfa_css_1.Token.parseIdent(), alfa_css_1.Token.parseWhitespace), (idents) => alfa_css_1.String.of(idents.map((ident) => ident.value).join(\" \"))))));\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/font-family}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.of(alfa_css_1.List.of([alfa_css_1.Keyword.of(\"serif\")], \", \"), parse, (fontFamily) => fontFamily, {\n    inherits: true,\n});\n//# sourceMappingURL=font-family.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/font-family.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/font-size.js":
/*!************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/font-size.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst resolver_1 = __webpack_require__(/*! ../resolver */ \"./node_modules/@siteimprove/alfa-style/src/resolver.js\");\nconst { either } = alfa_parser_1.Parser;\nconst parse = either(alfa_css_1.Keyword.parse(\"xx-small\", \"x-small\", \"small\", \"medium\", \"large\", \"x-large\", \"xx-large\", \"xxx-large\"), alfa_css_1.Keyword.parse(\"larger\", \"smaller\"), alfa_css_1.LengthPercentage.parse);\n/**\n * Base font sizes for generic font families. In browsers, these sizes depend on\n * a number of things, such as language and user configuration, but for\n * simplicity we assume a single base size for every generic font family.\n */\nconst bases = {\n    serif: 16,\n    \"sans-serif\": 16,\n    monospace: 13,\n    cursive: 16,\n    fantasy: 16,\n};\n/**\n * Scaling factors for absolute font sizes. In browsers, these factors are only\n * used when the base font size are outside the range of 9 to 16 pixels. Within\n * this range, a hardcoded lookup table is used for various legacy reasons but\n * for simplicity we always rely on these scaling factors. The effect of this is\n * that we will compute font sizes that are slightly larger than what browsers\n * would render.\n *\n * {@link https://drafts.csswg.org/css-fonts/#absolute-size-mapping}\n */\nconst factors = {\n    \"xx-small\": 3 / 5,\n    \"x-small\": 3 / 4,\n    small: 8 / 9,\n    medium: 1,\n    large: 6 / 5,\n    \"x-large\": 3 / 2,\n    \"xx-large\": 2 / 1,\n    \"xxx-large\": 3 / 1,\n};\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/font-size}\n * @internal\n */\n// We need a type hint to help TS break the circular type reference.\n// this -> style.computed -> Longhands.Name -> Longhands.longhands -> this.\n// This one depends on itself (same property), so we also need the type\n// hint on the property itself\nconst property = longhand_1.Longhand.of(alfa_css_1.Length.of(16, \"px\"), parse, (fontSize, style) => fontSize.map((fontSize) => {\n    // We need the type assertion to help TS break a circular type reference:\n    // this -> style.computed -> Longhands.Name -> Longhands.longhands -> this.\n    const parent = style.parent.computed(\"font-size\").value;\n    if (alfa_css_1.LengthPercentage.isLengthPercentage(fontSize)) {\n        return alfa_css_1.LengthPercentage.resolve(resolver_1.Resolver.lengthPercentage(parent, style.parent))(fontSize);\n    }\n    // Must be a keyword\n    switch (fontSize.value) {\n        case \"larger\":\n            return parent.scale(1.2);\n        case \"smaller\":\n            return parent.scale(0.85);\n        default: {\n            const factor = factors[fontSize.value];\n            // We need the type assertion to help TS break a circular type reference:\n            // this -> style.computed -> Longhands.Name -> Longhands.longhands -> this.\n            const [family] = style.computed(\"font-family\").value\n                .values;\n            const base = family.type === \"keyword\" ? bases[family.value] : bases.serif;\n            return alfa_css_1.Length.of(factor * base, \"px\");\n        }\n    }\n}), {\n    inherits: true,\n});\nexports[\"default\"] = property;\n//# sourceMappingURL=font-size.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/font-size.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/font-stretch.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/font-stretch.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.parseAbsolute = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst { either } = alfa_parser_1.Parser;\n/**\n * @internal\n */\nexports.parseAbsolute = alfa_css_1.Keyword.parse(\"ultra-condensed\", \"extra-condensed\", \"condensed\", \"semi-condensed\", \"normal\", \"semi-expanded\", \"expanded\", \"extra-expanded\", \"ultra-expanded\");\nconst parse = either(alfa_css_1.Percentage.parse, exports.parseAbsolute);\n/**\n * {@link https://drafts.csswg.org/css-fonts/#font-stretch-prop}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.of(alfa_css_1.Percentage.of(1), parse, (fontStretch) => fontStretch.map((fontStretch) => {\n    if (fontStretch.type === \"percentage\") {\n        return fontStretch;\n    }\n    switch (fontStretch.value) {\n        case \"ultra-condensed\":\n            return alfa_css_1.Percentage.of(0.5);\n        case \"extra-condensed\":\n            return alfa_css_1.Percentage.of(0.625);\n        case \"condensed\":\n            return alfa_css_1.Percentage.of(0.75);\n        case \"semi-condensed\":\n            return alfa_css_1.Percentage.of(0.875);\n        case \"normal\":\n            return alfa_css_1.Percentage.of(1);\n        case \"semi-expanded\":\n            return alfa_css_1.Percentage.of(1.125);\n        case \"expanded\":\n            return alfa_css_1.Percentage.of(1.25);\n        case \"extra-expanded\":\n            return alfa_css_1.Percentage.of(1.5);\n        case \"ultra-expanded\":\n            return alfa_css_1.Percentage.of(2);\n    }\n}), {\n    inherits: true,\n});\n//# sourceMappingURL=font-stretch.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/font-stretch.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/font-style.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/font-style.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\n/**\n * {@link https://drafts.csswg.org/css-fonts/#font-style-prop}\n */\nexports[\"default\"] = longhand_1.Longhand.fromKeywords({ inherits: true }, \"normal\", \"italic\", \"oblique\");\n//# sourceMappingURL=font-style.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/font-style.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/font-variant-caps.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/font-variant-caps.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/font-variant-caps}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.fromKeywords({ inherits: true }, \"normal\", \"small-caps\", \"all-small-caps\", \"petite-caps\", \"all-petite-caps\", \"unicase\", \"titling-caps\");\n//# sourceMappingURL=font-variant-caps.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/font-variant-caps.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/font-variant-east-asian.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/font-variant-east-asian.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.parseWidth = exports.parseVariant = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst { either } = alfa_parser_1.Parser;\n/**\n * @internal\n */\nexports.parseVariant = alfa_css_1.Keyword.parse(\"jis78\", \"jis83\", \"jis90\", \"jis04\", \"simplified\", \"traditional\");\n/**\n * @internal\n */\nexports.parseWidth = alfa_css_1.Keyword.parse(\"proportional-width\", \"full-width\");\n/**\n * @internal\n */\nconst parseEastAsian = (input) => {\n    let variant;\n    let width;\n    let ruby;\n    while (true) {\n        for (const [remainder] of alfa_css_1.Token.parseWhitespace(input)) {\n            input = remainder;\n        }\n        if (variant === undefined) {\n            const result = (0, exports.parseVariant)(input);\n            if (result.isOk()) {\n                [input, variant] = result.get();\n                continue;\n            }\n        }\n        if (width === undefined) {\n            const result = (0, exports.parseWidth)(input);\n            if (result.isOk()) {\n                [input, width] = result.get();\n                continue;\n            }\n        }\n        if (ruby === undefined) {\n            const result = alfa_css_1.Keyword.parse(\"ruby\")(input);\n            if (result.isOk()) {\n                [input, ruby] = result.get();\n                continue;\n            }\n        }\n        break;\n    }\n    if (variant === undefined && width === undefined && ruby === undefined) {\n        return alfa_result_1.Err.of(\"At least one East Asian variant value must be provided\");\n    }\n    return alfa_result_1.Result.of([\n        input,\n        alfa_css_1.List.of([variant, width, ruby].filter((value) => value !== undefined), \" \"),\n    ]);\n};\nconst parse = either(alfa_css_1.Keyword.parse(\"normal\"), parseEastAsian);\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/font-variant-east-asian}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.of(alfa_css_1.Keyword.of(\"normal\"), parse, (numeric) => numeric, { inherits: true });\n//# sourceMappingURL=font-variant-east-asian.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/font-variant-east-asian.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/font-variant-ligatures.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/font-variant-ligatures.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.parseContextual = exports.parseHistorical = exports.parseDiscretionary = exports.parseCommon = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst { either } = alfa_parser_1.Parser;\n/**\n * @internal\n */\nexports.parseCommon = alfa_css_1.Keyword.parse(\"common-ligatures\", \"no-common-ligatures\");\n/**\n * @internal\n */\nexports.parseDiscretionary = alfa_css_1.Keyword.parse(\"discretionary-ligatures\", \"no-discretionary-ligatures\");\n/**\n * @internal\n */\nexports.parseHistorical = alfa_css_1.Keyword.parse(\"historical-ligatures\", \"no-historical-ligatures\");\n/**\n * @internal\n */\nexports.parseContextual = alfa_css_1.Keyword.parse(\"contextual\", \"no-contextual\");\n/**\n * @internal\n */\nconst parseLigature = (input) => {\n    let common;\n    let discretionary;\n    let historical;\n    let contextual;\n    while (true) {\n        for (const [remainder] of alfa_css_1.Token.parseWhitespace(input)) {\n            input = remainder;\n        }\n        if (common === undefined) {\n            const result = (0, exports.parseCommon)(input);\n            if (result.isOk()) {\n                [input, common] = result.get();\n                continue;\n            }\n        }\n        if (discretionary === undefined) {\n            const result = (0, exports.parseDiscretionary)(input);\n            if (result.isOk()) {\n                [input, discretionary] = result.get();\n                continue;\n            }\n        }\n        if (historical === undefined) {\n            const result = (0, exports.parseHistorical)(input);\n            if (result.isOk()) {\n                [input, historical] = result.get();\n                continue;\n            }\n        }\n        if (contextual === undefined) {\n            const result = (0, exports.parseContextual)(input);\n            if (result.isOk()) {\n                [input, contextual] = result.get();\n                continue;\n            }\n        }\n        break;\n    }\n    if (common === undefined &&\n        discretionary === undefined &&\n        historical === undefined &&\n        contextual === undefined) {\n        return alfa_result_1.Err.of(\"At least one ligature value must be provided\");\n    }\n    return alfa_result_1.Result.of([\n        input,\n        alfa_css_1.List.of([common, discretionary, historical, contextual].filter((value) => value !== undefined), \" \"),\n    ]);\n};\nconst parse = either(alfa_css_1.Keyword.parse(\"none\", \"normal\"), parseLigature);\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/font-variant-ligatures}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.of(alfa_css_1.Keyword.of(\"normal\"), parse, (ligatures) => ligatures, { inherits: true });\n//# sourceMappingURL=font-variant-ligatures.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/font-variant-ligatures.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/font-variant-numeric.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/font-variant-numeric.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.parseFraction = exports.parseSpacing = exports.parseFigure = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst { either } = alfa_parser_1.Parser;\n/**\n * @internal\n */\nexports.parseFigure = alfa_css_1.Keyword.parse(\"lining-nums\", \"oldstyle-nums\");\n/**\n * @internal\n */\nexports.parseSpacing = alfa_css_1.Keyword.parse(\"proportional-nums\", \"tabular-nums\");\n/**\n * @internal\n */\nexports.parseFraction = alfa_css_1.Keyword.parse(\"diagonal-fractions\", \"stacked-fractions\");\nconst parseNumeric = (input) => {\n    let figure;\n    let spacing;\n    let fraction;\n    let ordinal;\n    let slashed;\n    while (true) {\n        for (const [remainder] of alfa_css_1.Token.parseWhitespace(input)) {\n            input = remainder;\n        }\n        if (figure === undefined) {\n            const result = (0, exports.parseFigure)(input);\n            if (result.isOk()) {\n                [input, figure] = result.get();\n                continue;\n            }\n        }\n        if (spacing === undefined) {\n            const result = (0, exports.parseSpacing)(input);\n            if (result.isOk()) {\n                [input, spacing] = result.get();\n                continue;\n            }\n        }\n        if (fraction === undefined) {\n            const result = (0, exports.parseFraction)(input);\n            if (result.isOk()) {\n                [input, fraction] = result.get();\n                continue;\n            }\n        }\n        if (ordinal === undefined) {\n            const result = alfa_css_1.Keyword.parse(\"ordinal\")(input);\n            if (result.isOk()) {\n                [input, ordinal] = result.get();\n                continue;\n            }\n        }\n        if (slashed === undefined) {\n            const result = alfa_css_1.Keyword.parse(\"slashed-zero\")(input);\n            if (result.isOk()) {\n                [input, slashed] = result.get();\n                continue;\n            }\n        }\n        break;\n    }\n    if (figure === undefined &&\n        spacing === undefined &&\n        fraction === undefined &&\n        ordinal === undefined &&\n        slashed === undefined) {\n        return alfa_result_1.Err.of(\"At least one numeric value must be provided\");\n    }\n    return alfa_result_1.Result.of([\n        input,\n        alfa_css_1.List.of([figure, spacing, fraction, ordinal, slashed].filter((value) => value !== undefined), \" \"),\n    ]);\n};\nconst parse = either(alfa_css_1.Keyword.parse(\"normal\"), parseNumeric);\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/font-variant-numeric}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.of(alfa_css_1.Keyword.of(\"normal\"), parse, (numeric) => numeric, { inherits: true });\n//# sourceMappingURL=font-variant-numeric.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/font-variant-numeric.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/font-variant-position.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/font-variant-position.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/font-variant-position}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.fromKeywords({ inherits: true }, \"normal\", \"sub\", \"super\");\n//# sourceMappingURL=font-variant-position.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/font-variant-position.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/font-variant.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/font-variant.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.parse = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst shorthand_1 = __webpack_require__(/*! ../shorthand */ \"./node_modules/@siteimprove/alfa-style/src/shorthand.js\");\nconst font_variant_caps_1 = __webpack_require__(/*! ./font-variant-caps */ \"./node_modules/@siteimprove/alfa-style/src/property/font-variant-caps.js\");\nconst EastAsian = __webpack_require__(/*! ./font-variant-east-asian */ \"./node_modules/@siteimprove/alfa-style/src/property/font-variant-east-asian.js\");\nconst Ligatures = __webpack_require__(/*! ./font-variant-ligatures */ \"./node_modules/@siteimprove/alfa-style/src/property/font-variant-ligatures.js\");\nconst Numeric = __webpack_require__(/*! ./font-variant-numeric */ \"./node_modules/@siteimprove/alfa-style/src/property/font-variant-numeric.js\");\n/**\n * @internal\n */\nconst parse = (input) => {\n    /* Unfortunately, the various components of each longhand can be mixed, so\n     * we need to rewrite a parser and accept, e.g.\n     * font-variant: historical-ligatures diagonal-fractions no-common-ligatures ordinal\n     */\n    let caps;\n    let variant;\n    let width;\n    let ruby;\n    let common;\n    let discretionary;\n    let historical;\n    let contextual;\n    let figure;\n    let spacing;\n    let fraction;\n    let ordinal;\n    let slashed;\n    while (true) {\n        for (const [remainder] of alfa_css_1.Token.parseWhitespace(input)) {\n            input = remainder;\n        }\n        // -------------------------    Caps\n        if (caps === undefined) {\n            const result = font_variant_caps_1.default.parseBase(input);\n            if (result.isOk()) {\n                [input, caps] = result.get();\n                continue;\n            }\n        }\n        // -------------------------    East Asian\n        if (variant === undefined) {\n            const result = EastAsian.parseVariant(input);\n            if (result.isOk()) {\n                [input, variant] = result.get();\n                continue;\n            }\n        }\n        if (width === undefined) {\n            const result = EastAsian.parseWidth(input);\n            if (result.isOk()) {\n                [input, width] = result.get();\n                continue;\n            }\n        }\n        if (ruby === undefined) {\n            const result = alfa_css_1.Keyword.parse(\"ruby\")(input);\n            if (result.isOk()) {\n                [input, ruby] = result.get();\n                continue;\n            }\n        }\n        // -------------------------    Ligatures\n        if (common === undefined) {\n            const result = Ligatures.parseCommon(input);\n            if (result.isOk()) {\n                [input, common] = result.get();\n                continue;\n            }\n        }\n        if (discretionary === undefined) {\n            const result = Ligatures.parseDiscretionary(input);\n            if (result.isOk()) {\n                [input, discretionary] = result.get();\n                continue;\n            }\n        }\n        if (historical === undefined) {\n            const result = Ligatures.parseHistorical(input);\n            if (result.isOk()) {\n                [input, historical] = result.get();\n                continue;\n            }\n        }\n        if (contextual === undefined) {\n            const result = Ligatures.parseContextual(input);\n            if (result.isOk()) {\n                [input, contextual] = result.get();\n                continue;\n            }\n        }\n        // -------------------------    Numeric\n        if (figure === undefined) {\n            const result = Numeric.parseFigure(input);\n            if (result.isOk()) {\n                [input, figure] = result.get();\n                continue;\n            }\n        }\n        if (spacing === undefined) {\n            const result = Numeric.parseSpacing(input);\n            if (result.isOk()) {\n                [input, spacing] = result.get();\n                continue;\n            }\n        }\n        if (fraction === undefined) {\n            const result = Numeric.parseFraction(input);\n            if (result.isOk()) {\n                [input, fraction] = result.get();\n                continue;\n            }\n        }\n        if (ordinal === undefined) {\n            const result = alfa_css_1.Keyword.parse(\"ordinal\")(input);\n            if (result.isOk()) {\n                [input, ordinal] = result.get();\n                continue;\n            }\n        }\n        if (slashed === undefined) {\n            const result = alfa_css_1.Keyword.parse(\"slashed-zero\")(input);\n            if (result.isOk()) {\n                [input, slashed] = result.get();\n                continue;\n            }\n        }\n        break;\n    }\n    if (caps === undefined &&\n        variant === undefined &&\n        width === undefined &&\n        ruby === undefined &&\n        common === undefined &&\n        discretionary === undefined &&\n        historical === undefined &&\n        contextual === undefined &&\n        figure === undefined &&\n        spacing === undefined &&\n        fraction === undefined &&\n        ordinal === undefined &&\n        slashed === undefined) {\n        return alfa_result_1.Err.of(\"At least one Font variant value must be provided\");\n    }\n    function list(...values) {\n        // filter doesn't narrow so we need to do it manually\n        const cleaned = values.filter((value) => value !== undefined);\n        return cleaned.length > 0 ? alfa_css_1.List.of(cleaned, \" \") : alfa_css_1.Keyword.of(\"initial\");\n    }\n    return alfa_result_1.Result.of([\n        input,\n        [\n            [\"font-variant-caps\", caps ?? alfa_css_1.Keyword.of(\"initial\")],\n            [\n                \"font-variant-east-asian\",\n                list(variant, width, ruby),\n            ],\n            [\n                \"font-variant-ligatures\",\n                list(common, discretionary, historical, contextual),\n            ],\n            [\n                \"font-variant-numeric\",\n                list(figure, spacing, fraction, ordinal, slashed),\n            ],\n        ],\n    ]);\n};\nexports.parse = parse;\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/font-variant}\n * @internal\n */\nexports[\"default\"] = shorthand_1.Shorthand.of([\n    \"font-variant-caps\",\n    \"font-variant-east-asian\",\n    \"font-variant-ligatures\",\n    \"font-variant-numeric\",\n], exports.parse);\n//# sourceMappingURL=font-variant.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/font-variant.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/font-weight.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/font-weight.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst { either } = alfa_parser_1.Parser;\nconst parse = either(alfa_css_1.Number.parse, alfa_css_1.Keyword.parse(\"normal\", \"bold\", \"bolder\", \"lighter\"));\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.of(alfa_css_1.Number.of(400), parse, (fontWeight, style) => fontWeight.map((fontWeight) => {\n    if (alfa_css_1.Number.isNumber(fontWeight)) {\n        return fontWeight.resolve();\n    }\n    switch (fontWeight.value) {\n        case \"normal\":\n            return alfa_css_1.Number.of(400);\n        case \"bold\":\n            return alfa_css_1.Number.of(700);\n        // https://drafts.csswg.org/css-fonts/#relative-weights\n        default: {\n            const bolder = fontWeight.value === \"bolder\";\n            const parent = style.parent.computed(\"font-weight\").value;\n            if (parent.value < 100) {\n                return alfa_css_1.Number.of(bolder ? 400 : parent.value);\n            }\n            if (parent.value < 350) {\n                return alfa_css_1.Number.of(bolder ? 400 : 100);\n            }\n            if (parent.value < 550) {\n                return alfa_css_1.Number.of(bolder ? 700 : 100);\n            }\n            if (parent.value < 750) {\n                return alfa_css_1.Number.of(bolder ? 900 : 400);\n            }\n            if (parent.value < 900) {\n                return alfa_css_1.Number.of(bolder ? 900 : 700);\n            }\n            return alfa_css_1.Number.of(bolder ? parent.value : 700);\n        }\n    }\n}), {\n    inherits: true,\n});\n//# sourceMappingURL=font-weight.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/font-weight.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/font.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/font.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst shorthand_1 = __webpack_require__(/*! ../shorthand */ \"./node_modules/@siteimprove/alfa-style/src/shorthand.js\");\nconst line_height_1 = __webpack_require__(/*! ./line-height */ \"./node_modules/@siteimprove/alfa-style/src/property/line-height.js\");\nconst font_family_1 = __webpack_require__(/*! ./font-family */ \"./node_modules/@siteimprove/alfa-style/src/property/font-family.js\");\nconst font_size_1 = __webpack_require__(/*! ./font-size */ \"./node_modules/@siteimprove/alfa-style/src/property/font-size.js\");\n// Only keyword stretch are accepted in font, so we need to import the correct parser\nconst Stretch = __webpack_require__(/*! ./font-stretch */ \"./node_modules/@siteimprove/alfa-style/src/property/font-stretch.js\");\nconst font_style_1 = __webpack_require__(/*! ./font-style */ \"./node_modules/@siteimprove/alfa-style/src/property/font-style.js\");\nconst font_weight_1 = __webpack_require__(/*! ./font-weight */ \"./node_modules/@siteimprove/alfa-style/src/property/font-weight.js\");\nconst { map, option, pair, right, delimited } = alfa_parser_1.Parser;\n// font may only set font-variant-caps to small-caps, but setting font\n// does reset all font-variant-* longhand to initial value (this is good!)\nconst parsePrelude = (input) => {\n    let style;\n    let variant;\n    let weight;\n    let stretch;\n    while (true) {\n        for (const [remainder] of alfa_css_1.Token.parseWhitespace(input)) {\n            input = remainder;\n        }\n        if (style === undefined) {\n            const result = font_style_1.default.parseBase(input);\n            if (result.isOk()) {\n                [input, style] = result.get();\n                continue;\n            }\n        }\n        if (variant === undefined) {\n            const result = alfa_css_1.Keyword.parse(\"normal\", \"small-caps\")(input);\n            if (result.isOk()) {\n                [input, variant] = result.get();\n                continue;\n            }\n        }\n        if (weight === undefined) {\n            const result = font_weight_1.default.parseBase(input);\n            if (result.isOk()) {\n                [input, weight] = result.get();\n                continue;\n            }\n        }\n        if (stretch === undefined) {\n            const result = Stretch.parseAbsolute(input);\n            if (result.isOk()) {\n                [input, stretch] = result.get();\n                continue;\n            }\n        }\n        break;\n    }\n    return alfa_result_1.Result.of([\n        input,\n        [\n            [\"font-stretch\", stretch ?? alfa_css_1.Keyword.of(\"initial\")],\n            [\"font-style\", style ?? alfa_css_1.Keyword.of(\"initial\")],\n            [\"font-variant-caps\", variant ?? alfa_css_1.Keyword.of(\"initial\")],\n            [\"font-weight\", weight ?? alfa_css_1.Keyword.of(\"initial\")],\n        ],\n    ]);\n};\nconst parse = pair(parsePrelude, pair(delimited(option(alfa_css_1.Token.parseWhitespace), font_size_1.default.parseBase), pair(option(right(delimited(option(alfa_css_1.Token.parseWhitespace), alfa_css_1.Token.parseDelim(\"/\")), line_height_1.default.parseBase)), delimited(option(alfa_css_1.Token.parseWhitespace), font_family_1.default.parseBase))));\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/font}\n * @internal\n */\nexports[\"default\"] = shorthand_1.Shorthand.of([\n    \"font-family\",\n    \"font-size\",\n    \"font-stretch\",\n    \"font-style\",\n    \"font-variant-caps\",\n    \"font-variant-east-asian\",\n    \"font-variant-ligatures\",\n    \"font-variant-numeric\",\n    \"font-variant-position\",\n    \"font-weight\",\n    \"line-height\",\n], map(parse, ([prelude, [size, [lineHeight, family]]]) => [\n    ...prelude,\n    [\"font-size\", size],\n    [\"line-height\", lineHeight.getOr(alfa_css_1.Keyword.of(\"initial\"))],\n    [\"font-family\", family],\n]));\n//# sourceMappingURL=font.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/font.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/height.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/height.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst alfa_selective_1 = __webpack_require__(/*! @siteimprove/alfa-selective */ \"./node_modules/@siteimprove/alfa-selective/src/index.js\");\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst resolver_1 = __webpack_require__(/*! ../resolver */ \"./node_modules/@siteimprove/alfa-style/src/resolver.js\");\nconst { either } = alfa_parser_1.Parser;\nconst parse = either(alfa_css_1.Keyword.parse(\"auto\"), alfa_css_1.LengthPercentage.parse);\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/height}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.of(alfa_css_1.Keyword.of(\"auto\"), parse, (value, style) => value.map((height) => alfa_selective_1.Selective.of(height)\n    .if(alfa_css_1.LengthPercentage.isLengthPercentage, alfa_css_1.LengthPercentage.partiallyResolve(resolver_1.Resolver.length(style)))\n    .get()));\n//# sourceMappingURL=height.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/height.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/inset-block-end.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/inset-block-end.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst top_1 = __webpack_require__(/*! ./top */ \"./node_modules/@siteimprove/alfa-style/src/property/top.js\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/inset-block-end}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.extend(top_1.default);\n//# sourceMappingURL=inset-block-end.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/inset-block-end.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/inset-block-start.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/inset-block-start.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst top_1 = __webpack_require__(/*! ./top */ \"./node_modules/@siteimprove/alfa-style/src/property/top.js\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/inset-block-start}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.extend(top_1.default);\n//# sourceMappingURL=inset-block-start.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/inset-block-start.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/inset-block.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/inset-block.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst shorthand_1 = __webpack_require__(/*! ../shorthand */ \"./node_modules/@siteimprove/alfa-style/src/shorthand.js\");\nconst Top = __webpack_require__(/*! ./top */ \"./node_modules/@siteimprove/alfa-style/src/property/top.js\");\nconst { takeBetween, map, delimited, option } = alfa_parser_1.Parser;\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/inset-block}\n * @internal\n */\nexports[\"default\"] = shorthand_1.Shorthand.of([\"inset-block-start\", \"inset-block-end\"], map(takeBetween(delimited(option(alfa_css_1.Token.parseWhitespace), Top.parse), 1, 2), ([start, end = start]) => [\n    [\"inset-block-start\", start],\n    [\"inset-block-end\", end],\n]));\n//# sourceMappingURL=inset-block.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/inset-block.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/inset-inline-end.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/inset-inline-end.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst top_1 = __webpack_require__(/*! ./top */ \"./node_modules/@siteimprove/alfa-style/src/property/top.js\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/inset-inline-end}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.extend(top_1.default);\n//# sourceMappingURL=inset-inline-end.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/inset-inline-end.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/inset-inline-start.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/inset-inline-start.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst top_1 = __webpack_require__(/*! ./top */ \"./node_modules/@siteimprove/alfa-style/src/property/top.js\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/inset-inline-start}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.extend(top_1.default);\n//# sourceMappingURL=inset-inline-start.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/inset-inline-start.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/inset-inline.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/inset-inline.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst shorthand_1 = __webpack_require__(/*! ../shorthand */ \"./node_modules/@siteimprove/alfa-style/src/shorthand.js\");\nconst Top = __webpack_require__(/*! ./top */ \"./node_modules/@siteimprove/alfa-style/src/property/top.js\");\nconst { takeBetween, map, delimited, option } = alfa_parser_1.Parser;\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/inset-inline}\n * @internal\n */\nexports[\"default\"] = shorthand_1.Shorthand.of([\"inset-inline-start\", \"inset-inline-end\"], map(takeBetween(delimited(option(alfa_css_1.Token.parseWhitespace), Top.parse), 1, 2), ([start, end = start]) => [\n    [\"inset-inline-start\", start],\n    [\"inset-inline-end\", end],\n]));\n//# sourceMappingURL=inset-inline.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/inset-inline.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/inset.js":
/*!********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/inset.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst shorthand_1 = __webpack_require__(/*! ../shorthand */ \"./node_modules/@siteimprove/alfa-style/src/shorthand.js\");\nconst Top = __webpack_require__(/*! ./top */ \"./node_modules/@siteimprove/alfa-style/src/property/top.js\");\nconst { map, option, delimited, takeBetween } = alfa_parser_1.Parser;\nconst parse = takeBetween(delimited(option(alfa_css_1.Token.parseWhitespace), Top.parse), 1, 4);\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/inset}\n * @internal\n */\nexports[\"default\"] = shorthand_1.Shorthand.of([\"top\", \"right\", \"bottom\", \"left\"], map(parse, ([top, right = top, bottom = top, left = right]) => [\n    [\"top\", top],\n    [\"right\", right],\n    [\"bottom\", bottom],\n    [\"left\", left],\n]));\n//# sourceMappingURL=inset.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/inset.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/left.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/left.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst top_1 = __webpack_require__(/*! ./top */ \"./node_modules/@siteimprove/alfa-style/src/property/top.js\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/left}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.extend(top_1.default);\n//# sourceMappingURL=left.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/left.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/letter-spacing.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/letter-spacing.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst alfa_selective_1 = __webpack_require__(/*! @siteimprove/alfa-selective */ \"./node_modules/@siteimprove/alfa-selective/src/index.js\");\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst resolver_1 = __webpack_require__(/*! ../resolver */ \"./node_modules/@siteimprove/alfa-style/src/resolver.js\");\nconst { either } = alfa_parser_1.Parser;\nconst parse = either(alfa_css_1.Keyword.parse(\"normal\"), alfa_css_1.Length.parse);\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/letter-spacing}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.of(alfa_css_1.Length.of(0, \"px\"), parse, (value, style) => value.map((spacing) => alfa_selective_1.Selective.of(spacing)\n    .if(alfa_css_1.Length.isLength, (spacing) => spacing.resolve(resolver_1.Resolver.length(style)))\n    .else(() => alfa_css_1.Length.of(0, \"px\"))\n    .get()), {\n    inherits: true,\n});\n//# sourceMappingURL=letter-spacing.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/letter-spacing.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/line-height.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/line-height.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst resolver_1 = __webpack_require__(/*! ../resolver */ \"./node_modules/@siteimprove/alfa-style/src/resolver.js\");\nconst alfa_selective_1 = __webpack_require__(/*! @siteimprove/alfa-selective */ \"./node_modules/@siteimprove/alfa-selective/src/index.js\");\nconst { either } = alfa_parser_1.Parser;\nconst parse = either(alfa_css_1.Keyword.parse(\"normal\"), alfa_css_1.Number.parse, alfa_css_1.LengthPercentage.parse);\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/line-height}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.of(alfa_css_1.Keyword.of(\"normal\"), parse, (value, style) => value.map((height) => {\n    // We need the type assertion to help TS break a circular type reference:\n    // this -> style.computed -> Longhands.Name -> Longhands.longhands -> this.\n    const fontSize = style.computed(\"font-size\").value;\n    return (alfa_selective_1.Selective.of(height)\n        .if(alfa_css_1.LengthPercentage.isLengthPercentage, alfa_css_1.LengthPercentage.resolve(resolver_1.Resolver.lengthPercentage(fontSize, style)))\n        .if(alfa_css_1.Number.isNumber, (value) => value.resolve())\n        // Keywords are left untouched\n        .get());\n}), {\n    inherits: true,\n});\n//# sourceMappingURL=line-height.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/line-height.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/margin-bottom.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/margin-bottom.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst margin_top_1 = __webpack_require__(/*! ./margin-top */ \"./node_modules/@siteimprove/alfa-style/src/property/margin-top.js\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/margin-bottom}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.extend(margin_top_1.default);\n//# sourceMappingURL=margin-bottom.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/margin-bottom.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/margin-left.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/margin-left.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst margin_top_1 = __webpack_require__(/*! ./margin-top */ \"./node_modules/@siteimprove/alfa-style/src/property/margin-top.js\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/margin-left}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.extend(margin_top_1.default);\n//# sourceMappingURL=margin-left.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/margin-left.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/margin-right.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/margin-right.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst margin_top_1 = __webpack_require__(/*! ./margin-top */ \"./node_modules/@siteimprove/alfa-style/src/property/margin-top.js\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/margin-right}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.extend(margin_top_1.default);\n//# sourceMappingURL=margin-right.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/margin-right.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/margin-top.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/margin-top.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.parse = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst resolver_1 = __webpack_require__(/*! ../resolver */ \"./node_modules/@siteimprove/alfa-style/src/resolver.js\");\nconst { either } = alfa_parser_1.Parser;\n/**\n * @internal\n */\nexports.parse = either(alfa_css_1.Keyword.parse(\"auto\"), alfa_css_1.Length.parse, alfa_css_1.Percentage.parse);\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/margin-top}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.of(alfa_css_1.Length.of(0, \"px\"), exports.parse, (marginTop, style) => marginTop.map((top) => {\n    switch (top.type) {\n        case \"keyword\":\n        case \"percentage\":\n            return top;\n        case \"length\":\n            return top.resolve(resolver_1.Resolver.length(style));\n    }\n}));\n//# sourceMappingURL=margin-top.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/margin-top.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/margin.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/margin.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst shorthand_1 = __webpack_require__(/*! ../shorthand */ \"./node_modules/@siteimprove/alfa-style/src/shorthand.js\");\nconst Top = __webpack_require__(/*! ./margin-top */ \"./node_modules/@siteimprove/alfa-style/src/property/margin-top.js\");\nconst { map, option, delimited, takeBetween } = alfa_parser_1.Parser;\nconst parse = takeBetween(delimited(option(alfa_css_1.Token.parseWhitespace), Top.parse), 1, 4);\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/margin}\n *\n * @internal\n */\nexports[\"default\"] = shorthand_1.Shorthand.of([\"margin-top\", \"margin-right\", \"margin-bottom\", \"margin-left\"], map(parse, ([top, right = top, bottom = top, left = right]) => [\n    [\"margin-top\", top],\n    [\"margin-right\", right],\n    [\"margin-bottom\", bottom],\n    [\"margin-left\", left],\n]));\n//# sourceMappingURL=margin.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/margin.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/min-height.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/min-height.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst resolver_1 = __webpack_require__(/*! ../resolver */ \"./node_modules/@siteimprove/alfa-style/src/resolver.js\");\nconst { either } = alfa_parser_1.Parser;\nconst parse = either(alfa_css_1.Keyword.parse(\"auto\", \"fit-content\", \"max-content\", \"min-content\"), either(alfa_css_1.Length.parse, alfa_css_1.Percentage.parse));\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/min-height}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.of(alfa_css_1.Keyword.of(\"auto\"), parse, (value, style) => value.map((height) => {\n    switch (height.type) {\n        case \"keyword\":\n        case \"percentage\":\n            return height;\n        case \"length\":\n            return height.resolve(resolver_1.Resolver.length(style));\n    }\n}));\n//# sourceMappingURL=min-height.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/min-height.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/min-width.js":
/*!************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/min-width.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst min_height_1 = __webpack_require__(/*! ./min-height */ \"./node_modules/@siteimprove/alfa-style/src/property/min-height.js\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/min-width}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.extend(min_height_1.default);\n//# sourceMappingURL=min-width.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/min-width.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/opacity.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/opacity.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_math_1 = __webpack_require__(/*! @siteimprove/alfa-math */ \"./node_modules/@siteimprove/alfa-math/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst { either } = alfa_parser_1.Parser;\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/opacity}\n */\nexports[\"default\"] = longhand_1.Longhand.of(alfa_css_1.Number.of(1), either(alfa_css_1.Number.parse, (alfa_css_1.Percentage.parse)), (value) => value.map((opacity) => alfa_css_1.Number.of(alfa_math_1.Real.clamp(opacity.resolve().value, 0, 1))), { inherits: true });\n//# sourceMappingURL=opacity.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/opacity.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/outline-color.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/outline-color.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/outline-color}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.of(alfa_css_1.Keyword.of(\"invert\"), alfa_css_1.Color.parse, (value) => value.resolve());\n//# sourceMappingURL=outline-color.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/outline-color.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/outline-offset.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/outline-offset.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst resolver_1 = __webpack_require__(/*! ../resolver */ \"./node_modules/@siteimprove/alfa-style/src/resolver.js\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/outline-offset}\n */\nexports[\"default\"] = longhand_1.Longhand.of(alfa_css_1.Length.of(0, \"px\"), alfa_css_1.Length.parse, (value, style) => value.resolve(resolver_1.Resolver.length(style)));\n//# sourceMappingURL=outline-offset.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/outline-offset.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/outline-style.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/outline-style.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/outline-style}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.fromKeywords({ inherits: false }, \"none\", \"auto\", \"dotted\", \"dashed\", \"solid\", \"double\", \"groove\", \"ridge\", \"inset\", \"outset\");\n//# sourceMappingURL=outline-style.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/outline-style.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/outline-width.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/outline-width.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst value_1 = __webpack_require__(/*! ../value */ \"./node_modules/@siteimprove/alfa-style/src/value.js\");\nconst resolver_1 = __webpack_require__(/*! ../resolver */ \"./node_modules/@siteimprove/alfa-style/src/resolver.js\");\nconst { either } = alfa_parser_1.Parser;\nconst parse = either(alfa_css_1.Keyword.parse(\"thin\", \"medium\", \"thick\"), alfa_css_1.Length.parse);\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/outline-width}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.of(alfa_css_1.Length.of(3, \"px\"), parse, (value, style) => {\n    if (style.computed(\"outline-style\").some(({ value }) => value === \"none\")) {\n        return value_1.Value.of(alfa_css_1.Length.of(0, \"px\"));\n    }\n    return value.map((width) => {\n        if (alfa_css_1.Length.isLength(width)) {\n            return width.resolve(resolver_1.Resolver.length(style));\n        }\n        // Must be a Keyword\n        switch (width.value) {\n            case \"thin\":\n                return alfa_css_1.Length.of(1, \"px\");\n            case \"medium\":\n                return alfa_css_1.Length.of(3, \"px\");\n            case \"thick\":\n                return alfa_css_1.Length.of(5, \"px\");\n        }\n    });\n});\n//# sourceMappingURL=outline-width.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/outline-width.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/outline.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/outline.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst shorthand_1 = __webpack_require__(/*! ../shorthand */ \"./node_modules/@siteimprove/alfa-style/src/shorthand.js\");\nconst outline_color_1 = __webpack_require__(/*! ./outline-color */ \"./node_modules/@siteimprove/alfa-style/src/property/outline-color.js\");\nconst outline_style_1 = __webpack_require__(/*! ./outline-style */ \"./node_modules/@siteimprove/alfa-style/src/property/outline-style.js\");\nconst outline_width_1 = __webpack_require__(/*! ./outline-width */ \"./node_modules/@siteimprove/alfa-style/src/property/outline-width.js\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/outline}\n * @internal\n */\nexports[\"default\"] = shorthand_1.Shorthand.of([\"outline-width\", \"outline-style\", \"outline-color\"], (input) => {\n    let width;\n    let style;\n    let color;\n    while (true) {\n        for (const [remainder] of alfa_css_1.Token.parseWhitespace(input)) {\n            input = remainder;\n        }\n        if (width === undefined) {\n            const result = outline_width_1.default.parseBase(input);\n            if (result.isOk()) {\n                [input, width] = result.get();\n                continue;\n            }\n        }\n        if (style === undefined) {\n            const result = outline_style_1.default.parseBase(input);\n            if (result.isOk()) {\n                [input, style] = result.get();\n                continue;\n            }\n        }\n        if (color === undefined) {\n            const result = outline_color_1.default.parseBase(input);\n            if (result.isOk()) {\n                [input, color] = result.get();\n                continue;\n            }\n        }\n        break;\n    }\n    if (width === undefined && style === undefined && color === undefined) {\n        return alfa_result_1.Err.of(`Expected one of width, style, or color`);\n    }\n    return alfa_result_1.Result.of([\n        input,\n        [\n            [\"outline-width\", width ?? alfa_css_1.Keyword.of(\"initial\")],\n            [\"outline-style\", style ?? alfa_css_1.Keyword.of(\"initial\")],\n            [\"outline-color\", color ?? alfa_css_1.Keyword.of(\"initial\")],\n        ],\n    ]);\n});\n//# sourceMappingURL=outline.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/outline.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/overflow-x.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/overflow-x.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst base = longhand_1.Longhand.fromKeywords({ inherits: false }, \"visible\", \"hidden\", \"clip\", \"scroll\", \"auto\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/overflow-x}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.extend(base, {\n    compute: (overflowX, style) => overflowX.map((x) => {\n        if (x.value !== \"visible\" && x.value !== \"clip\") {\n            return x;\n        }\n        const y = style.specified(\"overflow-y\").value;\n        if (y.value === \"visible\" || y.value === \"clip\") {\n            return x;\n        }\n        return x.value === \"visible\" ? alfa_css_1.Keyword.of(\"auto\") : alfa_css_1.Keyword.of(\"hidden\");\n    }),\n});\n//# sourceMappingURL=overflow-x.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/overflow-x.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/overflow-y.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/overflow-y.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst overflow_x_1 = __webpack_require__(/*! ./overflow-x */ \"./node_modules/@siteimprove/alfa-style/src/property/overflow-x.js\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/overflow-y}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.extend(overflow_x_1.default, {\n    compute: (overflowY, style) => overflowY.map((y) => {\n        if (y.value !== \"visible\" && y.value !== \"clip\") {\n            return y;\n        }\n        const x = style.specified(\"overflow-x\").value;\n        if (x.value === \"visible\" || x.value === \"clip\") {\n            return y;\n        }\n        return y.value === \"visible\" ? alfa_css_1.Keyword.of(\"auto\") : alfa_css_1.Keyword.of(\"hidden\");\n    }),\n});\n//# sourceMappingURL=overflow-y.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/overflow-y.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/overflow.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/overflow.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst shorthand_1 = __webpack_require__(/*! ../shorthand */ \"./node_modules/@siteimprove/alfa-style/src/shorthand.js\");\nconst overflow_x_1 = __webpack_require__(/*! ./overflow-x */ \"./node_modules/@siteimprove/alfa-style/src/property/overflow-x.js\");\nconst overflow_y_1 = __webpack_require__(/*! ./overflow-y */ \"./node_modules/@siteimprove/alfa-style/src/property/overflow-y.js\");\nconst { map, option, pair, delimited } = alfa_parser_1.Parser;\nconst parse = pair(overflow_x_1.default.parseBase, option(delimited(option(alfa_css_1.Token.parseWhitespace), overflow_y_1.default.parseBase)));\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/overflow}\n *\n * @internal\n */\nexports[\"default\"] = shorthand_1.Shorthand.of([\"overflow-x\", \"overflow-y\"], map(parse, (result) => {\n    const [x, y] = result;\n    return [\n        [\"overflow-x\", x],\n        [\"overflow-y\", y.getOr(x)],\n    ];\n}));\n//# sourceMappingURL=overflow.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/overflow.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/position.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/position.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/position}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.fromKeywords({ inherits: false }, \"static\", \"relative\", \"absolute\", \"sticky\", \"fixed\");\n//# sourceMappingURL=position.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/position.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/right.js":
/*!********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/right.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst top_1 = __webpack_require__(/*! ./top */ \"./node_modules/@siteimprove/alfa-style/src/property/top.js\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/right}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.extend(top_1.default);\n//# sourceMappingURL=right.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/right.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/rotate.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/rotate.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst { either, left, map, mapResult, option, pair, separatedList } = alfa_parser_1.Parser;\nfunction takeThree(array) {\n    return array.length === 3\n        ? alfa_result_1.Ok.of(array)\n        : alfa_result_1.Err.of(\"Wrong number of coordinates in rotate axis\");\n}\n// We cannot reuse Rotate.parse which includes the rotation function.\n// We'll probably need to refactor these a bit, together with adding translate\n// and scale properties.\nconst parseAxis = either(alfa_css_1.Keyword.parse(\"x\"), alfa_css_1.Keyword.parse(\"y\"), alfa_css_1.Keyword.parse(\"z\"), \n// We need to not consume the last whitespace which is expected by parseRotate,\n// so we can hardly use Parser.take.\nmapResult(separatedList(alfa_css_1.Number.parse, alfa_css_1.Token.parseWhitespace), takeThree));\n/**\n * {@link https://en.wikipedia.org/wiki/Kronecker_delta}\n */\nfunction delta(keyword, data) {\n    return keyword.value === data ? 1 : 0;\n}\nconst parseRotate = map(pair(option(left(parseAxis, alfa_css_1.Token.parseWhitespace)), alfa_css_1.Angle.parse), ([axis, angle]) => {\n    for (const value of axis) {\n        if (alfa_css_1.Keyword.isKeyword(value)) {\n            return alfa_css_1.Rotate.of(alfa_css_1.Number.of(delta(value, \"x\")), alfa_css_1.Number.of(delta(value, \"y\")), alfa_css_1.Number.of(delta(value, \"z\")), angle);\n        }\n        return alfa_css_1.Rotate.of(value[0], value[1], value[2], angle);\n    }\n    // No axis was provided, default is to rotate around z axis.\n    return alfa_css_1.Rotate.of(alfa_css_1.Number.of(0), alfa_css_1.Number.of(0), alfa_css_1.Number.of(1), angle);\n});\nconst parse = either(alfa_css_1.Keyword.parse(\"none\"), parseRotate);\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/rotate}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.of(alfa_css_1.Keyword.of(\"none\"), parse, (rotate) => rotate);\n//# sourceMappingURL=rotate.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/rotate.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/text-align.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/text-align.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/text-align}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.fromKeywords({ inherits: true }, \"start\", \"end\", \"left\", \"right\", \"center\", \"justify\");\n//# sourceMappingURL=text-align.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/text-align.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/text-decoration-color.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/text-decoration-color.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-color}\n *\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.of(alfa_css_1.Color.current, alfa_css_1.Color.parse, (value) => value.resolve());\n//# sourceMappingURL=text-decoration-color.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/text-decoration-color.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/text-decoration-line.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/text-decoration-line.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst { either } = alfa_parser_1.Parser;\nconst parse = either(alfa_css_1.Keyword.parse(\"none\"), (input) => {\n    const keywords = [];\n    while (true) {\n        for (const [remainder] of alfa_css_1.Token.parseWhitespace(input)) {\n            input = remainder;\n        }\n        const result = alfa_css_1.Keyword.parse(\"underline\", \"overline\", \"line-through\", \"blink\")(input);\n        if (result.isOk()) {\n            const [remainder, value] = result.get();\n            if (keywords.every((keyword) => !keyword.equals(value))) {\n                keywords.push(value);\n                input = remainder;\n                continue;\n            }\n        }\n        break;\n    }\n    if (keywords.length === 0) {\n        return alfa_result_1.Err.of(`Expected one of underline, overline, line-through, or blink`);\n    }\n    return alfa_result_1.Result.of([input, alfa_css_1.List.of(keywords)]);\n});\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-line}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.of(alfa_css_1.Keyword.of(\"none\"), parse, (textDecorationLine) => textDecorationLine);\n//# sourceMappingURL=text-decoration-line.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/text-decoration-line.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/text-decoration-style.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/text-decoration-style.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-style}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.fromKeywords({ inherits: false }, \"solid\", \"double\", \"dotted\", \"dashed\", \"wavy\");\n//# sourceMappingURL=text-decoration-style.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/text-decoration-style.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/text-decoration-thickness.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/text-decoration-thickness.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst resolver_1 = __webpack_require__(/*! ../resolver */ \"./node_modules/@siteimprove/alfa-style/src/resolver.js\");\nconst { either } = alfa_parser_1.Parser;\nconst parse = either(alfa_css_1.Keyword.parse(\"auto\", \"from-font\"), alfa_css_1.LengthPercentage.parse);\nconst longhand = longhand_1.Longhand.of(alfa_css_1.Keyword.of(\"auto\"), parse, (value, style) => value.resolve(resolver_1.Resolver.lengthPercentage(style.computed(\"font-size\").value, style)));\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-thickness}\n * @internal\n */\nexports[\"default\"] = longhand;\n//# sourceMappingURL=text-decoration-thickness.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/text-decoration-thickness.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/text-decoration.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/text-decoration.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst shorthand_1 = __webpack_require__(/*! ../shorthand */ \"./node_modules/@siteimprove/alfa-style/src/shorthand.js\");\nconst text_decoration_color_1 = __webpack_require__(/*! ./text-decoration-color */ \"./node_modules/@siteimprove/alfa-style/src/property/text-decoration-color.js\");\nconst text_decoration_line_1 = __webpack_require__(/*! ./text-decoration-line */ \"./node_modules/@siteimprove/alfa-style/src/property/text-decoration-line.js\");\nconst text_decoration_style_1 = __webpack_require__(/*! ./text-decoration-style */ \"./node_modules/@siteimprove/alfa-style/src/property/text-decoration-style.js\");\nconst text_decoration_thickness_1 = __webpack_require__(/*! ./text-decoration-thickness */ \"./node_modules/@siteimprove/alfa-style/src/property/text-decoration-thickness.js\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration}\n * @internal\n */\nexports[\"default\"] = shorthand_1.Shorthand.of([\n    \"text-decoration-line\",\n    \"text-decoration-style\",\n    \"text-decoration-color\",\n    \"text-decoration-thickness\",\n], (input) => {\n    let line;\n    let style;\n    let color;\n    let thickness;\n    while (true) {\n        for (const [remainder] of alfa_css_1.Token.parseWhitespace(input)) {\n            input = remainder;\n        }\n        if (line === undefined) {\n            const result = text_decoration_line_1.default.parseBase(input);\n            if (result.isOk()) {\n                [input, line] = result.get();\n                continue;\n            }\n        }\n        if (style === undefined) {\n            const result = text_decoration_style_1.default.parseBase(input);\n            if (result.isOk()) {\n                [input, style] = result.get();\n                continue;\n            }\n        }\n        if (color === undefined) {\n            const result = text_decoration_color_1.default.parseBase(input);\n            if (result.isOk()) {\n                [input, color] = result.get();\n                continue;\n            }\n        }\n        if (thickness === undefined) {\n            const result = text_decoration_thickness_1.default.parseBase(input);\n            if (result.isOk()) {\n                [input, thickness] = result.get();\n                continue;\n            }\n        }\n        break;\n    }\n    if (line === undefined &&\n        style === undefined &&\n        color === undefined &&\n        thickness === undefined) {\n        return alfa_result_1.Err.of(`Expected one of line, style, color, or thickness`);\n    }\n    return alfa_result_1.Result.of([\n        input,\n        [\n            [\"text-decoration-line\", line ?? alfa_css_1.Keyword.of(\"initial\")],\n            [\"text-decoration-style\", style ?? alfa_css_1.Keyword.of(\"initial\")],\n            [\"text-decoration-color\", color ?? alfa_css_1.Keyword.of(\"initial\")],\n            [\"text-decoration-thickness\", thickness ?? alfa_css_1.Keyword.of(\"initial\")],\n        ],\n    ]);\n});\n//# sourceMappingURL=text-decoration.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/text-decoration.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/text-indent.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/text-indent.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst resolver_1 = __webpack_require__(/*! ../resolver */ \"./node_modules/@siteimprove/alfa-style/src/resolver.js\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/text-indent}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.of(alfa_css_1.Length.of(0, \"px\"), alfa_css_1.LengthPercentage.parse, (textIndent, style) => textIndent.map(alfa_css_1.LengthPercentage.partiallyResolve(resolver_1.Resolver.length(style))), { inherits: true });\n//# sourceMappingURL=text-indent.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/text-indent.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/text-overflow.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/text-overflow.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/text-overflow}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.fromKeywords({ inherits: false }, \"clip\", \"ellipsis\");\n//# sourceMappingURL=text-overflow.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/text-overflow.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/text-shadow.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/text-shadow.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst resolver_1 = __webpack_require__(/*! ../resolver */ \"./node_modules/@siteimprove/alfa-style/src/resolver.js\");\nconst { either } = alfa_parser_1.Parser;\nconst parseList = alfa_css_1.List.parseCommaSeparated(alfa_css_1.Shadow.parse({ withInset: false, withSpread: false }));\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/text-shadow}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.of(alfa_css_1.Keyword.of(\"none\"), either(alfa_css_1.Keyword.parse(\"none\"), parseList), (value, style) => value.resolve(resolver_1.Resolver.length(style)), { inherits: true });\n//# sourceMappingURL=text-shadow.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/text-shadow.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/text-transform.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/text-transform.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/text-transform}\n */\nexports[\"default\"] = longhand_1.Longhand.fromKeywords({ inherits: true }, \"none\", \"capitalize\", \"uppercase\", \"lowercase\");\n//# sourceMappingURL=text-transform.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/text-transform.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/top.js":
/*!******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/top.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.parse = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst alfa_selective_1 = __webpack_require__(/*! @siteimprove/alfa-selective */ \"./node_modules/@siteimprove/alfa-selective/src/index.js\");\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst resolver_1 = __webpack_require__(/*! ../resolver */ \"./node_modules/@siteimprove/alfa-style/src/resolver.js\");\nconst { either } = alfa_parser_1.Parser;\n/**\n * @internal\n */\nexports.parse = either(alfa_css_1.Keyword.parse(\"auto\"), alfa_css_1.LengthPercentage.parse);\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/top}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.of(alfa_css_1.Keyword.of(\"auto\"), exports.parse, (top, style) => top.map((top) => alfa_selective_1.Selective.of(top)\n    .if(alfa_css_1.LengthPercentage.isLengthPercentage, alfa_css_1.LengthPercentage.partiallyResolve(resolver_1.Resolver.length(style)))\n    .get()));\n//# sourceMappingURL=top.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/top.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/transform.js":
/*!************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/transform.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst resolver_1 = __webpack_require__(/*! ../resolver */ \"./node_modules/@siteimprove/alfa-style/src/resolver.js\");\nconst { either } = alfa_parser_1.Parser;\nconst parse = either(alfa_css_1.Keyword.parse(\"none\"), alfa_css_1.Transform.parseList);\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/transform}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.of(alfa_css_1.Keyword.of(\"none\"), parse, (transform, style) => transform.map((transform) => alfa_css_1.Keyword.isKeyword(transform)\n    ? transform\n    : transform.map(alfa_css_1.Transform.partiallyResolve(resolver_1.Resolver.length(style)))));\n//# sourceMappingURL=transform.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/transform.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/vertical-align.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/vertical-align.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst alfa_selective_1 = __webpack_require__(/*! @siteimprove/alfa-selective */ \"./node_modules/@siteimprove/alfa-selective/src/index.js\");\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst resolver_1 = __webpack_require__(/*! ../resolver */ \"./node_modules/@siteimprove/alfa-style/src/resolver.js\");\nconst { either } = alfa_parser_1.Parser;\nconst parse = either(alfa_css_1.Keyword.parse(\"baseline\", \"sub\", \"super\", \"text-top\", \"text-bottom\", \"middle\", \"top\", \"bottom\"), alfa_css_1.LengthPercentage.parse);\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/vertical-align}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.of(alfa_css_1.Keyword.of(\"baseline\"), parse, (value, style) => value.map((verticalAlign) => {\n    // We need the type assertion to help TS break a circular type reference:\n    // this -> style.computed -> Longhands.Name -> Longhands.longhands -> this.\n    const lineHeight = style.computed(\"line-height\").value;\n    const fontSize = style.computed(\"font-size\").value;\n    const base = alfa_selective_1.Selective.of(lineHeight)\n        .if(isNormal, () => fontSize.scale(1.2))\n        .if(alfa_css_1.Number.isNumber, (value) => fontSize.scale(value.value))\n        .get();\n    return alfa_selective_1.Selective.of(verticalAlign)\n        .if(alfa_css_1.LengthPercentage.isLengthPercentage, alfa_css_1.LengthPercentage.resolve(resolver_1.Resolver.lengthPercentage(base, style)))\n        .get();\n}));\n/**\n * isKeyword doesn't refine the type enough since it doesn't look at the value.\n */\nfunction isNormal(value) {\n    return alfa_css_1.Keyword.isKeyword(value) && value.value === \"normal\";\n}\n//# sourceMappingURL=vertical-align.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/vertical-align.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/visibility.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/visibility.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/visibility}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.fromKeywords({ inherits: true }, \"visible\", \"hidden\", \"collapse\");\n//# sourceMappingURL=visibility.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/visibility.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/white-space.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/white-space.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nexports[\"default\"] = longhand_1.Longhand.fromKeywords({ inherits: true }, \"normal\", \"pre\", \"nowrap\", \"pre-wrap\", \"break-spaces\", \"pre-line\");\n//# sourceMappingURL=white-space.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/white-space.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/width.js":
/*!********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/width.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst alfa_selective_1 = __webpack_require__(/*! @siteimprove/alfa-selective */ \"./node_modules/@siteimprove/alfa-selective/src/index.js\");\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst resolver_1 = __webpack_require__(/*! ../resolver */ \"./node_modules/@siteimprove/alfa-style/src/resolver.js\");\nconst { either } = alfa_parser_1.Parser;\nconst parse = either(alfa_css_1.Keyword.parse(\"auto\"), alfa_css_1.LengthPercentage.parse);\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/width}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.of(alfa_css_1.Keyword.of(\"auto\"), parse, (width, style) => width.map((width) => alfa_selective_1.Selective.of(width)\n    .if(alfa_css_1.LengthPercentage.isLengthPercentage, alfa_css_1.LengthPercentage.partiallyResolve(resolver_1.Resolver.length(style)))\n    .get()));\n//# sourceMappingURL=width.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/width.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/property/word-spacing.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/property/word-spacing.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst numeric_1 = __webpack_require__(/*! @siteimprove/alfa-css/src/value/numeric */ \"./node_modules/@siteimprove/alfa-css/src/value/numeric/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst longhand_1 = __webpack_require__(/*! ../longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst resolver_1 = __webpack_require__(/*! ../resolver */ \"./node_modules/@siteimprove/alfa-style/src/resolver.js\");\nconst { either } = alfa_parser_1.Parser;\nconst parse = either(alfa_css_1.Keyword.parse(\"normal\"), numeric_1.Length.parse);\n/**\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/word-spacing}\n * @internal\n */\nexports[\"default\"] = longhand_1.Longhand.of(numeric_1.Length.of(0, \"px\"), parse, (value, style) => value\n    .resolve(resolver_1.Resolver.length(style))\n    .map((wordSpacing) => alfa_css_1.Keyword.isKeyword(wordSpacing) ? numeric_1.Length.of(0, \"px\") : wordSpacing), {\n    inherits: true,\n});\n//# sourceMappingURL=word-spacing.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/property/word-spacing.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/resolver.js":
/*!**************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/resolver.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Resolver = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\n/**\n * Resolvers are functions that resolve values to their canonical, computed\n * representation.\n *\n * @internal\n */\nvar Resolver;\n(function (Resolver) {\n    /**\n     * Resolve a length in an arbitrary unit to a length in pixels.\n     * Absolute lengths are left untouched, and normalised into \"px\".\n     * Relative lengths resolution depends on another length which is passed as\n     * part of a Style:\n     * * viewport dimensions are fetch from style.device;\n     * * root relative units depend on style.root().computed(\"font-size\");\n     * * other relative units depend on style.computed(\"font-size\");\n     *\n     * In nearly all cases, the style is the element's own style, except for\n     * resolving font-size itself, in which case the parent's style is used.\n     * Since the resolver doesn't know which property is resolved, the onus of\n     * providing the correct style is left on the caller.\n     *\n     * {@link https://drafts.csswg.org/css-values/#relative-lengths}\n     */\n    function lengthResolver(style) {\n        const { viewport } = style.device;\n        const width = alfa_css_1.Length.of(viewport.width, \"px\");\n        const height = alfa_css_1.Length.of(viewport.height, \"px\");\n        const fontSize = style.computed(\"font-size\").value;\n        const rootFontSize = style.root().computed(\"font-size\").value;\n        return alfa_css_1.Length.resolver(fontSize, rootFontSize, width, height);\n    }\n    function length(style) {\n        return { length: lengthResolver(style) };\n    }\n    Resolver.length = length;\n    function lengthPercentage(base, style) {\n        return { percentageBase: base, length: lengthResolver(style) };\n    }\n    Resolver.lengthPercentage = lengthPercentage;\n})(Resolver || (exports.Resolver = Resolver = {}));\n//# sourceMappingURL=resolver.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/resolver.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/shorthand.js":
/*!***************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/shorthand.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Shorthand = void 0;\nconst parser = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst longhand_1 = __webpack_require__(/*! ./longhand */ \"./node_modules/@siteimprove/alfa-style/src/longhand.js\");\nconst { either, end, left } = parser.Parser;\n/**\n * @internal\n */\nclass Shorthand {\n    static of(properties, parse) {\n        return new Shorthand(properties, left(either(longhand_1.Longhand.parseDefaults, parse), end(() => \"Expected end of input\")));\n    }\n    constructor(properties, parse) {\n        this._properties = properties;\n        this._parse = parse;\n    }\n    get properties() {\n        return this._properties;\n    }\n    get parse() {\n        return this._parse;\n    }\n}\nexports.Shorthand = Shorthand;\n//# sourceMappingURL=shorthand.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/shorthand.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/shorthands.js":
/*!****************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/shorthands.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Shorthands = void 0;\nconst background_1 = __webpack_require__(/*! ./property/background */ \"./node_modules/@siteimprove/alfa-style/src/property/background.js\");\nconst background_position_1 = __webpack_require__(/*! ./property/background-position */ \"./node_modules/@siteimprove/alfa-style/src/property/background-position.js\");\nconst background_repeat_1 = __webpack_require__(/*! ./property/background-repeat */ \"./node_modules/@siteimprove/alfa-style/src/property/background-repeat.js\");\nconst border_block_color_1 = __webpack_require__(/*! ./property/border-block-color */ \"./node_modules/@siteimprove/alfa-style/src/property/border-block-color.js\");\nconst border_block_end_1 = __webpack_require__(/*! ./property/border-block-end */ \"./node_modules/@siteimprove/alfa-style/src/property/border-block-end.js\");\nconst border_block_start_1 = __webpack_require__(/*! ./property/border-block-start */ \"./node_modules/@siteimprove/alfa-style/src/property/border-block-start.js\");\nconst border_block_style_1 = __webpack_require__(/*! ./property/border-block-style */ \"./node_modules/@siteimprove/alfa-style/src/property/border-block-style.js\");\nconst border_block_1 = __webpack_require__(/*! ./property/border-block */ \"./node_modules/@siteimprove/alfa-style/src/property/border-block.js\");\nconst border_block_width_1 = __webpack_require__(/*! ./property/border-block-width */ \"./node_modules/@siteimprove/alfa-style/src/property/border-block-width.js\");\nconst border_bottom_1 = __webpack_require__(/*! ./property/border-bottom */ \"./node_modules/@siteimprove/alfa-style/src/property/border-bottom.js\");\nconst border_color_1 = __webpack_require__(/*! ./property/border-color */ \"./node_modules/@siteimprove/alfa-style/src/property/border-color.js\");\nconst border_image_1 = __webpack_require__(/*! ./property/border-image */ \"./node_modules/@siteimprove/alfa-style/src/property/border-image.js\");\nconst border_inline_color_1 = __webpack_require__(/*! ./property/border-inline-color */ \"./node_modules/@siteimprove/alfa-style/src/property/border-inline-color.js\");\nconst border_inline_end_1 = __webpack_require__(/*! ./property/border-inline-end */ \"./node_modules/@siteimprove/alfa-style/src/property/border-inline-end.js\");\nconst border_inline_start_1 = __webpack_require__(/*! ./property/border-inline-start */ \"./node_modules/@siteimprove/alfa-style/src/property/border-inline-start.js\");\nconst border_inline_style_1 = __webpack_require__(/*! ./property/border-inline-style */ \"./node_modules/@siteimprove/alfa-style/src/property/border-inline-style.js\");\nconst border_inline_1 = __webpack_require__(/*! ./property/border-inline */ \"./node_modules/@siteimprove/alfa-style/src/property/border-inline.js\");\nconst border_inline_width_1 = __webpack_require__(/*! ./property/border-inline-width */ \"./node_modules/@siteimprove/alfa-style/src/property/border-inline-width.js\");\nconst border_left_1 = __webpack_require__(/*! ./property/border-left */ \"./node_modules/@siteimprove/alfa-style/src/property/border-left.js\");\nconst border_radius_1 = __webpack_require__(/*! ./property/border-radius */ \"./node_modules/@siteimprove/alfa-style/src/property/border-radius.js\");\nconst border_right_1 = __webpack_require__(/*! ./property/border-right */ \"./node_modules/@siteimprove/alfa-style/src/property/border-right.js\");\nconst border_style_1 = __webpack_require__(/*! ./property/border-style */ \"./node_modules/@siteimprove/alfa-style/src/property/border-style.js\");\nconst border_top_1 = __webpack_require__(/*! ./property/border-top */ \"./node_modules/@siteimprove/alfa-style/src/property/border-top.js\");\nconst border_1 = __webpack_require__(/*! ./property/border */ \"./node_modules/@siteimprove/alfa-style/src/property/border.js\");\nconst border_width_1 = __webpack_require__(/*! ./property/border-width */ \"./node_modules/@siteimprove/alfa-style/src/property/border-width.js\");\nconst flex_flow_1 = __webpack_require__(/*! ./property/flex-flow */ \"./node_modules/@siteimprove/alfa-style/src/property/flex-flow.js\");\nconst font_1 = __webpack_require__(/*! ./property/font */ \"./node_modules/@siteimprove/alfa-style/src/property/font.js\");\nconst font_variant_1 = __webpack_require__(/*! ./property/font-variant */ \"./node_modules/@siteimprove/alfa-style/src/property/font-variant.js\");\nconst inset_block_1 = __webpack_require__(/*! ./property/inset-block */ \"./node_modules/@siteimprove/alfa-style/src/property/inset-block.js\");\nconst inset_inline_1 = __webpack_require__(/*! ./property/inset-inline */ \"./node_modules/@siteimprove/alfa-style/src/property/inset-inline.js\");\nconst inset_1 = __webpack_require__(/*! ./property/inset */ \"./node_modules/@siteimprove/alfa-style/src/property/inset.js\");\nconst margin_1 = __webpack_require__(/*! ./property/margin */ \"./node_modules/@siteimprove/alfa-style/src/property/margin.js\");\nconst outline_1 = __webpack_require__(/*! ./property/outline */ \"./node_modules/@siteimprove/alfa-style/src/property/outline.js\");\nconst overflow_1 = __webpack_require__(/*! ./property/overflow */ \"./node_modules/@siteimprove/alfa-style/src/property/overflow.js\");\nconst text_decoration_1 = __webpack_require__(/*! ./property/text-decoration */ \"./node_modules/@siteimprove/alfa-style/src/property/text-decoration.js\");\n/**\n * @public\n */\nvar Shorthands;\n(function (Shorthands) {\n    Shorthands.shortHands = {\n        background: background_1.default,\n        \"background-position\": background_position_1.default,\n        \"background-repeat\": background_repeat_1.default,\n        \"border-block-color\": border_block_color_1.default,\n        \"border-block-end\": border_block_end_1.default,\n        \"border-block-start\": border_block_start_1.default,\n        \"border-block-style\": border_block_style_1.default,\n        \"border-block\": border_block_1.default,\n        \"border-block-width\": border_block_width_1.default,\n        \"border-bottom\": border_bottom_1.default,\n        \"border-color\": border_color_1.default,\n        \"border-image\": border_image_1.default,\n        \"border-inline-color\": border_inline_color_1.default,\n        \"border-inline-end\": border_inline_end_1.default,\n        \"border-inline-start\": border_inline_start_1.default,\n        \"border-inline-style\": border_inline_style_1.default,\n        \"border-inline\": border_inline_1.default,\n        \"border-inline-width\": border_inline_width_1.default,\n        \"border-left\": border_left_1.default,\n        \"border-radius\": border_radius_1.default,\n        \"border-right\": border_right_1.default,\n        \"border-style\": border_style_1.default,\n        \"border-top\": border_top_1.default,\n        border: border_1.default,\n        \"border-width\": border_width_1.default,\n        \"flex-flow\": flex_flow_1.default,\n        font: font_1.default,\n        \"font-variant\": font_variant_1.default,\n        \"inset-block\": inset_block_1.default,\n        \"inset-inline\": inset_inline_1.default,\n        inset: inset_1.default,\n        margin: margin_1.default,\n        outline: outline_1.default,\n        overflow: overflow_1.default,\n        \"text-decoration\": text_decoration_1.default,\n    };\n    function isName(name) {\n        return name in Shorthands.shortHands;\n    }\n    Shorthands.isName = isName;\n    function get(name) {\n        return Shorthands.shortHands[name];\n    }\n    Shorthands.get = get;\n})(Shorthands || (exports.Shorthands = Shorthands = {}));\n//# sourceMappingURL=shorthands.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/shorthands.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/style.js":
/*!***********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/style.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.shouldOverride = exports.Style = void 0;\nconst alfa_array_1 = __webpack_require__(/*! @siteimprove/alfa-array */ \"./node_modules/@siteimprove/alfa-array/src/index.js\");\nconst alfa_cache_1 = __webpack_require__(/*! @siteimprove/alfa-cache */ \"./node_modules/@siteimprove/alfa-cache/src/index.js\");\nconst alfa_cascade_1 = __webpack_require__(/*! @siteimprove/alfa-cascade */ \"./node_modules/@siteimprove/alfa-cascade/src/index.js\");\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_device_1 = __webpack_require__(/*! @siteimprove/alfa-device */ \"./node_modules/@siteimprove/alfa-device/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_map_1 = __webpack_require__(/*! @siteimprove/alfa-map */ \"./node_modules/@siteimprove/alfa-map/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_selector_1 = __webpack_require__(/*! @siteimprove/alfa-selector */ \"./node_modules/@siteimprove/alfa-selector/src/index.js\");\nconst element = __webpack_require__(/*! ./element/element */ \"./node_modules/@siteimprove/alfa-style/src/element/element.js\");\nconst node = __webpack_require__(/*! ./node/node */ \"./node_modules/@siteimprove/alfa-style/src/node/node.js\");\nconst longhands_1 = __webpack_require__(/*! ./longhands */ \"./node_modules/@siteimprove/alfa-style/src/longhands.js\");\nconst shorthands_1 = __webpack_require__(/*! ./shorthands */ \"./node_modules/@siteimprove/alfa-style/src/shorthands.js\");\nconst value_1 = __webpack_require__(/*! ./value */ \"./node_modules/@siteimprove/alfa-style/src/value.js\");\nconst variable_1 = __webpack_require__(/*! ./variable */ \"./node_modules/@siteimprove/alfa-style/src/variable.js\");\n/**\n * @public\n */\nclass Style {\n    static of(styleDeclarations, device, parent = alfa_option_1.None) {\n        // declarations are read twice, once for variables and once for properties,\n        // so we cannot use a read-once iterable. Main use case from `Style.from`\n        // is already sending an Array, so this is inexpensive\n        const declarations = alfa_array_1.Array.from(styleDeclarations);\n        /**\n         * First pass, substitute all variable by their definition\n         */\n        const declaredVariables = variable_1.Variable.gather(declarations, shouldOverride);\n        // Second step: since CSS variables are always inherited, and inheritance\n        // takes precedence over fallback, we can merge the current variables with\n        // the parent ones, this will effectively resolve variable inheritance.\n        const cascadedVariables = parent\n            .map((parent) => parent.variables)\n            .getOr(alfa_map_1.Map.empty())\n            .concat(declaredVariables);\n        // Third step: pre-substitute the resolved cascading variables from above,\n        // replacing any `var()` function references with their substituted tokens.\n        // This effectively takes care of deleting variables with syntactically\n        // invalid values, circular references, too many substitutions, …\n        const variables = variable_1.Variable.flatten(cascadedVariables);\n        /**\n         * Second pass: Resolve cascading properties using the cascading variables\n         * from the first pass.\n         */\n        let properties = alfa_map_1.Map.empty();\n        for (const declaration of declarations) {\n            const { name, value } = declaration;\n            if (longhands_1.Longhands.isName(name)) {\n                const previous = properties.get(name);\n                if (shouldOverride(previous, declaration)) {\n                    for (const result of parseLonghand(longhands_1.Longhands.get(name), value, variables)) {\n                        properties = properties.set(name, value_1.Value.of(result, alfa_option_1.Option.of(declaration)));\n                    }\n                }\n            }\n            else if (shorthands_1.Shorthands.isName(name)) {\n                for (const result of parseShorthand(shorthands_1.Shorthands.get(name), value, variables)) {\n                    for (const [name, value] of result) {\n                        const previous = properties.get(name);\n                        if (shouldOverride(previous, declaration)) {\n                            properties = properties.set(name, value_1.Value.of(value, alfa_option_1.Option.of(declaration)));\n                        }\n                    }\n                }\n            }\n        }\n        return new Style(device, parent, variables, properties);\n    }\n    static empty() {\n        return this._empty;\n    }\n    constructor(device, parent, variables, properties) {\n        // We cache computed properties but not specified properties as these are\n        // inexpensive to resolve from cascaded and computed properties.\n        this._computed = alfa_map_1.Map.empty();\n        this._device = device;\n        this._parent = parent;\n        this._variables = variables;\n        this._properties = properties;\n    }\n    get device() {\n        return this._device;\n    }\n    get parent() {\n        return this._parent.getOrElse(() => Style._empty);\n    }\n    get variables() {\n        return this._variables;\n    }\n    get properties() {\n        return this._properties;\n    }\n    root() {\n        return this._parent.map((parent) => parent.root()).getOr(this);\n    }\n    cascaded(name) {\n        return this._properties.get(name);\n    }\n    specified(name) {\n        const { options: { inherits }, } = longhands_1.Longhands.get(name);\n        return this.cascaded(name)\n            .map((cascaded) => {\n            const { value, source } = cascaded;\n            if (alfa_css_1.Keyword.isKeyword(value)) {\n                switch (value.value) {\n                    // https://drafts.csswg.org/css-cascade/#initial\n                    case \"initial\":\n                        return this.initial(name, source);\n                    // https://drafts.csswg.org/css-cascade/#inherit\n                    case \"inherit\":\n                        return this.inherited(name);\n                    // https://drafts.csswg.org/css-cascade/#inherit-initial\n                    case \"unset\":\n                        return inherits\n                            ? this.inherited(name)\n                            : this.initial(name, source);\n                }\n            }\n            return cascaded;\n        })\n            .getOrElse(() => inherits\n            ? this._parent\n                .map((parent) => parent.computed(name))\n                .getOrElse(() => this.initial(name))\n            : this.initial(name));\n    }\n    computed(name) {\n        if (this === Style._empty) {\n            return this.initial(name);\n        }\n        if (!this._computed.has(name)) {\n            // Keeping semi-useless variables to reduce the any-pollution to a single call\n            const compute = longhands_1.Longhands.get(name).compute;\n            const specified = this.specified(name);\n            // Typescript is completely struggling on this one.\n            // Essentially, N has to be assumed as Name at this point. TS lost the fact\n            // that specified and compute refer to the same property.\n            // So, it has specified of type S1 | S2 | …, and compute of type\n            // S1 -> C1 | S2 -> C2 | …, but no link to the fact that the same should\n            // be used in both.\n            // The union of functions is exploded as (S1 & S2 & …) -> (C1 | C2 | …)\n            // due to contravariance. But the Si tend to be unions, and the\n            // intersection of union is expanded a bit too greedily by TS and reaches\n            // its union size limit of 100,000 term (!)\n            // So, we just skip type checking here…\n            //\n            // See https://github.com/microsoft/TypeScript/issues/53234\n            const computed = compute(specified, this);\n            this._computed = this._computed.set(name, computed);\n        }\n        return this._computed\n            .get(name)\n            // The previous block ensure we've set the value.\n            .getUnsafe(`Computed style for ${name} does not exists`);\n    }\n    initial(name, source = alfa_option_1.None) {\n        return value_1.Value.of(longhands_1.Longhands.get(name).initial, source);\n    }\n    inherited(name) {\n        return this.parent.computed(name);\n    }\n    toJSON() {\n        return {\n            device: this._device.toJSON(),\n            variables: [...this._variables].map(([name, value]) => [\n                name,\n                value.toJSON(),\n            ]),\n            properties: [...this._properties].map(([name, value]) => [\n                name,\n                value.toJSON(),\n            ]),\n        };\n    }\n}\nexports.Style = Style;\nStyle._empty = new Style(alfa_device_1.Device.standard(), alfa_option_1.None, alfa_map_1.Map.empty(), alfa_map_1.Map.empty());\n/**\n * @public\n */\n(function (Style) {\n    const cache = alfa_cache_1.Cache.empty();\n    /**\n     * Build the style of an element.\n     *\n     * @remarks\n     * This gather all style declarations that apply to the element, in decreasing\n     * precedence (according to cascade sort order) and delegate the rest of the\n     * work to `Style.of`.\n     */\n    function from(element, device, context = alfa_selector_1.Context.empty()) {\n        return cache\n            .get(device, alfa_cache_1.Cache.empty)\n            .get(element.freeze(), alfa_cache_1.Cache.empty)\n            .get(context, () => {\n            // First, get all declarations on the `style` attribute. They win\n            // cascade sort at priority 3, trumping everything but origin and\n            // (shadow tree) context\n            // * origin is de-facto handled by the fact that these are author\n            //   declarations, trumping non-important UA declaration at 1.6 vs 1.8.\n            //   important UA declarations will win back through shouldOverride.\n            //   important `style` attribute declarations incorrectly trump\n            //   important UA declarations.\n            //   {@link https://github.com/Siteimprove/alfa/issues/1532}\n            // * (shadow tree) context is not currently handled.\n            //   {@link https://github.com/Siteimprove/alfa/issues/1533}\n            const declarations = element.style\n                .map((block) => [...block.declarations].reverse())\n                .getOr([]);\n            const root = element.root();\n            if (alfa_dom_1.Document.isDocument(root) || alfa_dom_1.Shadow.isShadow(root)) {\n                const cascade = alfa_cascade_1.Cascade.from(root, device);\n                // Walk up the cascade, starting from the node associated to the\n                // element, and gather all declarations met on the way.\n                // The cascade has been build in decreasing precedence as we move up\n                // (highest precedence rules are at the bottom), thus the declarations\n                // are seen in decreasing precedence and pushed to the end of the\n                // existing list which is thus also ordered in decreasing precedence.\n                // Cascade doesn't handle importance of declaration, hence this will\n                // still have to be done here (through `shouldOverride`).\n                for (const node of cascade\n                    .get(element, context)\n                    .inclusiveAncestors()) {\n                    declarations.push(...[...node.block.declarations].reverse());\n                }\n            }\n            return Style.of(declarations, device, element\n                .parent(alfa_dom_1.Node.flatTree)\n                .filter(alfa_dom_1.Element.isElement)\n                .map((parent) => from(parent, device, context)));\n        });\n    }\n    Style.from = from;\n    Style.getOffsetParent = element.getOffsetParent, Style.getPositioningParent = element.getPositioningParent, Style.hasBorder = element.hasBorder, Style.hasBoxShadow = element.hasBoxShadow, Style.hasCascadedStyle = element.hasCascadedStyle, Style.hasComputedStyle = element.hasComputedStyle, Style.hasPositioningParent = element.hasPositioningParent, Style.hasOutline = element.hasOutline, Style.hasSpecifiedStyle = element.hasSpecifiedStyle, Style.hasTextDecoration = element.hasTextDecoration, Style.hasTransparentBackground = element.hasTransparentBackground, Style.isFocusable = element.isFocusable, Style.isImportant = element.isImportant, Style.isInert = element.isInert, Style.isPositioned = element.isPositioned, Style.isTabbable = element.isTabbable, Style.isVisibleShadow = element.isVisibleShadow;\n    Style.isRendered = node.isRendered, Style.isVisible = node.isVisible;\n})(Style || (exports.Style = Style = {}));\n/**\n * The \"next\" declaration should override the previous if:\n * - either there is no previous; or\n * - next is important and previous isn't.\n * This supposes that the declarations have been pre--ordered in otherwise\n * decreasing precedence.\n *\n * @privateRemarks\n * This is not correct since importance of declaration reverses precedence of UA\n * and author origins.\n * {@link https://github.com/Siteimprove/alfa/issues/1532}\n *\n * @internal\n */\nfunction shouldOverride(previous, next) {\n    return previous.every((previous) => next.important &&\n        previous.source.every((declaration) => !declaration.important));\n}\nexports.shouldOverride = shouldOverride;\nfunction parseLonghand(property, value, variables) {\n    const substitution = variable_1.Variable.substitute(alfa_css_1.Lexer.lex(value), variables);\n    if (!substitution.isSome()) {\n        return alfa_result_1.Result.of(alfa_css_1.Keyword.of(\"unset\"));\n    }\n    const [tokens, substituted] = substitution.get();\n    const parse = property.parse;\n    const result = parse(trim(tokens)).map(([, value]) => value);\n    if (result.isErr() && substituted) {\n        return alfa_result_1.Result.of(alfa_css_1.Keyword.of(\"unset\"));\n    }\n    return result;\n}\nfunction parseShorthand(shorthand, value, variables) {\n    const substitution = variable_1.Variable.substitute(alfa_css_1.Lexer.lex(value), variables);\n    if (!substitution.isSome()) {\n        return alfa_result_1.Result.of(alfa_iterable_1.Iterable.map(shorthand.properties, (property) => [property, alfa_css_1.Keyword.of(\"unset\")]));\n    }\n    const [tokens, substituted] = substitution.get();\n    const parse = shorthand.parse;\n    const result = parse(trim(tokens)).map(([, value]) => {\n        if (alfa_css_1.Keyword.isKeyword(value)) {\n            return alfa_iterable_1.Iterable.map(shorthand.properties, (property) => [property, value]);\n        }\n        return value;\n    });\n    if (result.isErr() && substituted) {\n        return alfa_result_1.Result.of(alfa_iterable_1.Iterable.map(shorthand.properties, (property) => [property, alfa_css_1.Keyword.of(\"unset\")]));\n    }\n    return result;\n}\nfunction trim(tokens) {\n    return tokens.trim(alfa_css_1.Token.isWhitespace);\n}\n//# sourceMappingURL=style.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/style.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/value.js":
/*!***********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/value.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Value = void 0;\nconst alfa_equatable_1 = __webpack_require__(/*! @siteimprove/alfa-equatable */ \"./node_modules/@siteimprove/alfa-equatable/src/index.js\");\nconst alfa_json_1 = __webpack_require__(/*! @siteimprove/alfa-json */ \"./node_modules/@siteimprove/alfa-json/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\n/**\n * @public\n */\nclass Value {\n    static of(value, source = alfa_option_1.None) {\n        return new Value(value, source);\n    }\n    constructor(value, source) {\n        this._value = value;\n        this._source = source;\n    }\n    get value() {\n        return this._value;\n    }\n    get source() {\n        return this._source;\n    }\n    map(mapper) {\n        return new Value(mapper(this._value, this._source), this._source);\n    }\n    resolve(resolver) {\n        return new Value(this._value.resolve(resolver), this._source);\n    }\n    apply(mapper) {\n        return mapper.map((mapper) => mapper(this._value));\n    }\n    flatMap(mapper) {\n        return mapper(this._value, this._source);\n    }\n    flatten() {\n        return this._value;\n    }\n    includes(value) {\n        return alfa_equatable_1.Equatable.equals(this._value, value);\n    }\n    some(predicate) {\n        return predicate(this._value, this._source);\n    }\n    none(predicate) {\n        return !predicate(this._value, this._source);\n    }\n    equals(value) {\n        return (value instanceof Value &&\n            alfa_equatable_1.Equatable.equals(value._value, this._value) &&\n            value._source.equals(this._source));\n    }\n    *[Symbol.iterator]() {\n        yield this._value;\n    }\n    toJSON() {\n        return {\n            value: alfa_json_1.Serializable.toJSON(this._value),\n            source: this._source.map((source) => source.toJSON()).getOr(null),\n        };\n    }\n    toString() {\n        return `${this._value}`;\n    }\n}\nexports.Value = Value;\n//# sourceMappingURL=value.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/value.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-style/src/variable.js":
/*!**************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-style/src/variable.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Variable = void 0;\nconst alfa_css_1 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_css_2 = __webpack_require__(/*! @siteimprove/alfa-css */ \"./node_modules/@siteimprove/alfa-css/src/index.js\");\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_map_1 = __webpack_require__(/*! @siteimprove/alfa-map */ \"./node_modules/@siteimprove/alfa-map/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_parser_1 = __webpack_require__(/*! @siteimprove/alfa-parser */ \"./node_modules/@siteimprove/alfa-parser/src/index.js\");\nconst alfa_set_1 = __webpack_require__(/*! @siteimprove/alfa-set */ \"./node_modules/@siteimprove/alfa-set/src/index.js\");\nconst alfa_slice_1 = __webpack_require__(/*! @siteimprove/alfa-slice */ \"./node_modules/@siteimprove/alfa-slice/src/index.js\");\nconst value_1 = __webpack_require__(/*! ./value */ \"./node_modules/@siteimprove/alfa-style/src/value.js\");\nconst { delimited, left, map, option, pair, right, takeUntil } = alfa_parser_1.Parser;\n/**\n * Utilities for manipulating CSS variable declarations (--foo: bar)\n *\n * @internal\n */\nvar Variable;\n(function (Variable) {\n    /**\n     * Gather variables that are declared on the declarations.\n     * The same variable may be declared several times, so we rely on\n     * declarations being pre-ordered by decreasing specificity and only take\n     * the first declaration.\n     *\n     * This builds a map from variable names to their lexed value\n     * i.e. \"--foo: lorem ipsum\" becomes \"foo => [lorem, ipsum]\"\n     **/\n    function gather(declarations, shouldOverride) {\n        let currentVariables = alfa_map_1.Map.empty();\n        for (const declaration of declarations.filter((declaration) => declaration.name.startsWith(\"--\"))) {\n            const { name, value } = declaration;\n            const previous = currentVariables.get(name);\n            if (shouldOverride(previous, declaration)) {\n                currentVariables = currentVariables.set(name, value_1.Value.of(alfa_css_1.Lexer.lex(value), alfa_option_1.Option.of(declaration)));\n            }\n        }\n        return currentVariables;\n    }\n    Variable.gather = gather;\n    /**\n     * \"Flatten\" a variable definition map by pre-substituting variables that are\n     * defined in the map.\n     * That is, take a \"name => slice\" map, search for all the \"var(--foo)\" in\n     * the slice, and replace them by their value in the map. Recursively.\n     */\n    function flatten(variables) {\n        for (const [name, variable] of variables) {\n            const substitution = substitute(variable.value, variables);\n            // If the replaced value is valid, use the replaced value as the new value of the variable.\n            if (substitution.isSome()) {\n                const [tokens] = substitution.get();\n                variables = variables.set(name, value_1.Value.of(tokens, variable.source));\n            }\n            else {\n                // Otherwise, remove the variable entirely.\n                variables = variables.delete(name);\n            }\n        }\n        return variables;\n    }\n    Variable.flatten = flatten;\n    const parseInitial = alfa_css_1.Keyword.parse(\"initial\");\n    /**\n     * Resolve a cascading variable with an optional fallback. The value of the\n     * variable, if defined, will have `var()` functions fully substituted.\n     *\n     * @remarks\n     * This method uses a set of visited names to detect cyclic dependencies\n     * between cascading variables. The set is local to each `Style` instance as\n     * cyclic references can only occur between cascading variables defined on the\n     * same element.\n     *\n     * @remarks\n     * The fallback isn't pre-resolved/substituted until needed.\n     * This is not only a performance optimisation but also ensure that we don't\n     * need to handle invalid fallback that wouldn't be needed if the variable\n     * resolves successfully.\n     */\n    function resolve(name, variables, fallback = alfa_option_1.None, visited = alfa_set_1.Set.empty()) {\n        return (\n        // If the variable is defined on the current definition map, get its value\n        variables\n            .get(name)\n            .map((value) => value.value)\n            // The initial value of a custom property is the \"guaranteed-invalid\"\n            // value. We therefore reject the value of the variable if it's the\n            // keyword `initial`.\n            // https://drafts.csswg.org/css-variables/#guaranteed-invalid\n            .reject((tokens) => parseInitial(tokens).isOk())\n            // If the value of the variable is invalid, as indicated by it being\n            // `None`, we instead use the fallback value, if available.\n            // https://drafts.csswg.org/css-variables/#invalid-variables\n            .orElse(() => fallback\n            // Substitute any additional cascading variables within the fallback\n            // value. This substitution happens in the current style's context.\n            .flatMap((tokens) => substitute(tokens, variables, visited.add(name)).map(([tokens]) => tokens))));\n    }\n    /**\n     * The maximum allowed number of tokens that declaration values with `var()`\n     * functions may expand to.\n     *\n     * {@link https://drafts.csswg.org/css-variables/#long-variables}\n     */\n    const substitutionLimit = 1024;\n    /**\n     * Substitute all `var()` functions in a slice of tokens. If any syntactically\n     * invalid `var()` functions are encountered, `None` is returned.\n     *\n     * {@link https://drafts.csswg.org/css-variables/#substitute-a-var}\n     *\n     * @remarks\n     * This method uses a set of visited names to detect cyclic dependencies\n     * between cascading variables. The set is local to each `Style` instance as\n     * cyclic references can only occur between cascading variables defined on the\n     * same element.\n     */\n    function substitute(tokens, variables, visited = alfa_set_1.Set.empty()) {\n        const replaced = [];\n        let substituted = false;\n        while (tokens.length > 0) {\n            // `tokens` is not empty due to the previous test.\n            const next = tokens.first().getUnsafe();\n            if (next.type === \"function\" && next.value === \"var\") {\n                // If the token is a \"var(\", process it.\n                const result = parseVar(tokens);\n                if (!result.isOk()) {\n                    return alfa_option_1.None;\n                }\n                const [remaining, [name, fallback]] = result.get();\n                tokens = remaining;\n                // If we've already seen this variable, bail out (circular reference).\n                if (visited.has(name)) {\n                    return alfa_option_1.None;\n                }\n                // Resolve the variable's name within the current context.\n                const value = resolve(name, variables, fallback, visited);\n                if (!value.isSome()) {\n                    return alfa_option_1.None;\n                }\n                // Push the resulting value, replacing the initial token\n                replaced.push(...value.get());\n                substituted = true;\n            }\n            else {\n                // If the token is not a \"var(\", push it to the result, and move on.\n                replaced.push(next);\n                tokens = tokens.rest();\n            }\n        }\n        // If substitution occurred and the number of replaced tokens has exceeded\n        // the substitution limit, bail out.\n        if (substituted && replaced.length > substitutionLimit) {\n            return alfa_option_1.None;\n        }\n        return alfa_option_1.Option.of([\n            alfa_slice_1.Slice.of(replaced),\n            substituted,\n        ]);\n    }\n    Variable.substitute = substitute;\n    /**\n     * Parses a `var()` function\n     *\n     * {@link https://drafts.csswg.org/css-variables/#funcdef-var}\n     */\n    const parseVar = right(alfa_css_2.Token.parseFunction(\"var\"), pair(map(delimited(option(alfa_css_2.Token.parseWhitespace), alfa_css_2.Token.parseIdent((ident) => ident.value.startsWith(\"--\"))), (ident) => ident.value), left(option(right(pair(alfa_css_2.Token.parseComma, option(alfa_css_2.Token.parseWhitespace)), map(takeUntil(alfa_css_1.Component.consume, alfa_css_2.Token.parseCloseParenthesis), (components) => alfa_slice_1.Slice.of([...alfa_iterable_1.Iterable.flatten(components)])))), alfa_css_2.Token.parseCloseParenthesis)));\n})(Variable || (exports.Variable = Variable = {}));\n//# sourceMappingURL=variable.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-style/src/variable.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-table/node_modules/@siteimprove/alfa-sequence/src/cons.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-table/node_modules/@siteimprove/alfa-sequence/src/cons.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Cons = void 0;\nconst alfa_array_1 = __webpack_require__(/*! @siteimprove/alfa-array */ \"./node_modules/@siteimprove/alfa-array/src/index.js\");\nconst alfa_comparable_1 = __webpack_require__(/*! @siteimprove/alfa-comparable */ \"./node_modules/@siteimprove/alfa-comparable/src/index.js\");\nconst alfa_equatable_1 = __webpack_require__(/*! @siteimprove/alfa-equatable */ \"./node_modules/@siteimprove/alfa-equatable/src/index.js\");\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_json_1 = __webpack_require__(/*! @siteimprove/alfa-json */ \"./node_modules/@siteimprove/alfa-json/src/index.js\");\nconst alfa_lazy_1 = __webpack_require__(/*! @siteimprove/alfa-lazy */ \"./node_modules/@siteimprove/alfa-lazy/src/index.js\");\nconst alfa_map_1 = __webpack_require__(/*! @siteimprove/alfa-map */ \"./node_modules/@siteimprove/alfa-map/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_set_1 = __webpack_require__(/*! @siteimprove/alfa-set */ \"./node_modules/@siteimprove/alfa-set/src/index.js\");\nconst sequence_1 = __webpack_require__(/*! ./sequence */ \"./node_modules/@siteimprove/alfa-table/node_modules/@siteimprove/alfa-sequence/src/sequence.js\");\nconst nil_1 = __webpack_require__(/*! ./nil */ \"./node_modules/@siteimprove/alfa-table/node_modules/@siteimprove/alfa-sequence/src/nil.js\");\nconst { not, equals } = alfa_predicate_1.Predicate;\nconst { compareComparable } = alfa_comparable_1.Comparable;\n/**\n * @public\n */\nclass Cons {\n    static of(head, tail = alfa_lazy_1.Lazy.force(nil_1.Nil)) {\n        return new Cons(head, tail);\n    }\n    constructor(head, tail) {\n        this._head = head;\n        this._tail = tail;\n    }\n    get size() {\n        return alfa_iterable_1.Iterable.size(this);\n    }\n    isEmpty() {\n        return false;\n    }\n    forEach(callback) {\n        alfa_iterable_1.Iterable.forEach(this, callback);\n    }\n    map(mapper, index = 0) {\n        return new Cons(mapper(this._head, index), this._tail.map((tail) => Cons.isCons(tail) ? tail.map(mapper, index + 1) : nil_1.Nil));\n    }\n    apply(mapper) {\n        return mapper.flatMap((mapper) => this.map(mapper));\n    }\n    flatMap(mapper, index = 0) {\n        let next = this;\n        while (true) {\n            const head = mapper(next._head, index++);\n            if (Cons.isCons(head)) {\n                return new Cons(head._head, head._tail.map((left) => {\n                    const right = next._tail.force();\n                    return Cons.isCons(right)\n                        ? left.concat(right.flatMap(mapper, index))\n                        : left;\n                }));\n            }\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return nil_1.Nil;\n            }\n        }\n    }\n    flatten() {\n        return this.flatMap((sequence) => sequence);\n    }\n    reduce(reducer, accumulator) {\n        let next = this;\n        let index = 0;\n        while (true) {\n            accumulator = reducer(accumulator, next._head, index++);\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                break;\n            }\n        }\n        return accumulator;\n    }\n    reduceWhile(predicate, reducer, accumulator) {\n        let next = this;\n        let index = 0;\n        while (predicate(next._head, index)) {\n            accumulator = reducer(accumulator, next._head, index++);\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                break;\n            }\n        }\n        return accumulator;\n    }\n    reduceUntil(predicate, reducer, accumulator) {\n        return this.reduceWhile(not(predicate), reducer, accumulator);\n    }\n    filter(predicate, index = 0) {\n        let next = this;\n        while (true) {\n            if (predicate(next._head, index++)) {\n                return new Cons(next._head, next._tail.map((tail) => Cons.isCons(tail) ? tail.filter(predicate, index) : nil_1.Nil));\n            }\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return nil_1.Nil;\n            }\n        }\n    }\n    reject(predicate) {\n        return this.filter(not(predicate));\n    }\n    find(predicate) {\n        let next = this;\n        let index = 0;\n        while (true) {\n            const head = next._head;\n            if (predicate(head, index++)) {\n                return alfa_option_1.Option.of(head);\n            }\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return alfa_option_1.None;\n            }\n        }\n    }\n    includes(value) {\n        return this.some(equals(value));\n    }\n    collect(mapper, index = 0) {\n        let next = this;\n        while (true) {\n            const value = mapper(next._head, index++);\n            if (value.isSome()) {\n                return new Cons(value.get(), next._tail.map((tail) => Cons.isCons(tail) ? tail.collect(mapper, index) : nil_1.Nil));\n            }\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return nil_1.Nil;\n            }\n        }\n    }\n    collectFirst(mapper) {\n        let next = this;\n        let index = 0;\n        while (true) {\n            const value = mapper(next._head, index++);\n            if (value.isSome()) {\n                return value;\n            }\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return alfa_option_1.None;\n            }\n        }\n    }\n    some(predicate) {\n        let next = this;\n        let index = 0;\n        while (true) {\n            if (predicate(next._head, index++)) {\n                return true;\n            }\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return false;\n            }\n        }\n    }\n    none(predicate) {\n        return this.every(not(predicate));\n    }\n    every(predicate) {\n        let next = this;\n        let index = 0;\n        while (true) {\n            if (!predicate(next._head, index++)) {\n                return false;\n            }\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return true;\n            }\n        }\n    }\n    count(predicate) {\n        return this.reduce((count, value, index) => (predicate(value, index) ? count + 1 : count), 0);\n    }\n    distinct(seen = alfa_set_1.Set.empty()) {\n        let next = this;\n        while (true) {\n            if (seen.has(next._head)) {\n                const tail = next._tail.force();\n                if (Cons.isCons(tail)) {\n                    next = tail;\n                }\n                else {\n                    return nil_1.Nil;\n                }\n            }\n            else {\n                return Cons.of(next._head, next._tail.map((tail) => Cons.isCons(tail) ? tail.distinct(seen.add(next._head)) : nil_1.Nil));\n            }\n        }\n    }\n    get(index) {\n        return index < 0 ? alfa_option_1.None : this.skip(index).first();\n    }\n    has(index) {\n        return this.get(index).isSome();\n    }\n    set(index, value) {\n        if (index < 0) {\n            return this;\n        }\n        if (index === 0) {\n            if (alfa_equatable_1.Equatable.equals(value, this._head)) {\n                return this;\n            }\n            return new Cons(value, this._tail);\n        }\n        return new Cons(this._head, this._tail.map((tail) => tail.set(index - 1, value)));\n    }\n    insert(index, value) {\n        if (index < 0) {\n            return this;\n        }\n        if (index === 0) {\n            return new Cons(value, alfa_lazy_1.Lazy.force(this));\n        }\n        return new Cons(this._head, this._tail.map((tail) => tail.set(index - 1, value)));\n    }\n    append(value) {\n        return new Cons(this._head, this._tail.map((tail) => tail.append(value)));\n    }\n    prepend(value) {\n        return new Cons(value, alfa_lazy_1.Lazy.force(this));\n    }\n    concat(iterable) {\n        const sequence = sequence_1.Sequence.from(iterable);\n        if (Cons.isCons(sequence)) {\n            return new Cons(this._head, this._tail.map((tail) => tail.concat(sequence)));\n        }\n        return this;\n    }\n    subtract(iterable) {\n        return this.filter((value) => !alfa_iterable_1.Iterable.includes(iterable, value));\n    }\n    intersect(iterable) {\n        return this.filter((value) => alfa_iterable_1.Iterable.includes(iterable, value));\n    }\n    tee(callback, ...args) {\n        callback(this, ...args);\n        return this;\n    }\n    zip(iterable) {\n        const sequence = sequence_1.Sequence.from(iterable);\n        if (Cons.isCons(sequence)) {\n            return new Cons([this._head, sequence._head], this._tail.map((tail) => tail.zip(sequence.rest())));\n        }\n        return nil_1.Nil;\n    }\n    first() {\n        return alfa_option_1.Option.of(this._head);\n    }\n    last() {\n        let next = this;\n        while (true) {\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return alfa_option_1.Option.of(next._head);\n            }\n        }\n    }\n    take(count) {\n        if (count <= 0) {\n            return nil_1.Nil;\n        }\n        return new Cons(this._head, count === 1\n            ? alfa_lazy_1.Lazy.force(nil_1.Nil)\n            : this._tail.map((tail) => Cons.isCons(tail) ? tail.take(count - 1) : nil_1.Nil));\n    }\n    takeWhile(predicate) {\n        return this.takeUntil(not(predicate));\n    }\n    takeUntil(predicate, index = 0) {\n        if (predicate(this._head, index)) {\n            return nil_1.Nil;\n        }\n        return new Cons(this._head, this._tail.map((tail) => Cons.isCons(tail)\n            ? tail.takeUntil(predicate, index + 1)\n            : tail.takeUntil(predicate)));\n    }\n    takeLast(count) {\n        return this.skip(this.size - count);\n    }\n    takeLastWhile(predicate) {\n        return this.reverse().takeWhile(predicate).reverse();\n    }\n    takeLastUntil(predicate) {\n        return this.takeLastWhile(not(predicate));\n    }\n    skip(count) {\n        let next = this;\n        while (count-- > 0) {\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return nil_1.Nil;\n            }\n        }\n        return next;\n    }\n    skipWhile(predicate) {\n        let next = this;\n        let index = 0;\n        while (predicate(next._head, index++)) {\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return nil_1.Nil;\n            }\n        }\n        return next;\n    }\n    skipUntil(predicate) {\n        return this.skipWhile(not(predicate));\n    }\n    skipLast(count) {\n        return this.take(this.size - count);\n    }\n    skipLastWhile(predicate) {\n        return this.reverse().skipWhile(predicate).reverse();\n    }\n    skipLastUntil(predicate) {\n        return this.skipLastWhile(not(predicate));\n    }\n    trim(predicate) {\n        return this.trimLeading(predicate).trimTrailing(predicate);\n    }\n    trimLeading(predicate) {\n        return this.skipWhile(predicate);\n    }\n    trimTrailing(predicate) {\n        return this.skipLastWhile(predicate);\n    }\n    rest() {\n        return this._tail.force();\n    }\n    slice(start, end) {\n        let slice = this.skip(start);\n        if (end !== undefined) {\n            slice = slice.take(end - start);\n        }\n        return slice;\n    }\n    reverse() {\n        return this.reduce((reversed, value) => new Cons(value, alfa_lazy_1.Lazy.force(reversed)), nil_1.Nil);\n    }\n    join(separator) {\n        let result = `${this._head}`;\n        let next = this;\n        while (true) {\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                result += `${separator}${tail._head}`;\n                next = tail;\n            }\n            else {\n                return result;\n            }\n        }\n    }\n    sort() {\n        return this.sortWith(compareComparable);\n    }\n    sortWith(comparer) {\n        return sequence_1.Sequence.fromArray(alfa_array_1.Array.sortWith(this.toArray(), comparer));\n    }\n    compare(iterable) {\n        return this.compareWith(iterable, alfa_comparable_1.Comparable.compare);\n    }\n    compareWith(iterable, comparer) {\n        return alfa_iterable_1.Iterable.compareWith(this, iterable, comparer);\n    }\n    groupBy(grouper) {\n        return this.reduce((groups, value, index) => {\n            const group = grouper(value, index);\n            return groups.set(group, new Cons(value, alfa_lazy_1.Lazy.force(groups.get(group).getOrElse(() => nil_1.Nil))));\n        }, alfa_map_1.Map.empty()).map((group) => group.reverse());\n    }\n    equals(value) {\n        if (!Cons.isCons(value)) {\n            return false;\n        }\n        let a = this;\n        let b = value;\n        while (true) {\n            if (!alfa_equatable_1.Equatable.equals(a._head, b._head)) {\n                return false;\n            }\n            const ta = a._tail.force();\n            const tb = b._tail.force();\n            if (Cons.isCons(ta) && Cons.isCons(tb)) {\n                a = ta;\n                b = tb;\n            }\n            else {\n                return ta === nil_1.Nil && tb === nil_1.Nil;\n            }\n        }\n    }\n    hash(hash) {\n        let size = 0;\n        for (const value of this) {\n            hash.writeUnknown(value);\n            size++;\n        }\n        hash.writeUint32(size);\n    }\n    *iterator() {\n        let next = this;\n        while (true) {\n            yield next._head;\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                break;\n            }\n        }\n    }\n    [Symbol.iterator]() {\n        return this.iterator();\n    }\n    toArray() {\n        const array = [];\n        let next = this;\n        while (true) {\n            array.push(next._head);\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return array;\n            }\n        }\n    }\n    toJSON() {\n        const json = [];\n        let next = this;\n        while (true) {\n            json.push(alfa_json_1.Serializable.toJSON(next._head));\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return json;\n            }\n        }\n    }\n    toString() {\n        return `Sequence [ ${this.join(\", \")} ]`;\n    }\n}\nexports.Cons = Cons;\n/**\n * @public\n */\n(function (Cons) {\n    function isCons(value) {\n        return value instanceof Cons;\n    }\n    Cons.isCons = isCons;\n})(Cons || (exports.Cons = Cons = {}));\n//# sourceMappingURL=cons.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-table/node_modules/@siteimprove/alfa-sequence/src/cons.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-table/node_modules/@siteimprove/alfa-sequence/src/index.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-table/node_modules/@siteimprove/alfa-sequence/src/index.js ***!
  \***************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./cons */ \"./node_modules/@siteimprove/alfa-table/node_modules/@siteimprove/alfa-sequence/src/cons.js\"), exports);\n__exportStar(__webpack_require__(/*! ./nil */ \"./node_modules/@siteimprove/alfa-table/node_modules/@siteimprove/alfa-sequence/src/nil.js\"), exports);\n__exportStar(__webpack_require__(/*! ./sequence */ \"./node_modules/@siteimprove/alfa-table/node_modules/@siteimprove/alfa-sequence/src/sequence.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-table/node_modules/@siteimprove/alfa-sequence/src/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-table/node_modules/@siteimprove/alfa-sequence/src/nil.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-table/node_modules/@siteimprove/alfa-sequence/src/nil.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Nil = void 0;\nconst alfa_comparable_1 = __webpack_require__(/*! @siteimprove/alfa-comparable */ \"./node_modules/@siteimprove/alfa-comparable/src/index.js\");\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_map_1 = __webpack_require__(/*! @siteimprove/alfa-map */ \"./node_modules/@siteimprove/alfa-map/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst sequence_1 = __webpack_require__(/*! ./sequence */ \"./node_modules/@siteimprove/alfa-table/node_modules/@siteimprove/alfa-sequence/src/sequence.js\");\nconst cons_1 = __webpack_require__(/*! ./cons */ \"./node_modules/@siteimprove/alfa-table/node_modules/@siteimprove/alfa-sequence/src/cons.js\");\n/**\n * @public\n */\nexports.Nil = new (class Nil {\n    get size() {\n        return 0;\n    }\n    isEmpty() {\n        return true;\n    }\n    forEach() { }\n    map() {\n        return this;\n    }\n    apply() {\n        return this;\n    }\n    flatMap() {\n        return this;\n    }\n    flatten() {\n        return this;\n    }\n    reduce(reducer, accumulator) {\n        return accumulator;\n    }\n    reduceWhile(predicate, reducer, accumulator) {\n        return accumulator;\n    }\n    reduceUntil(predicate, reducer, accumulator) {\n        return accumulator;\n    }\n    filter() {\n        return this;\n    }\n    reject() {\n        return this;\n    }\n    find() {\n        return alfa_option_1.None;\n    }\n    includes() {\n        return false;\n    }\n    collect() {\n        return this;\n    }\n    collectFirst() {\n        return alfa_option_1.None;\n    }\n    some() {\n        return false;\n    }\n    none() {\n        return true;\n    }\n    every() {\n        return true;\n    }\n    count() {\n        return 0;\n    }\n    distinct() {\n        return this;\n    }\n    get() {\n        return alfa_option_1.None;\n    }\n    has() {\n        return false;\n    }\n    set() {\n        return this;\n    }\n    insert(index, value) {\n        return index === 0 ? cons_1.Cons.of(value) : this;\n    }\n    append(value) {\n        return cons_1.Cons.of(value);\n    }\n    prepend(value) {\n        return cons_1.Cons.of(value);\n    }\n    concat(iterable) {\n        if (iterable === this) {\n            return this;\n        }\n        return sequence_1.Sequence.from(iterable);\n    }\n    subtract() {\n        return this;\n    }\n    intersect() {\n        return this;\n    }\n    tee(callback, ...args) {\n        callback(this, ...args);\n        return this;\n    }\n    zip() {\n        return this;\n    }\n    first() {\n        return alfa_option_1.None;\n    }\n    last() {\n        return alfa_option_1.None;\n    }\n    take() {\n        return this;\n    }\n    takeWhile() {\n        return this;\n    }\n    takeUntil() {\n        return this;\n    }\n    takeLast() {\n        return this;\n    }\n    takeLastWhile() {\n        return this;\n    }\n    takeLastUntil() {\n        return this;\n    }\n    skip() {\n        return this;\n    }\n    skipWhile() {\n        return this;\n    }\n    skipUntil() {\n        return this;\n    }\n    skipLast() {\n        return this;\n    }\n    skipLastWhile() {\n        return this;\n    }\n    skipLastUntil() {\n        return this;\n    }\n    trim() {\n        return this;\n    }\n    trimLeading() {\n        return this;\n    }\n    trimTrailing() {\n        return this;\n    }\n    rest() {\n        return this;\n    }\n    slice() {\n        return this;\n    }\n    reverse() {\n        return this;\n    }\n    join() {\n        return \"\";\n    }\n    sort() {\n        return this;\n    }\n    sortWith() {\n        return this;\n    }\n    compare(iterable) {\n        return this.compareWith(iterable, alfa_comparable_1.Comparable.compare);\n    }\n    compareWith(iterable, comparer) {\n        return alfa_iterable_1.Iterable.compareWith(this, iterable, comparer);\n    }\n    groupBy() {\n        return alfa_map_1.Map.empty();\n    }\n    equals(value) {\n        return value instanceof Nil;\n    }\n    hash(hash) {\n        hash.writeUint32(0);\n    }\n    *iterator() { }\n    [Symbol.iterator]() {\n        return this.iterator();\n    }\n    toArray() {\n        return [];\n    }\n    toJSON() {\n        return [];\n    }\n    toString() {\n        return \"Sequence []\";\n    }\n})();\n//# sourceMappingURL=nil.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-table/node_modules/@siteimprove/alfa-sequence/src/nil.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-table/node_modules/@siteimprove/alfa-sequence/src/sequence.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-table/node_modules/@siteimprove/alfa-sequence/src/sequence.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Sequence = void 0;\nconst alfa_array_1 = __webpack_require__(/*! @siteimprove/alfa-array */ \"./node_modules/@siteimprove/alfa-array/src/index.js\");\nconst alfa_lazy_1 = __webpack_require__(/*! @siteimprove/alfa-lazy */ \"./node_modules/@siteimprove/alfa-lazy/src/index.js\");\nconst cons_1 = __webpack_require__(/*! ./cons */ \"./node_modules/@siteimprove/alfa-table/node_modules/@siteimprove/alfa-sequence/src/cons.js\");\nconst nil_1 = __webpack_require__(/*! ./nil */ \"./node_modules/@siteimprove/alfa-table/node_modules/@siteimprove/alfa-sequence/src/nil.js\");\n/**\n * @public\n */\nvar Sequence;\n(function (Sequence) {\n    function isSequence(value) {\n        return isCons(value) || isNil(value);\n    }\n    Sequence.isSequence = isSequence;\n    function isCons(value) {\n        return cons_1.Cons.isCons(value);\n    }\n    Sequence.isCons = isCons;\n    function isNil(value) {\n        return value === nil_1.Nil;\n    }\n    Sequence.isNil = isNil;\n    function of(head, tail) {\n        return cons_1.Cons.of(head, tail);\n    }\n    Sequence.of = of;\n    function empty() {\n        return nil_1.Nil;\n    }\n    Sequence.empty = empty;\n    function from(iterable) {\n        if (isSequence(iterable)) {\n            return iterable;\n        }\n        if (alfa_array_1.Array.isArray(iterable)) {\n            return fromArray(iterable);\n        }\n        return fromIterable(iterable);\n    }\n    Sequence.from = from;\n    function fromArray(array) {\n        let i = 0;\n        const tail = () => {\n            if (i >= array.length) {\n                return empty();\n            }\n            return of(array[i++], alfa_lazy_1.Lazy.of(tail));\n        };\n        return tail();\n    }\n    Sequence.fromArray = fromArray;\n    function fromIterable(iterable) {\n        return fromIterator(iterable[Symbol.iterator]());\n    }\n    Sequence.fromIterable = fromIterable;\n    function fromIterator(iterator) {\n        const tail = () => {\n            const head = iterator.next();\n            if (head.done === true) {\n                return empty();\n            }\n            return of(head.value, alfa_lazy_1.Lazy.of(tail));\n        };\n        return tail();\n    }\n    Sequence.fromIterator = fromIterator;\n})(Sequence || (exports.Sequence = Sequence = {}));\n//# sourceMappingURL=sequence.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-table/node_modules/@siteimprove/alfa-sequence/src/sequence.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-table/src/anchored.js":
/*!**************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-table/src/anchored.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Anchored = void 0;\n/**\n * @internal\n */\nvar Anchored;\n(function (Anchored) {\n    function compare(a, b) {\n        return a.anchor.compare(b.anchor);\n    }\n    Anchored.compare = compare;\n    function equals(a, b) {\n        return a.anchor.equals(b.anchor);\n    }\n    Anchored.equals = equals;\n})(Anchored || (exports.Anchored = Anchored = {}));\n//# sourceMappingURL=anchored.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-table/src/anchored.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-table/src/cell.js":
/*!**********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-table/src/cell.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Cell = void 0;\nconst alfa_array_1 = __webpack_require__(/*! @siteimprove/alfa-array */ \"./node_modules/@siteimprove/alfa-array/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_refinement_1 = __webpack_require__(/*! @siteimprove/alfa-refinement */ \"./node_modules/@siteimprove/alfa-refinement/src/index.js\");\nconst alfa_sequence_1 = __webpack_require__(/*! @siteimprove/alfa-sequence */ \"./node_modules/@siteimprove/alfa-table/node_modules/@siteimprove/alfa-sequence/src/index.js\");\nconst anchored_1 = __webpack_require__(/*! ./anchored */ \"./node_modules/@siteimprove/alfa-table/src/anchored.js\");\nconst predicate = __webpack_require__(/*! ./cell/predicate */ \"./node_modules/@siteimprove/alfa-table/src/cell/predicate.js\");\nconst { and, or } = alfa_refinement_1.Refinement;\nconst { isElement } = alfa_dom_1.Element;\nconst { isText } = alfa_dom_1.Text;\n/**\n * {@link https://html.spec.whatwg.org/#concept-cell}\n *\n * @public\n */\nclass Cell {\n    constructor(element, anchor, width, height, headers) {\n        this._element = element;\n        this._anchor = anchor;\n        this._width = width;\n        this._height = height;\n        this._headers = headers;\n    }\n    get element() {\n        return this._element;\n    }\n    get anchor() {\n        return this._anchor;\n    }\n    get x() {\n        return this._anchor.x;\n    }\n    get y() {\n        return this._anchor.y;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get headers() {\n        return alfa_sequence_1.Sequence.from(this._headers);\n    }\n    /**\n     * {@link https://html.spec.whatwg.org/#empty-cell}\n     */\n    isEmpty() {\n        return this._element.children().none(or(isElement, and(isText, (text) => text.data.trim().length > 0)));\n    }\n    compare(anchored) {\n        return anchored_1.Anchored.compare(this, anchored);\n    }\n    equals(value) {\n        return (value instanceof Cell &&\n            value._element.equals(this._element) &&\n            value._anchor.equals(this._anchor) &&\n            value._width === this._width &&\n            value._height === this._height &&\n            alfa_array_1.Array.equals(value._headers, this._headers));\n    }\n}\nexports.Cell = Cell;\n/**\n * @public\n */\n(function (Cell) {\n    function isCell(value) {\n        return value instanceof Cell;\n    }\n    Cell.isCell = isCell;\n    Cell.hasElement = predicate.hasElement;\n    class Data extends Cell {\n        static of(element, anchor, width, height, headers = []) {\n            return new Data(element, anchor, width, height, alfa_array_1.Array.sort(alfa_array_1.Array.copy(alfa_array_1.Array.from(headers))));\n        }\n        constructor(element, anchor, width, height, headers) {\n            super(element, anchor, width, height, headers);\n        }\n        isData() {\n            return true;\n        }\n        isHeader() {\n            return false;\n        }\n        equals(value) {\n            return value instanceof Data && super.equals(value);\n        }\n        toJSON() {\n            return {\n                type: \"data\",\n                element: this._element.path(),\n                anchor: this._anchor.toJSON(),\n                width: this._width,\n                height: this._height,\n                headers: alfa_array_1.Array.toJSON(this._headers),\n            };\n        }\n    }\n    Cell.Data = Data;\n    (function (Data) {\n        function isData(value) {\n            return value instanceof Data;\n        }\n        Data.isData = isData;\n    })(Data = Cell.Data || (Cell.Data = {}));\n    Cell.data = Data.of, Cell.isData = Data.isData;\n    class Header extends Cell {\n        static of(element, anchor, width, height, headers = [], scope = \"auto\") {\n            return new Header(element, anchor, width, height, alfa_array_1.Array.sort(alfa_array_1.Array.copy(alfa_array_1.Array.from(headers))), scope);\n        }\n        constructor(element, anchor, width, height, headers, scope) {\n            super(element, anchor, width, height, headers);\n            this._scope = scope;\n        }\n        get scope() {\n            return this._scope;\n        }\n        isData() {\n            return false;\n        }\n        isHeader() {\n            return true;\n        }\n        equals(value) {\n            return (value instanceof Header &&\n                super.equals(value) &&\n                value._scope === this._scope);\n        }\n        toJSON() {\n            return {\n                type: \"header\",\n                scope: this._scope,\n                element: this._element.path(),\n                anchor: this._anchor.toJSON(),\n                width: this._width,\n                height: this._height,\n                headers: alfa_array_1.Array.toJSON(this._headers),\n            };\n        }\n    }\n    Cell.Header = Header;\n    (function (Header) {\n        function isHeader(value) {\n            return value instanceof Header;\n        }\n        Header.isHeader = isHeader;\n    })(Header = Cell.Header || (Cell.Header = {}));\n    Cell.header = Header.of, Cell.isHeader = Header.isHeader;\n})(Cell || (exports.Cell = Cell = {}));\n//# sourceMappingURL=cell.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-table/src/cell.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-table/src/cell/predicate.js":
/*!********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-table/src/cell/predicate.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./predicate/has-element */ \"./node_modules/@siteimprove/alfa-table/src/cell/predicate/has-element.js\"), exports);\n//# sourceMappingURL=predicate.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-table/src/cell/predicate.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-table/src/cell/predicate/has-element.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-table/src/cell/predicate/has-element.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.hasElement = void 0;\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst { equals } = alfa_predicate_1.Predicate;\nfunction hasElement(elementOrPredicate) {\n    let predicate;\n    if (typeof elementOrPredicate === \"function\") {\n        predicate = elementOrPredicate;\n    }\n    else {\n        predicate = equals(elementOrPredicate);\n    }\n    return (cell) => predicate(cell.element);\n}\nexports.hasElement = hasElement;\n//# sourceMappingURL=has-element.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-table/src/cell/predicate/has-element.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-table/src/column.js":
/*!************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-table/src/column.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Column = void 0;\nconst anchored_1 = __webpack_require__(/*! ./anchored */ \"./node_modules/@siteimprove/alfa-table/src/anchored.js\");\nconst slot_1 = __webpack_require__(/*! ./slot */ \"./node_modules/@siteimprove/alfa-table/src/slot.js\");\n/**\n * {@link https://html.spec.whatwg.org/#concept-column}\n *\n * @public\n */\nclass Column {\n    static of(x) {\n        return new Column(x);\n    }\n    constructor(x) {\n        this._x = x;\n    }\n    get x() {\n        return this._x;\n    }\n    get anchor() {\n        return slot_1.Slot.of(this._x, 0);\n    }\n    compare(anchored) {\n        return anchored_1.Anchored.compare(this, anchored);\n    }\n    equals(value) {\n        return value instanceof Column && value._x === this._x;\n    }\n    toJSON() {\n        return {\n            x: this._x,\n        };\n    }\n}\nexports.Column = Column;\n/**\n * @public\n */\n(function (Column) {\n    function isColumn(value) {\n        return value instanceof Column;\n    }\n    Column.isColumn = isColumn;\n    /**\n     * {@link https://html.spec.whatwg.org/#concept-column-group}\n     */\n    class Group {\n        static of(element, x, width) {\n            return new Group(element, x, width);\n        }\n        constructor(element, x, width) {\n            this._element = element;\n            this._x = x;\n            this._width = width;\n        }\n        get element() {\n            return this._element;\n        }\n        get x() {\n            return this._x;\n        }\n        get anchor() {\n            return slot_1.Slot.of(this._x, 0);\n        }\n        get width() {\n            return this._width;\n        }\n        compare(anchored) {\n            return anchored_1.Anchored.compare(this, anchored);\n        }\n        equals(value) {\n            return (value instanceof Group &&\n                value._element.equals(this._element) &&\n                value._x === this._x &&\n                value._width === this._width);\n        }\n        toJSON() {\n            return {\n                element: this._element.path(),\n                x: this._x,\n                width: this._width,\n            };\n        }\n    }\n    Column.Group = Group;\n    (function (Group) {\n        function isGroup(value) {\n            return value instanceof Group;\n        }\n        Group.isGroup = isGroup;\n    })(Group = Column.Group || (Column.Group = {}));\n    Column.group = Group.of, Column.isGroup = Group.isGroup;\n})(Column || (exports.Column = Column = {}));\n//# sourceMappingURL=column.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-table/src/column.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-table/src/group.js":
/*!***********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-table/src/group.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Group = void 0;\nconst alfa_refinement_1 = __webpack_require__(/*! @siteimprove/alfa-refinement */ \"./node_modules/@siteimprove/alfa-refinement/src/index.js\");\nconst column_1 = __webpack_require__(/*! ./column */ \"./node_modules/@siteimprove/alfa-table/src/column.js\");\nconst row_1 = __webpack_require__(/*! ./row */ \"./node_modules/@siteimprove/alfa-table/src/row.js\");\nconst { or } = alfa_refinement_1.Refinement;\n/**\n * @public\n */\nvar Group;\n(function (Group) {\n    Group.isColumn = column_1.Column.isGroup;\n    Group.isRow = row_1.Row.isGroup;\n    Group.isGroup = or(Group.isColumn, Group.isRow);\n})(Group || (exports.Group = Group = {}));\n//# sourceMappingURL=group.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-table/src/group.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-table/src/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-table/src/index.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./anchored */ \"./node_modules/@siteimprove/alfa-table/src/anchored.js\"), exports);\n__exportStar(__webpack_require__(/*! ./cell */ \"./node_modules/@siteimprove/alfa-table/src/cell.js\"), exports);\n__exportStar(__webpack_require__(/*! ./column */ \"./node_modules/@siteimprove/alfa-table/src/column.js\"), exports);\n__exportStar(__webpack_require__(/*! ./group */ \"./node_modules/@siteimprove/alfa-table/src/group.js\"), exports);\n__exportStar(__webpack_require__(/*! ./row */ \"./node_modules/@siteimprove/alfa-table/src/row.js\"), exports);\n__exportStar(__webpack_require__(/*! ./scope */ \"./node_modules/@siteimprove/alfa-table/src/scope.js\"), exports);\n__exportStar(__webpack_require__(/*! ./slot */ \"./node_modules/@siteimprove/alfa-table/src/slot.js\"), exports);\n__exportStar(__webpack_require__(/*! ./table */ \"./node_modules/@siteimprove/alfa-table/src/table.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-table/src/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-table/src/row.js":
/*!*********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-table/src/row.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Row = void 0;\nconst anchored_1 = __webpack_require__(/*! ./anchored */ \"./node_modules/@siteimprove/alfa-table/src/anchored.js\");\nconst slot_1 = __webpack_require__(/*! ./slot */ \"./node_modules/@siteimprove/alfa-table/src/slot.js\");\n/**\n * {@link https://html.spec.whatwg.org/#concept-row}\n *\n * @public\n */\nclass Row {\n    static of(y) {\n        return new Row(y);\n    }\n    constructor(y) {\n        this._y = y;\n    }\n    get y() {\n        return this._y;\n    }\n    get anchor() {\n        return slot_1.Slot.of(0, this._y);\n    }\n    compare(anchored) {\n        return anchored_1.Anchored.compare(this, anchored);\n    }\n    equals(value) {\n        return value instanceof Row && value._y === this._y;\n    }\n    toJSON() {\n        return {\n            y: this._y,\n        };\n    }\n}\nexports.Row = Row;\n/**\n * @public\n */\n(function (Row) {\n    function isRow(value) {\n        return value instanceof Row;\n    }\n    Row.isRow = isRow;\n    /**\n     * {@link https://html.spec.whatwg.org/#concept-row-group}\n     */\n    class Group {\n        static of(element, y, height) {\n            return new Group(element, y, height);\n        }\n        constructor(element, y, height) {\n            this._element = element;\n            this._y = y;\n            this._height = height;\n        }\n        get element() {\n            return this._element;\n        }\n        get y() {\n            return this._y;\n        }\n        get anchor() {\n            return slot_1.Slot.of(0, this._y);\n        }\n        get height() {\n            return this._height;\n        }\n        compare(anchored) {\n            return anchored_1.Anchored.compare(this, anchored);\n        }\n        equals(value) {\n            return (value instanceof Group &&\n                value._element.equals(this._element) &&\n                value._y === this._y &&\n                value._height === this._height);\n        }\n        toJSON() {\n            return {\n                element: this._element.path(),\n                y: this._y,\n                height: this._height,\n            };\n        }\n    }\n    Row.Group = Group;\n    (function (Group) {\n        function isGroup(value) {\n            return value instanceof Group;\n        }\n        Group.isGroup = isGroup;\n    })(Group = Row.Group || (Row.Group = {}));\n    Row.group = Group.of, Row.isGroup = Group.isGroup;\n})(Row || (exports.Row = Row = {}));\n//# sourceMappingURL=row.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-table/src/row.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-table/src/scope.js":
/*!***********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-table/src/scope.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Scope = void 0;\n/**\n * @public\n */\nvar Scope;\n(function (Scope) {\n    /**\n     * {@link https://html.spec.whatwg.org/#attr-th-scope}\n     */\n    function from(element) {\n        return element\n            .attribute(\"scope\")\n            .flatMap((attribute) => attribute.enumerate(\"row\", \"rowgroup\", \"col\", \"colgroup\"))\n            .map((scope) => {\n            switch (scope) {\n                case \"row\":\n                    return \"row\";\n                case \"rowgroup\":\n                    return \"row-group\";\n                case \"col\":\n                    return \"column\";\n                case \"colgroup\":\n                    return \"column-group\";\n            }\n        })\n            .getOr(\"auto\");\n    }\n    Scope.from = from;\n})(Scope || (exports.Scope = Scope = {}));\n//# sourceMappingURL=scope.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-table/src/scope.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-table/src/slot.js":
/*!**********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-table/src/slot.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Slot = void 0;\nconst alfa_comparable_1 = __webpack_require__(/*! @siteimprove/alfa-comparable */ \"./node_modules/@siteimprove/alfa-comparable/src/index.js\");\n/**\n * {@link https://html.spec.whatwg.org/#concept-slots}\n *\n * @public\n */\nclass Slot {\n    static of(x, y) {\n        return new Slot(x, y);\n    }\n    constructor(x, y) {\n        this._x = x;\n        this._y = y;\n    }\n    get x() {\n        return this._x;\n    }\n    get y() {\n        return this._y;\n    }\n    compare(slot) {\n        // Slots are compared first by y-coordinate, then by x-coordinate. This way,\n        // cells will be ordered as they appear in tree-order.\n        if (this._y > slot._y) {\n            return alfa_comparable_1.Comparison.Greater;\n        }\n        if (this._y < slot._y) {\n            return alfa_comparable_1.Comparison.Less;\n        }\n        if (this._x > slot._x) {\n            return alfa_comparable_1.Comparison.Greater;\n        }\n        if (this._x < slot._x) {\n            return alfa_comparable_1.Comparison.Less;\n        }\n        return alfa_comparable_1.Comparison.Equal;\n    }\n    equals(value) {\n        return (value instanceof Slot && value._x === this._x && value._y === this._y);\n    }\n    toJSON() {\n        return {\n            x: this._x,\n            y: this._y,\n        };\n    }\n}\nexports.Slot = Slot;\n/**\n * @public\n */\n(function (Slot) {\n    function isSlot(value) {\n        return value instanceof Slot;\n    }\n    Slot.isSlot = isSlot;\n})(Slot || (exports.Slot = Slot = {}));\n//# sourceMappingURL=slot.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-table/src/slot.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-table/src/table.js":
/*!***********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-table/src/table.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Table = void 0;\nconst alfa_array_1 = __webpack_require__(/*! @siteimprove/alfa-array */ \"./node_modules/@siteimprove/alfa-array/src/index.js\");\nconst alfa_cache_1 = __webpack_require__(/*! @siteimprove/alfa-cache */ \"./node_modules/@siteimprove/alfa-cache/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_math_1 = __webpack_require__(/*! @siteimprove/alfa-math */ \"./node_modules/@siteimprove/alfa-math/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_sequence_1 = __webpack_require__(/*! @siteimprove/alfa-sequence */ \"./node_modules/@siteimprove/alfa-table/node_modules/@siteimprove/alfa-sequence/src/index.js\");\nconst cell_1 = __webpack_require__(/*! ./cell */ \"./node_modules/@siteimprove/alfa-table/src/cell.js\");\nconst column_1 = __webpack_require__(/*! ./column */ \"./node_modules/@siteimprove/alfa-table/src/column.js\");\nconst row_1 = __webpack_require__(/*! ./row */ \"./node_modules/@siteimprove/alfa-table/src/row.js\");\nconst slot_1 = __webpack_require__(/*! ./slot */ \"./node_modules/@siteimprove/alfa-table/src/slot.js\");\nconst scope_1 = __webpack_require__(/*! ./scope */ \"./node_modules/@siteimprove/alfa-table/src/scope.js\");\nconst { isNaN } = Number;\nconst { clamp } = alfa_math_1.Real;\nconst { not, equals } = alfa_predicate_1.Predicate;\nconst { hasName, isElement } = alfa_dom_1.Element;\n/**\n * {@link https://html.spec.whatwg.org/#concept-table}\n *\n * @public\n */\nclass Table {\n    static of(element, cells, groups) {\n        return new Table(element, alfa_array_1.Array.sort(alfa_array_1.Array.copy(alfa_array_1.Array.from(cells))), alfa_array_1.Array.sort(alfa_array_1.Array.copy(alfa_array_1.Array.from(groups))));\n    }\n    static empty(element) {\n        return new Table(element, [], []);\n    }\n    constructor(element, cells, groups) {\n        this._element = element;\n        this._cells = cells;\n        this._groups = groups;\n    }\n    get element() {\n        return this._element;\n    }\n    get cells() {\n        return alfa_sequence_1.Sequence.from(this._cells);\n    }\n    get groups() {\n        return alfa_sequence_1.Sequence.from(this._groups);\n    }\n    isEmpty() {\n        return this._cells.length === 0;\n    }\n    equals(value) {\n        return (value instanceof Table &&\n            value._element.equals(this._element) &&\n            alfa_array_1.Array.equals(value._cells, this._cells));\n    }\n    toJSON() {\n        return {\n            element: this._element.path(),\n            cells: alfa_array_1.Array.toJSON(this._cells),\n            groups: alfa_array_1.Array.toJSON(this._groups),\n        };\n    }\n}\nexports.Table = Table;\n/**\n * @public\n */\n(function (Table) {\n    const cache = alfa_cache_1.Cache.empty();\n    function from(element) {\n        return cache.get(element, () => formTable(element));\n    }\n    Table.from = from;\n    /**\n     * {@link https://html.spec.whatwg.org/#forming-a-table}\n     */\n    function formTable(element) {\n        // 1\n        let xWidth = 0;\n        // 2\n        let yHeight = 0;\n        // 3\n        const footers = [];\n        // 4\n        const cells = [];\n        const groups = [];\n        // We model tables as an array of rows with each row containing an array of\n        // columns and each column containing an array of cell indices.\n        //\n        // Tables are indexed first by row and then by column. This way, rows are\n        // aligned vertically and columns horizontally:\n        //\n        //   table = [\n        //     /* row 1 */ [/* column 1 */, /* column 2 */],\n        //     /* row 2 */ [/* column 1 */, /* column 2 */],\n        //   ]\n        //\n        // This makes it considerably easier to debug table construction by not\n        // having to rotate your screen 90 degrees to make sense of things.\n        const table = [];\n        // Keep track of which columns and rows have data cells. This information is\n        // used when determining the scope of header cells.\n        //\n        // Consider the following table, with letters indicating headers and numbers\n        // indicating data:\n        //\n        //   +---+---+---+\n        //   |   | A | B |\n        //   +---+---+---+\n        //   | C | 1 | 2 |\n        //   +---+---+---+\n        //\n        // For this table, the following `data` object would be constructed:\n        //\n        //   data = {\n        //     x: Set { 1, 2 }\n        //     y: Set { 1 }\n        //   }\n        //\n        // This tells us that across the x-axis column 1 and 2 contain data, and\n        // across the y-axis row 1 contains data. Empty cells never count as data.\n        //\n        // For the headers \"A\" and \"B\" we can therefore determine that these should\n        // be column headers as row 0 contains no data. For the header \"C\" we can\n        // determine that this should be a row header as column 0 has no data.\n        const data = { x: new Set(), y: new Set() };\n        // Keep track of headings along rows and columns. This information is used\n        // when determining implicitly assigned header cells.\n        //\n        // Consider the following table, with letters indicating headers and numbers\n        // indicating data:\n        //\n        //   +---+---+---+\n        //   |   | A | B |\n        //   +---+---+---+\n        //   | C | 1 | 2 |\n        //   +---+---+---+\n        //\n        // For this table, the following `jumps` object would be constructed:\n        //\n        //   jumps = {\n        //     x: Map {\n        //       0 => [ 1 ]\n        //       1 => [ 0 ],\n        //       2 => [ 0 ],\n        //     },\n        //     y: Map {\n        //       0 => [ 1, 2 ],\n        //       1 => [ 0 ]\n        //     }\n        //   }\n        //\n        // This tells us that across the x-axis, column 0 contains a header at row 1\n        // while columns 1 and 2 contain headers at row 0. Across the y-axis, row 0\n        // contains headers at column 1 and 2 while row 1 contains a header at\n        // column 0.\n        //\n        // For the cell \"2\" on row 1 we can therefore determine that we can jump\n        // directly to x-coordinate 0 when scanning for row headers as this is the\n        // only column with a header on row 1. This saves us from having to visit\n        // cell \"1\" just to determine that it's a data cell.\n        const jumps = {\n            x: new Map(),\n            y: new Map(),\n        };\n        // Keep track of cells that can be indexed by element ID. This information\n        // is used when determining explicitly assigned header cells.\n        const index = new Map();\n        // Keep track of the groups associated with columns and rows. This\n        // information is used when determining implicitly assigned header cells.\n        const groupings = {\n            x: new Map(),\n            y: new Map(),\n        };\n        // 5\n        if (element.children().isEmpty()) {\n            return Table.of(element, cells, groups);\n        }\n        // 6\n        // Nothing to do\n        // 7\n        let children = element.children().filter(isElement);\n        /**\n         * The current child element of the table.\n         */\n        let current = children.first();\n        /**\n         * Advance to the next child element of the table.\n         */\n        function advance() {\n            children = children.rest();\n            current = children.first();\n            return current;\n        }\n        /**\n         * Skip child elements of the table while the predicate holds.\n         */\n        function skip(predicate) {\n            while (current.some(predicate)) {\n                advance();\n            }\n        }\n        // 8\n        skip(not(hasName(\"colgroup\", \"thead\", \"tbody\", \"tfoot\", \"tr\")));\n        // 9\n        while (current.some(hasName(\"colgroup\"))) {\n            // 9.1\n            // As this step contains several substeps inlined in the algorithm, its\n            // substeps have been extracted into a function of their own.\n            processColumnGroup(current.get());\n            // 9.2\n            advance();\n            // 9.3\n            skip(not(hasName(\"colgroup\", \"thead\", \"tbody\", \"tfoot\", \"tr\")));\n            // 9.4\n            // Nothing to do\n        }\n        // 10\n        let yCurrent = 0;\n        // 11\n        let downwardGrowing = [];\n        // Steps 12-18 are repeated for as long as there are children left in the\n        // table.\n        while (current.isSome()) {\n            // 12\n            skip(not(hasName(\"thead\", \"tbody\", \"tfoot\", \"tr\")));\n            if (current.isNone()) {\n                break;\n            }\n            // 13\n            if (current.some(hasName(\"tr\"))) {\n                processRow(current.get());\n                advance();\n                continue;\n            }\n            // 14\n            endRowGroup();\n            // 15\n            if (current.some(hasName(\"tfoot\"))) {\n                footers.push(current.get());\n                advance();\n                continue;\n            }\n            // 16\n            processRowGroup(current.get());\n            // 17\n            advance();\n            // 18\n            // Nothing to do\n        }\n        // 19\n        footers.forEach(processRowGroup);\n        // 20\n        // Nothing to do\n        // 21\n        // Before returning the final table, we go through all cells and assign them\n        // scopes and headers, if any.\n        cells.forEach(assignScope);\n        cells.forEach(assignHeaders);\n        return Table.of(element, cells, groups);\n        /**\n         * Ensure that the given position is available in the table.\n         */\n        function ensure(x, y) {\n            for (let i = table.length - 1; i < y; i++) {\n                table.push([]);\n            }\n            const row = table[y];\n            for (let i = row.length - 1; i < x; i++) {\n                row.push([]);\n            }\n        }\n        /**\n         * Get the cells at the given position.\n         */\n        function get(x, y) {\n            ensure(x, y);\n            // Keep in mind that tables are indexed first by row and then by column.\n            return table[y][x];\n        }\n        /**\n         * Check if the table has cells at the given position.\n         */\n        function has(x, y) {\n            return get(x, y).length > 0;\n        }\n        /**\n         * Add a cell at the given position.\n         */\n        function add(x, y, i) {\n            const cell = cells[i];\n            if (cell.isHeader()) {\n                if (jumps.x.has(x)) {\n                    jumps.x.get(x).push(y);\n                }\n                else {\n                    jumps.x.set(x, [y]);\n                }\n                if (jumps.y.has(y)) {\n                    jumps.y.get(y).push(x);\n                }\n                else {\n                    jumps.y.set(y, [x]);\n                }\n            }\n            else if (!cell.isEmpty()) {\n                data.x.add(x);\n                data.y.add(y);\n            }\n            ensure(x, y);\n            // Keep in mind that tables are indexed first by row and then by column.\n            return table[y][x].push(i);\n        }\n        /**\n         * Determine the last position among the candidates that is less than or\n         * equal to the given initial position `i`. That is, the last value in\n         * `candidates` that is `<= i`. If no suitable candidate is found, -1 is\n         * returned.\n         */\n        function jump(i, candidates = []) {\n            for (let j = candidates.length - 1; j >= 0; j--) {\n                const candidate = candidates[j];\n                if (candidate <= i) {\n                    return candidate;\n                }\n            }\n            return -1;\n        }\n        /**\n         * {@link https://html.spec.whatwg.org/#algorithm-for-processing-row-groups}\n         */\n        function processRowGroup(element) {\n            // 1\n            const yStart = yHeight;\n            // 2\n            element\n                .children()\n                .filter(isElement)\n                .filter(hasName(\"tr\"))\n                .forEach(processRow);\n            // 3\n            if (yHeight > yStart) {\n                const group = row_1.Row.group(element, yStart, yHeight - yStart);\n                const i = groups.length;\n                groups.push(group);\n                for (let y = group.y, n = y + group.height; y < n; y++) {\n                    groupings.y.set(y, i);\n                }\n            }\n            // 4\n            endRowGroup();\n        }\n        /**\n         * {@link https://html.spec.whatwg.org/#algorithm-for-ending-a-row-group}\n         */\n        function endRowGroup() {\n            // 1\n            while (yCurrent < yHeight) {\n                // 1.1\n                growCells();\n                // 1.2\n                yCurrent++;\n            }\n            // 2\n            downwardGrowing = [];\n        }\n        /**\n         * {@link https://html.spec.whatwg.org/#algorithm-for-processing-rows}\n         */\n        function processRow(element) {\n            // 1\n            if (yHeight === yCurrent) {\n                yHeight++;\n            }\n            // 2\n            let xCurrent = 0;\n            // 3\n            growCells();\n            // 4\n            let children = element\n                .children()\n                .filter(isElement)\n                .filter(hasName(\"td\", \"th\"));\n            if (children.isEmpty()) {\n                yCurrent++;\n                return;\n            }\n            /**\n             * The current child element of the row.\n             */\n            let current = children.first();\n            /**\n             * Advance to the next child element of the row.\n             */\n            function advance() {\n                children = children.rest();\n                current = children.first();\n                return current;\n            }\n            // 5\n            // Nothing to do\n            // Steps 6-18 are repeated for as long as there are children left in the\n            // row.\n            while (current.isSome()) {\n                // 6\n                while (xCurrent < xWidth && has(xCurrent, yCurrent)) {\n                    xCurrent++;\n                }\n                // 7\n                if (xCurrent === xWidth) {\n                    xWidth++;\n                }\n                // 8\n                let colspan = integerValue(current.get(), \"colspan\", 1 /* lower */, 1000 /* upper */);\n                // 9\n                let rowspan = integerValue(current.get(), \"rowspan\", 0 /* lower */, 65534 /* upper */, 1 /* missing */);\n                // 10\n                let growsDownward;\n                if (rowspan === 0) {\n                    growsDownward = true;\n                    rowspan = 1;\n                }\n                else {\n                    growsDownward = false;\n                }\n                // 11\n                if (xWidth < xCurrent + colspan) {\n                    xWidth = xCurrent + colspan;\n                }\n                // 12\n                if (yHeight < yCurrent + rowspan) {\n                    yHeight = yCurrent + rowspan;\n                }\n                // 13\n                let cell;\n                if (current.some(hasName(\"th\"))) {\n                    cell = cell_1.Cell.header(current.get(), slot_1.Slot.of(xCurrent, yCurrent), colspan, rowspan);\n                }\n                else {\n                    cell = cell_1.Cell.data(current.get(), slot_1.Slot.of(xCurrent, yCurrent), colspan, rowspan);\n                }\n                const i = cells.length;\n                cells.push(cell);\n                for (const id of cell.element.id) {\n                    index.set(id, i);\n                }\n                for (let x = xCurrent, n = x + colspan; x < n; x++) {\n                    for (let y = yCurrent, n = y + rowspan; y < n; y++) {\n                        add(x, y, i);\n                    }\n                }\n                // 14\n                if (growsDownward) {\n                    downwardGrowing.push([cell, i]);\n                }\n                // 15\n                xCurrent += colspan;\n                // 16\n                if (advance().isNone()) {\n                    yCurrent++;\n                    return;\n                }\n                // 17\n                // Nothing to do\n                // 18\n                // Nothing to do\n            }\n        }\n        /**\n         * Carry out step 9.1 of the table forming algorithm.\n         *\n         * {@link https://html.spec.whatwg.org/#forming-a-table}\n         */\n        function processColumnGroup(element) {\n            let children = element\n                .children()\n                .filter(isElement)\n                .filter(hasName(\"col\"));\n            /**\n             * The current child element of the column group.\n             */\n            let current = children.first();\n            /**\n             * Advance to the next child element of the column group.\n             */\n            function advance() {\n                children = children.rest();\n                current = children.first();\n                return current;\n            }\n            let group;\n            let i;\n            if (!children.isEmpty()) {\n                // 1\n                const xStart = xWidth;\n                // 2\n                // Nothing to do\n                // Steps 3-6 are repeated for as long as there are children left in the\n                // column group.\n                while (current.isSome()) {\n                    // 3\n                    const span = integerValue(current.get(), \"span\", 1 /* lower */, 1000 /* upper */);\n                    // 4\n                    xWidth += span;\n                    // 5\n                    // Nothing to do\n                    // 6\n                    advance();\n                }\n                // 7\n                group = column_1.Column.group(element, xStart, xWidth - xStart);\n                i = groups.length;\n            }\n            else {\n                // 1\n                const span = integerValue(element, \"span\", 1 /* lower */, 1000 /* upper */);\n                // 2\n                xWidth += span;\n                // 3\n                group = column_1.Column.group(element, xWidth - span, span);\n                i = groups.length;\n            }\n            groups.push(group);\n            for (let x = group.x, n = x + group.width; x < n; x++) {\n                groupings.x.set(x, i);\n            }\n        }\n        /**\n         * For all downwards growing cells, extend their height to the current\n         * y-coordinate.\n         *\n         * {@link https://html.spec.whatwg.org/#algorithm-for-growing-downward-growing-cells}\n         */\n        function growCells() {\n            for (const [cell, i] of downwardGrowing) {\n                const height = yCurrent - cell.y + 1;\n                for (let x = cell.x, n = x + cell.width; x < n; x++) {\n                    for (let y = cell.y + cell.height, n = cell.y + height; y < n; y++) {\n                        add(x, y, i);\n                    }\n                }\n                if (cell.isHeader()) {\n                    cells[i] = cell_1.Cell.header(cell.element, cell.anchor, cell.width, height);\n                }\n                else {\n                    cells[i] = cell_1.Cell.data(cell.element, cell.anchor, cell.width, height);\n                }\n            }\n        }\n        /**\n         * {@link https://html.spec.whatwg.org/#algorithm-for-assigning-header-cells}\n         */\n        function assignHeaders(cell, i) {\n            // 1\n            const headers = [];\n            // 2\n            // Nothing to do\n            // 3\n            const ids = cell.element\n                .attribute(\"headers\")\n                .map((attribute) => attribute.tokens());\n            if (ids.isSome()) {\n                // 3.1\n                // Nothing to do\n                // 3.2\n                // Keep in mind that not just <th> elements but also <td> elements can\n                // be referenced as headers.\n                headers.push(...ids\n                    .get()\n                    .collect((id) => alfa_option_1.Option.from(index.get(id)).map((i) => cells[i])));\n            }\n            else {\n                // 1\n                // Nothing to do\n                // 2\n                // Nothing to do\n                // 3\n                for (let y = cell.y, n = y + cell.height; y < n; y++) {\n                    scanHeaderCells(cell, headers, cell.x, y, -1, 0);\n                }\n                // 4\n                for (let x = cell.x, n = x + cell.width; x < n; x++) {\n                    scanHeaderCells(cell, headers, x, cell.y, 0, -1);\n                }\n                // 5\n                const i = groupings.y.get(cell.y);\n                if (i !== undefined) {\n                    const group = groups[i];\n                    for (let x = cell.x + cell.width - 1; x >= 0; x--) {\n                        for (let y = group.y, n = cell.y + cell.height; y < n; y++) {\n                            x = jump(x, jumps.y.get(y));\n                            if (x < 0) {\n                                break;\n                            }\n                            headers.push(...get(x, y)\n                                .map((i) => cells[i])\n                                .filter((cell) => cell.isHeader() && isRowGroupHeader(cell)));\n                        }\n                    }\n                }\n                // 6\n                const j = groupings.x.get(cell.x);\n                if (j !== undefined) {\n                    const group = groups[j];\n                    for (let y = cell.y + cell.height - 1; y >= 0; y--) {\n                        for (let x = group.x, n = cell.x + cell.width; x < n; x++) {\n                            y = jump(y, jumps.x.get(x));\n                            if (y < 0) {\n                                break;\n                            }\n                            headers.push(...get(x, y)\n                                .map((i) => cells[i])\n                                .filter((cell) => cell.isHeader() && isColumnGroupHeader(cell)));\n                        }\n                    }\n                }\n            }\n            const filtered = alfa_sequence_1.Sequence.from(headers)\n                // 4\n                .reject((cell) => cell.isEmpty())\n                // 5\n                .distinct()\n                // 6\n                .reject(equals(cell));\n            const anchors = filtered.map((cell) => cell.anchor);\n            // 7\n            if (cell.isHeader()) {\n                cells[i] = cell_1.Cell.header(cell.element, cell.anchor, cell.width, cell.height, anchors, cell.scope);\n            }\n            else {\n                cells[i] = cell_1.Cell.data(cell.element, cell.anchor, cell.width, cell.height, anchors);\n            }\n        }\n        /**\n         * {@link https://html.spec.whatwg.org/#internal-algorithm-for-scanning-and-assigning-header-cells}\n         */\n        function scanHeaderCells(principal, headers, initialX, initialY, deltaX, deltaY) {\n            // 1\n            let x = initialX;\n            // 2\n            let y = initialY;\n            // 3\n            const opaque = [];\n            // 4\n            let inHeader = principal.isHeader();\n            let currentHeaders = inHeader ? [principal] : [];\n            // Steps 5-10 are repeated for as long as the position (x, y) is within\n            // bounds of the table.\n            while (true) {\n                // 5\n                x += deltaX;\n                y += deltaY;\n                // Fast path: Based on the current position and direction, jump to the\n                // next available heading. This ensures that we don't need to linearly\n                // scan over a bunch of data cells before finding a header.\n                if (deltaX === 0) {\n                    y = jump(y, jumps.x.get(x));\n                }\n                else {\n                    x = jump(x, jumps.y.get(y));\n                }\n                // 6\n                if (x < 0 || y < 0) {\n                    return;\n                }\n                // 7\n                const neighbour = get(x, y);\n                if (neighbour.length !== 1) {\n                    continue;\n                }\n                // 8\n                const cell = cells[neighbour[0]];\n                // 9\n                if (cell.isHeader()) {\n                    // 9.1\n                    inHeader = true;\n                    // 9.2\n                    currentHeaders.push(cell);\n                    // 9.3\n                    let blocked = false;\n                    // 9.4\n                    if (deltaX === 0) {\n                        if (opaque.some((header) => header.x === cell.x && header.width === cell.width) ||\n                            !isColumHeader(cell)) {\n                            blocked = true;\n                        }\n                    }\n                    else {\n                        if (opaque.some((header) => header.y === cell.y && header.height === cell.height) ||\n                            !isRowHeader(cell)) {\n                            blocked = true;\n                        }\n                    }\n                    // 9.5\n                    if (!blocked) {\n                        headers.push(cell);\n                    }\n                }\n                else if (inHeader) {\n                    inHeader = false;\n                    opaque.push(...currentHeaders);\n                    currentHeaders = [];\n                }\n                // 10\n                // Nothing to do\n            }\n        }\n        /**\n         * {@link https://html.spec.whatwg.org/#attr-th-scope}\n         */\n        function assignScope(cell, i) {\n            if (!cell.isHeader()) {\n                return;\n            }\n            let scope;\n            if (isColumHeader(cell)) {\n                scope = \"column\";\n            }\n            else if (isColumnGroupHeader(cell)) {\n                scope = \"column-group\";\n            }\n            else if (isRowHeader(cell)) {\n                scope = \"row\";\n            }\n            else if (isRowGroupHeader(cell)) {\n                scope = \"row-group\";\n            }\n            else {\n                return;\n            }\n            cells[i] = cell_1.Cell.header(cell.element, cell.anchor, cell.width, cell.height, cell.headers, scope);\n        }\n        /**\n         * {@link https://html.spec.whatwg.org/#column-header}\n         */\n        function isColumHeader(cell) {\n            if (cell.scope === \"column\") {\n                return true;\n            }\n            switch (scope_1.Scope.from(cell.element)) {\n                case \"column\":\n                    return true;\n                case \"auto\":\n                    for (let y = cell.y, n = y + cell.height; y < n; y++) {\n                        if (data.y.has(y)) {\n                            return false;\n                        }\n                    }\n                    return true;\n            }\n            return false;\n        }\n        /**\n         * {@link https://html.spec.whatwg.org/#column-group-header}\n         */\n        function isColumnGroupHeader(cell) {\n            return (cell.scope === \"column-group\" ||\n                scope_1.Scope.from(cell.element) === \"column-group\");\n        }\n        /**\n         * {@link https://html.spec.whatwg.org/#row-header}\n         */\n        function isRowHeader(cell) {\n            if (cell.scope === \"row\") {\n                return true;\n            }\n            switch (scope_1.Scope.from(cell.element)) {\n                case \"row\":\n                    return true;\n                case \"auto\":\n                    for (let x = cell.x, n = x + cell.width; x < n; x++) {\n                        if (data.x.has(x)) {\n                            return false;\n                        }\n                    }\n                    return true;\n            }\n            return false;\n        }\n        /**\n         * {@link https://html.spec.whatwg.org/#row-group-header}\n         */\n        function isRowGroupHeader(cell) {\n            return (cell.scope === \"row-group\" || scope_1.Scope.from(cell.element) === \"row-group\");\n        }\n    }\n    function integerValue(element, attribute, lower, upper, missing = lower) {\n        return clamp(element\n            .attribute(attribute)\n            .map((attribute) => parseInt(attribute.value))\n            .reject(isNaN)\n            .getOr(missing), lower, upper);\n    }\n})(Table || (exports.Table = Table = {}));\n//# sourceMappingURL=table.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-table/src/table.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-thunk/src/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-thunk/src/index.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./thunk */ \"./node_modules/@siteimprove/alfa-thunk/src/thunk.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-thunk/src/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-thunk/src/thunk.js":
/*!***********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-thunk/src/thunk.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Thunk = void 0;\n/**\n * @public\n */\nvar Thunk;\n(function (Thunk) {\n    function of(value) {\n        return () => value;\n    }\n    Thunk.of = of;\n    function map(thunk, mapper) {\n        return () => mapper(thunk());\n    }\n    Thunk.map = map;\n    function flatMap(thunk, mapper) {\n        return () => mapper(thunk())();\n    }\n    Thunk.flatMap = flatMap;\n    function reduce(thunk, reducer, accumulator) {\n        return reducer(accumulator, thunk());\n    }\n    Thunk.reduce = reduce;\n})(Thunk || (exports.Thunk = Thunk = {}));\n//# sourceMappingURL=thunk.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-thunk/src/thunk.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-trampoline/src/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-trampoline/src/index.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./trampoline */ \"./node_modules/@siteimprove/alfa-trampoline/src/trampoline.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-trampoline/src/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-trampoline/src/trampoline.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-trampoline/src/trampoline.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Trampoline = void 0;\nconst alfa_array_1 = __webpack_require__(/*! @siteimprove/alfa-array */ \"./node_modules/@siteimprove/alfa-array/src/index.js\");\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\n/**\n * {@link http://blog.higher-order.com/assets/trampolines.pdf}\n *\n * @public\n */\nclass Trampoline {\n    run() {\n        let step = this;\n        while (true) {\n            const next = step.step();\n            if (step !== next) {\n                step = next;\n            }\n            else {\n                return next.run();\n            }\n        }\n    }\n    map(mapper) {\n        return this.flatMap((value) => Done.of(mapper(value)));\n    }\n    apply(mapper) {\n        return mapper.flatMap((mapper) => this.map(mapper));\n    }\n    flatten() {\n        return this.flatMap((trampoline) => trampoline);\n    }\n    reduce(reducer, accumulator) {\n        return reducer(accumulator, this.run());\n    }\n    tee(callback) {\n        return this.map((value) => {\n            callback(value);\n            return value;\n        });\n    }\n    *iterator() {\n        yield this.run();\n    }\n    [Symbol.iterator]() {\n        return this.iterator();\n    }\n}\nexports.Trampoline = Trampoline;\n/**\n * @public\n */\n(function (Trampoline) {\n    function isTrampoline(value) {\n        return value instanceof Trampoline;\n    }\n    Trampoline.isTrampoline = isTrampoline;\n    function empty() {\n        return done(undefined);\n    }\n    Trampoline.empty = empty;\n    function done(value) {\n        return Done.of(value);\n    }\n    Trampoline.done = done;\n    function suspend(thunk) {\n        return Suspend.of(thunk);\n    }\n    Trampoline.suspend = suspend;\n    function delay(thunk) {\n        return suspend(() => done(thunk()));\n    }\n    Trampoline.delay = delay;\n    function traverse(values, mapper) {\n        return alfa_iterable_1.Iterable.reduce(values, (values, value, i) => values.flatMap((values) => mapper(value, i).map((value) => alfa_array_1.Array.append(values, value))), done(alfa_array_1.Array.empty()));\n    }\n    Trampoline.traverse = traverse;\n    function sequence(futures) {\n        return traverse(futures, (value) => value);\n    }\n    Trampoline.sequence = sequence;\n})(Trampoline || (exports.Trampoline = Trampoline = {}));\nclass Done extends Trampoline {\n    static of(value) {\n        return new Done(value);\n    }\n    constructor(value) {\n        super();\n        this._value = value;\n    }\n    step() {\n        return this;\n    }\n    run() {\n        return this._value;\n    }\n    isDone() {\n        return true;\n    }\n    isSuspended() {\n        return false;\n    }\n    map(mapper) {\n        return new Done(mapper(this._value));\n    }\n    flatMap(mapper) {\n        return Suspend.of(() => mapper(this._value));\n    }\n}\nclass Suspend extends Trampoline {\n    static of(thunk) {\n        return new Suspend(thunk);\n    }\n    constructor(thunk) {\n        super();\n        this._thunk = thunk;\n    }\n    step() {\n        return this._thunk();\n    }\n    isDone() {\n        return false;\n    }\n    isSuspended() {\n        return true;\n    }\n    flatMap(mapper) {\n        return Bind.of(this._thunk, mapper);\n    }\n}\nclass Bind extends Trampoline {\n    static of(thunk, mapper) {\n        return new Bind(thunk, mapper);\n    }\n    constructor(thunk, mapper) {\n        super();\n        this._thunk = thunk;\n        this._mapper = mapper;\n    }\n    step() {\n        return this._thunk().flatMap(this._mapper);\n    }\n    isDone() {\n        return false;\n    }\n    isSuspended() {\n        return true;\n    }\n    flatMap(mapper) {\n        return Suspend.of(() => Bind.of(this._thunk, (value) => this._mapper(value).flatMap(mapper)));\n    }\n}\n//# sourceMappingURL=trampoline.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-trampoline/src/trampoline.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-tree/node_modules/@siteimprove/alfa-sequence/src/cons.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-tree/node_modules/@siteimprove/alfa-sequence/src/cons.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Cons = void 0;\nconst alfa_array_1 = __webpack_require__(/*! @siteimprove/alfa-array */ \"./node_modules/@siteimprove/alfa-array/src/index.js\");\nconst alfa_comparable_1 = __webpack_require__(/*! @siteimprove/alfa-comparable */ \"./node_modules/@siteimprove/alfa-comparable/src/index.js\");\nconst alfa_equatable_1 = __webpack_require__(/*! @siteimprove/alfa-equatable */ \"./node_modules/@siteimprove/alfa-equatable/src/index.js\");\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_json_1 = __webpack_require__(/*! @siteimprove/alfa-json */ \"./node_modules/@siteimprove/alfa-json/src/index.js\");\nconst alfa_lazy_1 = __webpack_require__(/*! @siteimprove/alfa-lazy */ \"./node_modules/@siteimprove/alfa-lazy/src/index.js\");\nconst alfa_map_1 = __webpack_require__(/*! @siteimprove/alfa-map */ \"./node_modules/@siteimprove/alfa-map/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_set_1 = __webpack_require__(/*! @siteimprove/alfa-set */ \"./node_modules/@siteimprove/alfa-set/src/index.js\");\nconst sequence_1 = __webpack_require__(/*! ./sequence */ \"./node_modules/@siteimprove/alfa-tree/node_modules/@siteimprove/alfa-sequence/src/sequence.js\");\nconst nil_1 = __webpack_require__(/*! ./nil */ \"./node_modules/@siteimprove/alfa-tree/node_modules/@siteimprove/alfa-sequence/src/nil.js\");\nconst { not, equals } = alfa_predicate_1.Predicate;\nconst { compareComparable } = alfa_comparable_1.Comparable;\n/**\n * @public\n */\nclass Cons {\n    static of(head, tail = alfa_lazy_1.Lazy.force(nil_1.Nil)) {\n        return new Cons(head, tail);\n    }\n    constructor(head, tail) {\n        this._head = head;\n        this._tail = tail;\n    }\n    get size() {\n        return alfa_iterable_1.Iterable.size(this);\n    }\n    isEmpty() {\n        return false;\n    }\n    forEach(callback) {\n        alfa_iterable_1.Iterable.forEach(this, callback);\n    }\n    map(mapper, index = 0) {\n        return new Cons(mapper(this._head, index), this._tail.map((tail) => Cons.isCons(tail) ? tail.map(mapper, index + 1) : nil_1.Nil));\n    }\n    apply(mapper) {\n        return mapper.flatMap((mapper) => this.map(mapper));\n    }\n    flatMap(mapper, index = 0) {\n        let next = this;\n        while (true) {\n            const head = mapper(next._head, index++);\n            if (Cons.isCons(head)) {\n                return new Cons(head._head, head._tail.map((left) => {\n                    const right = next._tail.force();\n                    return Cons.isCons(right)\n                        ? left.concat(right.flatMap(mapper, index))\n                        : left;\n                }));\n            }\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return nil_1.Nil;\n            }\n        }\n    }\n    flatten() {\n        return this.flatMap((sequence) => sequence);\n    }\n    reduce(reducer, accumulator) {\n        let next = this;\n        let index = 0;\n        while (true) {\n            accumulator = reducer(accumulator, next._head, index++);\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                break;\n            }\n        }\n        return accumulator;\n    }\n    reduceWhile(predicate, reducer, accumulator) {\n        let next = this;\n        let index = 0;\n        while (predicate(next._head, index)) {\n            accumulator = reducer(accumulator, next._head, index++);\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                break;\n            }\n        }\n        return accumulator;\n    }\n    reduceUntil(predicate, reducer, accumulator) {\n        return this.reduceWhile(not(predicate), reducer, accumulator);\n    }\n    filter(predicate, index = 0) {\n        let next = this;\n        while (true) {\n            if (predicate(next._head, index++)) {\n                return new Cons(next._head, next._tail.map((tail) => Cons.isCons(tail) ? tail.filter(predicate, index) : nil_1.Nil));\n            }\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return nil_1.Nil;\n            }\n        }\n    }\n    reject(predicate) {\n        return this.filter(not(predicate));\n    }\n    find(predicate) {\n        let next = this;\n        let index = 0;\n        while (true) {\n            const head = next._head;\n            if (predicate(head, index++)) {\n                return alfa_option_1.Option.of(head);\n            }\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return alfa_option_1.None;\n            }\n        }\n    }\n    includes(value) {\n        return this.some(equals(value));\n    }\n    collect(mapper, index = 0) {\n        let next = this;\n        while (true) {\n            const value = mapper(next._head, index++);\n            if (value.isSome()) {\n                return new Cons(value.get(), next._tail.map((tail) => Cons.isCons(tail) ? tail.collect(mapper, index) : nil_1.Nil));\n            }\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return nil_1.Nil;\n            }\n        }\n    }\n    collectFirst(mapper) {\n        let next = this;\n        let index = 0;\n        while (true) {\n            const value = mapper(next._head, index++);\n            if (value.isSome()) {\n                return value;\n            }\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return alfa_option_1.None;\n            }\n        }\n    }\n    some(predicate) {\n        let next = this;\n        let index = 0;\n        while (true) {\n            if (predicate(next._head, index++)) {\n                return true;\n            }\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return false;\n            }\n        }\n    }\n    none(predicate) {\n        return this.every(not(predicate));\n    }\n    every(predicate) {\n        let next = this;\n        let index = 0;\n        while (true) {\n            if (!predicate(next._head, index++)) {\n                return false;\n            }\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return true;\n            }\n        }\n    }\n    count(predicate) {\n        return this.reduce((count, value, index) => (predicate(value, index) ? count + 1 : count), 0);\n    }\n    distinct(seen = alfa_set_1.Set.empty()) {\n        let next = this;\n        while (true) {\n            if (seen.has(next._head)) {\n                const tail = next._tail.force();\n                if (Cons.isCons(tail)) {\n                    next = tail;\n                }\n                else {\n                    return nil_1.Nil;\n                }\n            }\n            else {\n                return Cons.of(next._head, next._tail.map((tail) => Cons.isCons(tail) ? tail.distinct(seen.add(next._head)) : nil_1.Nil));\n            }\n        }\n    }\n    get(index) {\n        return index < 0 ? alfa_option_1.None : this.skip(index).first();\n    }\n    has(index) {\n        return this.get(index).isSome();\n    }\n    set(index, value) {\n        if (index < 0) {\n            return this;\n        }\n        if (index === 0) {\n            if (alfa_equatable_1.Equatable.equals(value, this._head)) {\n                return this;\n            }\n            return new Cons(value, this._tail);\n        }\n        return new Cons(this._head, this._tail.map((tail) => tail.set(index - 1, value)));\n    }\n    insert(index, value) {\n        if (index < 0) {\n            return this;\n        }\n        if (index === 0) {\n            return new Cons(value, alfa_lazy_1.Lazy.force(this));\n        }\n        return new Cons(this._head, this._tail.map((tail) => tail.set(index - 1, value)));\n    }\n    append(value) {\n        return new Cons(this._head, this._tail.map((tail) => tail.append(value)));\n    }\n    prepend(value) {\n        return new Cons(value, alfa_lazy_1.Lazy.force(this));\n    }\n    concat(iterable) {\n        const sequence = sequence_1.Sequence.from(iterable);\n        if (Cons.isCons(sequence)) {\n            return new Cons(this._head, this._tail.map((tail) => tail.concat(sequence)));\n        }\n        return this;\n    }\n    subtract(iterable) {\n        return this.filter((value) => !alfa_iterable_1.Iterable.includes(iterable, value));\n    }\n    intersect(iterable) {\n        return this.filter((value) => alfa_iterable_1.Iterable.includes(iterable, value));\n    }\n    tee(callback, ...args) {\n        callback(this, ...args);\n        return this;\n    }\n    zip(iterable) {\n        const sequence = sequence_1.Sequence.from(iterable);\n        if (Cons.isCons(sequence)) {\n            return new Cons([this._head, sequence._head], this._tail.map((tail) => tail.zip(sequence.rest())));\n        }\n        return nil_1.Nil;\n    }\n    first() {\n        return alfa_option_1.Option.of(this._head);\n    }\n    last() {\n        let next = this;\n        while (true) {\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return alfa_option_1.Option.of(next._head);\n            }\n        }\n    }\n    take(count) {\n        if (count <= 0) {\n            return nil_1.Nil;\n        }\n        return new Cons(this._head, count === 1\n            ? alfa_lazy_1.Lazy.force(nil_1.Nil)\n            : this._tail.map((tail) => Cons.isCons(tail) ? tail.take(count - 1) : nil_1.Nil));\n    }\n    takeWhile(predicate) {\n        return this.takeUntil(not(predicate));\n    }\n    takeUntil(predicate, index = 0) {\n        if (predicate(this._head, index)) {\n            return nil_1.Nil;\n        }\n        return new Cons(this._head, this._tail.map((tail) => Cons.isCons(tail)\n            ? tail.takeUntil(predicate, index + 1)\n            : tail.takeUntil(predicate)));\n    }\n    takeLast(count) {\n        return this.skip(this.size - count);\n    }\n    takeLastWhile(predicate) {\n        return this.reverse().takeWhile(predicate).reverse();\n    }\n    takeLastUntil(predicate) {\n        return this.takeLastWhile(not(predicate));\n    }\n    skip(count) {\n        let next = this;\n        while (count-- > 0) {\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return nil_1.Nil;\n            }\n        }\n        return next;\n    }\n    skipWhile(predicate) {\n        let next = this;\n        let index = 0;\n        while (predicate(next._head, index++)) {\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return nil_1.Nil;\n            }\n        }\n        return next;\n    }\n    skipUntil(predicate) {\n        return this.skipWhile(not(predicate));\n    }\n    skipLast(count) {\n        return this.take(this.size - count);\n    }\n    skipLastWhile(predicate) {\n        return this.reverse().skipWhile(predicate).reverse();\n    }\n    skipLastUntil(predicate) {\n        return this.skipLastWhile(not(predicate));\n    }\n    trim(predicate) {\n        return this.trimLeading(predicate).trimTrailing(predicate);\n    }\n    trimLeading(predicate) {\n        return this.skipWhile(predicate);\n    }\n    trimTrailing(predicate) {\n        return this.skipLastWhile(predicate);\n    }\n    rest() {\n        return this._tail.force();\n    }\n    slice(start, end) {\n        let slice = this.skip(start);\n        if (end !== undefined) {\n            slice = slice.take(end - start);\n        }\n        return slice;\n    }\n    reverse() {\n        return this.reduce((reversed, value) => new Cons(value, alfa_lazy_1.Lazy.force(reversed)), nil_1.Nil);\n    }\n    join(separator) {\n        let result = `${this._head}`;\n        let next = this;\n        while (true) {\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                result += `${separator}${tail._head}`;\n                next = tail;\n            }\n            else {\n                return result;\n            }\n        }\n    }\n    sort() {\n        return this.sortWith(compareComparable);\n    }\n    sortWith(comparer) {\n        return sequence_1.Sequence.fromArray(alfa_array_1.Array.sortWith(this.toArray(), comparer));\n    }\n    compare(iterable) {\n        return this.compareWith(iterable, alfa_comparable_1.Comparable.compare);\n    }\n    compareWith(iterable, comparer) {\n        return alfa_iterable_1.Iterable.compareWith(this, iterable, comparer);\n    }\n    groupBy(grouper) {\n        return this.reduce((groups, value, index) => {\n            const group = grouper(value, index);\n            return groups.set(group, new Cons(value, alfa_lazy_1.Lazy.force(groups.get(group).getOrElse(() => nil_1.Nil))));\n        }, alfa_map_1.Map.empty()).map((group) => group.reverse());\n    }\n    equals(value) {\n        if (!Cons.isCons(value)) {\n            return false;\n        }\n        let a = this;\n        let b = value;\n        while (true) {\n            if (!alfa_equatable_1.Equatable.equals(a._head, b._head)) {\n                return false;\n            }\n            const ta = a._tail.force();\n            const tb = b._tail.force();\n            if (Cons.isCons(ta) && Cons.isCons(tb)) {\n                a = ta;\n                b = tb;\n            }\n            else {\n                return ta === nil_1.Nil && tb === nil_1.Nil;\n            }\n        }\n    }\n    hash(hash) {\n        let size = 0;\n        for (const value of this) {\n            hash.writeUnknown(value);\n            size++;\n        }\n        hash.writeUint32(size);\n    }\n    *iterator() {\n        let next = this;\n        while (true) {\n            yield next._head;\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                break;\n            }\n        }\n    }\n    [Symbol.iterator]() {\n        return this.iterator();\n    }\n    toArray() {\n        const array = [];\n        let next = this;\n        while (true) {\n            array.push(next._head);\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return array;\n            }\n        }\n    }\n    toJSON() {\n        const json = [];\n        let next = this;\n        while (true) {\n            json.push(alfa_json_1.Serializable.toJSON(next._head));\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return json;\n            }\n        }\n    }\n    toString() {\n        return `Sequence [ ${this.join(\", \")} ]`;\n    }\n}\nexports.Cons = Cons;\n/**\n * @public\n */\n(function (Cons) {\n    function isCons(value) {\n        return value instanceof Cons;\n    }\n    Cons.isCons = isCons;\n})(Cons || (exports.Cons = Cons = {}));\n//# sourceMappingURL=cons.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-tree/node_modules/@siteimprove/alfa-sequence/src/cons.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-tree/node_modules/@siteimprove/alfa-sequence/src/index.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-tree/node_modules/@siteimprove/alfa-sequence/src/index.js ***!
  \**************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./cons */ \"./node_modules/@siteimprove/alfa-tree/node_modules/@siteimprove/alfa-sequence/src/cons.js\"), exports);\n__exportStar(__webpack_require__(/*! ./nil */ \"./node_modules/@siteimprove/alfa-tree/node_modules/@siteimprove/alfa-sequence/src/nil.js\"), exports);\n__exportStar(__webpack_require__(/*! ./sequence */ \"./node_modules/@siteimprove/alfa-tree/node_modules/@siteimprove/alfa-sequence/src/sequence.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-tree/node_modules/@siteimprove/alfa-sequence/src/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-tree/node_modules/@siteimprove/alfa-sequence/src/nil.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-tree/node_modules/@siteimprove/alfa-sequence/src/nil.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Nil = void 0;\nconst alfa_comparable_1 = __webpack_require__(/*! @siteimprove/alfa-comparable */ \"./node_modules/@siteimprove/alfa-comparable/src/index.js\");\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_map_1 = __webpack_require__(/*! @siteimprove/alfa-map */ \"./node_modules/@siteimprove/alfa-map/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst sequence_1 = __webpack_require__(/*! ./sequence */ \"./node_modules/@siteimprove/alfa-tree/node_modules/@siteimprove/alfa-sequence/src/sequence.js\");\nconst cons_1 = __webpack_require__(/*! ./cons */ \"./node_modules/@siteimprove/alfa-tree/node_modules/@siteimprove/alfa-sequence/src/cons.js\");\n/**\n * @public\n */\nexports.Nil = new (class Nil {\n    get size() {\n        return 0;\n    }\n    isEmpty() {\n        return true;\n    }\n    forEach() { }\n    map() {\n        return this;\n    }\n    apply() {\n        return this;\n    }\n    flatMap() {\n        return this;\n    }\n    flatten() {\n        return this;\n    }\n    reduce(reducer, accumulator) {\n        return accumulator;\n    }\n    reduceWhile(predicate, reducer, accumulator) {\n        return accumulator;\n    }\n    reduceUntil(predicate, reducer, accumulator) {\n        return accumulator;\n    }\n    filter() {\n        return this;\n    }\n    reject() {\n        return this;\n    }\n    find() {\n        return alfa_option_1.None;\n    }\n    includes() {\n        return false;\n    }\n    collect() {\n        return this;\n    }\n    collectFirst() {\n        return alfa_option_1.None;\n    }\n    some() {\n        return false;\n    }\n    none() {\n        return true;\n    }\n    every() {\n        return true;\n    }\n    count() {\n        return 0;\n    }\n    distinct() {\n        return this;\n    }\n    get() {\n        return alfa_option_1.None;\n    }\n    has() {\n        return false;\n    }\n    set() {\n        return this;\n    }\n    insert(index, value) {\n        return index === 0 ? cons_1.Cons.of(value) : this;\n    }\n    append(value) {\n        return cons_1.Cons.of(value);\n    }\n    prepend(value) {\n        return cons_1.Cons.of(value);\n    }\n    concat(iterable) {\n        if (iterable === this) {\n            return this;\n        }\n        return sequence_1.Sequence.from(iterable);\n    }\n    subtract() {\n        return this;\n    }\n    intersect() {\n        return this;\n    }\n    tee(callback, ...args) {\n        callback(this, ...args);\n        return this;\n    }\n    zip() {\n        return this;\n    }\n    first() {\n        return alfa_option_1.None;\n    }\n    last() {\n        return alfa_option_1.None;\n    }\n    take() {\n        return this;\n    }\n    takeWhile() {\n        return this;\n    }\n    takeUntil() {\n        return this;\n    }\n    takeLast() {\n        return this;\n    }\n    takeLastWhile() {\n        return this;\n    }\n    takeLastUntil() {\n        return this;\n    }\n    skip() {\n        return this;\n    }\n    skipWhile() {\n        return this;\n    }\n    skipUntil() {\n        return this;\n    }\n    skipLast() {\n        return this;\n    }\n    skipLastWhile() {\n        return this;\n    }\n    skipLastUntil() {\n        return this;\n    }\n    trim() {\n        return this;\n    }\n    trimLeading() {\n        return this;\n    }\n    trimTrailing() {\n        return this;\n    }\n    rest() {\n        return this;\n    }\n    slice() {\n        return this;\n    }\n    reverse() {\n        return this;\n    }\n    join() {\n        return \"\";\n    }\n    sort() {\n        return this;\n    }\n    sortWith() {\n        return this;\n    }\n    compare(iterable) {\n        return this.compareWith(iterable, alfa_comparable_1.Comparable.compare);\n    }\n    compareWith(iterable, comparer) {\n        return alfa_iterable_1.Iterable.compareWith(this, iterable, comparer);\n    }\n    groupBy() {\n        return alfa_map_1.Map.empty();\n    }\n    equals(value) {\n        return value instanceof Nil;\n    }\n    hash(hash) {\n        hash.writeUint32(0);\n    }\n    *iterator() { }\n    [Symbol.iterator]() {\n        return this.iterator();\n    }\n    toArray() {\n        return [];\n    }\n    toJSON() {\n        return [];\n    }\n    toString() {\n        return \"Sequence []\";\n    }\n})();\n//# sourceMappingURL=nil.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-tree/node_modules/@siteimprove/alfa-sequence/src/nil.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-tree/node_modules/@siteimprove/alfa-sequence/src/sequence.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-tree/node_modules/@siteimprove/alfa-sequence/src/sequence.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Sequence = void 0;\nconst alfa_array_1 = __webpack_require__(/*! @siteimprove/alfa-array */ \"./node_modules/@siteimprove/alfa-array/src/index.js\");\nconst alfa_lazy_1 = __webpack_require__(/*! @siteimprove/alfa-lazy */ \"./node_modules/@siteimprove/alfa-lazy/src/index.js\");\nconst cons_1 = __webpack_require__(/*! ./cons */ \"./node_modules/@siteimprove/alfa-tree/node_modules/@siteimprove/alfa-sequence/src/cons.js\");\nconst nil_1 = __webpack_require__(/*! ./nil */ \"./node_modules/@siteimprove/alfa-tree/node_modules/@siteimprove/alfa-sequence/src/nil.js\");\n/**\n * @public\n */\nvar Sequence;\n(function (Sequence) {\n    function isSequence(value) {\n        return isCons(value) || isNil(value);\n    }\n    Sequence.isSequence = isSequence;\n    function isCons(value) {\n        return cons_1.Cons.isCons(value);\n    }\n    Sequence.isCons = isCons;\n    function isNil(value) {\n        return value === nil_1.Nil;\n    }\n    Sequence.isNil = isNil;\n    function of(head, tail) {\n        return cons_1.Cons.of(head, tail);\n    }\n    Sequence.of = of;\n    function empty() {\n        return nil_1.Nil;\n    }\n    Sequence.empty = empty;\n    function from(iterable) {\n        if (isSequence(iterable)) {\n            return iterable;\n        }\n        if (alfa_array_1.Array.isArray(iterable)) {\n            return fromArray(iterable);\n        }\n        return fromIterable(iterable);\n    }\n    Sequence.from = from;\n    function fromArray(array) {\n        let i = 0;\n        const tail = () => {\n            if (i >= array.length) {\n                return empty();\n            }\n            return of(array[i++], alfa_lazy_1.Lazy.of(tail));\n        };\n        return tail();\n    }\n    Sequence.fromArray = fromArray;\n    function fromIterable(iterable) {\n        return fromIterator(iterable[Symbol.iterator]());\n    }\n    Sequence.fromIterable = fromIterable;\n    function fromIterator(iterator) {\n        const tail = () => {\n            const head = iterator.next();\n            if (head.done === true) {\n                return empty();\n            }\n            return of(head.value, alfa_lazy_1.Lazy.of(tail));\n        };\n        return tail();\n    }\n    Sequence.fromIterator = fromIterator;\n})(Sequence || (exports.Sequence = Sequence = {}));\n//# sourceMappingURL=sequence.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-tree/node_modules/@siteimprove/alfa-sequence/src/sequence.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-tree/src/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-tree/src/index.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./tree */ \"./node_modules/@siteimprove/alfa-tree/src/tree.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-tree/src/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-tree/src/tree.js":
/*!*********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-tree/src/tree.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Node = void 0;\nconst alfa_lazy_1 = __webpack_require__(/*! @siteimprove/alfa-lazy */ \"./node_modules/@siteimprove/alfa-lazy/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_refinement_1 = __webpack_require__(/*! @siteimprove/alfa-refinement */ \"./node_modules/@siteimprove/alfa-refinement/src/index.js\");\nconst alfa_sequence_1 = __webpack_require__(/*! @siteimprove/alfa-sequence */ \"./node_modules/@siteimprove/alfa-tree/node_modules/@siteimprove/alfa-sequence/src/index.js\");\nconst { equals } = alfa_refinement_1.Refinement;\n/**\n * Model for n-ary trees with some traversal flags.\n *\n * In order to have a parent pointers, nodes are allowed to attach themselves\n * to a parent node. To prevent mutation of an existing tree, the child is then\n * \"frozen\".\n *\n * Since it is not possible to add children after node creation, and it is not\n * possible to re-attach an already attached node, this means that the trees are\n * effectively downward frozen. In turn, this allows a bunch of optimisation\n * since any traversal function that does not look upward can be cached.\n *\n * The full tree (all nodes) must accept the same set of traversal flags, but\n * the node type is not constrained.\n *\n * @public\n */\nclass Node {\n    constructor(children, type, externalId, extraData) {\n        this._parent = alfa_option_1.None;\n        /**\n         * Whether the node is frozen.\n         *\n         * @remarks\n         * As nodes are initialized without a parent and possibly attached to a parent\n         * after construction, this makes hierarchies of nodes mutable. That is, a\n         * node without a parent node may be assigned one by being passed as a child\n         * to a parent node. When this happens, a node becomes frozen. Nodes can also\n         * become frozen before being assigned a parent by using the `Node#freeze()`\n         * method.\n         */\n        this._frozen = false;\n        this._lastKnownRoot = [];\n        this._descendants = [];\n        this._preceding = [];\n        this._following = [];\n        this._last = [];\n        this._children = children.filter((child) => child._attachParent(this));\n        this._type = type;\n        this._externalId = externalId;\n        this._extraData = extraData;\n    }\n    get type() {\n        return this._type;\n    }\n    get externalId() {\n        return this._externalId;\n    }\n    get extraData() {\n        return this._extraData;\n    }\n    get frozen() {\n        return this._frozen;\n    }\n    /**\n     * Freeze the node. This prevents further expansion of the node hierarchy,\n     * meaning that the node can no longer be passed as a child to a parent node.\n     */\n    freeze() {\n        this._frozen = this._frozen || true;\n        return this;\n    }\n    /**\n     * {@link https://dom.spec.whatwg.org/#concept-tree-parent}\n     */\n    parent(options) {\n        return this._parent;\n    }\n    /**\n     * {@link https://dom.spec.whatwg.org/#concept-tree-parent}\n     */\n    isParentOf(node, options) {\n        return node.parent(options).includes(this);\n    }\n    /**\n     * {@link https://dom.spec.whatwg.org/#concept-tree-root}\n     */\n    // Since root is looking upward, it may change between calls.\n    // So we cache the last known root, try again from here and update the result\n    // if necessary. Once the tree is fully frozen, this only cost an extra look\n    // through this.parent which is not expensive.\n    root(options) {\n        const value = options?.value ?? 0;\n        let lastKnownRoot = this._lastKnownRoot[value] ?? this;\n        for (const parent of lastKnownRoot.parent(options)) {\n            lastKnownRoot = parent.root(options);\n        }\n        this._lastKnownRoot[value] = lastKnownRoot;\n        return lastKnownRoot;\n    }\n    /**\n     * {@link https://dom.spec.whatwg.org/#concept-tree-root}\n     */\n    isRootOf(node, options) {\n        return node.root(options) === this;\n    }\n    /**\n     * {@link https://dom.spec.whatwg.org/#concept-tree-child}\n     */\n    children(options) {\n        return alfa_sequence_1.Sequence.from(this._children);\n    }\n    /**\n     * {@link https://dom.spec.whatwg.org/#concept-tree-child}\n     */\n    isChildOf(node, options) {\n        return node.children(options).includes(this);\n    }\n    /**\n     * {@link https://dom.spec.whatwg.org/#concept-tree-descendant}\n     */\n    // While this is lazily built, actually generating the sequence takes time to\n    // walk through the tree and resolve all the continuations.\n    // Caching it saves a lot of time by generating the sequence only once.\n    descendants(options) {\n        const value = options?.value ?? 0;\n        if (this._descendants[value] === undefined) {\n            this._descendants[value] = this.children(options).flatMap((child) => alfa_sequence_1.Sequence.of(child, alfa_lazy_1.Lazy.of(() => child.descendants(options))));\n        }\n        return this._descendants[value];\n    }\n    /**\n     * {@link https://dom.spec.whatwg.org/#concept-tree-descendant}\n     */\n    isDescendantOf(node, options) {\n        return node.descendants(options).includes(this);\n    }\n    /**\n     * {@link https://dom.spec.whatwg.org/#concept-tree-inclusive-descendant}\n     */\n    inclusiveDescendants(options) {\n        return alfa_sequence_1.Sequence.of(this, alfa_lazy_1.Lazy.of(() => this.descendants(options)));\n    }\n    /**\n     * {@link https://dom.spec.whatwg.org/#concept-tree-inclusive-descendant}\n     */\n    isInclusiveDescendantsOf(node, options) {\n        return node.inclusiveDescendants(options).includes(this);\n    }\n    /**\n     * {@link https://dom.spec.whatwg.org/#concept-tree-ancestor}\n     */\n    ancestors(options) {\n        for (const parent of this.parent(options)) {\n            return alfa_sequence_1.Sequence.of(parent, alfa_lazy_1.Lazy.of(() => parent.ancestors(options)));\n        }\n        return alfa_sequence_1.Sequence.empty();\n    }\n    /**\n     * {@link https://dom.spec.whatwg.org/#concept-tree-ancestor}\n     */\n    isAncestorOf(node, options) {\n        return node.ancestors(options).includes(this);\n    }\n    /**\n     * {@link https://dom.spec.whatwg.org/#concept-tree-inclusive-ancestor}\n     */\n    inclusiveAncestors(options) {\n        return alfa_sequence_1.Sequence.of(this, alfa_lazy_1.Lazy.of(() => this.ancestors(options)));\n    }\n    /**\n     * {@link https://dom.spec.whatwg.org/#concept-tree-inclusive-ancestor}\n     */\n    isInclusiveAncestorOf(node, options) {\n        return node.inclusiveAncestors(options).includes(this);\n    }\n    /**\n     * {@link https://dom.spec.whatwg.org/#concept-tree-sibling}\n     */\n    siblings(options) {\n        return this.inclusiveSiblings(options).reject(equals(this));\n    }\n    /**\n     * {@link https://dom.spec.whatwg.org/#concept-tree-sibling}\n     */\n    isSiblingOf(node, options) {\n        return node.siblings(options).includes(this);\n    }\n    /**\n     * {@link https://dom.spec.whatwg.org/#concept-tree-inclusive-sibling}\n     */\n    inclusiveSiblings(options) {\n        for (const parent of this.parent(options)) {\n            return parent.children(options);\n        }\n        return alfa_sequence_1.Sequence.empty();\n    }\n    /**\n     * {@link https://dom.spec.whatwg.org/#concept-tree-inclusive-sibling}\n     */\n    isInclusiveSiblingOf(node, options) {\n        return node.inclusiveSiblings(options).includes(this);\n    }\n    /**\n     * {@link https://dom.spec.whatwg.org/#concept-tree-preceding}\n     */\n    // Due to reversing, this is not lazy and is costly at build time.\n    // This only looks in frozen parts of the tree.\n    preceding(options) {\n        const value = options?.value ?? 0;\n        if (this._preceding[value] === undefined) {\n            this._preceding[value] = this.inclusiveSiblings(options)\n                .takeUntil(equals(this))\n                .reverse();\n        }\n        return this._preceding[value];\n    }\n    /**\n     * {@link https://dom.spec.whatwg.org/#concept-tree-following}\n     */\n    // Due to skipUntil, this is not fully lazy and is costly at build time.\n    // This only looks in frozen parts of the tree.\n    following(options) {\n        const value = options?.value ?? 0;\n        if (this._following[value] === undefined) {\n            this._following[value] = this.inclusiveSiblings(options)\n                .skipUntil(equals(this))\n                .rest();\n        }\n        return this._following[value];\n    }\n    /**\n     * {@link https://dom.spec.whatwg.org/#concept-tree-first-child}\n     */\n    // Sequence.first() is fast and doesn't need caching\n    first(options) {\n        return this.children(options).first();\n    }\n    /**\n     * {@link https://dom.spec.whatwg.org/#concept-tree-last-child}\n     */\n    // Due to last, this is not lazy and is costly at build time.\n    // This only looks in frozen parts of the tree.\n    last(options) {\n        const value = options?.value ?? 0;\n        if (this._last[value] === undefined) {\n            this._last[value] = this.children(options).last();\n        }\n        return this._last[value];\n    }\n    /**\n     * {@link https://dom.spec.whatwg.org/#concept-tree-previous-sibling}\n     */\n    previous(options) {\n        return this.preceding(options).first();\n    }\n    /**\n     * {@link https://dom.spec.whatwg.org/#concept-tree-next-sibling}\n     */\n    next(options) {\n        return this.following(options).first();\n    }\n    /**\n     * {@link https://dom.spec.whatwg.org/#concept-tree-index}\n     */\n    index(options) {\n        return this.preceding(options).size;\n    }\n    /**\n     * {@link https://dom.spec.whatwg.org/#dom-element-closest}\n     */\n    closest(predicate, options) {\n        return this.inclusiveAncestors(options).find(predicate);\n    }\n    *[Symbol.iterator]() {\n        yield* this.descendants();\n    }\n    equals(value) {\n        return value === this;\n    }\n    hash(hash) {\n        hash.writeObject(this);\n    }\n    toJSON(options) {\n        return {\n            type: this._type,\n            children: this._children.map((child) => child.toJSON(options)),\n            ...(this._externalId === undefined\n                ? {}\n                : { externalId: this._externalId }),\n        };\n    }\n    /**\n     * @internal\n     */\n    _attachParent(parent) {\n        if (this._frozen || this._parent.isSome()) {\n            return false;\n        }\n        this._parent = alfa_option_1.Option.of(parent);\n        this._frozen = true;\n        return true;\n    }\n}\nexports.Node = Node;\n//# sourceMappingURL=tree.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-tree/src/tree.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-trilean/src/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-trilean/src/index.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./trilean */ \"./node_modules/@siteimprove/alfa-trilean/src/trilean.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-trilean/src/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-trilean/src/trilean.js":
/*!***************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-trilean/src/trilean.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Trilean = void 0;\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\n/**\n * @public\n */\nvar Trilean;\n(function (Trilean) {\n    function test(predicate, value, ...args) {\n        return predicate(value, ...args);\n    }\n    Trilean.test = test;\n    function fold(predicate, ifTrue, ifFalse, ifUndefined, value, ...args) {\n        switch (predicate(value, ...args)) {\n            case true:\n                return ifTrue(value);\n            case false:\n                return ifFalse(value);\n            case undefined:\n                return ifUndefined(value);\n        }\n    }\n    Trilean.fold = fold;\n    function not(predicate) {\n        return (value, ...args) => {\n            switch (predicate(value, ...args)) {\n                case true:\n                    return false;\n                case false:\n                    return true;\n                case undefined:\n                    return undefined;\n            }\n        };\n    }\n    Trilean.not = not;\n    function and(...predicates) {\n        return (value, ...args) => predicates.reduce((holds, predicate) => {\n            if (holds === false) {\n                return false;\n            }\n            if (holds === true) {\n                return predicate(value, ...args);\n            }\n            if (predicate(value, ...args) === false) {\n                return false;\n            }\n            else {\n                return undefined;\n            }\n        }, true);\n    }\n    Trilean.and = and;\n    function or(...predicates) {\n        return (value, ...args) => predicates.reduce((holds, predicate) => {\n            if (holds === true) {\n                return true;\n            }\n            if (holds === false) {\n                return predicate(value, ...args);\n            }\n            if (predicate(value, ...args) === true) {\n                return true;\n            }\n            else {\n                return undefined;\n            }\n        }, false);\n    }\n    Trilean.or = or;\n    function xor(left, right) {\n        return and(or(left, right), not(and(left, right)));\n    }\n    Trilean.xor = xor;\n    function nor(left, right) {\n        return not(or(left, right));\n    }\n    Trilean.nor = nor;\n    function nand(left, right) {\n        return not(and(left, right));\n    }\n    Trilean.nand = nand;\n    function some(iterable, predicate) {\n        return alfa_iterable_1.Iterable.reduce(iterable, (result, value, i) => test(or(() => result, predicate), value, i), false);\n    }\n    Trilean.some = some;\n    function none(iterable, predicate) {\n        return every(iterable, not(predicate));\n    }\n    Trilean.none = none;\n    function every(iterable, predicate) {\n        return alfa_iterable_1.Iterable.reduce(iterable, (result, value, i) => test(and(() => result, predicate), value, i), true);\n    }\n    Trilean.every = every;\n})(Trilean || (exports.Trilean = Trilean = {}));\n//# sourceMappingURL=trilean.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-trilean/src/trilean.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-tuple/src/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-tuple/src/index.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./tuple */ \"./node_modules/@siteimprove/alfa-tuple/src/tuple.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-tuple/src/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-tuple/src/tuple.js":
/*!***********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-tuple/src/tuple.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Tuple = void 0;\nconst alfa_array_1 = __webpack_require__(/*! @siteimprove/alfa-array */ \"./node_modules/@siteimprove/alfa-array/src/index.js\");\n/**\n * @public\n */\nvar Tuple;\n(function (Tuple) {\n    function of(...values) {\n        return values;\n    }\n    Tuple.of = of;\n    function empty() {\n        return [];\n    }\n    Tuple.empty = empty;\n    function size(tuple) {\n        return alfa_array_1.Array.size(tuple);\n    }\n    Tuple.size = size;\n    function copy(tuple) {\n        return alfa_array_1.Array.copy(tuple);\n    }\n    Tuple.copy = copy;\n    function forEach(tuple, callback) {\n        alfa_array_1.Array.forEach(tuple, callback);\n    }\n    Tuple.forEach = forEach;\n    function map(tuple, mapper) {\n        return alfa_array_1.Array.map(tuple, mapper);\n    }\n    Tuple.map = map;\n    function reduce(tuple, reducer, accumulator) {\n        return alfa_array_1.Array.reduce(tuple, reducer, accumulator);\n    }\n    Tuple.reduce = reduce;\n    function reduceWhile(tuple, predicate, reducer, accumulator) {\n        return alfa_array_1.Array.reduceWhile(tuple, predicate, reducer, accumulator);\n    }\n    Tuple.reduceWhile = reduceWhile;\n    function reduceUntil(tuple, predicate, reducer, accumulator) {\n        return alfa_array_1.Array.reduceUntil(tuple, predicate, reducer, accumulator);\n    }\n    Tuple.reduceUntil = reduceUntil;\n    function filter(tuple, predicate) {\n        return alfa_array_1.Array.filter(tuple, predicate);\n    }\n    Tuple.filter = filter;\n    function reject(tuple, predicate) {\n        return alfa_array_1.Array.filter(tuple, predicate);\n    }\n    Tuple.reject = reject;\n    function find(tuple, predicate) {\n        return alfa_array_1.Array.find(tuple, predicate);\n    }\n    Tuple.find = find;\n    function findLast(tuple, predicate) {\n        return alfa_array_1.Array.findLast(tuple, predicate);\n    }\n    Tuple.findLast = findLast;\n    function includes(tuple, value) {\n        return alfa_array_1.Array.includes(tuple, value);\n    }\n    Tuple.includes = includes;\n    function collect(tuple, mapper) {\n        return alfa_array_1.Array.collect(tuple, mapper);\n    }\n    Tuple.collect = collect;\n    function collectFirst(tuple, mapper) {\n        return alfa_array_1.Array.collectFirst(tuple, mapper);\n    }\n    Tuple.collectFirst = collectFirst;\n    function some(tuple, predicate) {\n        return alfa_array_1.Array.some(tuple, predicate);\n    }\n    Tuple.some = some;\n    function none(tuple, predicate) {\n        return alfa_array_1.Array.none(tuple, predicate);\n    }\n    Tuple.none = none;\n    function every(tuple, predicate) {\n        return alfa_array_1.Array.every(tuple, predicate);\n    }\n    Tuple.every = every;\n    function count(tuple, predicate) {\n        return alfa_array_1.Array.count(tuple, predicate);\n    }\n    Tuple.count = count;\n    function get(tuple, index) {\n        return alfa_array_1.Array.get(tuple, index);\n    }\n    Tuple.get = get;\n    function has(tuple, index) {\n        return alfa_array_1.Array.has(tuple, index);\n    }\n    Tuple.has = has;\n    function set(tuple, index, value) {\n        return alfa_array_1.Array.set(copy(tuple), index, value);\n    }\n    Tuple.set = set;\n    function insert(tuple, index, value) {\n        return alfa_array_1.Array.insert(copy(tuple), index, value);\n    }\n    Tuple.insert = insert;\n    function append(tuple, value) {\n        return alfa_array_1.Array.append(copy(tuple), value);\n    }\n    Tuple.append = append;\n    function prepend(tuple, value) {\n        return alfa_array_1.Array.prepend(copy(tuple), value);\n    }\n    Tuple.prepend = prepend;\n    function first(tuple) {\n        return alfa_array_1.Array.first(tuple);\n    }\n    Tuple.first = first;\n    function last(tuple) {\n        return alfa_array_1.Array.last(tuple);\n    }\n    Tuple.last = last;\n    function search(tuple, value, comparer) {\n        return alfa_array_1.Array.search(tuple, value, comparer);\n    }\n    Tuple.search = search;\n    function equals(a, b) {\n        return alfa_array_1.Array.equals(a, b);\n    }\n    Tuple.equals = equals;\n    function hash(tuple, hash) {\n        alfa_array_1.Array.hash(tuple, hash);\n    }\n    Tuple.hash = hash;\n    function iterator(tuple) {\n        return alfa_array_1.Array.iterator(tuple);\n    }\n    Tuple.iterator = iterator;\n})(Tuple || (exports.Tuple = Tuple = {}));\n//# sourceMappingURL=tuple.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-tuple/src/tuple.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-url/node_modules/@siteimprove/alfa-sequence/src/cons.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-url/node_modules/@siteimprove/alfa-sequence/src/cons.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Cons = void 0;\nconst alfa_array_1 = __webpack_require__(/*! @siteimprove/alfa-array */ \"./node_modules/@siteimprove/alfa-array/src/index.js\");\nconst alfa_comparable_1 = __webpack_require__(/*! @siteimprove/alfa-comparable */ \"./node_modules/@siteimprove/alfa-comparable/src/index.js\");\nconst alfa_equatable_1 = __webpack_require__(/*! @siteimprove/alfa-equatable */ \"./node_modules/@siteimprove/alfa-equatable/src/index.js\");\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_json_1 = __webpack_require__(/*! @siteimprove/alfa-json */ \"./node_modules/@siteimprove/alfa-json/src/index.js\");\nconst alfa_lazy_1 = __webpack_require__(/*! @siteimprove/alfa-lazy */ \"./node_modules/@siteimprove/alfa-lazy/src/index.js\");\nconst alfa_map_1 = __webpack_require__(/*! @siteimprove/alfa-map */ \"./node_modules/@siteimprove/alfa-map/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_predicate_1 = __webpack_require__(/*! @siteimprove/alfa-predicate */ \"./node_modules/@siteimprove/alfa-predicate/src/index.js\");\nconst alfa_set_1 = __webpack_require__(/*! @siteimprove/alfa-set */ \"./node_modules/@siteimprove/alfa-set/src/index.js\");\nconst sequence_1 = __webpack_require__(/*! ./sequence */ \"./node_modules/@siteimprove/alfa-url/node_modules/@siteimprove/alfa-sequence/src/sequence.js\");\nconst nil_1 = __webpack_require__(/*! ./nil */ \"./node_modules/@siteimprove/alfa-url/node_modules/@siteimprove/alfa-sequence/src/nil.js\");\nconst { not, equals } = alfa_predicate_1.Predicate;\nconst { compareComparable } = alfa_comparable_1.Comparable;\n/**\n * @public\n */\nclass Cons {\n    static of(head, tail = alfa_lazy_1.Lazy.force(nil_1.Nil)) {\n        return new Cons(head, tail);\n    }\n    constructor(head, tail) {\n        this._head = head;\n        this._tail = tail;\n    }\n    get size() {\n        return alfa_iterable_1.Iterable.size(this);\n    }\n    isEmpty() {\n        return false;\n    }\n    forEach(callback) {\n        alfa_iterable_1.Iterable.forEach(this, callback);\n    }\n    map(mapper, index = 0) {\n        return new Cons(mapper(this._head, index), this._tail.map((tail) => Cons.isCons(tail) ? tail.map(mapper, index + 1) : nil_1.Nil));\n    }\n    apply(mapper) {\n        return mapper.flatMap((mapper) => this.map(mapper));\n    }\n    flatMap(mapper, index = 0) {\n        let next = this;\n        while (true) {\n            const head = mapper(next._head, index++);\n            if (Cons.isCons(head)) {\n                return new Cons(head._head, head._tail.map((left) => {\n                    const right = next._tail.force();\n                    return Cons.isCons(right)\n                        ? left.concat(right.flatMap(mapper, index))\n                        : left;\n                }));\n            }\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return nil_1.Nil;\n            }\n        }\n    }\n    flatten() {\n        return this.flatMap((sequence) => sequence);\n    }\n    reduce(reducer, accumulator) {\n        let next = this;\n        let index = 0;\n        while (true) {\n            accumulator = reducer(accumulator, next._head, index++);\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                break;\n            }\n        }\n        return accumulator;\n    }\n    reduceWhile(predicate, reducer, accumulator) {\n        let next = this;\n        let index = 0;\n        while (predicate(next._head, index)) {\n            accumulator = reducer(accumulator, next._head, index++);\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                break;\n            }\n        }\n        return accumulator;\n    }\n    reduceUntil(predicate, reducer, accumulator) {\n        return this.reduceWhile(not(predicate), reducer, accumulator);\n    }\n    filter(predicate, index = 0) {\n        let next = this;\n        while (true) {\n            if (predicate(next._head, index++)) {\n                return new Cons(next._head, next._tail.map((tail) => Cons.isCons(tail) ? tail.filter(predicate, index) : nil_1.Nil));\n            }\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return nil_1.Nil;\n            }\n        }\n    }\n    reject(predicate) {\n        return this.filter(not(predicate));\n    }\n    find(predicate) {\n        let next = this;\n        let index = 0;\n        while (true) {\n            const head = next._head;\n            if (predicate(head, index++)) {\n                return alfa_option_1.Option.of(head);\n            }\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return alfa_option_1.None;\n            }\n        }\n    }\n    includes(value) {\n        return this.some(equals(value));\n    }\n    collect(mapper, index = 0) {\n        let next = this;\n        while (true) {\n            const value = mapper(next._head, index++);\n            if (value.isSome()) {\n                return new Cons(value.get(), next._tail.map((tail) => Cons.isCons(tail) ? tail.collect(mapper, index) : nil_1.Nil));\n            }\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return nil_1.Nil;\n            }\n        }\n    }\n    collectFirst(mapper) {\n        let next = this;\n        let index = 0;\n        while (true) {\n            const value = mapper(next._head, index++);\n            if (value.isSome()) {\n                return value;\n            }\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return alfa_option_1.None;\n            }\n        }\n    }\n    some(predicate) {\n        let next = this;\n        let index = 0;\n        while (true) {\n            if (predicate(next._head, index++)) {\n                return true;\n            }\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return false;\n            }\n        }\n    }\n    none(predicate) {\n        return this.every(not(predicate));\n    }\n    every(predicate) {\n        let next = this;\n        let index = 0;\n        while (true) {\n            if (!predicate(next._head, index++)) {\n                return false;\n            }\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return true;\n            }\n        }\n    }\n    count(predicate) {\n        return this.reduce((count, value, index) => (predicate(value, index) ? count + 1 : count), 0);\n    }\n    distinct(seen = alfa_set_1.Set.empty()) {\n        let next = this;\n        while (true) {\n            if (seen.has(next._head)) {\n                const tail = next._tail.force();\n                if (Cons.isCons(tail)) {\n                    next = tail;\n                }\n                else {\n                    return nil_1.Nil;\n                }\n            }\n            else {\n                return Cons.of(next._head, next._tail.map((tail) => Cons.isCons(tail) ? tail.distinct(seen.add(next._head)) : nil_1.Nil));\n            }\n        }\n    }\n    get(index) {\n        return index < 0 ? alfa_option_1.None : this.skip(index).first();\n    }\n    has(index) {\n        return this.get(index).isSome();\n    }\n    set(index, value) {\n        if (index < 0) {\n            return this;\n        }\n        if (index === 0) {\n            if (alfa_equatable_1.Equatable.equals(value, this._head)) {\n                return this;\n            }\n            return new Cons(value, this._tail);\n        }\n        return new Cons(this._head, this._tail.map((tail) => tail.set(index - 1, value)));\n    }\n    insert(index, value) {\n        if (index < 0) {\n            return this;\n        }\n        if (index === 0) {\n            return new Cons(value, alfa_lazy_1.Lazy.force(this));\n        }\n        return new Cons(this._head, this._tail.map((tail) => tail.set(index - 1, value)));\n    }\n    append(value) {\n        return new Cons(this._head, this._tail.map((tail) => tail.append(value)));\n    }\n    prepend(value) {\n        return new Cons(value, alfa_lazy_1.Lazy.force(this));\n    }\n    concat(iterable) {\n        const sequence = sequence_1.Sequence.from(iterable);\n        if (Cons.isCons(sequence)) {\n            return new Cons(this._head, this._tail.map((tail) => tail.concat(sequence)));\n        }\n        return this;\n    }\n    subtract(iterable) {\n        return this.filter((value) => !alfa_iterable_1.Iterable.includes(iterable, value));\n    }\n    intersect(iterable) {\n        return this.filter((value) => alfa_iterable_1.Iterable.includes(iterable, value));\n    }\n    tee(callback, ...args) {\n        callback(this, ...args);\n        return this;\n    }\n    zip(iterable) {\n        const sequence = sequence_1.Sequence.from(iterable);\n        if (Cons.isCons(sequence)) {\n            return new Cons([this._head, sequence._head], this._tail.map((tail) => tail.zip(sequence.rest())));\n        }\n        return nil_1.Nil;\n    }\n    first() {\n        return alfa_option_1.Option.of(this._head);\n    }\n    last() {\n        let next = this;\n        while (true) {\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return alfa_option_1.Option.of(next._head);\n            }\n        }\n    }\n    take(count) {\n        if (count <= 0) {\n            return nil_1.Nil;\n        }\n        return new Cons(this._head, count === 1\n            ? alfa_lazy_1.Lazy.force(nil_1.Nil)\n            : this._tail.map((tail) => Cons.isCons(tail) ? tail.take(count - 1) : nil_1.Nil));\n    }\n    takeWhile(predicate) {\n        return this.takeUntil(not(predicate));\n    }\n    takeUntil(predicate, index = 0) {\n        if (predicate(this._head, index)) {\n            return nil_1.Nil;\n        }\n        return new Cons(this._head, this._tail.map((tail) => Cons.isCons(tail)\n            ? tail.takeUntil(predicate, index + 1)\n            : tail.takeUntil(predicate)));\n    }\n    takeLast(count) {\n        return this.skip(this.size - count);\n    }\n    takeLastWhile(predicate) {\n        return this.reverse().takeWhile(predicate).reverse();\n    }\n    takeLastUntil(predicate) {\n        return this.takeLastWhile(not(predicate));\n    }\n    skip(count) {\n        let next = this;\n        while (count-- > 0) {\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return nil_1.Nil;\n            }\n        }\n        return next;\n    }\n    skipWhile(predicate) {\n        let next = this;\n        let index = 0;\n        while (predicate(next._head, index++)) {\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return nil_1.Nil;\n            }\n        }\n        return next;\n    }\n    skipUntil(predicate) {\n        return this.skipWhile(not(predicate));\n    }\n    skipLast(count) {\n        return this.take(this.size - count);\n    }\n    skipLastWhile(predicate) {\n        return this.reverse().skipWhile(predicate).reverse();\n    }\n    skipLastUntil(predicate) {\n        return this.skipLastWhile(not(predicate));\n    }\n    trim(predicate) {\n        return this.trimLeading(predicate).trimTrailing(predicate);\n    }\n    trimLeading(predicate) {\n        return this.skipWhile(predicate);\n    }\n    trimTrailing(predicate) {\n        return this.skipLastWhile(predicate);\n    }\n    rest() {\n        return this._tail.force();\n    }\n    slice(start, end) {\n        let slice = this.skip(start);\n        if (end !== undefined) {\n            slice = slice.take(end - start);\n        }\n        return slice;\n    }\n    reverse() {\n        return this.reduce((reversed, value) => new Cons(value, alfa_lazy_1.Lazy.force(reversed)), nil_1.Nil);\n    }\n    join(separator) {\n        let result = `${this._head}`;\n        let next = this;\n        while (true) {\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                result += `${separator}${tail._head}`;\n                next = tail;\n            }\n            else {\n                return result;\n            }\n        }\n    }\n    sort() {\n        return this.sortWith(compareComparable);\n    }\n    sortWith(comparer) {\n        return sequence_1.Sequence.fromArray(alfa_array_1.Array.sortWith(this.toArray(), comparer));\n    }\n    compare(iterable) {\n        return this.compareWith(iterable, alfa_comparable_1.Comparable.compare);\n    }\n    compareWith(iterable, comparer) {\n        return alfa_iterable_1.Iterable.compareWith(this, iterable, comparer);\n    }\n    groupBy(grouper) {\n        return this.reduce((groups, value, index) => {\n            const group = grouper(value, index);\n            return groups.set(group, new Cons(value, alfa_lazy_1.Lazy.force(groups.get(group).getOrElse(() => nil_1.Nil))));\n        }, alfa_map_1.Map.empty()).map((group) => group.reverse());\n    }\n    equals(value) {\n        if (!Cons.isCons(value)) {\n            return false;\n        }\n        let a = this;\n        let b = value;\n        while (true) {\n            if (!alfa_equatable_1.Equatable.equals(a._head, b._head)) {\n                return false;\n            }\n            const ta = a._tail.force();\n            const tb = b._tail.force();\n            if (Cons.isCons(ta) && Cons.isCons(tb)) {\n                a = ta;\n                b = tb;\n            }\n            else {\n                return ta === nil_1.Nil && tb === nil_1.Nil;\n            }\n        }\n    }\n    hash(hash) {\n        let size = 0;\n        for (const value of this) {\n            hash.writeUnknown(value);\n            size++;\n        }\n        hash.writeUint32(size);\n    }\n    *iterator() {\n        let next = this;\n        while (true) {\n            yield next._head;\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                break;\n            }\n        }\n    }\n    [Symbol.iterator]() {\n        return this.iterator();\n    }\n    toArray() {\n        const array = [];\n        let next = this;\n        while (true) {\n            array.push(next._head);\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return array;\n            }\n        }\n    }\n    toJSON() {\n        const json = [];\n        let next = this;\n        while (true) {\n            json.push(alfa_json_1.Serializable.toJSON(next._head));\n            const tail = next._tail.force();\n            if (Cons.isCons(tail)) {\n                next = tail;\n            }\n            else {\n                return json;\n            }\n        }\n    }\n    toString() {\n        return `Sequence [ ${this.join(\", \")} ]`;\n    }\n}\nexports.Cons = Cons;\n/**\n * @public\n */\n(function (Cons) {\n    function isCons(value) {\n        return value instanceof Cons;\n    }\n    Cons.isCons = isCons;\n})(Cons || (exports.Cons = Cons = {}));\n//# sourceMappingURL=cons.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-url/node_modules/@siteimprove/alfa-sequence/src/cons.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-url/node_modules/@siteimprove/alfa-sequence/src/index.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-url/node_modules/@siteimprove/alfa-sequence/src/index.js ***!
  \*************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./cons */ \"./node_modules/@siteimprove/alfa-url/node_modules/@siteimprove/alfa-sequence/src/cons.js\"), exports);\n__exportStar(__webpack_require__(/*! ./nil */ \"./node_modules/@siteimprove/alfa-url/node_modules/@siteimprove/alfa-sequence/src/nil.js\"), exports);\n__exportStar(__webpack_require__(/*! ./sequence */ \"./node_modules/@siteimprove/alfa-url/node_modules/@siteimprove/alfa-sequence/src/sequence.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-url/node_modules/@siteimprove/alfa-sequence/src/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-url/node_modules/@siteimprove/alfa-sequence/src/nil.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-url/node_modules/@siteimprove/alfa-sequence/src/nil.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Nil = void 0;\nconst alfa_comparable_1 = __webpack_require__(/*! @siteimprove/alfa-comparable */ \"./node_modules/@siteimprove/alfa-comparable/src/index.js\");\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_map_1 = __webpack_require__(/*! @siteimprove/alfa-map */ \"./node_modules/@siteimprove/alfa-map/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst sequence_1 = __webpack_require__(/*! ./sequence */ \"./node_modules/@siteimprove/alfa-url/node_modules/@siteimprove/alfa-sequence/src/sequence.js\");\nconst cons_1 = __webpack_require__(/*! ./cons */ \"./node_modules/@siteimprove/alfa-url/node_modules/@siteimprove/alfa-sequence/src/cons.js\");\n/**\n * @public\n */\nexports.Nil = new (class Nil {\n    get size() {\n        return 0;\n    }\n    isEmpty() {\n        return true;\n    }\n    forEach() { }\n    map() {\n        return this;\n    }\n    apply() {\n        return this;\n    }\n    flatMap() {\n        return this;\n    }\n    flatten() {\n        return this;\n    }\n    reduce(reducer, accumulator) {\n        return accumulator;\n    }\n    reduceWhile(predicate, reducer, accumulator) {\n        return accumulator;\n    }\n    reduceUntil(predicate, reducer, accumulator) {\n        return accumulator;\n    }\n    filter() {\n        return this;\n    }\n    reject() {\n        return this;\n    }\n    find() {\n        return alfa_option_1.None;\n    }\n    includes() {\n        return false;\n    }\n    collect() {\n        return this;\n    }\n    collectFirst() {\n        return alfa_option_1.None;\n    }\n    some() {\n        return false;\n    }\n    none() {\n        return true;\n    }\n    every() {\n        return true;\n    }\n    count() {\n        return 0;\n    }\n    distinct() {\n        return this;\n    }\n    get() {\n        return alfa_option_1.None;\n    }\n    has() {\n        return false;\n    }\n    set() {\n        return this;\n    }\n    insert(index, value) {\n        return index === 0 ? cons_1.Cons.of(value) : this;\n    }\n    append(value) {\n        return cons_1.Cons.of(value);\n    }\n    prepend(value) {\n        return cons_1.Cons.of(value);\n    }\n    concat(iterable) {\n        if (iterable === this) {\n            return this;\n        }\n        return sequence_1.Sequence.from(iterable);\n    }\n    subtract() {\n        return this;\n    }\n    intersect() {\n        return this;\n    }\n    tee(callback, ...args) {\n        callback(this, ...args);\n        return this;\n    }\n    zip() {\n        return this;\n    }\n    first() {\n        return alfa_option_1.None;\n    }\n    last() {\n        return alfa_option_1.None;\n    }\n    take() {\n        return this;\n    }\n    takeWhile() {\n        return this;\n    }\n    takeUntil() {\n        return this;\n    }\n    takeLast() {\n        return this;\n    }\n    takeLastWhile() {\n        return this;\n    }\n    takeLastUntil() {\n        return this;\n    }\n    skip() {\n        return this;\n    }\n    skipWhile() {\n        return this;\n    }\n    skipUntil() {\n        return this;\n    }\n    skipLast() {\n        return this;\n    }\n    skipLastWhile() {\n        return this;\n    }\n    skipLastUntil() {\n        return this;\n    }\n    trim() {\n        return this;\n    }\n    trimLeading() {\n        return this;\n    }\n    trimTrailing() {\n        return this;\n    }\n    rest() {\n        return this;\n    }\n    slice() {\n        return this;\n    }\n    reverse() {\n        return this;\n    }\n    join() {\n        return \"\";\n    }\n    sort() {\n        return this;\n    }\n    sortWith() {\n        return this;\n    }\n    compare(iterable) {\n        return this.compareWith(iterable, alfa_comparable_1.Comparable.compare);\n    }\n    compareWith(iterable, comparer) {\n        return alfa_iterable_1.Iterable.compareWith(this, iterable, comparer);\n    }\n    groupBy() {\n        return alfa_map_1.Map.empty();\n    }\n    equals(value) {\n        return value instanceof Nil;\n    }\n    hash(hash) {\n        hash.writeUint32(0);\n    }\n    *iterator() { }\n    [Symbol.iterator]() {\n        return this.iterator();\n    }\n    toArray() {\n        return [];\n    }\n    toJSON() {\n        return [];\n    }\n    toString() {\n        return \"Sequence []\";\n    }\n})();\n//# sourceMappingURL=nil.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-url/node_modules/@siteimprove/alfa-sequence/src/nil.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-url/node_modules/@siteimprove/alfa-sequence/src/sequence.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-url/node_modules/@siteimprove/alfa-sequence/src/sequence.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Sequence = void 0;\nconst alfa_array_1 = __webpack_require__(/*! @siteimprove/alfa-array */ \"./node_modules/@siteimprove/alfa-array/src/index.js\");\nconst alfa_lazy_1 = __webpack_require__(/*! @siteimprove/alfa-lazy */ \"./node_modules/@siteimprove/alfa-lazy/src/index.js\");\nconst cons_1 = __webpack_require__(/*! ./cons */ \"./node_modules/@siteimprove/alfa-url/node_modules/@siteimprove/alfa-sequence/src/cons.js\");\nconst nil_1 = __webpack_require__(/*! ./nil */ \"./node_modules/@siteimprove/alfa-url/node_modules/@siteimprove/alfa-sequence/src/nil.js\");\n/**\n * @public\n */\nvar Sequence;\n(function (Sequence) {\n    function isSequence(value) {\n        return isCons(value) || isNil(value);\n    }\n    Sequence.isSequence = isSequence;\n    function isCons(value) {\n        return cons_1.Cons.isCons(value);\n    }\n    Sequence.isCons = isCons;\n    function isNil(value) {\n        return value === nil_1.Nil;\n    }\n    Sequence.isNil = isNil;\n    function of(head, tail) {\n        return cons_1.Cons.of(head, tail);\n    }\n    Sequence.of = of;\n    function empty() {\n        return nil_1.Nil;\n    }\n    Sequence.empty = empty;\n    function from(iterable) {\n        if (isSequence(iterable)) {\n            return iterable;\n        }\n        if (alfa_array_1.Array.isArray(iterable)) {\n            return fromArray(iterable);\n        }\n        return fromIterable(iterable);\n    }\n    Sequence.from = from;\n    function fromArray(array) {\n        let i = 0;\n        const tail = () => {\n            if (i >= array.length) {\n                return empty();\n            }\n            return of(array[i++], alfa_lazy_1.Lazy.of(tail));\n        };\n        return tail();\n    }\n    Sequence.fromArray = fromArray;\n    function fromIterable(iterable) {\n        return fromIterator(iterable[Symbol.iterator]());\n    }\n    Sequence.fromIterable = fromIterable;\n    function fromIterator(iterator) {\n        const tail = () => {\n            const head = iterator.next();\n            if (head.done === true) {\n                return empty();\n            }\n            return of(head.value, alfa_lazy_1.Lazy.of(tail));\n        };\n        return tail();\n    }\n    Sequence.fromIterator = fromIterator;\n})(Sequence || (exports.Sequence = Sequence = {}));\n//# sourceMappingURL=sequence.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-url/node_modules/@siteimprove/alfa-sequence/src/sequence.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-url/src/builtin.js":
/*!***********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-url/src/builtin.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/// <reference lib=\"dom\" />\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.URL = void 0;\n// This file defines exports from the builtin `URL` constructor for internal\n// use only.\n/**\n * @internal\n */\nconst Builtin = URL;\nexports.URL = Builtin;\n//# sourceMappingURL=builtin.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-url/src/builtin.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-url/src/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-url/src/index.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./url */ \"./node_modules/@siteimprove/alfa-url/src/url.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-url/src/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-url/src/url.js":
/*!*******************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-url/src/url.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.URL = void 0;\nconst alfa_iterable_1 = __webpack_require__(/*! @siteimprove/alfa-iterable */ \"./node_modules/@siteimprove/alfa-iterable/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst alfa_result_1 = __webpack_require__(/*! @siteimprove/alfa-result */ \"./node_modules/@siteimprove/alfa-result/src/index.js\");\nconst alfa_sequence_1 = __webpack_require__(/*! @siteimprove/alfa-sequence */ \"./node_modules/@siteimprove/alfa-url/node_modules/@siteimprove/alfa-sequence/src/index.js\");\nconst builtin = __webpack_require__(/*! ./builtin */ \"./node_modules/@siteimprove/alfa-url/src/builtin.js\");\nconst { isEmpty } = alfa_iterable_1.Iterable;\n/**\n * {@link https://url.spec.whatwg.org/}\n *\n * @public\n */\nclass URL {\n    static of(scheme, username = alfa_option_1.None, password = alfa_option_1.None, host = alfa_option_1.None, port = alfa_option_1.None, path = [], query = alfa_option_1.None, fragment = alfa_option_1.None, cannotBeABase = false) {\n        return new URL(scheme, username, password, host, port, alfa_sequence_1.Sequence.from(path), query, fragment, cannotBeABase);\n    }\n    /**\n     * {@link https://tools.ietf.org/html/rfc2606#section-3}\n     */\n    static example() {\n        // this is a valid URL\n        return URL.parse(\"https://example.com\").getUnsafe();\n    }\n    /**\n     * {@link https://tools.ietf.org/html/rfc6694#section-3}\n     */\n    static blank() {\n        // this is a valid URL\n        return URL.parse(\"about:blank\").getUnsafe();\n    }\n    constructor(scheme, username, password, host, port, path, query, fragment, cannotBeABase) {\n        this._scheme = scheme;\n        this._username = username;\n        this._password = password;\n        this._host = host;\n        this._port = port;\n        this._path = path;\n        this._query = query;\n        this._fragment = fragment;\n        this._cannotBeABase = cannotBeABase;\n    }\n    /**\n     * {@link https://url.spec.whatwg.org/#concept-url-scheme}\n     */\n    get scheme() {\n        return this._scheme;\n    }\n    /**\n     * {@link https://url.spec.whatwg.org/#concept-url-username}\n     */\n    get username() {\n        return this._username;\n    }\n    /**\n     * {@link https://url.spec.whatwg.org/#concept-url-password}\n     */\n    get password() {\n        return this._password;\n    }\n    /**\n     * {@link https://url.spec.whatwg.org/#concept-url-host}\n     */\n    get host() {\n        return this._host;\n    }\n    /**\n     * {@link https://url.spec.whatwg.org/#concept-url-port}\n     */\n    get port() {\n        return this._port;\n    }\n    /**\n     * {@link https://url.spec.whatwg.org/#concept-url-path}\n     */\n    get path() {\n        return this._path;\n    }\n    /**\n     * {@link https://url.spec.whatwg.org/#concept-url-query}\n     */\n    get query() {\n        return this._query;\n    }\n    /**\n     * {@link https://url.spec.whatwg.org/#concept-url-fragment}\n     */\n    get fragment() {\n        return this._fragment;\n    }\n    /**\n     * {@link https://url.spec.whatwg.org/#url-cannot-be-a-base-url-flag}\n     */\n    get cannotBeABase() {\n        return this._cannotBeABase;\n    }\n    /**\n     * {@link https://url.spec.whatwg.org/#is-special}\n     */\n    isSpecial() {\n        return URL.isSpecialScheme(this._scheme);\n    }\n    /**\n     * {@link https://url.spec.whatwg.org/#include-credentials}\n     */\n    hasCredentials() {\n        return this._username.isSome() || this._password.isSome();\n    }\n    /**\n     * Remove the fragment portion of this URL.\n     *\n     * @remarks\n     * This method is useful for contexts in which the fragment portion of the URL,\n     * which isn't passed from client to server, is of no interest.\n     */\n    withoutFragment() {\n        if (this._fragment.isNone()) {\n            return this;\n        }\n        return new URL(this._scheme, this._username, this._password, this._host, this._port, this._path, this._query, alfa_option_1.None, this._cannotBeABase);\n    }\n    equals(value) {\n        return (value instanceof URL &&\n            value._scheme === this._scheme &&\n            value._username.equals(this._username) &&\n            value._password.equals(this._password) &&\n            value._host.equals(this._host) &&\n            value._port.equals(this._port) &&\n            value._path.equals(this._path) &&\n            value._query.equals(this._query) &&\n            value._fragment.equals(this._fragment) &&\n            value._cannotBeABase === this._cannotBeABase);\n    }\n    hash(hash) {\n        hash\n            .writeString(this._scheme)\n            .writeHashable(this._username)\n            .writeHashable(this._password)\n            .writeHashable(this._host)\n            .writeHashable(this._port)\n            .writeHashable(this._path)\n            .writeHashable(this._query)\n            .writeHashable(this._fragment)\n            .writeBoolean(this._cannotBeABase);\n    }\n    toJSON() {\n        return {\n            scheme: this._scheme,\n            username: this._username.getOr(null),\n            password: this._password.getOr(null),\n            host: this._host.getOr(null),\n            port: this._port.getOr(null),\n            path: this._path.toArray(),\n            query: this._query.getOr(null),\n            fragment: this._fragment.getOr(null),\n            cannotBeABase: this._cannotBeABase,\n        };\n    }\n    /**\n     * {@link https://url.spec.whatwg.org/#concept-url-serializer}\n     */\n    toString() {\n        let output = this._scheme + \":\";\n        for (const host of this._host) {\n            output += \"//\";\n            if (this.hasCredentials()) {\n                for (const username of this._username) {\n                    output += username;\n                }\n                for (const password of this._password) {\n                    output += \":\" + password;\n                }\n                output += \"@\";\n            }\n            output += host;\n            for (const port of this._port) {\n                output += \":\" + port.toString(10);\n            }\n        }\n        if (this._cannotBeABase) {\n            output += this._path.get(0).getOr(\"\");\n        }\n        else {\n            if (this._host.isNone() &&\n                this._path.size > 1 &&\n                this._path.first().includes(\"\")) {\n                output += \"/.\";\n            }\n            for (const segment of this._path) {\n                output += \"/\" + segment;\n            }\n        }\n        for (const query of this._query) {\n            output += \"?\" + query;\n        }\n        for (const fragment of this._fragment) {\n            output += \"#\" + fragment;\n        }\n        return output;\n    }\n}\nexports.URL = URL;\n/**\n * @public\n */\n(function (URL) {\n    function from(json) {\n        return URL.of(json.scheme, alfa_option_1.Option.from(json.username), alfa_option_1.Option.from(json.password), alfa_option_1.Option.from(json.host), alfa_option_1.Option.from(json.port), json.path, alfa_option_1.Option.from(json.query), alfa_option_1.Option.from(json.fragment));\n    }\n    URL.from = from;\n    /**\n     * {@link https://url.spec.whatwg.org/#concept-url-parser}\n     *\n     * @remarks\n     * Parsing URLs is tricky business and so this function relies on the presence\n     * of a globally available WHATWG URL class. This API is available in both\n     * browsers, Node.js, and Deno.\n     */\n    function parse(url, base) {\n        if (typeof base === \"string\") {\n            const result = parse(base);\n            if (!result.isOk()) {\n                return result;\n            }\n            base = result.get();\n        }\n        try {\n            const { \n            // https://url.spec.whatwg.org/#dom-url-protocol\n            protocol, \n            // https://url.spec.whatwg.org/#dom-url-username\n            username, \n            // https://url.spec.whatwg.org/#dom-url-password\n            password, \n            // https://url.spec.whatwg.org/#dom-url-hostname\n            hostname, \n            // https://url.spec.whatwg.org/#dom-url-port\n            port, \n            // https://url.spec.whatwg.org/#dom-url-pathname\n            pathname, \n            // https://url.spec.whatwg.org/#dom-url-search\n            search, \n            // https://url.spec.whatwg.org/#dom-url-hash\n            hash, } = new builtin.URL(url, base?.toString());\n            // `URL#protocol` appends a \":\" to the scheme which we need to remove.\n            const scheme = protocol.replace(/:$/, \"\");\n            return alfa_result_1.Result.of(URL.of(scheme, \n            // `URL#username` `URL#password` expose the username and password\n            // as-is and so the only thing we need to do is reject them when\n            // empty.\n            alfa_option_1.Option.of(username).reject(isEmpty), alfa_option_1.Option.of(password).reject(isEmpty), \n            // `URL#hostname` exposes the host as an empty string if the host is\n            // `null`. For the `file` scheme, however, the empty string is\n            // significant and we therefore don't translate it into `None`.\n            scheme === \"file\"\n                ? alfa_option_1.Option.of(hostname)\n                : alfa_option_1.Option.of(hostname).reject(isEmpty), \n            // `URL#port` exposes the port number as a string to we convert it to\n            // a number.\n            alfa_option_1.Option.of(port).reject(isEmpty).map(Number), \n            // `URL#pathname` exposes the path segments with a leading \"/\" and\n            // joins the segments with \"/\". We therefore remove the leading \"/\"\n            // and split the segments by \"/\" into an array.\n            pathname.replace(/^\\//, \"\").split(\"/\"), \n            // `URL#search` exposes the query portion of the URL with a leading\n            // \"?\" which we need to remove.\n            alfa_option_1.Option.of(search)\n                .reject(isEmpty)\n                .map((search) => search.replace(/^\\?/, \"\")), \n            // `URL#hash` exposes the fragment portion of the URL with a leading\n            // \"#\" which we need to remove.\n            alfa_option_1.Option.of(hash)\n                .reject(isEmpty)\n                .map((hash) => hash.replace(/^#/, \"\")), \n            // The URL cannot be used as a base URL when the scheme isn't\n            // special and the pathname doesn't start with a leading \"/\".\n            !isSpecialScheme(scheme) && pathname[0] !== \"/\"));\n        }\n        catch (err) {\n            if (err instanceof Error) {\n                return alfa_result_1.Err.of(err.message);\n            }\n            else {\n                return alfa_result_1.Err.of(`${err}`);\n            }\n        }\n    }\n    URL.parse = parse;\n    /**\n     * {@link https://url.spec.whatwg.org/#special-scheme}\n     */\n    function isSpecialScheme(scheme) {\n        switch (scheme) {\n            case \"ftp\":\n            case \"file\":\n            case \"http\":\n            case \"https\":\n            case \"ws\":\n            case \"wss\":\n                return true;\n            default:\n                return false;\n        }\n    }\n    URL.isSpecialScheme = isSpecialScheme;\n})(URL || (exports.URL = URL = {}));\n//# sourceMappingURL=url.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-url/src/url.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-wcag/src/conformance.js":
/*!****************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-wcag/src/conformance.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Conformance = void 0;\nconst criterion_1 = __webpack_require__(/*! ./criterion */ \"./node_modules/@siteimprove/alfa-wcag/src/criterion.js\");\n/**\n * This namespace defines types and functions for working with conformance-\n * related queries.\n *\n * {@link https://www.w3.org/TR/WCAG/#conformance}\n *\n * @public\n */\nvar Conformance;\n(function (Conformance) {\n    /**\n     * Check if a criterion is needed for the specified conformance level under\n     * the specified version.\n     */\n    function hasLevel(level, version = criterion_1.Criterion.Version.Recommendation) {\n        return (criterion) => criterion.level.some((found, versions) => found <= level && [...versions].includes(version));\n    }\n    /**\n     * Check if a criterion is needed for level AA conformance under the\n     * specified version.\n     */\n    function isA(version) {\n        return hasLevel(\"A\", version);\n    }\n    Conformance.isA = isA;\n    /**\n     * Check if a criterion is needed for level AA conformance under the\n     * specified version.\n     */\n    function isAA(version) {\n        return hasLevel(\"AA\", version);\n    }\n    Conformance.isAA = isAA;\n    /**\n     * Check if a criterion is needed for level AAA conformance under the\n     * specified version.\n     */\n    function isAAA(version) {\n        return hasLevel(\"AAA\", version);\n    }\n    Conformance.isAAA = isAAA;\n})(Conformance || (exports.Conformance = Conformance = {}));\n//# sourceMappingURL=conformance.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-wcag/src/conformance.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-wcag/src/criterion.js":
/*!**************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-wcag/src/criterion.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Criterion = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst alfa_branched_1 = __webpack_require__(/*! @siteimprove/alfa-branched */ \"./node_modules/@siteimprove/alfa-branched/src/index.js\");\nconst alfa_option_1 = __webpack_require__(/*! @siteimprove/alfa-option */ \"./node_modules/@siteimprove/alfa-option/src/index.js\");\nconst data_1 = __webpack_require__(/*! ./criterion/data */ \"./node_modules/@siteimprove/alfa-wcag/src/criterion/data.js\");\n/**\n * @public\n */\nclass Criterion extends alfa_act_1.Requirement {\n    static of(chapter) {\n        return new Criterion(chapter);\n    }\n    constructor(chapter) {\n        super();\n        this._chapter = chapter;\n    }\n    /**\n     * The chapter of this criterion.\n     */\n    get chapter() {\n        return this._chapter;\n    }\n    /**\n     * The title of this criterion.\n     */\n    get title() {\n        return data_1.Criteria[this._chapter].title;\n    }\n    /**\n     * The URI of this criterion.\n     *\n     * @remarks\n     * The `Requirement` class requires a single URI for each requirement and so\n     * we can't branch of the criterion version. We therefore pick the most stable\n     * URI and use that.\n     */\n    get uri() {\n        // Use the criterion URI from the recommendation, if available, otherwise\n        // use the URI from the draft. This ensures that the most stable identifier\n        // is used when avaiable.\n        const [, { uri }] = [...data_1.Criteria[this._chapter].versions].find(([version]) => version === Criterion.Version.Recommendation ||\n            version === Criterion.Version.Draft);\n        return uri;\n    }\n    /**\n     * The versions in which this criterion is defined.\n     */\n    get versions() {\n        return [...data_1.Criteria[this._chapter].versions].map(([version]) => version);\n    }\n    /**\n     * The level of this criterion.\n     *\n     * @remarks\n     * The level may be different between versions.\n     */\n    get level() {\n        return alfa_branched_1.Branched.from([...data_1.Criteria[this._chapter].versions].map(([version, { level }]) => [\n            level,\n            [version],\n        ]));\n    }\n    toJSON() {\n        const { title } = data_1.Criteria[this._chapter];\n        return {\n            ...super.toJSON(),\n            chapter: this._chapter,\n            title,\n        };\n    }\n    toEARL() {\n        const { title } = data_1.Criteria[this._chapter];\n        return {\n            ...super.toEARL(),\n            \"@context\": {\n                earl: \"http://www.w3.org/ns/earl#\",\n                dct: \"http://purl.org/dc/terms/\",\n            },\n            \"dct:title\": title,\n            \"dct:isPartOf\": \"https://www.w3.org/TR/WCAG/\",\n        };\n    }\n}\nexports.Criterion = Criterion;\n/**\n * @public\n */\n(function (Criterion) {\n    function isChapter(value) {\n        return value in data_1.Criteria;\n    }\n    Criterion.isChapter = isChapter;\n    let Version;\n    (function (Version) {\n        /**\n         * The current version of the WCAG Recommendation.\n         */\n        Version.Recommendation = \"2.1\";\n        /**\n         * The current version of the WCAG Working Draft.\n         */\n        Version.Draft = \"2.2\";\n    })(Version = Criterion.Version || (Criterion.Version = {}));\n    function isCriterion(value) {\n        return value instanceof Criterion;\n    }\n    Criterion.isCriterion = isCriterion;\n    function fromURI(uri) {\n        const rewrittenUri = uri\n            // Keeping slashes in URL rewritting to ensure proper delimiting of path\n            // pieces.\n            // rewrite WCAG21 -> WCAG2 since we only parse the latter.\n            // We should use the shared way of tracking which version is the latest as\n            // this will require manual updates.\n            .replace(\"/WCAG21/\", \"/WCAG2/\")\n            // rewrite WCAG -> WCAG2 since we only parse the latter.\n            .replace(\"/WCAG/\", \"/WCAG2/\");\n        for (const [chapter, value] of Object.entries(data_1.Criteria)) {\n            for (const version of value.versions) {\n                if (version[1].uri === rewrittenUri) {\n                    return alfa_option_1.Option.of(Criterion.of(chapter));\n                }\n            }\n        }\n        return alfa_option_1.None;\n    }\n    Criterion.fromURI = fromURI;\n})(Criterion || (exports.Criterion = Criterion = {}));\n//# sourceMappingURL=criterion.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-wcag/src/criterion.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-wcag/src/criterion/data.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-wcag/src/criterion/data.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// This file has been automatically generated based on the WCAG specification.\n// Do therefore not modify it directly! If you wish to make changes, do so in\n// `scripts/criteria.js` and run `yarn generate` to rebuild this file.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Criteria = void 0;\n/**\n * @internal\n */\nexports.Criteria = {\n    \"1.1.1\": {\n        title: \"Non-text Content\",\n        versions: [\n            [\n                \"2.0\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG20/#text-equiv-all\",\n                    level: \"A\",\n                },\n            ],\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#non-text-content\",\n                    level: \"A\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#non-text-content\",\n                    level: \"A\",\n                },\n            ],\n        ],\n    },\n    \"1.2.1\": {\n        title: \"Audio-only and Video-only (Prerecorded)\",\n        versions: [\n            [\n                \"2.0\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG20/#media-equiv-av-only-alt\",\n                    level: \"A\",\n                },\n            ],\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#audio-only-and-video-only-prerecorded\",\n                    level: \"A\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#audio-only-and-video-only-prerecorded\",\n                    level: \"A\",\n                },\n            ],\n        ],\n    },\n    \"1.2.2\": {\n        title: \"Captions (Prerecorded)\",\n        versions: [\n            [\n                \"2.0\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG20/#media-equiv-captions\",\n                    level: \"A\",\n                },\n            ],\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#captions-prerecorded\",\n                    level: \"A\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#captions-prerecorded\",\n                    level: \"A\",\n                },\n            ],\n        ],\n    },\n    \"1.2.3\": {\n        title: \"Audio Description or Media Alternative (Prerecorded)\",\n        versions: [\n            [\n                \"2.0\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG20/#media-equiv-audio-desc\",\n                    level: \"A\",\n                },\n            ],\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#audio-description-or-media-alternative-prerecorded\",\n                    level: \"A\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#audio-description-or-media-alternative-prerecorded\",\n                    level: \"A\",\n                },\n            ],\n        ],\n    },\n    \"1.2.4\": {\n        title: \"Captions (Live)\",\n        versions: [\n            [\n                \"2.0\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG20/#media-equiv-real-time-captions\",\n                    level: \"AA\",\n                },\n            ],\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#captions-live\",\n                    level: \"AA\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#captions-live\",\n                    level: \"AA\",\n                },\n            ],\n        ],\n    },\n    \"1.2.5\": {\n        title: \"Audio Description (Prerecorded)\",\n        versions: [\n            [\n                \"2.0\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG20/#media-equiv-audio-desc-only\",\n                    level: \"AA\",\n                },\n            ],\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#audio-description-prerecorded\",\n                    level: \"AA\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#audio-description-prerecorded\",\n                    level: \"AA\",\n                },\n            ],\n        ],\n    },\n    \"1.2.6\": {\n        title: \"Sign Language (Prerecorded)\",\n        versions: [\n            [\n                \"2.0\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG20/#media-equiv-sign\",\n                    level: \"AAA\",\n                },\n            ],\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#sign-language-prerecorded\",\n                    level: \"AAA\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#sign-language-prerecorded\",\n                    level: \"AAA\",\n                },\n            ],\n        ],\n    },\n    \"1.2.7\": {\n        title: \"Extended Audio Description  (Prerecorded)\",\n        versions: [\n            [\n                \"2.0\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG20/#media-equiv-extended-ad\",\n                    level: \"AAA\",\n                },\n            ],\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#extended-audio-description-prerecorded\",\n                    level: \"AAA\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#extended-audio-description-prerecorded\",\n                    level: \"AAA\",\n                },\n            ],\n        ],\n    },\n    \"1.2.8\": {\n        title: \"Media Alternative (Prerecorded)\",\n        versions: [\n            [\n                \"2.0\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG20/#media-equiv-text-doc\",\n                    level: \"AAA\",\n                },\n            ],\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#media-alternative-prerecorded\",\n                    level: \"AAA\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#media-alternative-prerecorded\",\n                    level: \"AAA\",\n                },\n            ],\n        ],\n    },\n    \"1.2.9\": {\n        title: \"Audio-only (Live)\",\n        versions: [\n            [\n                \"2.0\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG20/#media-equiv-live-audio-only\",\n                    level: \"AAA\",\n                },\n            ],\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#audio-only-live\",\n                    level: \"AAA\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#audio-only-live\",\n                    level: \"AAA\",\n                },\n            ],\n        ],\n    },\n    \"1.3.1\": {\n        title: \"Info and Relationships\",\n        versions: [\n            [\n                \"2.0\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG20/#content-structure-separation-programmatic\",\n                    level: \"A\",\n                },\n            ],\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#info-and-relationships\",\n                    level: \"A\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#info-and-relationships\",\n                    level: \"A\",\n                },\n            ],\n        ],\n    },\n    \"1.3.2\": {\n        title: \"Meaningful Sequence\",\n        versions: [\n            [\n                \"2.0\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG20/#content-structure-separation-sequence\",\n                    level: \"A\",\n                },\n            ],\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#meaningful-sequence\",\n                    level: \"A\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#meaningful-sequence\",\n                    level: \"A\",\n                },\n            ],\n        ],\n    },\n    \"1.3.3\": {\n        title: \"Sensory Characteristics\",\n        versions: [\n            [\n                \"2.0\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG20/#content-structure-separation-understanding\",\n                    level: \"A\",\n                },\n            ],\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#sensory-characteristics\",\n                    level: \"A\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#sensory-characteristics\",\n                    level: \"A\",\n                },\n            ],\n        ],\n    },\n    \"1.4.1\": {\n        title: \"Use of Color\",\n        versions: [\n            [\n                \"2.0\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG20/#visual-audio-contrast-without-color\",\n                    level: \"A\",\n                },\n            ],\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#use-of-color\",\n                    level: \"A\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#use-of-color\",\n                    level: \"A\",\n                },\n            ],\n        ],\n    },\n    \"1.4.2\": {\n        title: \"Audio Control\",\n        versions: [\n            [\n                \"2.0\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG20/#visual-audio-contrast-dis-audio\",\n                    level: \"A\",\n                },\n            ],\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#audio-control\",\n                    level: \"A\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#audio-control\",\n                    level: \"A\",\n                },\n            ],\n        ],\n    },\n    \"1.4.3\": {\n        title: \"Contrast (Minimum)\",\n        versions: [\n            [\n                \"2.0\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG20/#visual-audio-contrast-contrast\",\n                    level: \"AA\",\n                },\n            ],\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#contrast-minimum\",\n                    level: \"AA\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#contrast-minimum\",\n                    level: \"AA\",\n                },\n            ],\n        ],\n    },\n    \"1.4.4\": {\n        title: \"Resize text\",\n        versions: [\n            [\n                \"2.0\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG20/#visual-audio-contrast-scale\",\n                    level: \"AA\",\n                },\n            ],\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#resize-text\",\n                    level: \"AA\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#resize-text\",\n                    level: \"AA\",\n                },\n            ],\n        ],\n    },\n    \"1.4.5\": {\n        title: \"Images of Text\",\n        versions: [\n            [\n                \"2.0\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG20/#visual-audio-contrast-text-presentation\",\n                    level: \"AA\",\n                },\n            ],\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#images-of-text\",\n                    level: \"AA\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#images-of-text\",\n                    level: \"AA\",\n                },\n            ],\n        ],\n    },\n    \"1.4.6\": {\n        title: \"Contrast (Enhanced)\",\n        versions: [\n            [\n                \"2.0\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG20/#visual-audio-contrast7\",\n                    level: \"AAA\",\n                },\n            ],\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#contrast-enhanced\",\n                    level: \"AAA\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#contrast-enhanced\",\n                    level: \"AAA\",\n                },\n            ],\n        ],\n    },\n    \"1.4.7\": {\n        title: \"Low or No Background Audio\",\n        versions: [\n            [\n                \"2.0\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG20/#visual-audio-contrast-noaudio\",\n                    level: \"AAA\",\n                },\n            ],\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#low-or-no-background-audio\",\n                    level: \"AAA\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#low-or-no-background-audio\",\n                    level: \"AAA\",\n                },\n            ],\n        ],\n    },\n    \"1.4.8\": {\n        title: \"Visual Presentation\",\n        versions: [\n            [\n                \"2.0\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG20/#visual-audio-contrast-visual-presentation\",\n                    level: \"AAA\",\n                },\n            ],\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#visual-presentation\",\n                    level: \"AAA\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#visual-presentation\",\n                    level: \"AAA\",\n                },\n            ],\n        ],\n    },\n    \"1.4.9\": {\n        title: \"Images of Text (No Exception)\",\n        versions: [\n            [\n                \"2.0\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG20/#visual-audio-contrast-text-images\",\n                    level: \"AAA\",\n                },\n            ],\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#images-of-text-no-exception\",\n                    level: \"AAA\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#images-of-text-no-exception\",\n                    level: \"AAA\",\n                },\n            ],\n        ],\n    },\n    \"2.1.1\": {\n        title: \"Keyboard\",\n        versions: [\n            [\n                \"2.0\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG20/#keyboard-operation-keyboard-operable\",\n                    level: \"A\",\n                },\n            ],\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#keyboard\",\n                    level: \"A\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#keyboard\",\n                    level: \"A\",\n                },\n            ],\n        ],\n    },\n    \"2.1.2\": {\n        title: \"No Keyboard Trap\",\n        versions: [\n            [\n                \"2.0\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG20/#keyboard-operation-trapping\",\n                    level: \"A\",\n                },\n            ],\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#no-keyboard-trap\",\n                    level: \"A\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#no-keyboard-trap\",\n                    level: \"A\",\n                },\n            ],\n        ],\n    },\n    \"2.1.3\": {\n        title: \"Keyboard (No Exception)\",\n        versions: [\n            [\n                \"2.0\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG20/#keyboard-operation-all-funcs\",\n                    level: \"AAA\",\n                },\n            ],\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#keyboard-no-exception\",\n                    level: \"AAA\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#keyboard-no-exception\",\n                    level: \"AAA\",\n                },\n            ],\n        ],\n    },\n    \"2.2.1\": {\n        title: \"Timing Adjustable\",\n        versions: [\n            [\n                \"2.0\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG20/#time-limits-required-behaviors\",\n                    level: \"A\",\n                },\n            ],\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#timing-adjustable\",\n                    level: \"A\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#timing-adjustable\",\n                    level: \"A\",\n                },\n            ],\n        ],\n    },\n    \"2.2.2\": {\n        title: \"Pause, Stop, Hide\",\n        versions: [\n            [\n                \"2.0\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG20/#time-limits-pause\",\n                    level: \"A\",\n                },\n            ],\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#pause-stop-hide\",\n                    level: \"A\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#pause-stop-hide\",\n                    level: \"A\",\n                },\n            ],\n        ],\n    },\n    \"2.2.3\": {\n        title: \"No Timing\",\n        versions: [\n            [\n                \"2.0\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG20/#time-limits-no-exceptions\",\n                    level: \"AAA\",\n                },\n            ],\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#no-timing\",\n                    level: \"AAA\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#no-timing\",\n                    level: \"AAA\",\n                },\n            ],\n        ],\n    },\n    \"2.2.4\": {\n        title: \"Interruptions\",\n        versions: [\n            [\n                \"2.0\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG20/#time-limits-postponed\",\n                    level: \"AAA\",\n                },\n            ],\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#interruptions\",\n                    level: \"AAA\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#interruptions\",\n                    level: \"AAA\",\n                },\n            ],\n        ],\n    },\n    \"2.2.5\": {\n        title: \"Re-authenticating\",\n        versions: [\n            [\n                \"2.0\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG20/#time-limits-server-timeout\",\n                    level: \"AAA\",\n                },\n            ],\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#re-authenticating\",\n                    level: \"AAA\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#re-authenticating\",\n                    level: \"AAA\",\n                },\n            ],\n        ],\n    },\n    \"2.3.1\": {\n        title: \"Three Flashes or Below Threshold\",\n        versions: [\n            [\n                \"2.0\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG20/#seizure-does-not-violate\",\n                    level: \"A\",\n                },\n            ],\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#three-flashes-or-below-threshold\",\n                    level: \"A\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#three-flashes-or-below-threshold\",\n                    level: \"A\",\n                },\n            ],\n        ],\n    },\n    \"2.3.2\": {\n        title: \"Three Flashes\",\n        versions: [\n            [\n                \"2.0\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG20/#seizure-three-times\",\n                    level: \"AAA\",\n                },\n            ],\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#three-flashes\",\n                    level: \"AAA\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#three-flashes\",\n                    level: \"AAA\",\n                },\n            ],\n        ],\n    },\n    \"2.4.1\": {\n        title: \"Bypass Blocks\",\n        versions: [\n            [\n                \"2.0\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG20/#navigation-mechanisms-skip\",\n                    level: \"A\",\n                },\n            ],\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#bypass-blocks\",\n                    level: \"A\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#bypass-blocks\",\n                    level: \"A\",\n                },\n            ],\n        ],\n    },\n    \"2.4.2\": {\n        title: \"Page Titled\",\n        versions: [\n            [\n                \"2.0\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG20/#navigation-mechanisms-title\",\n                    level: \"A\",\n                },\n            ],\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#page-titled\",\n                    level: \"A\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#page-titled\",\n                    level: \"A\",\n                },\n            ],\n        ],\n    },\n    \"2.4.3\": {\n        title: \"Focus Order\",\n        versions: [\n            [\n                \"2.0\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG20/#navigation-mechanisms-focus-order\",\n                    level: \"A\",\n                },\n            ],\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#focus-order\",\n                    level: \"A\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#focus-order\",\n                    level: \"A\",\n                },\n            ],\n        ],\n    },\n    \"2.4.4\": {\n        title: \"Link Purpose (In Context)\",\n        versions: [\n            [\n                \"2.0\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG20/#navigation-mechanisms-refs\",\n                    level: \"A\",\n                },\n            ],\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#link-purpose-in-context\",\n                    level: \"A\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#link-purpose-in-context\",\n                    level: \"A\",\n                },\n            ],\n        ],\n    },\n    \"2.4.5\": {\n        title: \"Multiple Ways\",\n        versions: [\n            [\n                \"2.0\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG20/#navigation-mechanisms-mult-loc\",\n                    level: \"AA\",\n                },\n            ],\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#multiple-ways\",\n                    level: \"AA\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#multiple-ways\",\n                    level: \"AA\",\n                },\n            ],\n        ],\n    },\n    \"2.4.6\": {\n        title: \"Headings and Labels\",\n        versions: [\n            [\n                \"2.0\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG20/#navigation-mechanisms-descriptive\",\n                    level: \"AA\",\n                },\n            ],\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#headings-and-labels\",\n                    level: \"AA\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#headings-and-labels\",\n                    level: \"AA\",\n                },\n            ],\n        ],\n    },\n    \"2.4.7\": {\n        title: \"Focus Visible\",\n        versions: [\n            [\n                \"2.0\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG20/#navigation-mechanisms-focus-visible\",\n                    level: \"AA\",\n                },\n            ],\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#focus-visible\",\n                    level: \"AA\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#focus-visible\",\n                    level: \"A\",\n                },\n            ],\n        ],\n    },\n    \"2.4.8\": {\n        title: \"Location\",\n        versions: [\n            [\n                \"2.0\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG20/#navigation-mechanisms-location\",\n                    level: \"AAA\",\n                },\n            ],\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#location\",\n                    level: \"AAA\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#location\",\n                    level: \"AAA\",\n                },\n            ],\n        ],\n    },\n    \"2.4.9\": {\n        title: \"Link Purpose (Link Only)\",\n        versions: [\n            [\n                \"2.0\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG20/#navigation-mechanisms-link\",\n                    level: \"AAA\",\n                },\n            ],\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#link-purpose-link-only\",\n                    level: \"AAA\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#link-purpose-link-only\",\n                    level: \"AAA\",\n                },\n            ],\n        ],\n    },\n    \"2.4.10\": {\n        title: \"Section Headings\",\n        versions: [\n            [\n                \"2.0\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG20/#navigation-mechanisms-headings\",\n                    level: \"AAA\",\n                },\n            ],\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#section-headings\",\n                    level: \"AAA\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#section-headings\",\n                    level: \"AAA\",\n                },\n            ],\n        ],\n    },\n    \"3.1.1\": {\n        title: \"Language of Page\",\n        versions: [\n            [\n                \"2.0\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG20/#meaning-doc-lang-id\",\n                    level: \"A\",\n                },\n            ],\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#language-of-page\",\n                    level: \"A\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#language-of-page\",\n                    level: \"A\",\n                },\n            ],\n        ],\n    },\n    \"3.1.2\": {\n        title: \"Language of Parts\",\n        versions: [\n            [\n                \"2.0\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG20/#meaning-other-lang-id\",\n                    level: \"AA\",\n                },\n            ],\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#language-of-parts\",\n                    level: \"AA\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#language-of-parts\",\n                    level: \"AA\",\n                },\n            ],\n        ],\n    },\n    \"3.1.3\": {\n        title: \"Unusual Words\",\n        versions: [\n            [\n                \"2.0\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG20/#meaning-idioms\",\n                    level: \"AAA\",\n                },\n            ],\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#unusual-words\",\n                    level: \"AAA\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#unusual-words\",\n                    level: \"AAA\",\n                },\n            ],\n        ],\n    },\n    \"3.1.4\": {\n        title: \"Abbreviations\",\n        versions: [\n            [\n                \"2.0\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG20/#meaning-located\",\n                    level: \"AAA\",\n                },\n            ],\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#abbreviations\",\n                    level: \"AAA\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#abbreviations\",\n                    level: \"AAA\",\n                },\n            ],\n        ],\n    },\n    \"3.1.5\": {\n        title: \"Reading Level\",\n        versions: [\n            [\n                \"2.0\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG20/#meaning-supplements\",\n                    level: \"AAA\",\n                },\n            ],\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#reading-level\",\n                    level: \"AAA\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#reading-level\",\n                    level: \"AAA\",\n                },\n            ],\n        ],\n    },\n    \"3.1.6\": {\n        title: \"Pronunciation\",\n        versions: [\n            [\n                \"2.0\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG20/#meaning-pronunciation\",\n                    level: \"AAA\",\n                },\n            ],\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#pronunciation\",\n                    level: \"AAA\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#pronunciation\",\n                    level: \"AAA\",\n                },\n            ],\n        ],\n    },\n    \"3.2.1\": {\n        title: \"On Focus\",\n        versions: [\n            [\n                \"2.0\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG20/#consistent-behavior-receive-focus\",\n                    level: \"A\",\n                },\n            ],\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#on-focus\",\n                    level: \"A\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#on-focus\",\n                    level: \"A\",\n                },\n            ],\n        ],\n    },\n    \"3.2.2\": {\n        title: \"On Input\",\n        versions: [\n            [\n                \"2.0\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG20/#consistent-behavior-unpredictable-change\",\n                    level: \"A\",\n                },\n            ],\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#on-input\",\n                    level: \"A\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#on-input\",\n                    level: \"A\",\n                },\n            ],\n        ],\n    },\n    \"3.2.3\": {\n        title: \"Consistent Navigation\",\n        versions: [\n            [\n                \"2.0\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG20/#consistent-behavior-consistent-locations\",\n                    level: \"AA\",\n                },\n            ],\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#consistent-navigation\",\n                    level: \"AA\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#consistent-navigation\",\n                    level: \"AA\",\n                },\n            ],\n        ],\n    },\n    \"3.2.4\": {\n        title: \"Consistent Identification\",\n        versions: [\n            [\n                \"2.0\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG20/#consistent-behavior-consistent-functionality\",\n                    level: \"AA\",\n                },\n            ],\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#consistent-identification\",\n                    level: \"AA\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#consistent-identification\",\n                    level: \"AA\",\n                },\n            ],\n        ],\n    },\n    \"3.2.5\": {\n        title: \"Change on Request\",\n        versions: [\n            [\n                \"2.0\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG20/#consistent-behavior-no-extreme-changes-context\",\n                    level: \"AAA\",\n                },\n            ],\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#change-on-request\",\n                    level: \"AAA\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#change-on-request\",\n                    level: \"AAA\",\n                },\n            ],\n        ],\n    },\n    \"3.3.1\": {\n        title: \"Error Identification\",\n        versions: [\n            [\n                \"2.0\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG20/#minimize-error-identified\",\n                    level: \"A\",\n                },\n            ],\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#error-identification\",\n                    level: \"A\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#error-identification\",\n                    level: \"A\",\n                },\n            ],\n        ],\n    },\n    \"3.3.2\": {\n        title: \"Labels or Instructions\",\n        versions: [\n            [\n                \"2.0\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG20/#minimize-error-cues\",\n                    level: \"A\",\n                },\n            ],\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#labels-or-instructions\",\n                    level: \"A\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#labels-or-instructions\",\n                    level: \"A\",\n                },\n            ],\n        ],\n    },\n    \"3.3.3\": {\n        title: \"Error Suggestion\",\n        versions: [\n            [\n                \"2.0\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG20/#minimize-error-suggestions\",\n                    level: \"AA\",\n                },\n            ],\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#error-suggestion\",\n                    level: \"AA\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#error-suggestion\",\n                    level: \"AA\",\n                },\n            ],\n        ],\n    },\n    \"3.3.4\": {\n        title: \"Error Prevention (Legal, Financial, Data)\",\n        versions: [\n            [\n                \"2.0\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG20/#minimize-error-reversible\",\n                    level: \"AA\",\n                },\n            ],\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#error-prevention-legal-financial-data\",\n                    level: \"AA\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#error-prevention-legal-financial-data\",\n                    level: \"AA\",\n                },\n            ],\n        ],\n    },\n    \"3.3.5\": {\n        title: \"Help\",\n        versions: [\n            [\n                \"2.0\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG20/#minimize-error-context-help\",\n                    level: \"AAA\",\n                },\n            ],\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#help\",\n                    level: \"AAA\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#help\",\n                    level: \"AAA\",\n                },\n            ],\n        ],\n    },\n    \"3.3.6\": {\n        title: \"Error Prevention (All)\",\n        versions: [\n            [\n                \"2.0\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG20/#minimize-error-reversible-all\",\n                    level: \"AAA\",\n                },\n            ],\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#error-prevention-all\",\n                    level: \"AAA\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#error-prevention-all\",\n                    level: \"AAA\",\n                },\n            ],\n        ],\n    },\n    \"4.1.1\": {\n        title: \"Parsing\",\n        versions: [\n            [\n                \"2.0\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG20/#ensure-compat-parses\",\n                    level: \"A\",\n                },\n            ],\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#parsing\",\n                    level: \"A\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#parsing\",\n                    level: \"A\",\n                },\n            ],\n        ],\n    },\n    \"4.1.2\": {\n        title: \"Name, Role, Value\",\n        versions: [\n            [\n                \"2.0\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG20/#ensure-compat-rsv\",\n                    level: \"A\",\n                },\n            ],\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#name-role-value\",\n                    level: \"A\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#name-role-value\",\n                    level: \"A\",\n                },\n            ],\n        ],\n    },\n    \"1.3.4\": {\n        title: \"Orientation\",\n        versions: [\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#orientation\",\n                    level: \"AA\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#orientation\",\n                    level: \"AA\",\n                },\n            ],\n        ],\n    },\n    \"1.3.5\": {\n        title: \"Identify Input Purpose\",\n        versions: [\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#identify-input-purpose\",\n                    level: \"AA\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#identify-input-purpose\",\n                    level: \"AA\",\n                },\n            ],\n        ],\n    },\n    \"1.3.6\": {\n        title: \"Identify Purpose\",\n        versions: [\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#identify-purpose\",\n                    level: \"AAA\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#identify-purpose\",\n                    level: \"AAA\",\n                },\n            ],\n        ],\n    },\n    \"1.4.10\": {\n        title: \"Reflow\",\n        versions: [\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#reflow\",\n                    level: \"AA\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#reflow\",\n                    level: \"AA\",\n                },\n            ],\n        ],\n    },\n    \"1.4.11\": {\n        title: \"Non-text Contrast\",\n        versions: [\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#non-text-contrast\",\n                    level: \"AA\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#non-text-contrast\",\n                    level: \"AA\",\n                },\n            ],\n        ],\n    },\n    \"1.4.12\": {\n        title: \"Text Spacing\",\n        versions: [\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#text-spacing\",\n                    level: \"AA\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#text-spacing\",\n                    level: \"AA\",\n                },\n            ],\n        ],\n    },\n    \"1.4.13\": {\n        title: \"Content on Hover or Focus\",\n        versions: [\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#content-on-hover-or-focus\",\n                    level: \"AA\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#content-on-hover-or-focus\",\n                    level: \"AA\",\n                },\n            ],\n        ],\n    },\n    \"2.1.4\": {\n        title: \"Character Key Shortcuts\",\n        versions: [\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#character-key-shortcuts\",\n                    level: \"A\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#character-key-shortcuts\",\n                    level: \"A\",\n                },\n            ],\n        ],\n    },\n    \"2.2.6\": {\n        title: \"Timeouts\",\n        versions: [\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#timeouts\",\n                    level: \"AAA\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#timeouts\",\n                    level: \"AAA\",\n                },\n            ],\n        ],\n    },\n    \"2.3.3\": {\n        title: \"Animation from Interactions\",\n        versions: [\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#animation-from-interactions\",\n                    level: \"AAA\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#animation-from-interactions\",\n                    level: \"AAA\",\n                },\n            ],\n        ],\n    },\n    \"2.5.1\": {\n        title: \"Pointer Gestures\",\n        versions: [\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#pointer-gestures\",\n                    level: \"A\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#pointer-gestures\",\n                    level: \"A\",\n                },\n            ],\n        ],\n    },\n    \"2.5.2\": {\n        title: \"Pointer Cancellation\",\n        versions: [\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#pointer-cancellation\",\n                    level: \"A\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#pointer-cancellation\",\n                    level: \"A\",\n                },\n            ],\n        ],\n    },\n    \"2.5.3\": {\n        title: \"Label in Name\",\n        versions: [\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#label-in-name\",\n                    level: \"A\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#label-in-name\",\n                    level: \"A\",\n                },\n            ],\n        ],\n    },\n    \"2.5.4\": {\n        title: \"Motion Actuation\",\n        versions: [\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#motion-actuation\",\n                    level: \"A\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#motion-actuation\",\n                    level: \"A\",\n                },\n            ],\n        ],\n    },\n    \"2.5.5\": {\n        title: \"Target Size\",\n        versions: [\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#target-size\",\n                    level: \"AAA\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#target-size-enhanced\",\n                    level: \"AAA\",\n                },\n            ],\n        ],\n    },\n    \"2.5.6\": {\n        title: \"Concurrent Input Mechanisms\",\n        versions: [\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#concurrent-input-mechanisms\",\n                    level: \"AAA\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#concurrent-input-mechanisms\",\n                    level: \"AAA\",\n                },\n            ],\n        ],\n    },\n    \"4.1.3\": {\n        title: \"Status Messages\",\n        versions: [\n            [\n                \"2.1\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG2/#status-messages\",\n                    level: \"AA\",\n                },\n            ],\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#status-messages\",\n                    level: \"AA\",\n                },\n            ],\n        ],\n    },\n    \"2.4.11\": {\n        title: \"Focus Appearance (Minimum)\",\n        versions: [\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#focus-appearance-minimum\",\n                    level: \"AA\",\n                },\n            ],\n        ],\n    },\n    \"2.4.12\": {\n        title: \"Focus Appearance (Enhanced)\",\n        versions: [\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#focus-appearance-enhanced\",\n                    level: \"AAA\",\n                },\n            ],\n        ],\n    },\n    \"2.4.13\": {\n        title: \"Page Break Navigation\",\n        versions: [\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#page-break-navigation\",\n                    level: \"A\",\n                },\n            ],\n        ],\n    },\n    \"2.5.7\": {\n        title: \"Dragging Movements\",\n        versions: [\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#dragging-movements\",\n                    level: \"AA\",\n                },\n            ],\n        ],\n    },\n    \"2.5.8\": {\n        title: \"Target Size (Minimum)\",\n        versions: [\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#target-size-minimum\",\n                    level: \"AA\",\n                },\n            ],\n        ],\n    },\n    \"3.2.6\": {\n        title: \"Consistent Help\",\n        versions: [\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#consistent-help\",\n                    level: \"A\",\n                },\n            ],\n        ],\n    },\n    \"3.2.7\": {\n        title: \"Visible Controls\",\n        versions: [\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#visible-controls\",\n                    level: \"AA\",\n                },\n            ],\n        ],\n    },\n    \"3.3.7\": {\n        title: \"Accessible Authentication\",\n        versions: [\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#accessible-authentication\",\n                    level: \"A\",\n                },\n            ],\n        ],\n    },\n    \"3.3.8\": {\n        title: \"Redundant entry\",\n        versions: [\n            [\n                \"2.2\",\n                {\n                    uri: \"https://www.w3.org/TR/WCAG22/#redundant-entry\",\n                    level: \"A\",\n                },\n            ],\n        ],\n    },\n};\n//# sourceMappingURL=data.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-wcag/src/criterion/data.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-wcag/src/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-wcag/src/index.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./conformance */ \"./node_modules/@siteimprove/alfa-wcag/src/conformance.js\"), exports);\n__exportStar(__webpack_require__(/*! ./criterion */ \"./node_modules/@siteimprove/alfa-wcag/src/criterion.js\"), exports);\n__exportStar(__webpack_require__(/*! ./technique */ \"./node_modules/@siteimprove/alfa-wcag/src/technique.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-wcag/src/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-wcag/src/technique.js":
/*!**************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-wcag/src/technique.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Technique = void 0;\nconst alfa_act_1 = __webpack_require__(/*! @siteimprove/alfa-act */ \"./node_modules/@siteimprove/alfa-act/src/index.js\");\nconst data_1 = __webpack_require__(/*! ./technique/data */ \"./node_modules/@siteimprove/alfa-wcag/src/technique/data.js\");\n/**\n * @public\n */\nclass Technique extends alfa_act_1.Requirement {\n    static of(name) {\n        return new Technique(name);\n    }\n    constructor(name) {\n        super();\n        this._name = name;\n    }\n    /**\n     * The name of this technique.\n     */\n    get name() {\n        return this._name;\n    }\n    /**\n     * The title of this technique.\n     */\n    get title() {\n        return data_1.Techniques[this._name].title;\n    }\n    /**\n     * The URI of this technique.\n     */\n    get uri() {\n        return data_1.Techniques[this._name].uri;\n    }\n    toJSON() {\n        const { title, uri } = data_1.Techniques[this._name];\n        return {\n            ...super.toJSON(),\n            name: this._name,\n            title,\n            uri,\n        };\n    }\n    toEARL() {\n        const { title } = data_1.Techniques[this._name];\n        return {\n            ...super.toEARL(),\n            \"@context\": {\n                earl: \"http://www.w3.org/ns/earl#\",\n                dct: \"http://purl.org/dc/terms/\",\n            },\n            \"dct:title\": title,\n            \"dct:isPartOf\": \"https://www.w3.org/WAI/WCAG21/Techniques/\",\n        };\n    }\n}\nexports.Technique = Technique;\n/**\n * @public\n */\n(function (Technique) {\n    function isName(value) {\n        return value in data_1.Techniques;\n    }\n    Technique.isName = isName;\n    function isTechnique(value) {\n        return value instanceof Technique;\n    }\n    Technique.isTechnique = isTechnique;\n})(Technique || (exports.Technique = Technique = {}));\n//# sourceMappingURL=technique.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-wcag/src/technique.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-wcag/src/technique/data.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-wcag/src/technique/data.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// This file has been automatically generated based on the WCAG specification.\n// Do therefore not modify it directly! If you wish to make changes, do so in\n// `scripts/techniques.js` and run `yarn generate` to rebuild this file.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Techniques = void 0;\n/**\n * @internal\n */\nexports.Techniques = {\n    ARIA1: {\n        title: \"Using the aria-describedby property to provide a descriptive label for user interface\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/aria/ARIA1\",\n    },\n    ARIA2: {\n        title: \"Identifying a required field with the aria-required property\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/aria/ARIA2\",\n    },\n    ARIA4: {\n        title: \"Using a WAI-ARIA role to expose the role of a user interface component\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/aria/ARIA4\",\n    },\n    ARIA5: {\n        title: \"Using WAI-ARIA state and property attributes to expose the state of a user interface\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/aria/ARIA5\",\n    },\n    ARIA6: {\n        title: \"Using aria-label to provide labels for objects\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/aria/ARIA6\",\n    },\n    ARIA7: {\n        title: \"Using aria-labelledby for link purpose\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/aria/ARIA7\",\n    },\n    ARIA8: {\n        title: \"Using aria-label for link purpose\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/aria/ARIA8\",\n    },\n    ARIA9: {\n        title: \"Using aria-labelledby to concatenate a label from several text nodes\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/aria/ARIA9\",\n    },\n    ARIA10: {\n        title: \"Using aria-labelledby to provide a text alternative for non-text content\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/aria/ARIA10\",\n    },\n    ARIA11: {\n        title: \"Using ARIA landmarks to identify regions of a page\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/aria/ARIA11\",\n    },\n    ARIA12: {\n        title: \"Using role=heading to identify headings\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/aria/ARIA12\",\n    },\n    ARIA13: {\n        title: \"Using aria-labelledby to name regions and landmarks\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/aria/ARIA13\",\n    },\n    ARIA14: {\n        title: \"Using aria-label to provide an invisible label where a visible label cannot be used\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/aria/ARIA14\",\n    },\n    ARIA15: {\n        title: \"Using aria-describedby to provide descriptions of images\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/aria/ARIA15\",\n    },\n    ARIA16: {\n        title: \"Using aria-labelledby to provide a name for user interface controls\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/aria/ARIA16\",\n    },\n    ARIA17: {\n        title: \"Using grouping roles to identify related form controls\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/aria/ARIA17\",\n    },\n    ARIA18: {\n        title: \"Using aria-alertdialog to Identify Errors\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/aria/ARIA18\",\n    },\n    ARIA19: {\n        title: \"Using ARIA role=alert or Live Regions to Identify Errors\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/aria/ARIA19\",\n    },\n    ARIA20: {\n        title: \"Using the region role to identify a region of the page\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/aria/ARIA20\",\n    },\n    ARIA21: {\n        title: \"Using Aria-Invalid to Indicate An Error Field\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/aria/ARIA21\",\n    },\n    ARIA22: {\n        title: \"Using role=status to present status messages\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/aria/ARIA22\",\n    },\n    ARIA23: {\n        title: \"Using role=log to identify sequential information updates\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/aria/ARIA23\",\n    },\n    ARIA24: {\n        title: 'Semantically identifying a font icon with role=\"img\"',\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/aria/ARIA24\",\n    },\n    SCR1: {\n        title: \"Allowing the user to extend the default time limit\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/client-side-script/SCR1\",\n    },\n    SCR2: {\n        title: \"Using redundant keyboard and mouse event handlers\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/client-side-script/SCR2\",\n    },\n    SCR14: {\n        title: \"Using scripts to make nonessential alerts optional\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/client-side-script/SCR14\",\n    },\n    SCR16: {\n        title: \"Providing a script that warns the user a time limit is about to expire\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/client-side-script/SCR16\",\n    },\n    SCR18: {\n        title: \"Providing client-side validation and alert\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/client-side-script/SCR18\",\n    },\n    SCR19: {\n        title: \"Using an onchange event on a select element without causing a change of context\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/client-side-script/SCR19\",\n    },\n    SCR20: {\n        title: \"Using both keyboard and other device-specific functions\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/client-side-script/SCR20\",\n    },\n    SCR21: {\n        title: \"Using functions of the Document Object Model (DOM) to add content to a page\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/client-side-script/SCR21\",\n    },\n    SCR22: {\n        title: \"Using scripts to control blinking and stop it in five seconds or less\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/client-side-script/SCR22\",\n    },\n    SCR24: {\n        title: \"Using progressive enhancement to open new windows on user request\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/client-side-script/SCR24\",\n    },\n    SCR26: {\n        title: \"Inserting dynamic content into the Document Object Model immediately following its\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/client-side-script/SCR26\",\n    },\n    SCR27: {\n        title: \"Reordering page sections using the Document Object Model\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/client-side-script/SCR27\",\n    },\n    SCR28: {\n        title: \"Using an expandable and collapsible menu to bypass block of content\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/client-side-script/SCR28\",\n    },\n    SCR29: {\n        title: \"Adding keyboard-accessible actions to static HTML elements\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/client-side-script/SCR29\",\n    },\n    SCR30: {\n        title: \"Using scripts to change the link text\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/client-side-script/SCR30\",\n    },\n    SCR31: {\n        title: \"Using script to change the background color or border of the element with focus\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/client-side-script/SCR31\",\n    },\n    SCR32: {\n        title: \"Providing client-side validation and adding error text via the DOM\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/client-side-script/SCR32\",\n    },\n    SCR33: {\n        title: \"Using script to scroll content, and providing a mechanism to pause it\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/client-side-script/SCR33\",\n    },\n    SCR34: {\n        title: \"Calculating size and position in a way that scales with text size\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/client-side-script/SCR34\",\n    },\n    SCR35: {\n        title: \"Making actions keyboard accessible by using the onclick event of anchors and buttons\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/client-side-script/SCR35\",\n    },\n    SCR36: {\n        title: \"Providing a mechanism to allow users to display moving, scrolling, or auto-updating\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/client-side-script/SCR36\",\n    },\n    SCR37: {\n        title: \"Creating Custom Dialogs in a Device Independent Way\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/client-side-script/SCR37\",\n    },\n    SCR38: {\n        title: \"Creating a conforming alternate version for a web page designed with progressive enhancement\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/client-side-script/SCR38\",\n    },\n    SCR39: {\n        title: \"Making content on focus or hover hoverable, dismissible, and persistent\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/client-side-script/SCR39\",\n    },\n    C6: {\n        title: \"Positioning content based on structural markup\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/css/C6\",\n    },\n    C7: {\n        title: \"Using CSS to hide a portion of the link text\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/css/C7\",\n    },\n    C8: {\n        title: \"Using CSS letter-spacing to control spacing within a word\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/css/C8\",\n    },\n    C9: {\n        title: \"Using CSS to include decorative images\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/css/C9\",\n    },\n    C12: {\n        title: \"Using percent for font sizes\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/css/C12\",\n    },\n    C13: {\n        title: \"Using named font sizes\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/css/C13\",\n    },\n    C14: {\n        title: \"Using em units for font sizes\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/css/C14\",\n    },\n    C15: {\n        title: \"Using CSS to change the presentation of a user interface component when it receives\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/css/C15\",\n    },\n    C17: {\n        title: \"Scaling form elements which contain text\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/css/C17\",\n    },\n    C18: {\n        title: \"Using CSS margin and padding rules instead of spacer images for layout design\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/css/C18\",\n    },\n    C19: {\n        title: \"Specifying alignment either to the left OR right in CSS\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/css/C19\",\n    },\n    C20: {\n        title: \"Using relative measurements to set column widths so that lines can average 80 characters\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/css/C20\",\n    },\n    C21: {\n        title: \"Specifying line spacing in CSS\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/css/C21\",\n    },\n    C22: {\n        title: \"Using CSS to control visual presentation of text\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/css/C22\",\n    },\n    C23: {\n        title: \"Specifying text and background colors of secondary content such as banners, features\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/css/C23\",\n    },\n    C24: {\n        title: \"Using percentage values in CSS for container sizes\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/css/C24\",\n    },\n    C25: {\n        title: \"Specifying borders and layout in CSS to delineate areas of a Web page while not specifying\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/css/C25\",\n    },\n    C27: {\n        title: \"Making the DOM order match the visual order\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/css/C27\",\n    },\n    C28: {\n        title: \"Specifying the size of text containers using em units\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/css/C28\",\n    },\n    C29: {\n        title: \"Using a style switcher to provide a conforming alternate version\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/css/C29\",\n    },\n    C30: {\n        title: \"Using CSS to replace text with images of text and providing user interface controls\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/css/C30\",\n    },\n    C31: {\n        title: \"Using CSS Flexbox to reflow content\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/css/C31\",\n    },\n    C32: {\n        title: \"Using media queries and grid CSS to reflow columns\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/css/C32\",\n    },\n    C33: {\n        title: \"Allowing for Reflow with Long URLs and Strings of Text\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/css/C33\",\n    },\n    C34: {\n        title: \"Using media queries to un-fixing sticky headers / footers\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/css/C34\",\n    },\n    C35: {\n        title: \"Allowing for text spacing without wrapping\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/css/C35\",\n    },\n    C36: {\n        title: \"Allowing for text spacing override\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/css/C36\",\n    },\n    C37: {\n        title: \"Using CSS max-width and height to fit images\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/css/C37\",\n    },\n    C38: {\n        title: \"Using CSS width, max-width and flexbox to fit labels and inputs\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/css/C38\",\n    },\n    C39: {\n        title: \"Using the CSS reduce-motion query to prevent motion\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/css/C39\",\n    },\n    C40: {\n        title: \"Creating a two-color focus indicator to ensure sufficient contrast with all components\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/css/C40\",\n    },\n    C41: {\n        title: \"Creating a strong focus indicator within the component\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/css/C41\",\n    },\n    C42: {\n        title: \"Using min-height and min-width to ensure sufficient target spacing\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/css/C42\",\n    },\n    F1: {\n        title: \"Failure of Success Criterion 1.3.2 due to changing the meaning of content by positioning\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F1\",\n    },\n    F2: {\n        title: \"Failure of Success Criterion 1.3.1 due to using changes in text presentation to convey\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F2\",\n    },\n    F3: {\n        title: \"Failure of Success Criterion 1.1.1 due to using CSS to include images that convey\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F3\",\n    },\n    F4: {\n        title: \"Failure of Success Criterion 2.2.2 due to using text-decoration:blink without a mechanism\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F4\",\n    },\n    F7: {\n        title: \"Failure of Success Criterion 2.2.2 due to an object or applet for more than five seconds\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F7\",\n    },\n    F8: {\n        title: \"Failure of Success Criterion 1.2.2 due to captions omitting some dialogue or important\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F8\",\n    },\n    F9: {\n        title: \"Failure of Success Criterion 3.2.5 due to changing the context when the user removes\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F9\",\n    },\n    F10: {\n        title: \"Failure of Success Criterion 2.1.2 and Conformance Requirement 5 due to combining\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F10\",\n    },\n    F12: {\n        title: \"Failure of Success Criterion 2.2.5 due to having a session time limit without a mechanism\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F12\",\n    },\n    F13: {\n        title: \"Failure of Success Criterion 1.1.1 and 1.4.1 due to having a text alternative that\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F13\",\n    },\n    F14: {\n        title: \"Failure of Success Criterion 1.3.3 due to identifying content only by its shape or\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F14\",\n    },\n    F15: {\n        title: \"Failure of Success Criterion 4.1.2 due to implementing custom controls that do not\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F15\",\n    },\n    F16: {\n        title: \"Failure of Success Criterion 2.2.2 due to including scrolling content where movement\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F16\",\n    },\n    F19: {\n        title: \"Failure of Conformance Requirement 1 due to not providing a method for the user to\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F19\",\n    },\n    F20: {\n        title: \"Failure of Success Criterion 1.1.1 and 4.1.2 due to not updating text alternatives\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F20\",\n    },\n    F22: {\n        title: \"Failure of Success Criterion 3.2.5 due to opening windows that are not requested by\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F22\",\n    },\n    F23: {\n        title: \"Failure of 1.4.2 due to playing a sound longer than 3 seconds where              \",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F23\",\n    },\n    F24: {\n        title: \"Failure of Success Criterion 1.4.3, 1.4.6 and 1.4.8 due to specifying foreground colors\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F24\",\n    },\n    F25: {\n        title: \"Failure of Success Criterion 2.4.2 due to the title of a Web page not identifying\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F25\",\n    },\n    F26: {\n        title: \"Failure of Success Criterion 1.3.3 due to using a graphical symbol alone to convey\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F26\",\n    },\n    F30: {\n        title: \"Failure of Success Criterion 1.1.1 and 1.2.1 due to using text alternatives that are\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F30\",\n    },\n    F31: {\n        title: \"Failure of Success Criterion 3.2.4 due to using two different labels for the same\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F31\",\n    },\n    F32: {\n        title: \"Failure of Success Criterion 1.3.2 due to using white space characters to control\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F32\",\n    },\n    F33: {\n        title: \"Failure of Success Criterion 1.3.1 and 1.3.2 due to using white space characters to\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F33\",\n    },\n    F34: {\n        title: \"Failure of Success Criterion 1.3.1 and 1.3.2 due to using white space characters to\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F34\",\n    },\n    F36: {\n        title: \"Failure of Success Criterion 3.2.2 due to automatically submitting a form and given\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F36\",\n    },\n    F37: {\n        title: \"Failure of Success Criterion 3.2.2 due to launching a new window without prior warning\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F37\",\n    },\n    F38: {\n        title: \"Failure of Success Criterion 1.1.1 due to not marking up decorative images in HTML\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F38\",\n    },\n    F39: {\n        title: \"Failure of Success Criterion 1.1.1 due to providing a text alternative that is not\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F39\",\n    },\n    F40: {\n        title: \"Failure due to using meta redirect with a time limit\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F40\",\n    },\n    F41: {\n        title: \"Failure of Success Criterion 2.2.1, 2.2.4, and 3.2.5 due to using meta refresh to\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F41\",\n    },\n    F42: {\n        title: \"Failure of Success Criteria 1.3.1, 2.1.1, 2.1.3, or 4.1.2 when emulating links\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F42\",\n    },\n    F43: {\n        title: \"Failure of Success Criterion 1.3.1 due to using structural markup in a way that does\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F43\",\n    },\n    F44: {\n        title: \"Failure of Success Criterion 2.4.3 due to using tabindex to create a tab order that\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F44\",\n    },\n    F46: {\n        title: \"Failure of Success Criterion 1.3.1 due to using th elements, layout tables\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F46\",\n    },\n    F47: {\n        title: \"Failure of Success Criterion 2.2.2 due to using the blink element\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F47\",\n    },\n    F48: {\n        title: \"Failure of Success Criterion 1.3.1 due to using the pre element to markup tabular\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F48\",\n    },\n    F49: {\n        title: \"Failure of Success Criterion 1.3.2 due to using an HTML layout table that does not\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F49\",\n    },\n    F50: {\n        title: \"Failure of Success Criterion 2.2.2 due to a script that causes a blink effect without\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F50\",\n    },\n    F52: {\n        title: \"Failure of Success Criterion 3.2.1 and 3.2.5 due to opening a new window as soon as\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F52\",\n    },\n    F54: {\n        title: \"Failure of Success Criterion 2.1.1 due to using only pointing-device-specific event\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F54\",\n    },\n    F55: {\n        title: \"Failure of Success Criteria 2.1.1, 2.4.7, and 3.2.1 due to using script to remove\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F55\",\n    },\n    F58: {\n        title: \"Failure of Success Criterion 2.2.1 due to using server-side techniques to automatically\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F58\",\n    },\n    F59: {\n        title: \"Failure of Success Criterion 4.1.2 due to using script to make div or span a user\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F59\",\n    },\n    F60: {\n        title: \"Failure of Success Criterion 3.2.5 due to launching a new window when a user enters\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F60\",\n    },\n    F61: {\n        title: \"Failure of Success Criterion 3.2.5 due to complete change of main content through\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F61\",\n    },\n    F63: {\n        title: \"Failure of Success Criterion 2.4.4 due to providing link context only in content that\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F63\",\n    },\n    F65: {\n        title: \"Failure of Success Criterion 1.1.1 due to omitting the alt attribute or text alternative\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F65\",\n    },\n    F66: {\n        title: \"Failure of Success Criterion 3.2.3 due to presenting navigation links in a different\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F66\",\n    },\n    F67: {\n        title: \"Failure of Success Criterion 1.1.1 and 1.2.1 due to providing long descriptions for\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F67\",\n    },\n    F68: {\n        title: \"Failure of Success Criterion 4.1.2 due to a user interface control not having a programmatically\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F68\",\n    },\n    F69: {\n        title: \"Failure of Success Criterion 1.4.4 when resizing visually rendered text up to 200\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F69\",\n    },\n    F70: {\n        title: \"Failure of Success Criterion 4.1.1 due to incorrect use of start and end tags or attribute\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F70\",\n    },\n    F71: {\n        title: \"Failure of Success Criterion 1.1.1 due to using text look-alikes to represent text\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F71\",\n    },\n    F72: {\n        title: \"Failure of Success Criterion 1.1.1 due to using ASCII art without providing a text\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F72\",\n    },\n    F73: {\n        title: \"Failure of Success Criterion 1.4.1 due to creating links that are not visually evident\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F73\",\n    },\n    F74: {\n        title: \"Failure of Success Criterion 1.2.2 and 1.2.8 due to not labeling a synchronized media\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F74\",\n    },\n    F75: {\n        title: \"Failure of Success Criterion 1.2.2 by providing synchronized media without captions\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F75\",\n    },\n    F77: {\n        title: \"Failure of Success Criterion 4.1.1 due to duplicate values of type ID\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F77\",\n    },\n    F78: {\n        title: \"Failure of Success Criterion 2.4.7 due to styling element outlines and borders in\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F78\",\n    },\n    F79: {\n        title: \"Failure of Success Criterion 4.1.2 due to the focus state of a user interface component\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F79\",\n    },\n    F80: {\n        title: \"Failure of Success Criterion 1.4.4 when text-based form controls do not resize when\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F80\",\n    },\n    F81: {\n        title: \"Failure of Success Criterion 1.4.1 due to identifying required or error fields using\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F81\",\n    },\n    F82: {\n        title: \"Failure of Success Criterion 3.3.2 by visually formatting a set of phone number fields\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F82\",\n    },\n    F83: {\n        title: \"Failure of Success Criterion 1.4.3 and 1.4.6 due to using background images that do\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F83\",\n    },\n    F84: {\n        title: 'Failure of Success Criterion 2.4.9 due to using a non-specific link such as \"click',\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F84\",\n    },\n    F85: {\n        title: \"Failure of Success Criterion 2.4.3 due to using dialogs or menus that are not adjacent\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F85\",\n    },\n    F86: {\n        title: \"Failure of Success Criterion 4.1.2 due to not providing names for each part of a multi-part\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F86\",\n    },\n    F87: {\n        title: \"Failure of Success Criterion 1.3.1 due to inserting non-decorative content by using\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F87\",\n    },\n    F88: {\n        title: \"Failure of Success Criterion 1.4.8 due to using text that is justified (aligned to\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F88\",\n    },\n    F89: {\n        title: \"Failure of Success Criteria 2.4.4, 2.4.9 and 4.1.2 due to not providing an accessible\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F89\",\n    },\n    F90: {\n        title: \"Failure of Success Criterion 1.3.1 for incorrectly associating table headers and content\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F90\",\n    },\n    F91: {\n        title: \"Failure of Success Criterion 1.3.1 for not correctly marking up table headers\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F91\",\n    },\n    F92: {\n        title: \"Failure of Success Criterion 1.3.1 due to the use of role presentation on content\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F92\",\n    },\n    F93: {\n        title: \"Failure of Success Criterion 1.4.2 for absence of a way to pause or stop an HTML5\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F93\",\n    },\n    F94: {\n        title: \"Failure of Success Criterion 1.4.4 due to incorrect use of viewport units to resize\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F94\",\n    },\n    F95: {\n        title: \"Failure of Success Criterion 1.4.13 due to content shown on hover not being hoverable\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F95\",\n    },\n    F96: {\n        title: \"Failure due to the accessible name not containing the visible label text\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F96\",\n    },\n    F97: {\n        title: \"Failure due to locking the orientation to landscape or portrait view\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F97\",\n    },\n    F98: {\n        title: \"Failure due to interactions being limited to touch-only on touchscreen devices\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F98\",\n    },\n    F99: {\n        title: \"Failure of Success Criterion 2.1.4 due to implementing character key shortcuts that\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F99\",\n    },\n    F100: {\n        title: \"Failure of Success Criterion 1.3.4 due to showing a message asking to reorient device\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F100\",\n    },\n    F101: {\n        title: \"Failure of Success Criterion 2.5.2 due to activating a control on the down-event\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F101\",\n    },\n    F102: {\n        title: \"Failure of Success Criterion 1.4.10 due to content disappearing and not being available\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F102\",\n    },\n    F103: {\n        title: \"Failure of Success Criterion 4.1.3 due to providing status messages that cannot be\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F103\",\n    },\n    F104: {\n        title: \"Failure of Success Criterion 1.4.12 due to clipped or overlapped content when text\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F104\",\n    },\n    F105: {\n        title: \"Failure of Success Criterion 2.5.1 due to providing functionality via a path-based\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F105\",\n    },\n    F106: {\n        title: \"Failure due to inability to deactivate motion actuation\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F106\",\n    },\n    F107: {\n        title: \"Failure of Success Criterion 1.3.5 due to incorrect autocomplete attribute values\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F107\",\n    },\n    F108: {\n        title: \"Failure of Success Criterion 2.5.X Dragging due to not providing a single pointer\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/failures/F108\",\n    },\n    G1: {\n        title: \"Adding a link at the top of each page that goes directly to the main content area\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G1\",\n    },\n    G4: {\n        title: \"Allowing the content to be paused and restarted from where it was paused\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G4\",\n    },\n    G5: {\n        title: \"Allowing users to complete an activity without any time limit\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G5\",\n    },\n    G8: {\n        title: \"Providing a movie with extended audio descriptions\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G8\",\n    },\n    G9: {\n        title: \"Creating captions for live synchronized media\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G9\",\n    },\n    G10: {\n        title: \"Creating components using a technology that supports the accessibility notification\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G10\",\n    },\n    G11: {\n        title: \"Creating content that blinks for less than 5 seconds\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G11\",\n    },\n    G13: {\n        title: \"Describing what will happen before a change to a form control that causes a change\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G13\",\n    },\n    G14: {\n        title: \"Ensuring that information conveyed by color differences is also available in text\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G14\",\n    },\n    G15: {\n        title: \"Using a tool to ensure that content does not violate the general flash threshold or\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G15\",\n    },\n    G17: {\n        title: \"Ensuring that a contrast ratio of at least 7:1 exists between text (and images of\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G17\",\n    },\n    G18: {\n        title: \"Ensuring that a contrast ratio of at least 4.5:1 exists between text (and images of\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G18\",\n    },\n    G19: {\n        title: \"Ensuring that no component of the content flashes more than three times in any 1-second\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G19\",\n    },\n    G21: {\n        title: \"Ensuring that users are not trapped in content\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G21\",\n    },\n    G53: {\n        title: \"Identifying the purpose of a link using link text combined with the text of the enclosing\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G53\",\n    },\n    G54: {\n        title: \"Including a sign language interpreter in the video stream\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G54\",\n    },\n    G55: {\n        title: \"Linking to definitions\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G55\",\n    },\n    G56: {\n        title: \"Mixing audio files so that non-speech sounds are at least 20 decibels lower than the\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G56\",\n    },\n    G57: {\n        title: \"Ordering the content in a meaningful sequence\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G57\",\n    },\n    G58: {\n        title: \"Placing a link to the alternative for time-based media immediately next to the non-text\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G58\",\n    },\n    G59: {\n        title: \"Placing the interactive elements in an order that follows sequences and relationships\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G59\",\n    },\n    G60: {\n        title: \"Playing a sound that turns off automatically within three seconds\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G60\",\n    },\n    G61: {\n        title: \"Presenting repeated components in the same relative order each time they appear\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G61\",\n    },\n    G62: {\n        title: \"Providing a glossary\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G62\",\n    },\n    G63: {\n        title: \"Providing a site map\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G63\",\n    },\n    G64: {\n        title: \"Providing a Table of Contents\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G64\",\n    },\n    G65: {\n        title: \"Providing a breadcrumb trail\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G65\",\n    },\n    G68: {\n        title: \"Providing a short text alternative that describes the purpose of live audio-only and\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G68\",\n    },\n    G69: {\n        title: \"Providing an alternative for time based media\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G69\",\n    },\n    G70: {\n        title: \"Providing a function to search an online dictionary\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G70\",\n    },\n    G71: {\n        title: \"Providing a help link on every Web page\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G71\",\n    },\n    G73: {\n        title: \"Providing a long description in another location with a link to it that is immediately\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G73\",\n    },\n    G74: {\n        title: \"Providing a long description in text near the non-text content, with a reference to\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G74\",\n    },\n    G75: {\n        title: \"Providing a mechanism to postpone any updating of content\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G75\",\n    },\n    G76: {\n        title: \"Providing a mechanism to request an update of the content instead of updating automatically\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G76\",\n    },\n    G78: {\n        title: \"Providing a second, user-selectable, audio track that includes audio descriptions\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G78\",\n    },\n    G79: {\n        title: \"Providing a spoken version of the text\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G79\",\n    },\n    G80: {\n        title: \"Providing a submit button to initiate a change of context\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G80\",\n    },\n    G81: {\n        title: \"Providing a synchronized video of the sign language interpreter that can be displayed\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G81\",\n    },\n    G82: {\n        title: \"Providing a text alternative that identifies the purpose of the non-text content\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G82\",\n    },\n    G83: {\n        title: \"Providing text descriptions to identify required fields that were not completed\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G83\",\n    },\n    G84: {\n        title: \"Providing a text description when the user provides information that is not in the\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G84\",\n    },\n    G85: {\n        title: \"Providing a text description when user input falls outside the required format or\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G85\",\n    },\n    G86: {\n        title: \"Providing a text summary that can be understood by people with lower secondary education\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G86\",\n    },\n    G87: {\n        title: \"Providing closed captions\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G87\",\n    },\n    G88: {\n        title: \"Providing descriptive titles for Web pages\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G88\",\n    },\n    G89: {\n        title: \"Providing expected data format and example\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G89\",\n    },\n    G90: {\n        title: \"Providing keyboard-triggered event handlers\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G90\",\n    },\n    G91: {\n        title: \"Providing link text that describes the purpose of a link\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G91\",\n    },\n    G92: {\n        title: \"Providing long description for non-text content that serves the same purpose and presents\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G92\",\n    },\n    G93: {\n        title: \"Providing open (always visible) captions\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G93\",\n    },\n    G94: {\n        title: \"Providing short text alternative for non-text content that serves the same purpose\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G94\",\n    },\n    G95: {\n        title: \"Providing short text alternatives that provide a brief description of the non-text\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G95\",\n    },\n    G96: {\n        title: \"Providing textual identification of items that otherwise rely only on sensory information\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G96\",\n    },\n    G97: {\n        title: \"Providing the first use of an abbreviation immediately before or after the expanded\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G97\",\n    },\n    G98: {\n        title: \"Providing the ability for the user to review and correct answers before submitting\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G98\",\n    },\n    G99: {\n        title: \"Providing the ability to recover deleted information\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G99\",\n    },\n    G100: {\n        title: \"Providing a short text alternative which is the accepted name or a descriptive name\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G100\",\n    },\n    G101: {\n        title: \"Providing the definition of a word or phrase used in an unusual or restricted way\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G101\",\n    },\n    G102: {\n        title: \"Providing the expansion or explanation of an abbreviation\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G102\",\n    },\n    G103: {\n        title: \"Providing visual illustrations, pictures, and symbols to help explain ideas, events,\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G103\",\n    },\n    G105: {\n        title: \"Saving data so that it can be used after a user re-authenticates\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G105\",\n    },\n    G107: {\n        title: 'Using \"activate\" rather than \"focus\" as a trigger for changes of context',\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G107\",\n    },\n    G108: {\n        title: \"Using markup features to expose the name and role, allow user-settable properties\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G108\",\n    },\n    G110: {\n        title: \"Using an instant client-side redirect\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G110\",\n    },\n    G111: {\n        title: \"Using color and pattern\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G111\",\n    },\n    G112: {\n        title: \"Using inline definitions\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G112\",\n    },\n    G115: {\n        title: \"Using semantic elements to mark up structure\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G115\",\n    },\n    G117: {\n        title: \"Using text to convey information that is conveyed by variations in presentation of\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G117\",\n    },\n    G120: {\n        title: \"Providing the pronunciation immediately following the word\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G120\",\n    },\n    G121: {\n        title: \"Linking to pronunciations\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G121\",\n    },\n    G123: {\n        title: \"Adding a link at the beginning of a block of repeated content to go to the end of\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G123\",\n    },\n    G124: {\n        title: \"Adding links at the top of the page to each area of the content\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G124\",\n    },\n    G125: {\n        title: \"Providing links to navigate to related Web pages\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G125\",\n    },\n    G126: {\n        title: \"Providing a list of links to all other Web pages\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G126\",\n    },\n    G127: {\n        title: \"Identifying a Web page's relationship to a larger collection of Web pages\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G127\",\n    },\n    G128: {\n        title: \"Indicating current location within navigation bars\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G128\",\n    },\n    G130: {\n        title: \"Providing descriptive headings\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G130\",\n    },\n    G131: {\n        title: \"Providing descriptive labels\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G131\",\n    },\n    G133: {\n        title: \"Providing a checkbox on the first page of a multipart form that allows users to ask\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G133\",\n    },\n    G134: {\n        title: \"Validating Web pages\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G134\",\n    },\n    G135: {\n        title: \"Using the accessibility API features of a technology to expose names and notification\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G135\",\n    },\n    G136: {\n        title: \"Providing a link at the beginning of a nonconforming Web page that points to a conforming\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G136\",\n    },\n    G138: {\n        title: \"Using semantic markup whenever color cues are used\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G138\",\n    },\n    G139: {\n        title: \"Creating a mechanism that allows users to jump to errors\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G139\",\n    },\n    G140: {\n        title: \"Separating information and structure from presentation to enable different presentations\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G140\",\n    },\n    G141: {\n        title: \"Organizing a page using headings\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G141\",\n    },\n    G142: {\n        title: \"Using a technology that has commonly-available user agents that support zoom\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G142\",\n    },\n    G143: {\n        title: \"Providing a text alternative that describes the purpose of the CAPTCHA\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G143\",\n    },\n    G144: {\n        title: \"Ensuring that the Web Page contains another CAPTCHA serving the same purpose using\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G144\",\n    },\n    G145: {\n        title: \"Ensuring that a contrast ratio of at least 3:1 exists between text (and images of\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G145\",\n    },\n    G146: {\n        title: \"Using liquid layout\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G146\",\n    },\n    G148: {\n        title: \"Not specifying background color, not specifying text color, and not using technology\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G148\",\n    },\n    G149: {\n        title: \"Using user interface components that are highlighted by the user agent when they receive\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G149\",\n    },\n    G150: {\n        title: \"Providing text based alternatives for live audio-only content\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G150\",\n    },\n    G151: {\n        title: \"Providing a link to a text transcript of a prepared statement or script if the script\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G151\",\n    },\n    G152: {\n        title: \"Setting animated gif images to stop blinking after n cycles (within 5 seconds)\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G152\",\n    },\n    G153: {\n        title: \"Making the text easier to read\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G153\",\n    },\n    G155: {\n        title: \"Providing a checkbox in addition to a submit button\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G155\",\n    },\n    G156: {\n        title: \"Using a technology that has commonly-available user agents that can change the foreground\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G156\",\n    },\n    G157: {\n        title: \"Incorporating a live audio captioning service into a Web page\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G157\",\n    },\n    G158: {\n        title: \"Providing an alternative for time-based media for audio-only content\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G158\",\n    },\n    G159: {\n        title: \"Providing an alternative for time-based media for video-only content\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G159\",\n    },\n    G160: {\n        title: \"Providing sign language versions of information, ideas, and processes that must be\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G160\",\n    },\n    G161: {\n        title: \"Providing a search function to help users find content\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G161\",\n    },\n    G162: {\n        title: \"Positioning labels to maximize predictability of relationships\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G162\",\n    },\n    G163: {\n        title: \"Using standard diacritical marks that can be turned off\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G163\",\n    },\n    G164: {\n        title: \"Providing a stated time within which an online request (or transaction) may be amended\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G164\",\n    },\n    G165: {\n        title: \"Using the default focus indicator for the platform so that high visibility default\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G165\",\n    },\n    G166: {\n        title: \"Providing audio that describes the important video content and describing it as such\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G166\",\n    },\n    G167: {\n        title: \"Using an adjacent button to label the purpose of a field\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G167\",\n    },\n    G168: {\n        title: \"Requesting confirmation to continue with selected action\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G168\",\n    },\n    G169: {\n        title: \"Aligning text on only one side\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G169\",\n    },\n    G170: {\n        title: \"Providing a control near the beginning of the Web page that turns off sounds that\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G170\",\n    },\n    G171: {\n        title: \"Playing sounds only on user request\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G171\",\n    },\n    G172: {\n        title: \"Providing a mechanism to remove full justification of text\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G172\",\n    },\n    G173: {\n        title: \"Providing a version of a movie with audio descriptions\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G173\",\n    },\n    G174: {\n        title: \"Providing a control with a sufficient contrast ratio that allows users to switch to\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G174\",\n    },\n    G175: {\n        title: \"Providing a multi color selection tool on the page for foreground and background colors\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G175\",\n    },\n    G176: {\n        title: \"Keeping the flashing area small enough\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G176\",\n    },\n    G177: {\n        title: \"Providing suggested correction text\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G177\",\n    },\n    G178: {\n        title: \"Providing controls on the Web page that allow users to incrementally change the size\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G178\",\n    },\n    G179: {\n        title: \"Ensuring that there is no loss of content or functionality when the text resizes and\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G179\",\n    },\n    G180: {\n        title: \"Providing the user with a means to set the time limit to 10 times the default time\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G180\",\n    },\n    G181: {\n        title: \"Encoding user data as hidden or encrypted data in a re-authorization page\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G181\",\n    },\n    G182: {\n        title: \"Ensuring that additional visual cues are available when text color differences are\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G182\",\n    },\n    G183: {\n        title: \"Using a contrast ratio of 3:1 with surrounding text and providing additional visual\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G183\",\n    },\n    G184: {\n        title: \"Providing text instructions at the beginning of a form or set of fields that describes\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G184\",\n    },\n    G185: {\n        title: \"Linking to all of the pages on the site from the home page\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G185\",\n    },\n    G186: {\n        title: \"Using a control in the Web page that stops moving, blinking, or auto-updating content\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G186\",\n    },\n    G187: {\n        title: \"Using a technology to include blinking content that can be turned off via the user\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G187\",\n    },\n    G188: {\n        title: \"Providing a button on the page to increase line spaces and paragraph spaces\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G188\",\n    },\n    G189: {\n        title: \"Providing a control near the beginning of the Web page that changes the link text\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G189\",\n    },\n    G190: {\n        title: \"Providing a link adjacent to or associated with a non-conforming object that links\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G190\",\n    },\n    G191: {\n        title: \"Providing a link, button, or other mechanism that reloads the page without any blinking\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G191\",\n    },\n    G192: {\n        title: \"Fully conforming to specifications\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G192\",\n    },\n    G193: {\n        title: \"Providing help by an assistant in the Web page\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G193\",\n    },\n    G194: {\n        title: \"Providing spell checking and suggestions for text input\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G194\",\n    },\n    G195: {\n        title: \"Using an author-supplied, visible focus indicator\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G195\",\n    },\n    G196: {\n        title: \"Using a text alternative on one item within a group of images that describes all items\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G196\",\n    },\n    G197: {\n        title: \"Using labels, names, and text alternatives consistently for content that has the same\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G197\",\n    },\n    G198: {\n        title: \"Providing a way for the user to turn the time limit off\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G198\",\n    },\n    G199: {\n        title: \"Providing success feedback when data is submitted successfully\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G199\",\n    },\n    G200: {\n        title: \"Opening new windows and tabs from a link only when necessary\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G200\",\n    },\n    G201: {\n        title: \"Giving users advanced warning when opening a new window\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G201\",\n    },\n    G202: {\n        title: \"Ensuring keyboard control for all functionality\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G202\",\n    },\n    G203: {\n        title: \"Using a static text alternative to describe a talking head video\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G203\",\n    },\n    G204: {\n        title: \"Not interfering with the user agent's reflow of text as the viewing window is narrowed\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G204\",\n    },\n    G205: {\n        title: \"Including a text cue for colored form control labels\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G205\",\n    },\n    G206: {\n        title: \"Providing options within the content to switch to a layout that does not require the\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G206\",\n    },\n    G207: {\n        title: \"Ensuring that a contrast ratio of 3:1 is provided for icons\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G207\",\n    },\n    G208: {\n        title: \"Including the text of the visible label as part of the accessible name\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G208\",\n    },\n    G209: {\n        title: \"Provide sufficient contrast at the boundaries between adjoining colors\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G209\",\n    },\n    G210: {\n        title: \"Ensuring that drag-and-drop actions can be cancelled\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G210\",\n    },\n    G211: {\n        title: \"Matching the accessible name to the visible label\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G211\",\n    },\n    G212: {\n        title: \"Using native controls to ensure functionality is triggered on the up-event.\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G212\",\n    },\n    G213: {\n        title: \"Provide conventional controls and an application setting for motion activated input\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G213\",\n    },\n    G214: {\n        title: \"Using a control to allow access to content in different orientations which is otherwise\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G214\",\n    },\n    G215: {\n        title: \"Providing controls to achieve the same result as path based or multipoint gestures\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G215\",\n    },\n    G216: {\n        title: \"Providing single point activation for a control slider\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G216\",\n    },\n    G217: {\n        title: \"Providing a mechanism to allow users to remap or turn off character key shortcuts\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G217\",\n    },\n    G218: {\n        title: \"Email link authentication\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G218\",\n    },\n    G219: {\n        title: \"Ensuring that a single pointer alternative is available for dragging movements that\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G219\",\n    },\n    G220: {\n        title: \"Provide a contact-us link in a consistent location\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G220\",\n    },\n    G221: {\n        title: \"Provide data from a previous step in a process\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G221\",\n    },\n    G222: {\n        title: \"Provide persistently visible controls\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G222\",\n    },\n    G223: {\n        title: \"Using an author-supplied, highly visible focus indicator\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/general/G223\",\n    },\n    H2: {\n        title: \"Combining adjacent image and text links for the same resource\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/html/H2\",\n    },\n    H4: {\n        title: \"Creating a logical tab order through links, form controls, and objects\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/html/H4\",\n    },\n    H24: {\n        title: \"Providing text alternatives for the area elements of image maps\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/html/H24\",\n    },\n    H25: {\n        title: \"Providing a title using the title element\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/html/H25\",\n    },\n    H28: {\n        title: \"Providing definitions for abbreviations by using the abbr element\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/html/H28\",\n    },\n    H30: {\n        title: \"Providing link text that describes the purpose of a link for anchor elements\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/html/H30\",\n    },\n    H32: {\n        title: \"Providing submit buttons\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/html/H32\",\n    },\n    H33: {\n        title: \"Supplementing link text with the title attribute\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/html/H33\",\n    },\n    H34: {\n        title: \"Using a Unicode right-to-left mark (RLM) or left-to-right mark (LRM) to mix text direction\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/html/H34\",\n    },\n    H35: {\n        title: \"Providing text alternatives on applet elements\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/html/H35\",\n    },\n    H36: {\n        title: \"Using alt attributes on images used as submit buttons\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/html/H36\",\n    },\n    H37: {\n        title: \"Using alt attributes on img elements\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/html/H37\",\n    },\n    H39: {\n        title: \"Using caption elements to associate data table captions with data tables\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/html/H39\",\n    },\n    H40: {\n        title: \"Using description lists\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/html/H40\",\n    },\n    H42: {\n        title: \"Using h1-h6 to identify headings\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/html/H42\",\n    },\n    H43: {\n        title: \"Using id and headers attributes to associate data cells with header cells in data\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/html/H43\",\n    },\n    H44: {\n        title: \"Using label elements to associate text labels with form controls\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/html/H44\",\n    },\n    H45: {\n        title: \"Using longdesc\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/html/H45\",\n    },\n    H46: {\n        title: \"Using noembed with embed\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/html/H46\",\n    },\n    H48: {\n        title: \"Using ol, ul and dl for lists or groups of links\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/html/H48\",\n    },\n    H49: {\n        title: \"Using semantic markup to mark emphasized or special text\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/html/H49\",\n    },\n    H51: {\n        title: \"Using table markup to present tabular information\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/html/H51\",\n    },\n    H53: {\n        title: \"Using the body of the object element\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/html/H53\",\n    },\n    H54: {\n        title: \"Using the dfn element to identify the defining instance of a word\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/html/H54\",\n    },\n    H56: {\n        title: \"Using the dir attribute on an inline element to resolve problems with nested directional\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/html/H56\",\n    },\n    H57: {\n        title: \"Using the language attribute on the HTML element\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/html/H57\",\n    },\n    H58: {\n        title: \"Using language attributes to identify changes in the human language\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/html/H58\",\n    },\n    H59: {\n        title: \"Using the link element and navigation tools\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/html/H59\",\n    },\n    H60: {\n        title: \"Using the link element to link to a glossary\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/html/H60\",\n    },\n    H62: {\n        title: \"Using the ruby element\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/html/H62\",\n    },\n    H63: {\n        title: \"Using the scope attribute to associate header cells and data cells in data tables\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/html/H63\",\n    },\n    H64: {\n        title: \"Using the title attribute of the frame and iframe elements\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/html/H64\",\n    },\n    H65: {\n        title: \"Using the title attribute to identify form controls when the label element cannot\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/html/H65\",\n    },\n    H67: {\n        title: \"Using null alt text and no title attribute on img elements for images that AT should\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/html/H67\",\n    },\n    H69: {\n        title: \"Providing heading elements at the beginning of each section of content\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/html/H69\",\n    },\n    H70: {\n        title: \"Using frame elements to group blocks of repeated material\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/html/H70\",\n    },\n    H71: {\n        title: \"Providing a description for groups of form controls using fieldset and legend elements\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/html/H71\",\n    },\n    H73: {\n        title: \"Using the summary attribute of the table element to give an overview of data tables\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/html/H73\",\n    },\n    H74: {\n        title: \"Ensuring that opening and closing tags are used according to specification\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/html/H74\",\n    },\n    H75: {\n        title: \"Ensuring that Web pages are well-formed\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/html/H75\",\n    },\n    H76: {\n        title: \"Using meta refresh to create an instant client-side redirect\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/html/H76\",\n    },\n    H77: {\n        title: \"Identifying the purpose of a link using link text combined with its enclosing list\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/html/H77\",\n    },\n    H78: {\n        title: \"Identifying the purpose of a link using link text combined with its enclosing paragraph\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/html/H78\",\n    },\n    H79: {\n        title: \"Identifying the purpose of a link in a data table using the link text combined with\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/html/H79\",\n    },\n    H80: {\n        title: \"Identifying the purpose of a link using link text combined with the preceding heading\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/html/H80\",\n    },\n    H81: {\n        title: \"Identifying the purpose of a link in a nested list using link text combined with the\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/html/H81\",\n    },\n    H83: {\n        title: \"Using the target attribute to open a new window on user request and indicating this\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/html/H83\",\n    },\n    H84: {\n        title: \"Using a button with a select element to perform an action\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/html/H84\",\n    },\n    H85: {\n        title: \"Using OPTGROUP to group OPTION elements inside a SELECT\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/html/H85\",\n    },\n    H86: {\n        title: \"Providing text alternatives for ASCII art, emoticons, and leetspeak\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/html/H86\",\n    },\n    H88: {\n        title: \"Using HTML according to spec\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/html/H88\",\n    },\n    H89: {\n        title: \"Using the title attribute to provide context-sensitive help\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/html/H89\",\n    },\n    H90: {\n        title: \"Indicating required form controls using label or legend\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/html/H90\",\n    },\n    H91: {\n        title: \"Using HTML form controls and links\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/html/H91\",\n    },\n    H93: {\n        title: \"Ensuring that id attributes are unique on a Web page\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/html/H93\",\n    },\n    H94: {\n        title: \"Ensuring that elements do not contain duplicate attributes\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/html/H94\",\n    },\n    H95: {\n        title: \"Using the track element to provide captions\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/html/H95\",\n    },\n    H96: {\n        title: \"Using the track element to provide audio descriptions\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/html/H96\",\n    },\n    H97: {\n        title: \"Grouping related links using the nav element\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/html/H97\",\n    },\n    H98: {\n        title: \"Using HTML 5.2 autocomplete attributes\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/html/H98\",\n    },\n    H99: {\n        title: \"Provide a page-selection mechanism\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/html/H99\",\n    },\n    PDF1: {\n        title: \"Applying text alternatives to images with the Alt entry in PDF documents\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/pdf/PDF1\",\n    },\n    PDF2: {\n        title: \"Creating bookmarks in PDF documents\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/pdf/PDF2\",\n    },\n    PDF3: {\n        title: \"Ensuring correct tab and reading order in PDF documents\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/pdf/PDF3\",\n    },\n    PDF4: {\n        title: \"Hiding decorative images with the Artifact tag in PDF documents\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/pdf/PDF4\",\n    },\n    PDF5: {\n        title: \"Indicating required form controls in PDF forms\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/pdf/PDF5\",\n    },\n    PDF6: {\n        title: \"Using table elements for table markup in PDF Documents\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/pdf/PDF6\",\n    },\n    PDF7: {\n        title: \"Performing OCR on a scanned PDF document to provide actual text\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/pdf/PDF7\",\n    },\n    PDF8: {\n        title: \"Providing definitions for abbreviations via an E entry for a structure element\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/pdf/PDF8\",\n    },\n    PDF9: {\n        title: \"Providing headings by marking content with heading tags in PDF documents\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/pdf/PDF9\",\n    },\n    PDF10: {\n        title: \"Providing labels for interactive form controls in PDF documents\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/pdf/PDF10\",\n    },\n    PDF11: {\n        title: \"Providing links and link text using the Link annotation and the /Link structure element\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/pdf/PDF11\",\n    },\n    PDF12: {\n        title: \"Providing name, role, value information for form fields in PDF documents\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/pdf/PDF12\",\n    },\n    PDF13: {\n        title: \"Providing replacement text using the /Alt entry for links in PDF documents\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/pdf/PDF13\",\n    },\n    PDF14: {\n        title: \"Providing running headers and footers in PDF documents\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/pdf/PDF14\",\n    },\n    PDF15: {\n        title: \"Providing submit buttons with the submit-form action in PDF forms\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/pdf/PDF15\",\n    },\n    PDF16: {\n        title: \"Setting the default language using the /Lang entry in the document catalog of a PDF\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/pdf/PDF16\",\n    },\n    PDF17: {\n        title: \"Specifying consistent page numbering for PDF documents\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/pdf/PDF17\",\n    },\n    PDF18: {\n        title: \"Specifying the document title using the Title entry in the document information dictionary\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/pdf/PDF18\",\n    },\n    PDF19: {\n        title: \"Specifying the language for a passage or phrase with the Lang entry in PDF documents\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/pdf/PDF19\",\n    },\n    PDF20: {\n        title: \"Using Adobe Acrobat Pro's Table Editor to repair mistagged tables\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/pdf/PDF20\",\n    },\n    PDF21: {\n        title: \"Using List tags for lists in PDF documents\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/pdf/PDF21\",\n    },\n    PDF22: {\n        title: \"Indicating when user input falls outside the required format or values in PDF forms\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/pdf/PDF22\",\n    },\n    PDF23: {\n        title: \"Providing interactive form controls in PDF documents\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/pdf/PDF23\",\n    },\n    SVR1: {\n        title: \"Implementing automatic redirects on the server side instead of on the client side\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/server-side-script/SVR1\",\n    },\n    SVR2: {\n        title: \"Using .htaccess to ensure that the only way to access non-conforming content is from\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/server-side-script/SVR2\",\n    },\n    SVR3: {\n        title: \"Using HTTP referer to ensure that the only way to access non-conforming content is\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/server-side-script/SVR3\",\n    },\n    SVR4: {\n        title: \"Allowing users to provide preferences for the display of conforming alternate versions\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/server-side-script/SVR4\",\n    },\n    SVR5: {\n        title: \"Specifying the default language in the HTTP header\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/server-side-script/SVR5\",\n    },\n    SL1: {\n        title: \"Accessing Alternate Audio Tracks in Silverlight Media\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/silverlight/SL1\",\n    },\n    SL2: {\n        title: \"Changing The Visual Focus Indicator in Silverlight\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/silverlight/SL2\",\n    },\n    SL3: {\n        title: \"Controlling Silverlight MediaElement Audio Volume\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/silverlight/SL3\",\n    },\n    SL4: {\n        title: \"Declaring Discrete Silverlight Objects to Specify Language Parts in the HTML DOM\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/silverlight/SL4\",\n    },\n    SL5: {\n        title: \"Defining a Focusable Image Class for Silverlight\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/silverlight/SL5\",\n    },\n    SL6: {\n        title: \"Defining a UI Automation Peer for a Custom Silverlight Control\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/silverlight/SL6\",\n    },\n    SL7: {\n        title: \"Designing a Focused Visual State for Custom Silverlight Controls\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/silverlight/SL7\",\n    },\n    SL8: {\n        title: \"Displaying HelpText in Silverlight User Interfaces\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/silverlight/SL8\",\n    },\n    SL9: {\n        title: \"Handling Key Events to Enable Keyboard Functionality in Silverlight\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/silverlight/SL9\",\n    },\n    SL10: {\n        title: \"Implementing a Submit-Form Pattern in Silverlight\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/silverlight/SL10\",\n    },\n    SL11: {\n        title: \"Pausing or Stopping A Decorative Silverlight Animation\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/silverlight/SL11\",\n    },\n    SL12: {\n        title: \"Pausing, Stopping, or Playing Media in Silverlight MediaElements\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/silverlight/SL12\",\n    },\n    SL13: {\n        title: \"Providing A Style Switcher To Switch To High Contrast\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/silverlight/SL13\",\n    },\n    SL14: {\n        title: \"Providing Custom Control Key Handling for Keyboard Functionality in Silverlight\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/silverlight/SL14\",\n    },\n    SL15: {\n        title: \"Providing Keyboard Shortcuts that Work Across the Entire Silverlight Application\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/silverlight/SL15\",\n    },\n    SL16: {\n        title: \"Providing Script-Embedded Text Captions for MediaElement Content\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/silverlight/SL16\",\n    },\n    SL17: {\n        title: \"Providing Static Alternative Content for Silverlight Media Playing in a MediaElement\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/silverlight/SL17\",\n    },\n    SL18: {\n        title: \"Providing Text Equivalent for Nontext Silverlight Controls With AutomationProperties.Name\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/silverlight/SL18\",\n    },\n    SL19: {\n        title: \"Providing User Instructions With AutomationProperties.HelpText in Silverlight\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/silverlight/SL19\",\n    },\n    SL20: {\n        title: \"Relying on Silverlight AutomationPeer Behavior to Set AutomationProperties.Name\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/silverlight/SL20\",\n    },\n    SL21: {\n        title: \"Replacing A Silverlight Timed Animation With a Nonanimated Element\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/silverlight/SL21\",\n    },\n    SL22: {\n        title: \"Supporting Browser Zoom in Silverlight\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/silverlight/SL22\",\n    },\n    SL23: {\n        title: \"Using A Style Switcher to Increase Font Size of Silverlight Text Elements\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/silverlight/SL23\",\n    },\n    SL24: {\n        title: \"Using AutoPlay to Keep Silverlight Media from Playing Automatically\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/silverlight/SL24\",\n    },\n    SL25: {\n        title: \"Using Controls and Programmatic Focus to Bypass Blocks of Content in Silverlight\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/silverlight/SL25\",\n    },\n    SL26: {\n        title: \"Using LabeledBy to Associate Labels and Targets in Silverlight\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/silverlight/SL26\",\n    },\n    SL27: {\n        title: \"Using Language/Culture Properties as Exposed by Silverlight Applications and Assistive\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/silverlight/SL27\",\n    },\n    SL28: {\n        title: \"Using Separate Text-Format Text Captions for MediaElement Content\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/silverlight/SL28\",\n    },\n    SL29: {\n        title: 'Using Silverlight \"List\" Controls to Define Blocks that can be Bypassed',\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/silverlight/SL29\",\n    },\n    SL30: {\n        title: \"Using Silverlight Control Compositing and AutomationProperties.Name\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/silverlight/SL30\",\n    },\n    SL31: {\n        title: \"Using Silverlight Font Properties to Control Text Presentation\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/silverlight/SL31\",\n    },\n    SL32: {\n        title: \"Using Silverlight Text Elements for Appropriate Accessibility Role\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/silverlight/SL32\",\n    },\n    SL33: {\n        title: \"Using Well-Formed XAML to Define a Silverlight User Interface\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/silverlight/SL33\",\n    },\n    SL34: {\n        title: \"Using the Silverlight Default Tab Sequence and Altering Tab Sequences With Properties\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/silverlight/SL34\",\n    },\n    SL35: {\n        title: \"Using the Validation and ValidationSummary APIs to Implement Client Side Forms Validation\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/silverlight/SL35\",\n    },\n    SM1: {\n        title: \"Adding extended audio description in SMIL 1.0\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/smil/SM1\",\n    },\n    SM2: {\n        title: \"Adding extended audio description in SMIL 2.0\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/smil/SM2\",\n    },\n    SM6: {\n        title: \"Providing audio description in SMIL 1.0\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/smil/SM6\",\n    },\n    SM7: {\n        title: \"Providing audio description in SMIL 2.0\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/smil/SM7\",\n    },\n    SM11: {\n        title: \"Providing captions through synchronized text streams in SMIL 1.0\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/smil/SM11\",\n    },\n    SM12: {\n        title: \"Providing captions through synchronized text streams in SMIL 2.0\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/smil/SM12\",\n    },\n    SM13: {\n        title: \"Providing sign language interpretation through synchronized video streams in SMIL\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/smil/SM13\",\n    },\n    SM14: {\n        title: \"Providing sign language interpretation through synchronized video streams in SMIL\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/smil/SM14\",\n    },\n    T1: {\n        title: \"Using standard text formatting conventions for paragraphs\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/text/T1\",\n    },\n    T2: {\n        title: \"Using standard text formatting conventions for lists\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/text/T2\",\n    },\n    T3: {\n        title: \"Using standard text formatting conventions for headings\",\n        uri: \"https://www.w3.org/WAI/WCAG21/Techniques/text/T3\",\n    },\n};\n//# sourceMappingURL=data.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-wcag/src/technique/data.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-web/src/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-web/src/index.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./page */ \"./node_modules/@siteimprove/alfa-web/src/page.js\"), exports);\n__exportStar(__webpack_require__(/*! ./resource */ \"./node_modules/@siteimprove/alfa-web/src/resource.js\"), exports);\n__exportStar(__webpack_require__(/*! ./site */ \"./node_modules/@siteimprove/alfa-web/src/site.js\"), exports);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-web/src/index.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-web/src/page.js":
/*!********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-web/src/page.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Page = void 0;\nconst alfa_device_1 = __webpack_require__(/*! @siteimprove/alfa-device */ \"./node_modules/@siteimprove/alfa-device/src/index.js\");\nconst alfa_dom_1 = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\nconst alfa_encoding_1 = __webpack_require__(/*! @siteimprove/alfa-encoding */ \"./node_modules/@siteimprove/alfa-encoding/src/index.js\");\nconst alfa_http_1 = __webpack_require__(/*! @siteimprove/alfa-http */ \"./node_modules/@siteimprove/alfa-http/src/index.js\");\n/**\n * {@link https://en.wikipedia.org/wiki/Web_page}\n *\n * @public\n */\nclass Page {\n    static of(request, response, document, device) {\n        return new Page(request, response, document, device);\n    }\n    constructor(request, response, document, device) {\n        this._request = request;\n        this._response = response;\n        this._document = document;\n        this._device = device;\n    }\n    get request() {\n        return this._request;\n    }\n    get response() {\n        return this._response;\n    }\n    get document() {\n        return this._document;\n    }\n    get device() {\n        return this._device;\n    }\n    toJSON() {\n        return {\n            request: this._request.toJSON(),\n            response: this._response.toJSON(),\n            document: this._document.toJSON({ device: this._device }),\n            device: this._device.toJSON(),\n        };\n    }\n    toEARL() {\n        return {\n            \"@context\": {\n                earl: \"http://www.w3.org/ns/earl#\",\n                dct: \"http://purl.org/dc/terms/\",\n            },\n            \"@type\": [\"earl:TestSubject\"],\n            \"@id\": this.response.url.toString(),\n            \"dct:source\": this.response.url.toString(),\n            \"dct:hasPart\": [this._request.toEARL(), this._response.toEARL()],\n        };\n    }\n    toSARIF() {\n        return {\n            location: {\n                uri: this.response.url.toString(),\n            },\n            contents: {\n                text: alfa_encoding_1.Decoder.decode(new Uint8Array(this.response.body)),\n            },\n        };\n    }\n}\nexports.Page = Page;\n/**\n * @public\n */\n(function (Page) {\n    function from(json) {\n        const device = alfa_device_1.Device.from(json.device);\n        return alfa_http_1.Request.from(json.request).andThen((request) => alfa_http_1.Response.from(json.response).map((response) => Page.of(request, response, alfa_dom_1.Document.from(json.document, device), device)));\n    }\n    Page.from = from;\n    function isPage(value) {\n        return value instanceof Page;\n    }\n    Page.isPage = isPage;\n})(Page || (exports.Page = Page = {}));\n//# sourceMappingURL=page.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-web/src/page.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-web/src/resource.js":
/*!************************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-web/src/resource.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Resource = void 0;\nconst alfa_http_1 = __webpack_require__(/*! @siteimprove/alfa-http */ \"./node_modules/@siteimprove/alfa-http/src/index.js\");\nconst alfa_refinement_1 = __webpack_require__(/*! @siteimprove/alfa-refinement */ \"./node_modules/@siteimprove/alfa-refinement/src/index.js\");\nconst { isObject } = alfa_refinement_1.Refinement;\n/**\n * @public\n */\nvar Resource;\n(function (Resource) {\n    function isResource(value) {\n        return (isObject(value) &&\n            alfa_http_1.Request.isRequest(value.request) &&\n            alfa_http_1.Response.isResponse(value.response));\n    }\n    Resource.isResource = isResource;\n})(Resource || (exports.Resource = Resource = {}));\n//# sourceMappingURL=resource.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-web/src/resource.js?");

/***/ }),

/***/ "./node_modules/@siteimprove/alfa-web/src/site.js":
/*!********************************************************!*\
  !*** ./node_modules/@siteimprove/alfa-web/src/site.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Site = void 0;\n/**\n * {@link https://en.wikipedia.org/wiki/Web_site}\n *\n * @public\n */\nclass Site {\n    static of(resources) {\n        return new Site(resources);\n    }\n    constructor(resources) {\n        this._resources = resources;\n    }\n    get resources() {\n        return this._resources;\n    }\n    toJSON() {\n        return {\n            resources: this._resources.toJSON(),\n        };\n    }\n}\nexports.Site = Site;\n//# sourceMappingURL=site.js.map\n\n//# sourceURL=webpack://alfa-usage-experiments/./node_modules/@siteimprove/alfa-web/src/site.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _siteimprove_alfa_device__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @siteimprove/alfa-device */ \"./node_modules/@siteimprove/alfa-device/src/index.js\");\n/* harmony import */ var _siteimprove_alfa_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @siteimprove/alfa-dom */ \"./node_modules/@siteimprove/alfa-dom/src/index.js\");\n/* harmony import */ var _siteimprove_alfa_web__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @siteimprove/alfa-web */ \"./node_modules/@siteimprove/alfa-web/src/index.js\");\n/* harmony import */ var _siteimprove_alfa_http__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @siteimprove/alfa-http */ \"./node_modules/@siteimprove/alfa-http/src/index.js\");\n/* harmony import */ var _siteimprove_alfa_rules__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @siteimprove/alfa-rules */ \"./node_modules/@siteimprove/alfa-rules/src/index.js\");\n/* harmony import */ var _siteimprove_alfa_dom_native__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @siteimprove/alfa-dom/native */ \"./node_modules/@siteimprove/alfa-dom/native.js\");\n\n\n\n\n\n\n\n\nconst htmlSnippetElement = document.getElementById(\"html-snippet\");\nconst resultTextarea = document.getElementById(\"result\");\n\nfunction run() {\n  const element = document.getElementById(\"rendered-html\");\n  element.innerHTML = htmlSnippetElement.value;\n\n  console.log(element);\n\n  const alfaDocument = _siteimprove_alfa_dom__WEBPACK_IMPORTED_MODULE_1__.Node.from(_siteimprove_alfa_dom_native__WEBPACK_IMPORTED_MODULE_5__.Native.fromNode(window.document));\n\n  console.log(alfaDocument);\n\n  const rule = _siteimprove_alfa_rules__WEBPACK_IMPORTED_MODULE_4__.Rules.get(\"R64\").getUnsafe();\n\n  rule\n    .evaluate(\n      _siteimprove_alfa_web__WEBPACK_IMPORTED_MODULE_2__.Page.of(\n        _siteimprove_alfa_http__WEBPACK_IMPORTED_MODULE_3__.Request.empty(),\n        _siteimprove_alfa_http__WEBPACK_IMPORTED_MODULE_3__.Response.empty(),\n        alfaDocument,\n        _siteimprove_alfa_device__WEBPACK_IMPORTED_MODULE_0__.Device.standard()\n      )\n    )\n    .then((outcomes) => {\n      console.log(outcomes);\n      resultTextarea.value = JSON.stringify(outcomes, null, 2);\n    });\n}\n\ndocument.getElementById(\"run-button\").addEventListener(\"click\", run);\n\n\n//# sourceURL=webpack://alfa-usage-experiments/./src/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;